var Ry=Object.defineProperty;var Oy=(t,e,n)=>e in t?Ry(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var Iy=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var Ke=(t,e,n)=>(Oy(t,typeof e!="symbol"?e+"":e,n),n);import"https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js";var BO=Iy((Un,kn)=>{const Ny=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerpolicy&&(s.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?s.credentials="include":r.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=n(r);fetch(r.href,s)}};Ny();class Il{static setCookie(e,n,i){var r="";if(i){var s=new Date;s.setTime(s.getTime()+i*24*60*60*1e3),r="; expires="+s.toUTCString()}document.cookie=e+"="+(n||"")+r+"; path=/"}static getCookie(e){for(var n=e+"=",i=document.cookie.split(";"),r=0;r<i.length;r++){for(var s=i[r];s.charAt(0)==" ";)s=s.substring(1,s.length);if(s.indexOf(n)==0)return s.substring(n.length,s.length)}return null}static eraseCookie(e){document.cookie=e+"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;"}}const Gr=class{constructor(e){this.name=e}static c(e){return new Gr(e)}static current(){var n;var e=(n=Il.getCookie("language"))!=null?n:Gr.English.name;return Gr.c(e)}};let jn=Gr;Ke(jn,"Swedish",Gr.c("se")),Ke(jn,"English",Gr.c("en"));class Ni{static add({target:e,eventType:n,eventHandler:i}){return e.addEventListener(n,i,{passive:!1}),{dispose:()=>e.removeEventListener(n,i)}}}const Oe=class{constructor(e){this.name=e}static c(e){return new Oe(e)}translated(e){var s;var n={};n[Oe.SectionProjects.name]={se:"St\xF6rre Projekt",en:"Bigger Projects"},n[Oe.SectionProjectsDescription.name]={se:"En snabb \xF6versikt p\xE5 n\xE5gra utav \xE5rets st\xF6rre ny startade konsult projekt. Innh\xE5ller b\xE5de utf\xF6rda & aktiva projekt.",en:""},n[Oe.ProjectAnimation.name]={se:"Grafik Animering",en:""},n[Oe.ProjectAnimationDescription.name]={se:"Animerings program likt After Effects men med fokus p\xE5 vektor grafik. Kapabel att exportera direkt till Lottie.<br>Vektyg f\xF6r att snabbare kunna skapa animationer f\xF6r anv\xE4nding i appar och websidor.",en:""},n[Oe.ProjectPallet.name]={se:"Lastpall Konfigurator",en:""},n[Oe.ProjectPalletDescription.name]={se:"System f\xF6r att konfiguerara alla aspekter utav en lastpall i 3d f\xF6r att sen skicka instruktioner till en robot som bygger lastpallen. Fr\xE4mst skrivet i JavaScript",en:""},n[Oe.ProjectScanner.name]={se:"Lager Skanner",en:""},n[Oe.ProjectScannerDescription.name]={se:"Hj\xE4lpmedel f\xF6r effektivisering utav st\xF6rre lager. L\xE5ter anv\xE4ndaren skanna och best\xE4lla lager artiklar direkt fr\xE5n mobiltelefonen.<br>Innehar \xE4ven funktionalitet f\xF6r st\xF6rre \xF6versikt p\xE5 hela lagret. ",en:""},n[Oe.ProjectBag.name]={se:"V\xE4sk Personifierare ",en:""},n[Oe.ProjectBagDescription.name]={se:"Ett verkyg som l\xE5ter kunden designa sin egen v\xE4ska. Byt f\xE4rg, l\xE4gg till bild, skriv ditt namn och mycket annat f\xF6r att g\xF6ra v\xE4skan personlig.",en:""},n[Oe.ProjectCaravan.name]={se:"Husvagn Styrare",en:""},n[Oe.ProjectCaravanDescription.name]={se:"Kontrollera lampor, v\xE4rme och mycket annat p\xE5 din husvagn fr\xE5n mobiltelefonen genom bluetooth eller internet anslutning.",en:""},n[Oe.SectionPractice.name]={se:"Projekt Process",en:"Bigger Projects"},n[Oe.SectionPracticeDescription.name]={se:"M\xE5let \xE4r att g\xF6ra det komplexa simpelt. Att effektivisera det tidskr\xE4vande genom att anpassa projektets alla delmoment till att fungera som en enhet. Nedanf\xF6r \xE4r kortare sammanfattningar p\xE5 hur detta uppn\xE5s. ",en:""},n[Oe.SectionPracticeLeftTitle.name]={se:"Design & Funktion",en:""},n[Oe.SectionPracticeLeftBody.name]={se:"<span>Bra system b\xF6rjar med en bra design d\xE4r funktionalitet \xE4r logiskt & naturlig. Vad ska prioriteras, vad ska synas & hur vill vi att anv\xE4ndaren upplever systemet. </span><span>Logisk design resulterar i logisk kod. Logisk kod resulterar i slut\xE4ndan till mer tid \xF6ver till annat \xE4n att g\xF6ra det ologiska, logiskt. Ett problem som annars ofta uppst\xE5r. </span>",en:""},n[Oe.SectionPracticeCenterTitle.name]={se:"System Karta",en:""},n[Oe.SectionPracticeCenterBody.name]={se:"<span>Effektivisering utav det annars tidskr\xE4vande. Sj\xE4lva kodandet. Systemet som helhet planeras utf\xF6rligt. Minsta fr\xE5getecken som annars vidh\xE4ndetas under kodandet g\xF6rs ist\xE4llet under detta moment. Kommunikation, ansvar & logik mellan systemets alla komponenter ska vara tydligt. </span><span>System kartan fungerar \xE4ven som ett s\xE4tt att snabbt introducera nya utvecklare till projektet vid vidareutveckling.</span>",en:""},n[Oe.SectionPracticeRightTitle.name]={se:"Kod",en:""},n[Oe.SectionPracticeRightBody.name]={se:"<span>Genom en logisk & naturlig design, en detaljerad & ut\xE4nkt system karta s\xE5 utf\xF6rs detta stag snabbare \xE4n vad man f\xF6rst kan f\xF6rv\xE4nta.</span><span>Fr\xE5n egen erfaranhet s\xE5 har detta moment alltmer blivit det minst tidskr\xE4vande ur projektet som helhet.</span></span>",en:""},n[Oe.SectionKnowledge.name]={se:"Kunskap \xD6versikt",en:"Knowledge Overview"},n[Oe.SectionKnowledgeDescription.name]={se:"Ingenting \xE4r om\xF6jligt & \xE4r det n\xE5got man inte kan s\xE5 g\xE5r det alltid att l\xE4ra sig. Men h\xE4r \xE4r en \xF6versikt p\xE5 vad jag nuligen \xE4r riktigt bekv\xE4m med och som jag redan arbetat med i tidigare projekt. ",en:""},n[Oe.SectionCommunication.name]={se:"Kommunikation",en:""},n[Oe.SectionCommunicationDescription.name]={se:"Tre typer utav dokument skapas genom projektets utveckling. Dokumenten fungerar b\xE5de som ett s\xE4tt att f\xF6rb\xE4ttra kommunikation med kund men \xE4ven mellan utvecklare.",en:""},n[Oe.SectionCommunicationLeftTitle.name]={se:"Daglig",en:"Daily"},n[Oe.SectionCommunicationLeftBody.name]={se:"Snabb \xF6versikt p\xE5 vad som \xE4r gjort & vad som ska g\xF6ras. Innh\xE5ller detaljer p\xE5 kod niv\xE5. Fr\xE4mst anv\xE4nt mellan utvecklare.",en:""},n[Oe.SectionCommunicationCenterTitle.name]={se:"Moment",en:"Moment"},n[Oe.SectionCommunicationCenterBody.name]={se:"<span>Rapport p\xE5 st\xF6rre moment (ex: PoC, Wireframe). Relativt detaljerad men l\xE4tl\xE4st i j\xE4mf\xF6relse det det dagliga dokumentet.</span><span>Ger en helhets insikt p\xE5 vilka problem som \xE4r l\xF6sta, hur dessa problem blev l\xF6sta och vad som \xE4r avklarat.</span>",en:""},n[Oe.SectionCommunicationRightTitle.name]={se:"Lansering",en:"Launch"},n[Oe.SectionCommunicationRightBody.name]={se:"<span>Alla moment sammanfattade f\xF6r att ge en \xF6versikt p\xE5 vad en lansering inneh\xE5ller.</span><span>Beskriver \xE4ven vad som \xE4r planerat till n\xE4sta lansering & en lista p\xE5 m\xF6jliga till\xE4gg.</span>",en:""},n[Oe.SectionBackground.name]={se:"Min Start",en:""},n[Oe.SectionBackgroundDescription.name]={se:"Ett \xE4mne som n\xE4stan alltid f\xF6rekommer \xE4r hur sjutton jag kan vara s\xE5 ung. I grund och botten s\xE5 handlar det s\xE5klart om intresse men nedanf\xF6r \xE4r en liten sammanfattning utav hur allt startade. ",en:""};var i=n[this.name],r=i[e.name];return r===void 0||r==null?(s=r[Language.English.name])!=null?s:"":r}};let Ie=Oe;Ke(Ie,"SectionProjects",Oe.c("section_projects")),Ke(Ie,"SectionProjectsDescription",Oe.c("section_projects_description")),Ke(Ie,"ProjectAnimation",Oe.c("project_animation")),Ke(Ie,"ProjectAnimationDescription",Oe.c("project_animation_description")),Ke(Ie,"ProjectPallet",Oe.c("project_pallet")),Ke(Ie,"ProjectPalletDescription",Oe.c("project_pallet_description")),Ke(Ie,"ProjectScanner",Oe.c("project_scanner")),Ke(Ie,"ProjectScannerDescription",Oe.c("project_scanner_description")),Ke(Ie,"ProjectBag",Oe.c("project_bag")),Ke(Ie,"ProjectBagDescription",Oe.c("project_bag_description")),Ke(Ie,"ProjectCaravan",Oe.c("project_caravan")),Ke(Ie,"ProjectCaravanDescription",Oe.c("project_caravan_description")),Ke(Ie,"SectionPractice",Oe.c("section_practice")),Ke(Ie,"SectionPracticeDescription",Oe.c("section_practice_description")),Ke(Ie,"SectionPracticeLeftTitle",Oe.c("section_practice_left_title")),Ke(Ie,"SectionPracticeLeftBody",Oe.c("section_practice_left_body")),Ke(Ie,"SectionPracticeCenterTitle",Oe.c("section_practice_center_title")),Ke(Ie,"SectionPracticeCenterBody",Oe.c("section_practice_center_body")),Ke(Ie,"SectionPracticeRightTitle",Oe.c("section_practice_right_title")),Ke(Ie,"SectionPracticeRightBody",Oe.c("section_practice_right_body")),Ke(Ie,"SectionKnowledge",Oe.c("section_knowledge")),Ke(Ie,"SectionKnowledgeDescription",Oe.c("section_knowledge_description")),Ke(Ie,"SectionCommunication",Oe.c("section_communication")),Ke(Ie,"SectionCommunicationDescription",Oe.c("section_communication_description")),Ke(Ie,"SectionCommunicationLeftTitle",Oe.c("section_communication_left_title")),Ke(Ie,"SectionCommunicationLeftBody",Oe.c("section_communication_left_body")),Ke(Ie,"SectionCommunicationCenterTitle",Oe.c("section_communication_center_title")),Ke(Ie,"SectionCommunicationCenterBody",Oe.c("section_communication_center_body")),Ke(Ie,"SectionCommunicationRightTitle",Oe.c("section_communication_right_title")),Ke(Ie,"SectionCommunicationRightBody",Oe.c("section_communication_right_body")),Ke(Ie,"SectionBackground",Oe.c("section_background")),Ke(Ie,"SectionBackgroundDescription",Oe.c("section_background_description"));const Yi=class{constructor(e){this.name=e}static c(e){return new Yi(e)}getTitle(){switch(this){case Yi.App:return"App";case Yi.Web:return"Web"}}getColorHex(){switch(this){case Yi.App:return"#4894E3";case Yi.Web:return"#E34749"}}};let Zi=Yi;Ke(Zi,"App",Yi.c("tag_app")),Ke(Zi,"Web",Yi.c("tag_web"));class zy{constructor(e){var n=document.getElementById("reusables"),i=n.querySelector(".bag-preview").cloneNode(!0);e.appendChild(i)}}class By{constructor(e){var n=document.getElementById("reusables"),i=n.querySelector(".caravan-preview").cloneNode(!0);e.appendChild(i)}}class Fy{constructor(e){var n=document.getElementById("reusables"),i=n.querySelector(".lotte-preview").cloneNode(!0);e.appendChild(i)}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Nu="140",fs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ms={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Uy=0,Nd=1,ky=2,zu=1,Vy=2,Ha=3,Kr=0,qn=1,Bn=2,fg=1,Mr=0,qr=1,zd=2,Bd=3,Fd=4,Hy=5,Fs=100,Gy=101,Wy=102,Ud=103,kd=104,jy=200,qy=201,Xy=202,Jy=203,mg=204,gg=205,$y=206,Yy=207,Zy=208,Ky=209,Qy=210,ex=0,tx=1,nx=2,Uh=3,ix=4,rx=5,sx=6,ax=7,ic=0,ox=1,lx=2,er=0,cx=1,hx=2,ux=3,dx=4,px=5,vg=300,Qr=301,es=302,kh=303,Vh=304,bo=306,Hh=1e3,zn=1001,Gh=1002,on=1003,Vd=1004,Hd=1005,_n=1006,fx=1007,_o=1008,ts=1009,mx=1010,gx=1011,ro=1012,vx=1013,Al=1014,Wr=1015,so=1016,yx=1017,xx=1018,Ys=1020,bx=1021,_x=1022,ui=1023,wx=1024,Sx=1025,Xr=1026,ta=1027,Mx=1028,Tx=1029,Ex=1030,Ax=1031,Cx=1033,Dc=33776,Rc=33777,Oc=33778,Ic=33779,Gd=35840,Wd=35841,jd=35842,qd=35843,Lx=36196,Xd=37492,Jd=37496,$d=37808,Yd=37809,Zd=37810,Kd=37811,Qd=37812,ep=37813,tp=37814,np=37815,ip=37816,rp=37817,sp=37818,ap=37819,op=37820,lp=37821,cp=36492,Px=2200,Dx=2201,Rx=2202,Nl=2300,zl=2301,Nc=2302,Gs=2400,Ws=2401,Bl=2402,Bu=2500,yg=2501,Ox=0,gi=3e3,Dt=3001,Ix=3200,Nx=3201,ha=0,zx=1,$i="srgb",jr="srgb-linear",zc=7680,Bx=519,ao=35044,Fl=35048,hp="300 es",Wh=1035;class yi{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(n);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,e);e.target=null}}}const hn=[];for(let t=0;t<256;t++)hn[t]=(t<16?"0":"")+t.toString(16);let up=1234567;const $a=Math.PI/180,oo=180/Math.PI;function pi(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(hn[t&255]+hn[t>>8&255]+hn[t>>16&255]+hn[t>>24&255]+"-"+hn[e&255]+hn[e>>8&255]+"-"+hn[e>>16&15|64]+hn[e>>24&255]+"-"+hn[n&63|128]+hn[n>>8&255]+"-"+hn[n>>16&255]+hn[n>>24&255]+hn[i&255]+hn[i>>8&255]+hn[i>>16&255]+hn[i>>24&255]).toLowerCase()}function Qt(t,e,n){return Math.max(e,Math.min(n,t))}function Fu(t,e){return(t%e+e)%e}function Fx(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)}function Ux(t,e,n){return t!==e?(n-t)/(e-t):0}function Ya(t,e,n){return(1-n)*t+n*e}function kx(t,e,n,i){return Ya(t,e,1-Math.exp(-n*i))}function Vx(t,e=1){return e-Math.abs(Fu(t,e*2)-e)}function Hx(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))}function Gx(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))}function Wx(t,e){return t+Math.floor(Math.random()*(e-t+1))}function jx(t,e){return t+Math.random()*(e-t)}function qx(t){return t*(.5-Math.random())}function Xx(t){t!==void 0&&(up=t);let e=up+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Jx(t){return t*$a}function $x(t){return t*oo}function jh(t){return(t&t-1)===0&&t!==0}function Yx(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Ul(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function Zx(t,e,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),c=s((e+i)/2),h=a((e+i)/2),d=s((e-i)/2),u=a((e-i)/2),p=s((i-e)/2),m=a((i-e)/2);switch(r){case"XYX":t.set(o*h,l*d,l*u,o*c);break;case"YZY":t.set(l*u,o*h,l*d,o*c);break;case"ZXZ":t.set(l*d,l*u,o*h,o*c);break;case"XZX":t.set(o*h,l*m,l*p,o*c);break;case"YXY":t.set(l*p,o*h,l*m,o*c);break;case"ZYZ":t.set(l*m,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Kx(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Qx(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(t*65535);case Uint8Array:return Math.round(t*255);case Int16Array:return Math.round(t*32767);case Int8Array:return Math.round(t*127);default:throw new Error("Invalid component type.")}}var Lt=Object.freeze({__proto__:null,DEG2RAD:$a,RAD2DEG:oo,generateUUID:pi,clamp:Qt,euclideanModulo:Fu,mapLinear:Fx,inverseLerp:Ux,lerp:Ya,damp:kx,pingpong:Vx,smoothstep:Hx,smootherstep:Gx,randInt:Wx,randFloat:jx,randFloatSpread:qx,seededRandom:Xx,degToRad:Jx,radToDeg:$x,isPowerOfTwo:jh,ceilPowerOfTwo:Yx,floorPowerOfTwo:Ul,setQuaternionFromProperEuler:Zx,normalize:Qx,denormalize:Kx});class j{constructor(e=0,n=0){this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*r+e.x,this.y=s*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}j.prototype.isVector2=!0;class zt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,a,o,l,c){const h=this.elements;return h[0]=e,h[1]=r,h[2]=o,h[3]=n,h[4]=s,h[5]=l,h[6]=i,h[7]=a,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],h=i[4],d=i[7],u=i[2],p=i[5],m=i[8],f=r[0],g=r[3],v=r[6],y=r[1],w=r[4],b=r[7],S=r[2],_=r[5],E=r[8];return s[0]=a*f+o*y+l*S,s[3]=a*g+o*w+l*_,s[6]=a*v+o*b+l*E,s[1]=c*f+h*y+d*S,s[4]=c*g+h*w+d*_,s[7]=c*v+h*b+d*E,s[2]=u*f+p*y+m*S,s[5]=u*g+p*w+m*_,s[8]=u*v+p*b+m*E,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return n*a*h-n*o*c-i*s*h+i*o*l+r*s*c-r*a*l}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=h*a-o*c,u=o*l-h*s,p=c*s-a*l,m=n*d+i*u+r*p;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/m;return e[0]=d*f,e[1]=(r*c-h*i)*f,e[2]=(o*i-r*a)*f,e[3]=u*f,e[4]=(h*n-r*l)*f,e[5]=(r*s-o*n)*f,e[6]=p*f,e[7]=(i*l-c*n)*f,e[8]=(a*n-i*s)*f,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-r*c,r*l,-r*(-c*a+l*o)+o+n,0,0,1),this}scale(e,n){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(e){const n=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],a=r[3],o=r[6],l=r[1],c=r[4],h=r[7];return r[0]=n*s+i*l,r[3]=n*a+i*c,r[6]=n*o+i*h,r[1]=-i*s+n*l,r[4]=-i*a+n*c,r[7]=-i*o+n*h,this}translate(e,n){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}zt.prototype.isMatrix3=!0;function xg(t){for(let e=t.length-1;e>=0;--e)if(t[e]>65535)return!0;return!1}const eb={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Oo(t,e){return new eb[t](e)}function lo(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Jr(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function Cl(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}const Bc={[$i]:{[jr]:Jr},[jr]:{[$i]:Cl}},Qn={legacyMode:!0,get workingColorSpace(){return jr},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.legacyMode||e===n||!e||!n)return t;if(Bc[e]&&Bc[e][n]!==void 0){const i=Bc[e][n];return t.r=i(t.r),t.g=i(t.g),t.b=i(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},bg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},en={r:0,g:0,b:0},ei={h:0,s:0,l:0},Io={h:0,s:0,l:0};function Fc(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function No(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class Ae{constructor(e,n,i){return n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=$i){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Qn.toWorkingColorSpace(this,n),this}setRGB(e,n,i,r=jr){return this.r=e,this.g=n,this.b=i,Qn.toWorkingColorSpace(this,r),this}setHSL(e,n,i,r=jr){if(e=Fu(e,1),n=Qt(n,0,1),i=Qt(i,0,1),n===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+n):i+n-i*n,a=2*i-s;this.r=Fc(a,s,e+1/3),this.g=Fc(a,s,e),this.b=Fc(a,s,e-1/3)}return Qn.toWorkingColorSpace(this,r),this}setStyle(e,n=$i){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,Qn.toWorkingColorSpace(this,n),i(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,Qn.toWorkingColorSpace(this,n),i(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(s[1])/360,c=parseInt(s[2],10)/100,h=parseInt(s[3],10)/100;return i(s[4]),this.setHSL(l,c,h,n)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],a=s.length;if(a===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,Qn.toWorkingColorSpace(this,n),this;if(a===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,Qn.toWorkingColorSpace(this,n),this}return e&&e.length>0?this.setColorName(e,n):this}setColorName(e,n=$i){const i=bg[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Jr(e.r),this.g=Jr(e.g),this.b=Jr(e.b),this}copyLinearToSRGB(e){return this.r=Cl(e.r),this.g=Cl(e.g),this.b=Cl(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=$i){return Qn.fromWorkingColorSpace(No(this,en),e),Qt(en.r*255,0,255)<<16^Qt(en.g*255,0,255)<<8^Qt(en.b*255,0,255)<<0}getHexString(e=$i){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=jr){Qn.fromWorkingColorSpace(No(this,en),n);const i=en.r,r=en.g,s=en.b,a=Math.max(i,r,s),o=Math.min(i,r,s);let l,c;const h=(o+a)/2;if(o===a)l=0,c=0;else{const d=a-o;switch(c=h<=.5?d/(a+o):d/(2-a-o),a){case i:l=(r-s)/d+(r<s?6:0);break;case r:l=(s-i)/d+2;break;case s:l=(i-r)/d+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,n=jr){return Qn.fromWorkingColorSpace(No(this,en),n),e.r=en.r,e.g=en.g,e.b=en.b,e}getStyle(e=$i){return Qn.fromWorkingColorSpace(No(this,en),e),e!==$i?`color(${e} ${en.r} ${en.g} ${en.b})`:`rgb(${en.r*255|0},${en.g*255|0},${en.b*255|0})`}offsetHSL(e,n,i){return this.getHSL(ei),ei.h+=e,ei.s+=n,ei.l+=i,this.setHSL(ei.h,ei.s,ei.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(ei),e.getHSL(Io);const i=Ya(ei.h,Io.h,n),r=Ya(ei.s,Io.s,n),s=Ya(ei.l,Io.l,n);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ae.NAMES=bg;Ae.prototype.isColor=!0;Ae.prototype.r=1;Ae.prototype.g=1;Ae.prototype.b=1;let gs;class ss{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{gs===void 0&&(gs=lo("canvas")),gs.width=e.width,gs.height=e.height;const i=gs.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=gs}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const n=lo("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let a=0;a<s.length;a++)s[a]=Jr(s[a]/255)*255;return i.putImageData(r,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(Jr(n[i]/255)*255):n[i]=Jr(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Uu{constructor(e=null){this.uuid=pi(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let a=0,o=r.length;a<o;a++)r[a].isDataTexture?s.push(Uc(r[a].image)):s.push(Uc(r[a]))}else s=Uc(r);i.url=s}return n||(e.images[this.uuid]=i),i}}function Uc(t){return typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&t instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap?ss.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Uu.prototype.isSource=!0;let tb=0;class Bt extends yi{constructor(e=Bt.DEFAULT_IMAGE,n=Bt.DEFAULT_MAPPING,i=zn,r=zn,s=_n,a=_o,o=ui,l=ts,c=1,h=gi){super(),Object.defineProperty(this,"id",{value:tb++}),this.uuid=pi(),this.name="",this.source=new Uu(e),this.mipmaps=[],this.mapping=n,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new j(0,0),this.repeat=new j(1,1),this.center=new j(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new zt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==vg)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Hh:e.x=e.x-Math.floor(e.x);break;case zn:e.x=e.x<0?0:1;break;case Gh:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Hh:e.y=e.y-Math.floor(e.y);break;case zn:e.y=e.y<0?0:1;break;case Gh:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Bt.DEFAULT_IMAGE=null;Bt.DEFAULT_MAPPING=vg;Bt.prototype.isTexture=!0;class ct{constructor(e=0,n=0,i=0,r=1){this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*r+a[12]*s,this.y=a[1]*n+a[5]*i+a[9]*r+a[13]*s,this.z=a[2]*n+a[6]*i+a[10]*r+a[14]*s,this.w=a[3]*n+a[7]*i+a[11]*r+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,s;const l=e.elements,c=l[0],h=l[4],d=l[8],u=l[1],p=l[5],m=l[9],f=l[2],g=l[6],v=l[10];if(Math.abs(h-u)<.01&&Math.abs(d-f)<.01&&Math.abs(m-g)<.01){if(Math.abs(h+u)<.1&&Math.abs(d+f)<.1&&Math.abs(m+g)<.1&&Math.abs(c+p+v-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const w=(c+1)/2,b=(p+1)/2,S=(v+1)/2,_=(h+u)/4,E=(d+f)/4,x=(m+g)/4;return w>b&&w>S?w<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(w),r=_/i,s=E/i):b>S?b<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),i=_/r,s=x/r):S<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(S),i=E/s,r=x/s),this.set(i,r,s,n),this}let y=Math.sqrt((g-m)*(g-m)+(d-f)*(d-f)+(u-h)*(u-h));return Math.abs(y)<.001&&(y=1),this.x=(g-m)/y,this.y=(d-f)/y,this.z=(u-h)/y,this.w=Math.acos((c+p+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}ct.prototype.isVector4=!0;class Ln extends yi{constructor(e,n,i={}){super(),this.width=e,this.height=n,this.depth=1,this.scissor=new ct(0,0,e,n),this.scissorTest=!1,this.viewport=new ct(0,0,e,n);const r={width:e,height:n,depth:1};this.texture=new Bt(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:_n,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,n,i=1){(this.width!==e||this.height!==n||this.depth!==i)&&(this.width=e,this.height=n,this.depth=i,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const n=Object.assign({},e.texture.image);return this.texture.source=new Uu(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Ln.prototype.isWebGLRenderTarget=!0;class rc extends Bt{constructor(e=null,n=1,i=1,r=1){super(null),this.image={data:e,width:n,height:i,depth:r},this.magFilter=on,this.minFilter=on,this.wrapR=zn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}rc.prototype.isDataArrayTexture=!0;class nb extends Ln{constructor(e,n,i){super(e,n),this.depth=i,this.texture=new rc(null,e,n,i),this.texture.isRenderTargetTexture=!0}}nb.prototype.isWebGLArrayRenderTarget=!0;class ku extends Bt{constructor(e=null,n=1,i=1,r=1){super(null),this.image={data:e,width:n,height:i,depth:r},this.magFilter=on,this.minFilter=on,this.wrapR=zn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ku.prototype.isData3DTexture=!0;class ib extends Ln{constructor(e,n,i){super(e,n),this.depth=i,this.texture=new ku(null,e,n,i),this.texture.isRenderTargetTexture=!0}}ib.prototype.isWebGL3DRenderTarget=!0;class rb extends Ln{constructor(e,n,i,r={}){super(e,n,r);const s=this.texture;this.texture=[];for(let a=0;a<i;a++)this.texture[a]=s.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let r=0,s=this.texture.length;r<s;r++)this.texture[r].image.width=e,this.texture[r].image.height=n,this.texture[r].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let n=0,i=e.texture.length;n<i;n++)this.texture[n]=e.texture[n].clone(),this.texture[n].isRenderTargetTexture=!0;return this}}rb.prototype.isWebGLMultipleRenderTargets=!0;class ln{constructor(e=0,n=0,i=0,r=1){this._x=e,this._y=n,this._z=i,this._w=r}static slerp(e,n,i,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,n,r)}static slerpFlat(e,n,i,r,s,a,o){let l=i[r+0],c=i[r+1],h=i[r+2],d=i[r+3];const u=s[a+0],p=s[a+1],m=s[a+2],f=s[a+3];if(o===0){e[n+0]=l,e[n+1]=c,e[n+2]=h,e[n+3]=d;return}if(o===1){e[n+0]=u,e[n+1]=p,e[n+2]=m,e[n+3]=f;return}if(d!==f||l!==u||c!==p||h!==m){let g=1-o;const v=l*u+c*p+h*m+d*f,y=v>=0?1:-1,w=1-v*v;if(w>Number.EPSILON){const S=Math.sqrt(w),_=Math.atan2(S,v*y);g=Math.sin(g*_)/S,o=Math.sin(o*_)/S}const b=o*y;if(l=l*g+u*b,c=c*g+p*b,h=h*g+m*b,d=d*g+f*b,g===1-o){const S=1/Math.sqrt(l*l+c*c+h*h+d*d);l*=S,c*=S,h*=S,d*=S}}e[n]=l,e[n+1]=c,e[n+2]=h,e[n+3]=d}static multiplyQuaternionsFlat(e,n,i,r,s,a){const o=i[r],l=i[r+1],c=i[r+2],h=i[r+3],d=s[a],u=s[a+1],p=s[a+2],m=s[a+3];return e[n]=o*m+h*d+l*p-c*u,e[n+1]=l*m+h*u+c*d-o*p,e[n+2]=c*m+h*p+o*u-l*d,e[n+3]=h*m-o*d-l*u-c*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),h=o(r/2),d=o(s/2),u=l(i/2),p=l(r/2),m=l(s/2);switch(a){case"XYZ":this._x=u*h*d+c*p*m,this._y=c*p*d-u*h*m,this._z=c*h*m+u*p*d,this._w=c*h*d-u*p*m;break;case"YXZ":this._x=u*h*d+c*p*m,this._y=c*p*d-u*h*m,this._z=c*h*m-u*p*d,this._w=c*h*d+u*p*m;break;case"ZXY":this._x=u*h*d-c*p*m,this._y=c*p*d+u*h*m,this._z=c*h*m+u*p*d,this._w=c*h*d-u*p*m;break;case"ZYX":this._x=u*h*d-c*p*m,this._y=c*p*d+u*h*m,this._z=c*h*m-u*p*d,this._w=c*h*d+u*p*m;break;case"YZX":this._x=u*h*d+c*p*m,this._y=c*p*d+u*h*m,this._z=c*h*m-u*p*d,this._w=c*h*d-u*p*m;break;case"XZY":this._x=u*h*d-c*p*m,this._y=c*p*d-u*h*m,this._z=c*h*m+u*p*d,this._w=c*h*d+u*p*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],s=n[8],a=n[1],o=n[5],l=n[9],c=n[2],h=n[6],d=n[10],u=i+o+d;if(u>0){const p=.5/Math.sqrt(u+1);this._w=.25/p,this._x=(h-l)*p,this._y=(s-c)*p,this._z=(a-r)*p}else if(i>o&&i>d){const p=2*Math.sqrt(1+i-o-d);this._w=(h-l)/p,this._x=.25*p,this._y=(r+a)/p,this._z=(s+c)/p}else if(o>d){const p=2*Math.sqrt(1+o-i-d);this._w=(s-c)/p,this._x=(r+a)/p,this._y=.25*p,this._z=(l+h)/p}else{const p=2*Math.sqrt(1+d-i-o);this._w=(a-r)/p,this._x=(s+c)/p,this._y=(l+h)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Qt(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,n)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,s=e._z,a=e._w,o=n._x,l=n._y,c=n._z,h=n._w;return this._x=i*h+a*o+r*c-s*l,this._y=r*h+a*l+s*o-i*c,this._z=s*h+a*c+i*l-r*o,this._w=a*h-i*o-r*l-s*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+r*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const p=1-n;return this._w=p*a+n*this._w,this._x=p*i+n*this._x,this._y=p*r+n*this._y,this._z=p*s+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),d=Math.sin((1-n)*h)/c,u=Math.sin(n*h)/c;return this._w=a*d+this._w*u,this._x=i*d+this._x*u,this._y=r*d+this._y*u,this._z=s*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=Math.random(),n=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(n*Math.cos(r),i*Math.sin(s),i*Math.cos(s),n*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}ln.prototype.isQuaternion=!0;class T{constructor(e=0,n=0,i=0){this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,n)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(dp.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(dp.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=e.elements,a=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*a,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*a,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*a,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=l*n+a*r-o*i,h=l*i+o*n-s*r,d=l*r+s*i-a*n,u=-s*n-a*i-o*r;return this.x=c*l+u*-s+h*-o-d*-a,this.y=h*l+u*-a+d*-s-c*-o,this.z=d*l+u*-o+c*-a-h*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,n)):this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,s=e.z,a=n.x,o=n.y,l=n.z;return this.x=r*l-s*o,this.y=s*a-i*l,this.z=i*o-r*a,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return kc.copy(this).projectOnVector(e),this.sub(kc)}reflect(e){return this.sub(kc.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Qt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,n=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}T.prototype.isVector3=!0;const kc=new T,dp=new ln;class fn{constructor(e=new T(1/0,1/0,1/0),n=new T(-1/0,-1/0,-1/0)){this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const h=e[l],d=e[l+1],u=e[l+2];h<n&&(n=h),d<i&&(i=d),u<r&&(r=u),h>s&&(s=h),d>a&&(a=d),u>o&&(o=u)}return this.min.set(n,i,r),this.max.set(s,a,o),this}setFromBufferAttribute(e){let n=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const h=e.getX(l),d=e.getY(l),u=e.getZ(l);h<n&&(n=h),d<i&&(i=d),u<r&&(r=u),h>s&&(s=h),d>a&&(a=d),u>o&&(o=u)}return this.min.set(n,i,r),this.max.set(s,a,o),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=zr.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(n&&i.attributes!=null&&i.attributes.position!==void 0){const s=i.attributes.position;for(let a=0,o=s.count;a<o;a++)zr.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(zr)}else i.boundingBox===null&&i.computeBoundingBox(),Vc.copy(i.boundingBox),Vc.applyMatrix4(e.matrixWorld),this.union(Vc);const r=e.children;for(let s=0,a=r.length;s<a;s++)this.expandByObject(r[s],n);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,zr),zr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ca),zo.subVectors(this.max,Ca),vs.subVectors(e.a,Ca),ys.subVectors(e.b,Ca),xs.subVectors(e.c,Ca),lr.subVectors(ys,vs),cr.subVectors(xs,ys),Br.subVectors(vs,xs);let n=[0,-lr.z,lr.y,0,-cr.z,cr.y,0,-Br.z,Br.y,lr.z,0,-lr.x,cr.z,0,-cr.x,Br.z,0,-Br.x,-lr.y,lr.x,0,-cr.y,cr.x,0,-Br.y,Br.x,0];return!Hc(n,vs,ys,xs,zo)||(n=[1,0,0,0,1,0,0,0,1],!Hc(n,vs,ys,xs,zo))?!1:(Bo.crossVectors(lr,cr),n=[Bo.x,Bo.y,Bo.z],Hc(n,vs,ys,xs,zo))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return zr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(zr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Hi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Hi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Hi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Hi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Hi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Hi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Hi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Hi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Hi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}fn.prototype.isBox3=!0;const Hi=[new T,new T,new T,new T,new T,new T,new T,new T],zr=new T,Vc=new fn,vs=new T,ys=new T,xs=new T,lr=new T,cr=new T,Br=new T,Ca=new T,zo=new T,Bo=new T,Fr=new T;function Hc(t,e,n,i,r){for(let s=0,a=t.length-3;s<=a;s+=3){Fr.fromArray(t,s);const o=r.x*Math.abs(Fr.x)+r.y*Math.abs(Fr.y)+r.z*Math.abs(Fr.z),l=e.dot(Fr),c=n.dot(Fr),h=i.dot(Fr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const sb=new fn,pp=new T,Fo=new T,Gc=new T;class Xn{constructor(e=new T,n=-1){this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):sb.setFromPoints(e).getCenter(i);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Gc.subVectors(e,this.center);const n=Gc.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),r=(i-this.radius)*.5;this.center.add(Gc.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Fo.set(0,0,1).multiplyScalar(e.radius):Fo.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(pp.copy(e.center).add(Fo)),this.expandByPoint(pp.copy(e.center).sub(Fo)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Gi=new T,Wc=new T,Uo=new T,hr=new T,jc=new T,ko=new T,qc=new T;class as{constructor(e=new T,n=new T(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Gi)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=Gi.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(Gi.copy(this.direction).multiplyScalar(n).add(this.origin),Gi.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){Wc.copy(e).add(n).multiplyScalar(.5),Uo.copy(n).sub(e).normalize(),hr.copy(this.origin).sub(Wc);const s=e.distanceTo(n)*.5,a=-this.direction.dot(Uo),o=hr.dot(this.direction),l=-hr.dot(Uo),c=hr.lengthSq(),h=Math.abs(1-a*a);let d,u,p,m;if(h>0)if(d=a*l-o,u=a*o-l,m=s*h,d>=0)if(u>=-m)if(u<=m){const f=1/h;d*=f,u*=f,p=d*(d+a*u+2*o)+u*(a*d+u+2*l)+c}else u=s,d=Math.max(0,-(a*u+o)),p=-d*d+u*(u+2*l)+c;else u=-s,d=Math.max(0,-(a*u+o)),p=-d*d+u*(u+2*l)+c;else u<=-m?(d=Math.max(0,-(-a*s+o)),u=d>0?-s:Math.min(Math.max(-s,-l),s),p=-d*d+u*(u+2*l)+c):u<=m?(d=0,u=Math.min(Math.max(-s,-l),s),p=u*(u+2*l)+c):(d=Math.max(0,-(a*s+o)),u=d>0?s:Math.min(Math.max(-s,-l),s),p=-d*d+u*(u+2*l)+c);else u=a>0?-s:s,d=Math.max(0,-(a*u+o)),p=-d*d+u*(u+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(d).add(this.origin),r&&r.copy(Uo).multiplyScalar(u).add(Wc),p}intersectSphere(e,n){Gi.subVectors(e.center,this.origin);const i=Gi.dot(this.direction),r=Gi.dot(Gi)-i*i,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=i-a,l=i+a;return o<0&&l<0?null:o<0?this.at(l,n):this.at(o,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,s,a,o,l;const c=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,u=this.origin;return c>=0?(i=(e.min.x-u.x)*c,r=(e.max.x-u.x)*c):(i=(e.max.x-u.x)*c,r=(e.min.x-u.x)*c),h>=0?(s=(e.min.y-u.y)*h,a=(e.max.y-u.y)*h):(s=(e.max.y-u.y)*h,a=(e.min.y-u.y)*h),i>a||s>r||((s>i||i!==i)&&(i=s),(a<r||r!==r)&&(r=a),d>=0?(o=(e.min.z-u.z)*d,l=(e.max.z-u.z)*d):(o=(e.max.z-u.z)*d,l=(e.min.z-u.z)*d),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,Gi)!==null}intersectTriangle(e,n,i,r,s){jc.subVectors(n,e),ko.subVectors(i,e),qc.crossVectors(jc,ko);let a=this.direction.dot(qc),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;hr.subVectors(this.origin,e);const l=o*this.direction.dot(ko.crossVectors(hr,ko));if(l<0)return null;const c=o*this.direction.dot(jc.cross(hr));if(c<0||l+c>a)return null;const h=-o*hr.dot(qc);return h<0?null:this.at(h/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Re{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,a,o,l,c,h,d,u,p,m,f,g){const v=this.elements;return v[0]=e,v[4]=n,v[8]=i,v[12]=r,v[1]=s,v[5]=a,v[9]=o,v[13]=l,v[2]=c,v[6]=h,v[10]=d,v[14]=u,v[3]=p,v[7]=m,v[11]=f,v[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Re().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/bs.setFromMatrixColumn(e,0).length(),s=1/bs.setFromMatrixColumn(e,1).length(),a=1/bs.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*a,n[9]=i[9]*a,n[10]=i[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=e.x,r=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),h=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const u=a*h,p=a*d,m=o*h,f=o*d;n[0]=l*h,n[4]=-l*d,n[8]=c,n[1]=p+m*c,n[5]=u-f*c,n[9]=-o*l,n[2]=f-u*c,n[6]=m+p*c,n[10]=a*l}else if(e.order==="YXZ"){const u=l*h,p=l*d,m=c*h,f=c*d;n[0]=u+f*o,n[4]=m*o-p,n[8]=a*c,n[1]=a*d,n[5]=a*h,n[9]=-o,n[2]=p*o-m,n[6]=f+u*o,n[10]=a*l}else if(e.order==="ZXY"){const u=l*h,p=l*d,m=c*h,f=c*d;n[0]=u-f*o,n[4]=-a*d,n[8]=m+p*o,n[1]=p+m*o,n[5]=a*h,n[9]=f-u*o,n[2]=-a*c,n[6]=o,n[10]=a*l}else if(e.order==="ZYX"){const u=a*h,p=a*d,m=o*h,f=o*d;n[0]=l*h,n[4]=m*c-p,n[8]=u*c+f,n[1]=l*d,n[5]=f*c+u,n[9]=p*c-m,n[2]=-c,n[6]=o*l,n[10]=a*l}else if(e.order==="YZX"){const u=a*l,p=a*c,m=o*l,f=o*c;n[0]=l*h,n[4]=f-u*d,n[8]=m*d+p,n[1]=d,n[5]=a*h,n[9]=-o*h,n[2]=-c*h,n[6]=p*d+m,n[10]=u-f*d}else if(e.order==="XZY"){const u=a*l,p=a*c,m=o*l,f=o*c;n[0]=l*h,n[4]=-d,n[8]=c*h,n[1]=u*d+f,n[5]=a*h,n[9]=p*d-m,n[2]=m*d-p,n[6]=o*h,n[10]=f*d+u}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ab,e,ob)}lookAt(e,n,i){const r=this.elements;return Dn.subVectors(e,n),Dn.lengthSq()===0&&(Dn.z=1),Dn.normalize(),ur.crossVectors(i,Dn),ur.lengthSq()===0&&(Math.abs(i.z)===1?Dn.x+=1e-4:Dn.z+=1e-4,Dn.normalize(),ur.crossVectors(i,Dn)),ur.normalize(),Vo.crossVectors(Dn,ur),r[0]=ur.x,r[4]=Vo.x,r[8]=Dn.x,r[1]=ur.y,r[5]=Vo.y,r[9]=Dn.y,r[2]=ur.z,r[6]=Vo.z,r[10]=Dn.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,n)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],h=i[1],d=i[5],u=i[9],p=i[13],m=i[2],f=i[6],g=i[10],v=i[14],y=i[3],w=i[7],b=i[11],S=i[15],_=r[0],E=r[4],x=r[8],A=r[12],M=r[1],C=r[5],F=r[9],$=r[13],I=r[2],Z=r[6],W=r[10],q=r[14],k=r[3],N=r[7],O=r[11],V=r[15];return s[0]=a*_+o*M+l*I+c*k,s[4]=a*E+o*C+l*Z+c*N,s[8]=a*x+o*F+l*W+c*O,s[12]=a*A+o*$+l*q+c*V,s[1]=h*_+d*M+u*I+p*k,s[5]=h*E+d*C+u*Z+p*N,s[9]=h*x+d*F+u*W+p*O,s[13]=h*A+d*$+u*q+p*V,s[2]=m*_+f*M+g*I+v*k,s[6]=m*E+f*C+g*Z+v*N,s[10]=m*x+f*F+g*W+v*O,s[14]=m*A+f*$+g*q+v*V,s[3]=y*_+w*M+b*I+S*k,s[7]=y*E+w*C+b*Z+S*N,s[11]=y*x+w*F+b*W+S*O,s[15]=y*A+w*$+b*q+S*V,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],h=e[2],d=e[6],u=e[10],p=e[14],m=e[3],f=e[7],g=e[11],v=e[15];return m*(+s*l*d-r*c*d-s*o*u+i*c*u+r*o*p-i*l*p)+f*(+n*l*p-n*c*u+s*a*u-r*a*p+r*c*h-s*l*h)+g*(+n*c*d-n*o*p-s*a*d+i*a*p+s*o*h-i*c*h)+v*(-r*o*h-n*l*d+n*o*u+r*a*d-i*a*u+i*l*h)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=e[9],u=e[10],p=e[11],m=e[12],f=e[13],g=e[14],v=e[15],y=d*g*c-f*u*c+f*l*p-o*g*p-d*l*v+o*u*v,w=m*u*c-h*g*c-m*l*p+a*g*p+h*l*v-a*u*v,b=h*f*c-m*d*c+m*o*p-a*f*p-h*o*v+a*d*v,S=m*d*l-h*f*l-m*o*u+a*f*u+h*o*g-a*d*g,_=n*y+i*w+r*b+s*S;if(_===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/_;return e[0]=y*E,e[1]=(f*u*s-d*g*s-f*r*p+i*g*p+d*r*v-i*u*v)*E,e[2]=(o*g*s-f*l*s+f*r*c-i*g*c-o*r*v+i*l*v)*E,e[3]=(d*l*s-o*u*s-d*r*c+i*u*c+o*r*p-i*l*p)*E,e[4]=w*E,e[5]=(h*g*s-m*u*s+m*r*p-n*g*p-h*r*v+n*u*v)*E,e[6]=(m*l*s-a*g*s-m*r*c+n*g*c+a*r*v-n*l*v)*E,e[7]=(a*u*s-h*l*s+h*r*c-n*u*c-a*r*p+n*l*p)*E,e[8]=b*E,e[9]=(m*d*s-h*f*s-m*i*p+n*f*p+h*i*v-n*d*v)*E,e[10]=(a*f*s-m*o*s+m*i*c-n*f*c-a*i*v+n*o*v)*E,e[11]=(h*o*s-a*d*s-h*i*c+n*d*c+a*i*p-n*o*p)*E,e[12]=S*E,e[13]=(h*f*r-m*d*r+m*i*u-n*f*u-h*i*g+n*d*g)*E,e[14]=(m*o*r-a*f*r-m*i*l+n*f*l+a*i*g-n*o*g)*E,e[15]=(a*d*r-h*o*r+h*i*l-n*d*l-a*i*u+n*o*u)*E,this}scale(e){const n=this.elements,i=e.x,r=e.y,s=e.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,a=e.x,o=e.y,l=e.z,c=s*a,h=s*o;return this.set(c*a+i,c*o-r*l,c*l+r*o,0,c*o+r*l,h*o+i,h*l-r*a,0,c*l-r*o,h*l+r*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,r,s,a){return this.set(1,i,s,0,e,1,a,0,n,r,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,s=n._x,a=n._y,o=n._z,l=n._w,c=s+s,h=a+a,d=o+o,u=s*c,p=s*h,m=s*d,f=a*h,g=a*d,v=o*d,y=l*c,w=l*h,b=l*d,S=i.x,_=i.y,E=i.z;return r[0]=(1-(f+v))*S,r[1]=(p+b)*S,r[2]=(m-w)*S,r[3]=0,r[4]=(p-b)*_,r[5]=(1-(u+v))*_,r[6]=(g+y)*_,r[7]=0,r[8]=(m+w)*E,r[9]=(g-y)*E,r[10]=(1-(u+f))*E,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let s=bs.set(r[0],r[1],r[2]).length();const a=bs.set(r[4],r[5],r[6]).length(),o=bs.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],ti.copy(this);const c=1/s,h=1/a,d=1/o;return ti.elements[0]*=c,ti.elements[1]*=c,ti.elements[2]*=c,ti.elements[4]*=h,ti.elements[5]*=h,ti.elements[6]*=h,ti.elements[8]*=d,ti.elements[9]*=d,ti.elements[10]*=d,n.setFromRotationMatrix(ti),i.x=s,i.y=a,i.z=o,this}makePerspective(e,n,i,r,s,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*s/(n-e),c=2*s/(i-r),h=(n+e)/(n-e),d=(i+r)/(i-r),u=-(a+s)/(a-s),p=-2*a*s/(a-s);return o[0]=l,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=d,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,n,i,r,s,a){const o=this.elements,l=1/(n-e),c=1/(i-r),h=1/(a-s),d=(n+e)*l,u=(i+r)*c,p=(a+s)*h;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-d,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}Re.prototype.isMatrix4=!0;const bs=new T,ti=new Re,ab=new T(0,0,0),ob=new T(1,1,1),ur=new T,Vo=new T,Dn=new T,fp=new Re,mp=new ln;class zi{constructor(e=0,n=0,i=0,r=zi.DefaultOrder){this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r=this._order){return this._x=e,this._y=n,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const r=e.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],h=r[9],d=r[2],u=r[6],p=r[10];switch(n){case"XYZ":this._y=Math.asin(Qt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Qt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(Qt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Qt(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(Qt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-Qt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return fp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(fp,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return mp.setFromEuler(this),this.setFromQuaternion(mp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}zi.prototype.isEuler=!0;zi.DefaultOrder="XYZ";zi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class _g{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let lb=0;const gp=new T,_s=new ln,Wi=new Re,Ho=new T,La=new T,cb=new T,hb=new ln,vp=new T(1,0,0),yp=new T(0,1,0),xp=new T(0,0,1),ub={type:"added"},bp={type:"removed"};class ht extends yi{constructor(){super(),Object.defineProperty(this,"id",{value:lb++}),this.uuid=pi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ht.DefaultUp.clone();const e=new T,n=new zi,i=new ln,r=new T(1,1,1);function s(){i.setFromEuler(n,!1)}function a(){n.setFromQuaternion(i,void 0,!1)}n._onChange(s),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Re},normalMatrix:{value:new zt}}),this.matrix=new Re,this.matrixWorld=new Re,this.matrixAutoUpdate=ht.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new _g,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return _s.setFromAxisAngle(e,n),this.quaternion.multiply(_s),this}rotateOnWorldAxis(e,n){return _s.setFromAxisAngle(e,n),this.quaternion.premultiply(_s),this}rotateX(e){return this.rotateOnAxis(vp,e)}rotateY(e){return this.rotateOnAxis(yp,e)}rotateZ(e){return this.rotateOnAxis(xp,e)}translateOnAxis(e,n){return gp.copy(e).applyQuaternion(this.quaternion),this.position.add(gp.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(vp,e)}translateY(e){return this.translateOnAxis(yp,e)}translateZ(e){return this.translateOnAxis(xp,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Wi.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?Ho.copy(e):Ho.set(e,n,i);const r=this.parent;this.updateWorldMatrix(!0,!1),La.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Wi.lookAt(La,Ho,this.up):Wi.lookAt(Ho,La,this.up),this.quaternion.setFromRotationMatrix(Wi),r&&(Wi.extractRotation(r.matrixWorld),_s.setFromRotationMatrix(Wi),this.quaternion.premultiply(_s.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(ub)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(bp)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const n=this.children[e];n.parent=null,n.dispatchEvent(bp)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Wi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Wi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Wi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectByProperty(e,n);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(La,e,cb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(La,hb,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const d=l[c];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));r.material=o}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(s(e.animations,l))}}if(n){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),h=a(e.images),d=a(e.shapes),u=a(e.skeletons),p=a(e.animations),m=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),u.length>0&&(i.skeletons=u),p.length>0&&(i.animations=p),m.length>0&&(i.nodes=m)}return i.object=r,i;function a(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}ht.DefaultUp=new T(0,1,0);ht.DefaultMatrixAutoUpdate=!0;ht.prototype.isObject3D=!0;const ni=new T,ji=new T,Xc=new T,qi=new T,ws=new T,Ss=new T,_p=new T,Jc=new T,$c=new T,Yc=new T;class qt{constructor(e=new T,n=new T,i=new T){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,r){r.subVectors(i,n),ni.subVectors(e,n),r.cross(ni);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,n,i,r,s){ni.subVectors(r,n),ji.subVectors(i,n),Xc.subVectors(e,n);const a=ni.dot(ni),o=ni.dot(ji),l=ni.dot(Xc),c=ji.dot(ji),h=ji.dot(Xc),d=a*c-o*o;if(d===0)return s.set(-2,-1,-1);const u=1/d,p=(c*l-o*h)*u,m=(a*h-o*l)*u;return s.set(1-p-m,m,p)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,qi),qi.x>=0&&qi.y>=0&&qi.x+qi.y<=1}static getUV(e,n,i,r,s,a,o,l){return this.getBarycoord(e,n,i,r,qi),l.set(0,0),l.addScaledVector(s,qi.x),l.addScaledVector(a,qi.y),l.addScaledVector(o,qi.z),l}static isFrontFacing(e,n,i,r){return ni.subVectors(i,n),ji.subVectors(e,n),ni.cross(ji).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,n,i,r){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ni.subVectors(this.c,this.b),ji.subVectors(this.a,this.b),ni.cross(ji).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return qt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return qt.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,r,s){return qt.getUV(e,this.a,this.b,this.c,n,i,r,s)}containsPoint(e){return qt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return qt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,r=this.b,s=this.c;let a,o;ws.subVectors(r,i),Ss.subVectors(s,i),Jc.subVectors(e,i);const l=ws.dot(Jc),c=Ss.dot(Jc);if(l<=0&&c<=0)return n.copy(i);$c.subVectors(e,r);const h=ws.dot($c),d=Ss.dot($c);if(h>=0&&d<=h)return n.copy(r);const u=l*d-h*c;if(u<=0&&l>=0&&h<=0)return a=l/(l-h),n.copy(i).addScaledVector(ws,a);Yc.subVectors(e,s);const p=ws.dot(Yc),m=Ss.dot(Yc);if(m>=0&&p<=m)return n.copy(s);const f=p*c-l*m;if(f<=0&&c>=0&&m<=0)return o=c/(c-m),n.copy(i).addScaledVector(Ss,o);const g=h*m-p*d;if(g<=0&&d-h>=0&&p-m>=0)return _p.subVectors(s,r),o=(d-h)/(d-h+(p-m)),n.copy(r).addScaledVector(_p,o);const v=1/(g+f+u);return a=f*v,o=u*v,n.copy(i).addScaledVector(ws,a).addScaledVector(Ss,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let db=0;class rn extends yi{constructor(){super(),Object.defineProperty(this,"id",{value:db++}),this.uuid=pi(),this.name="",this.type="Material",this.blending=qr,this.side=Kr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=mg,this.blendDst=gg,this.blendEquation=Fs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Uh,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Bx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=zc,this.stencilZFail=zc,this.stencilZPass=zc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn("THREE.Material: '"+n+"' parameter is undefined.");continue}if(n==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===fg;continue}const r=this[n];if(r===void 0){console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==qr&&(i.blending=this.blending),this.side!==Kr&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(n){const s=r(e.textures),a=r(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const r=n.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=n[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}rn.prototype.isMaterial=!0;rn.fromType=function(){return null};class Cr extends rn{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ic,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Cr.prototype.isMeshBasicMaterial=!0;const $t=new T,Go=new j;class rt{constructor(e,n,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i===!0,this.usage=ao,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=n.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new Ae),n[i++]=a.r,n[i++]=a.g,n[i++]=a.b}return this}copyVector2sArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new j),n[i++]=a.x,n[i++]=a.y}return this}copyVector3sArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new T),n[i++]=a.x,n[i++]=a.y,n[i++]=a.z}return this}copyVector4sArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new ct),n[i++]=a.x,n[i++]=a.y,n[i++]=a.z,n[i++]=a.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Go.fromBufferAttribute(this,n),Go.applyMatrix3(e),this.setXY(n,Go.x,Go.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)$t.fromBufferAttribute(this,n),$t.applyMatrix3(e),this.setXYZ(n,$t.x,$t.y,$t.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)$t.fromBufferAttribute(this,n),$t.applyMatrix4(e),this.setXYZ(n,$t.x,$t.y,$t.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)$t.fromBufferAttribute(this,n),$t.applyNormalMatrix(e),this.setXYZ(n,$t.x,$t.y,$t.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)$t.fromBufferAttribute(this,n),$t.transformDirection(e),this.setXYZ(n,$t.x,$t.y,$t.z);return this}set(e,n=0){return this.array.set(e,n),this}getX(e){return this.array[e*this.itemSize]}setX(e,n){return this.array[e*this.itemSize]=n,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,n){return this.array[e*this.itemSize+1]=n,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,n){return this.array[e*this.itemSize+2]=n,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,n){return this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,r){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,n,i,r,s){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ao&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}rt.prototype.isBufferAttribute=!0;class wg extends rt{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class Za extends rt{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class pb extends rt{constructor(e,n,i){super(new Uint16Array(e),n,i)}}pb.prototype.isFloat16BufferAttribute=!0;class Pe extends rt{constructor(e,n,i){super(new Float32Array(e),n,i)}}let fb=0;const Vn=new Re,Zc=new ht,Ms=new T,Rn=new fn,Pa=new fn,sn=new T;class Ge extends yi{constructor(){super(),Object.defineProperty(this,"id",{value:fb++}),this.uuid=pi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(xg(e)?Za:wg)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new zt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Vn.makeRotationFromQuaternion(e),this.applyMatrix4(Vn),this}rotateX(e){return Vn.makeRotationX(e),this.applyMatrix4(Vn),this}rotateY(e){return Vn.makeRotationY(e),this.applyMatrix4(Vn),this}rotateZ(e){return Vn.makeRotationZ(e),this.applyMatrix4(Vn),this}translate(e,n,i){return Vn.makeTranslation(e,n,i),this.applyMatrix4(Vn),this}scale(e,n,i){return Vn.makeScale(e,n,i),this.applyMatrix4(Vn),this}lookAt(e){return Zc.lookAt(e),Zc.updateMatrix(),this.applyMatrix4(Zc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ms).negate(),this.translate(Ms.x,Ms.y,Ms.z),this}setFromPoints(e){const n=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];n.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Pe(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new fn);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new T(-1/0,-1/0,-1/0),new T(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,r=n.length;i<r;i++){const s=n[i];Rn.setFromBufferAttribute(s),this.morphTargetsRelative?(sn.addVectors(this.boundingBox.min,Rn.min),this.boundingBox.expandByPoint(sn),sn.addVectors(this.boundingBox.max,Rn.max),this.boundingBox.expandByPoint(sn)):(this.boundingBox.expandByPoint(Rn.min),this.boundingBox.expandByPoint(Rn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xn);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new T,1/0);return}if(e){const i=this.boundingSphere.center;if(Rn.setFromBufferAttribute(e),n)for(let s=0,a=n.length;s<a;s++){const o=n[s];Pa.setFromBufferAttribute(o),this.morphTargetsRelative?(sn.addVectors(Rn.min,Pa.min),Rn.expandByPoint(sn),sn.addVectors(Rn.max,Pa.max),Rn.expandByPoint(sn)):(Rn.expandByPoint(Pa.min),Rn.expandByPoint(Pa.max))}Rn.getCenter(i);let r=0;for(let s=0,a=e.count;s<a;s++)sn.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(sn));if(n)for(let s=0,a=n.length;s<a;s++){const o=n[s],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)sn.fromBufferAttribute(o,c),l&&(Ms.fromBufferAttribute(e,c),sn.add(Ms)),r=Math.max(r,i.distanceToSquared(sn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=n.position.array,s=n.normal.array,a=n.uv.array,o=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new rt(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let M=0;M<o;M++)c[M]=new T,h[M]=new T;const d=new T,u=new T,p=new T,m=new j,f=new j,g=new j,v=new T,y=new T;function w(M,C,F){d.fromArray(r,M*3),u.fromArray(r,C*3),p.fromArray(r,F*3),m.fromArray(a,M*2),f.fromArray(a,C*2),g.fromArray(a,F*2),u.sub(d),p.sub(d),f.sub(m),g.sub(m);const $=1/(f.x*g.y-g.x*f.y);!isFinite($)||(v.copy(u).multiplyScalar(g.y).addScaledVector(p,-f.y).multiplyScalar($),y.copy(p).multiplyScalar(f.x).addScaledVector(u,-g.x).multiplyScalar($),c[M].add(v),c[C].add(v),c[F].add(v),h[M].add(y),h[C].add(y),h[F].add(y))}let b=this.groups;b.length===0&&(b=[{start:0,count:i.length}]);for(let M=0,C=b.length;M<C;++M){const F=b[M],$=F.start,I=F.count;for(let Z=$,W=$+I;Z<W;Z+=3)w(i[Z+0],i[Z+1],i[Z+2])}const S=new T,_=new T,E=new T,x=new T;function A(M){E.fromArray(s,M*3),x.copy(E);const C=c[M];S.copy(C),S.sub(E.multiplyScalar(E.dot(C))).normalize(),_.crossVectors(x,C);const $=_.dot(h[M])<0?-1:1;l[M*4]=S.x,l[M*4+1]=S.y,l[M*4+2]=S.z,l[M*4+3]=$}for(let M=0,C=b.length;M<C;++M){const F=b[M],$=F.start,I=F.count;for(let Z=$,W=$+I;Z<W;Z+=3)A(i[Z+0]),A(i[Z+1]),A(i[Z+2])}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new rt(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let u=0,p=i.count;u<p;u++)i.setXYZ(u,0,0,0);const r=new T,s=new T,a=new T,o=new T,l=new T,c=new T,h=new T,d=new T;if(e)for(let u=0,p=e.count;u<p;u+=3){const m=e.getX(u+0),f=e.getX(u+1),g=e.getX(u+2);r.fromBufferAttribute(n,m),s.fromBufferAttribute(n,f),a.fromBufferAttribute(n,g),h.subVectors(a,s),d.subVectors(r,s),h.cross(d),o.fromBufferAttribute(i,m),l.fromBufferAttribute(i,f),c.fromBufferAttribute(i,g),o.add(h),l.add(h),c.add(h),i.setXYZ(m,o.x,o.y,o.z),i.setXYZ(f,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let u=0,p=n.count;u<p;u+=3)r.fromBufferAttribute(n,u+0),s.fromBufferAttribute(n,u+1),a.fromBufferAttribute(n,u+2),h.subVectors(a,s),d.subVectors(r,s),h.cross(d),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,n){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}n===void 0&&(n=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const a=i[r].array,o=e.attributes[r],l=o.array,c=o.itemSize*n,h=Math.min(l.length,a.length-c);for(let d=0,u=c;d<h;d++,u++)a[u]=l[d]}return this}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)sn.fromBufferAttribute(e,n),sn.normalize(),e.setXYZ(n,sn.x,sn.y,sn.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,d=o.normalized,u=new c.constructor(l.length*h);let p=0,m=0;for(let f=0,g=l.length;f<g;f++){o.isInterleavedBufferAttribute?p=l[f]*o.data.stride+o.offset:p=l[f]*h;for(let v=0;v<h;v++)u[m++]=c[p++]}return new rt(u,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new Ge,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=e(l,i);n.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let h=0,d=c.length;h<d;h++){const u=c[h],p=e(u,i);l.push(p)}n.morphAttributes[o]=l}n.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];n.addGroup(c.start,c.count,c.materialIndex)}return n}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let d=0,u=c.length;d<u;d++){const p=c[d];h.push(p.toJSON(e.data))}h.length>0&&(r[l]=h,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const r=e.attributes;for(const c in r){const h=r[c];this.setAttribute(c,h.clone(n))}const s=e.morphAttributes;for(const c in s){const h=[],d=s[c];for(let u=0,p=d.length;u<p;u++)h.push(d[u].clone(n));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,h=a.length;c<h;c++){const d=a[c];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ge.prototype.isBufferGeometry=!0;const wp=new Re,Ts=new as,Kc=new Xn,dr=new T,pr=new T,fr=new T,Qc=new T,eh=new T,th=new T,Wo=new T,jo=new T,qo=new T,Xo=new j,Jo=new j,$o=new j,nh=new T,Yo=new T;class pn extends ht{constructor(e=new Ge,n=new Cr){super(),this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,n){const i=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),Kc.copy(i.boundingSphere),Kc.applyMatrix4(s),e.ray.intersectsSphere(Kc)===!1)||(wp.copy(s).invert(),Ts.copy(e.ray).applyMatrix4(wp),i.boundingBox!==null&&Ts.intersectsBox(i.boundingBox)===!1))return;let a;if(i.isBufferGeometry){const o=i.index,l=i.attributes.position,c=i.morphAttributes.position,h=i.morphTargetsRelative,d=i.attributes.uv,u=i.attributes.uv2,p=i.groups,m=i.drawRange;if(o!==null)if(Array.isArray(r))for(let f=0,g=p.length;f<g;f++){const v=p[f],y=r[v.materialIndex],w=Math.max(v.start,m.start),b=Math.min(o.count,Math.min(v.start+v.count,m.start+m.count));for(let S=w,_=b;S<_;S+=3){const E=o.getX(S),x=o.getX(S+1),A=o.getX(S+2);a=Zo(this,y,e,Ts,l,c,h,d,u,E,x,A),a&&(a.faceIndex=Math.floor(S/3),a.face.materialIndex=v.materialIndex,n.push(a))}}else{const f=Math.max(0,m.start),g=Math.min(o.count,m.start+m.count);for(let v=f,y=g;v<y;v+=3){const w=o.getX(v),b=o.getX(v+1),S=o.getX(v+2);a=Zo(this,r,e,Ts,l,c,h,d,u,w,b,S),a&&(a.faceIndex=Math.floor(v/3),n.push(a))}}else if(l!==void 0)if(Array.isArray(r))for(let f=0,g=p.length;f<g;f++){const v=p[f],y=r[v.materialIndex],w=Math.max(v.start,m.start),b=Math.min(l.count,Math.min(v.start+v.count,m.start+m.count));for(let S=w,_=b;S<_;S+=3){const E=S,x=S+1,A=S+2;a=Zo(this,y,e,Ts,l,c,h,d,u,E,x,A),a&&(a.faceIndex=Math.floor(S/3),a.face.materialIndex=v.materialIndex,n.push(a))}}else{const f=Math.max(0,m.start),g=Math.min(l.count,m.start+m.count);for(let v=f,y=g;v<y;v+=3){const w=v,b=v+1,S=v+2;a=Zo(this,r,e,Ts,l,c,h,d,u,w,b,S),a&&(a.faceIndex=Math.floor(v/3),n.push(a))}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}pn.prototype.isMesh=!0;function mb(t,e,n,i,r,s,a,o){let l;if(e.side===qn?l=i.intersectTriangle(a,s,r,!0,o):l=i.intersectTriangle(r,s,a,e.side!==Bn,o),l===null)return null;Yo.copy(o),Yo.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Yo);return c<n.near||c>n.far?null:{distance:c,point:Yo.clone(),object:t}}function Zo(t,e,n,i,r,s,a,o,l,c,h,d){dr.fromBufferAttribute(r,c),pr.fromBufferAttribute(r,h),fr.fromBufferAttribute(r,d);const u=t.morphTargetInfluences;if(s&&u){Wo.set(0,0,0),jo.set(0,0,0),qo.set(0,0,0);for(let m=0,f=s.length;m<f;m++){const g=u[m],v=s[m];g!==0&&(Qc.fromBufferAttribute(v,c),eh.fromBufferAttribute(v,h),th.fromBufferAttribute(v,d),a?(Wo.addScaledVector(Qc,g),jo.addScaledVector(eh,g),qo.addScaledVector(th,g)):(Wo.addScaledVector(Qc.sub(dr),g),jo.addScaledVector(eh.sub(pr),g),qo.addScaledVector(th.sub(fr),g)))}dr.add(Wo),pr.add(jo),fr.add(qo)}t.isSkinnedMesh&&(t.boneTransform(c,dr),t.boneTransform(h,pr),t.boneTransform(d,fr));const p=mb(t,e,n,i,dr,pr,fr,nh);if(p){o&&(Xo.fromBufferAttribute(o,c),Jo.fromBufferAttribute(o,h),$o.fromBufferAttribute(o,d),p.uv=qt.getUV(nh,dr,pr,fr,Xo,Jo,$o,new j)),l&&(Xo.fromBufferAttribute(l,c),Jo.fromBufferAttribute(l,h),$o.fromBufferAttribute(l,d),p.uv2=qt.getUV(nh,dr,pr,fr,Xo,Jo,$o,new j));const m={a:c,b:h,c:d,normal:new T,materialIndex:0};qt.getNormal(dr,pr,fr,m.normal),p.face=m}return p}class ir extends Ge{constructor(e=1,n=1,i=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],h=[],d=[];let u=0,p=0;m("z","y","x",-1,-1,i,n,e,a,s,0),m("z","y","x",1,-1,i,n,-e,a,s,1),m("x","z","y",1,1,e,i,n,r,a,2),m("x","z","y",1,-1,e,i,-n,r,a,3),m("x","y","z",1,-1,e,n,i,r,s,4),m("x","y","z",-1,-1,e,n,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new Pe(c,3)),this.setAttribute("normal",new Pe(h,3)),this.setAttribute("uv",new Pe(d,2));function m(f,g,v,y,w,b,S,_,E,x,A){const M=b/E,C=S/x,F=b/2,$=S/2,I=_/2,Z=E+1,W=x+1;let q=0,k=0;const N=new T;for(let O=0;O<W;O++){const V=O*C-$;for(let z=0;z<Z;z++){const H=z*M-F;N[f]=H*y,N[g]=V*w,N[v]=I,c.push(N.x,N.y,N.z),N[f]=0,N[g]=0,N[v]=_>0?1:-1,h.push(N.x,N.y,N.z),d.push(z/E),d.push(1-O/x),q+=1}}for(let O=0;O<x;O++)for(let V=0;V<E;V++){const z=u+V+Z*O,H=u+V+Z*(O+1),J=u+(V+1)+Z*(O+1),ne=u+(V+1)+Z*O;l.push(z,H,ne),l.push(H,J,ne),k+=6}o.addGroup(p,k,A),p+=k,u+=q}}static fromJSON(e){return new ir(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function na(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function mn(t){const e={};for(let n=0;n<t.length;n++){const i=na(t[n]);for(const r in i)e[r]=i[r]}return e}const ua={clone:na,merge:mn};var gb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,vb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Jn extends rn{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=gb,this.fragmentShader=vb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=na(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?n.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?n.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?n.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?n.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?n.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?n.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?n.uniforms[r]={type:"m4",value:a.toArray()}:n.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}Jn.prototype.isShaderMaterial=!0;class da extends ht{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Re,this.projectionMatrix=new Re,this.projectionMatrixInverse=new Re}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(-n[8],-n[9],-n[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}da.prototype.isCamera=!0;class gn extends da{constructor(e=50,n=1,i=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=oo*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan($a*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return oo*2*Math.atan(Math.tan($a*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,n,i,r,s,a){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan($a*.5*this.fov)/this.zoom,i=2*n,r=this.aspect*i,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*r/l,n-=a.offsetY*i/c,r*=a.width/l,i*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,n,n-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}gn.prototype.isPerspectiveCamera=!0;const Es=90,As=1;class Vu extends ht{constructor(e,n,i){if(super(),this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new gn(Es,As,e,n);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new T(1,0,0)),this.add(r);const s=new gn(Es,As,e,n);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new T(-1,0,0)),this.add(s);const a=new gn(Es,As,e,n);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new T(0,1,0)),this.add(a);const o=new gn(Es,As,e,n);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new T(0,-1,0)),this.add(o);const l=new gn(Es,As,e,n);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new T(0,0,1)),this.add(l);const c=new gn(Es,As,e,n);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new T(0,0,-1)),this.add(c)}update(e,n){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,s,a,o,l,c]=this.children,h=e.getRenderTarget(),d=e.toneMapping,u=e.xr.enabled;e.toneMapping=er,e.xr.enabled=!1;const p=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(n,r),e.setRenderTarget(i,1),e.render(n,s),e.setRenderTarget(i,2),e.render(n,a),e.setRenderTarget(i,3),e.render(n,o),e.setRenderTarget(i,4),e.render(n,l),i.texture.generateMipmaps=p,e.setRenderTarget(i,5),e.render(n,c),e.setRenderTarget(h),e.toneMapping=d,e.xr.enabled=u,i.texture.needsPMREMUpdate=!0}}class wo extends Bt{constructor(e,n,i,r,s,a,o,l,c,h){e=e!==void 0?e:[],n=n!==void 0?n:Qr,super(e,n,i,r,s,a,o,l,c,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}wo.prototype.isCubeTexture=!0;class Sg extends Ln{constructor(e,n={}){super(e,e,n);const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new wo(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:_n}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.encoding=n.encoding,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new ir(5,5,5),s=new Jn({name:"CubemapFromEquirect",uniforms:na(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:qn,blending:Mr});s.uniforms.tEquirect.value=n;const a=new pn(r,s),o=n.minFilter;return n.minFilter===_o&&(n.minFilter=_n),new Vu(1,10,this).update(e,a),n.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,n,i,r){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(n,i,r);e.setRenderTarget(s)}}Sg.prototype.isWebGLCubeRenderTarget=!0;const ih=new T,yb=new T,xb=new zt;class Pi{constructor(e=new T(1,0,0),n=0){this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=ih.subVectors(i,n).cross(yb.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){const i=e.delta(ih),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:n.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||xb.getNormalMatrix(e),r=this.coplanarPoint(ih).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}Pi.prototype.isPlane=!0;const Cs=new Xn,Ko=new T;class sc{constructor(e=new Pi,n=new Pi,i=new Pi,r=new Pi,s=new Pi,a=new Pi){this.planes=[e,n,i,r,s,a]}set(e,n,i,r,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(i),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,r=i[0],s=i[1],a=i[2],o=i[3],l=i[4],c=i[5],h=i[6],d=i[7],u=i[8],p=i[9],m=i[10],f=i[11],g=i[12],v=i[13],y=i[14],w=i[15];return n[0].setComponents(o-r,d-l,f-u,w-g).normalize(),n[1].setComponents(o+r,d+l,f+u,w+g).normalize(),n[2].setComponents(o+s,d+c,f+p,w+v).normalize(),n[3].setComponents(o-s,d-c,f-p,w-v).normalize(),n[4].setComponents(o-a,d-h,f-m,w-y).normalize(),n[5].setComponents(o+a,d+h,f+m,w+y).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),Cs.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Cs)}intersectsSprite(e){return Cs.center.set(0,0,0),Cs.radius=.7071067811865476,Cs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Cs)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(Ko.x=r.normal.x>0?e.max.x:e.min.x,Ko.y=r.normal.y>0?e.max.y:e.min.y,Ko.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ko)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Mg(){let t=null,e=!1,n=null,i=null;function r(s,a){n(s,a),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){n=s},setContext:function(s){t=s}}}function bb(t,e){const n=e.isWebGL2,i=new WeakMap;function r(c,h){const d=c.array,u=c.usage,p=t.createBuffer();t.bindBuffer(h,p),t.bufferData(h,d,u),c.onUploadCallback();let m;if(d instanceof Float32Array)m=5126;else if(d instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(n)m=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=5123;else if(d instanceof Int16Array)m=5122;else if(d instanceof Uint32Array)m=5125;else if(d instanceof Int32Array)m=5124;else if(d instanceof Int8Array)m=5120;else if(d instanceof Uint8Array)m=5121;else if(d instanceof Uint8ClampedArray)m=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:m,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version}}function s(c,h,d){const u=h.array,p=h.updateRange;t.bindBuffer(d,c),p.count===-1?t.bufferSubData(d,0,u):(n?t.bufferSubData(d,p.offset*u.BYTES_PER_ELEMENT,u,p.offset,p.count):t.bufferSubData(d,p.offset*u.BYTES_PER_ELEMENT,u.subarray(p.offset,p.offset+p.count)),p.count=-1)}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h&&(t.deleteBuffer(h.buffer),i.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const u=i.get(c);(!u||u.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d===void 0?i.set(c,r(c,h)):d.version<c.version&&(s(d.buffer,c,h),d.version=c.version)}return{get:a,remove:o,update:l}}class So extends Ge{constructor(e=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r};const s=e/2,a=n/2,o=Math.floor(i),l=Math.floor(r),c=o+1,h=l+1,d=e/o,u=n/l,p=[],m=[],f=[],g=[];for(let v=0;v<h;v++){const y=v*u-a;for(let w=0;w<c;w++){const b=w*d-s;m.push(b,-y,0),f.push(0,0,1),g.push(w/o),g.push(1-v/l)}}for(let v=0;v<l;v++)for(let y=0;y<o;y++){const w=y+c*v,b=y+c*(v+1),S=y+1+c*(v+1),_=y+1+c*v;p.push(w,b,_),p.push(b,S,_)}this.setIndex(p),this.setAttribute("position",new Pe(m,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(g,2))}static fromJSON(e){return new So(e.width,e.height,e.widthSegments,e.heightSegments)}}var _b=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,wb=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Sb=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Mb=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Tb=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Eb=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Ab="vec3 transformed = vec3( position );",Cb=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Lb=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Pb=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Db=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Rb=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Ob=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Ib=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Nb=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,zb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Bb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Fb=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Ub=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,kb=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Vb=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Hb=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Gb=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Wb=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,jb=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,qb="gl_FragColor = linearToOutputTexel( gl_FragColor );",Xb=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Jb=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,$b=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Yb=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Zb=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Kb=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Qb=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,e_=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,t_=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,n_=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,i_=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,r_=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,s_=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,a_=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,o_=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,l_=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,c_=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,h_=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,u_=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,d_=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,p_=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,f_=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,m_=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,g_=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,v_=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,y_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,x_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,b_=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,__=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,w_=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,S_=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,M_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,T_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,E_=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,A_=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,C_=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,L_=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,P_=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,D_=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,R_=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,O_=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,I_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,N_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,z_=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,B_=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,F_=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,U_=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,k_=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,V_=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,H_=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,G_=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,W_=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,j_=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,q_=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,X_=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,J_=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,$_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Y_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Z_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,K_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Q_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ew=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,tw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,iw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,rw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,sw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,aw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ow=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,lw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,cw=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,hw=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,uw=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,dw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,pw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,fw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,mw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const gw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,vw=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,yw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,xw=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bw=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,_w=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,ww=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Sw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Mw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Tw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ew=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Aw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Cw=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Lw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pw=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dw=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ow=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Iw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Nw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,zw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Bw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Uw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Vw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Gw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ww=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,qw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Xw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,lt={alphamap_fragment:_b,alphamap_pars_fragment:wb,alphatest_fragment:Sb,alphatest_pars_fragment:Mb,aomap_fragment:Tb,aomap_pars_fragment:Eb,begin_vertex:Ab,beginnormal_vertex:Cb,bsdfs:Lb,bumpmap_pars_fragment:Pb,clipping_planes_fragment:Db,clipping_planes_pars_fragment:Rb,clipping_planes_pars_vertex:Ob,clipping_planes_vertex:Ib,color_fragment:Nb,color_pars_fragment:zb,color_pars_vertex:Bb,color_vertex:Fb,common:Ub,cube_uv_reflection_fragment:kb,defaultnormal_vertex:Vb,displacementmap_pars_vertex:Hb,displacementmap_vertex:Gb,emissivemap_fragment:Wb,emissivemap_pars_fragment:jb,encodings_fragment:qb,encodings_pars_fragment:Xb,envmap_fragment:Jb,envmap_common_pars_fragment:$b,envmap_pars_fragment:Yb,envmap_pars_vertex:Zb,envmap_physical_pars_fragment:l_,envmap_vertex:Kb,fog_vertex:Qb,fog_pars_vertex:e_,fog_fragment:t_,fog_pars_fragment:n_,gradientmap_pars_fragment:i_,lightmap_fragment:r_,lightmap_pars_fragment:s_,lights_lambert_vertex:a_,lights_pars_begin:o_,lights_toon_fragment:c_,lights_toon_pars_fragment:h_,lights_phong_fragment:u_,lights_phong_pars_fragment:d_,lights_physical_fragment:p_,lights_physical_pars_fragment:f_,lights_fragment_begin:m_,lights_fragment_maps:g_,lights_fragment_end:v_,logdepthbuf_fragment:y_,logdepthbuf_pars_fragment:x_,logdepthbuf_pars_vertex:b_,logdepthbuf_vertex:__,map_fragment:w_,map_pars_fragment:S_,map_particle_fragment:M_,map_particle_pars_fragment:T_,metalnessmap_fragment:E_,metalnessmap_pars_fragment:A_,morphcolor_vertex:C_,morphnormal_vertex:L_,morphtarget_pars_vertex:P_,morphtarget_vertex:D_,normal_fragment_begin:R_,normal_fragment_maps:O_,normal_pars_fragment:I_,normal_pars_vertex:N_,normal_vertex:z_,normalmap_pars_fragment:B_,clearcoat_normal_fragment_begin:F_,clearcoat_normal_fragment_maps:U_,clearcoat_pars_fragment:k_,output_fragment:V_,packing:H_,premultiplied_alpha_fragment:G_,project_vertex:W_,dithering_fragment:j_,dithering_pars_fragment:q_,roughnessmap_fragment:X_,roughnessmap_pars_fragment:J_,shadowmap_pars_fragment:$_,shadowmap_pars_vertex:Y_,shadowmap_vertex:Z_,shadowmask_pars_fragment:K_,skinbase_vertex:Q_,skinning_pars_vertex:ew,skinning_vertex:tw,skinnormal_vertex:nw,specularmap_fragment:iw,specularmap_pars_fragment:rw,tonemapping_fragment:sw,tonemapping_pars_fragment:aw,transmission_fragment:ow,transmission_pars_fragment:lw,uv_pars_fragment:cw,uv_pars_vertex:hw,uv_vertex:uw,uv2_pars_fragment:dw,uv2_pars_vertex:pw,uv2_vertex:fw,worldpos_vertex:mw,background_vert:gw,background_frag:vw,cube_vert:yw,cube_frag:xw,depth_vert:bw,depth_frag:_w,distanceRGBA_vert:ww,distanceRGBA_frag:Sw,equirect_vert:Mw,equirect_frag:Tw,linedashed_vert:Ew,linedashed_frag:Aw,meshbasic_vert:Cw,meshbasic_frag:Lw,meshlambert_vert:Pw,meshlambert_frag:Dw,meshmatcap_vert:Rw,meshmatcap_frag:Ow,meshnormal_vert:Iw,meshnormal_frag:Nw,meshphong_vert:zw,meshphong_frag:Bw,meshphysical_vert:Fw,meshphysical_frag:Uw,meshtoon_vert:kw,meshtoon_frag:Vw,points_vert:Hw,points_frag:Gw,shadow_vert:Ww,shadow_frag:jw,sprite_vert:qw,sprite_frag:Xw},Me={common:{diffuse:{value:new Ae(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new zt},uv2Transform:{value:new zt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new j(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new zt}},sprite:{diffuse:{value:new Ae(16777215)},opacity:{value:1},center:{value:new j(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new zt}}},oi={basic:{uniforms:mn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.fog]),vertexShader:lt.meshbasic_vert,fragmentShader:lt.meshbasic_frag},lambert:{uniforms:mn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.fog,Me.lights,{emissive:{value:new Ae(0)}}]),vertexShader:lt.meshlambert_vert,fragmentShader:lt.meshlambert_frag},phong:{uniforms:mn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,Me.lights,{emissive:{value:new Ae(0)},specular:{value:new Ae(1118481)},shininess:{value:30}}]),vertexShader:lt.meshphong_vert,fragmentShader:lt.meshphong_frag},standard:{uniforms:mn([Me.common,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.roughnessmap,Me.metalnessmap,Me.fog,Me.lights,{emissive:{value:new Ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag},toon:{uniforms:mn([Me.common,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.gradientmap,Me.fog,Me.lights,{emissive:{value:new Ae(0)}}]),vertexShader:lt.meshtoon_vert,fragmentShader:lt.meshtoon_frag},matcap:{uniforms:mn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,{matcap:{value:null}}]),vertexShader:lt.meshmatcap_vert,fragmentShader:lt.meshmatcap_frag},points:{uniforms:mn([Me.points,Me.fog]),vertexShader:lt.points_vert,fragmentShader:lt.points_frag},dashed:{uniforms:mn([Me.common,Me.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:lt.linedashed_vert,fragmentShader:lt.linedashed_frag},depth:{uniforms:mn([Me.common,Me.displacementmap]),vertexShader:lt.depth_vert,fragmentShader:lt.depth_frag},normal:{uniforms:mn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,{opacity:{value:1}}]),vertexShader:lt.meshnormal_vert,fragmentShader:lt.meshnormal_frag},sprite:{uniforms:mn([Me.sprite,Me.fog]),vertexShader:lt.sprite_vert,fragmentShader:lt.sprite_frag},background:{uniforms:{uvTransform:{value:new zt},t2D:{value:null}},vertexShader:lt.background_vert,fragmentShader:lt.background_frag},cube:{uniforms:mn([Me.envmap,{opacity:{value:1}}]),vertexShader:lt.cube_vert,fragmentShader:lt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:lt.equirect_vert,fragmentShader:lt.equirect_frag},distanceRGBA:{uniforms:mn([Me.common,Me.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:lt.distanceRGBA_vert,fragmentShader:lt.distanceRGBA_frag},shadow:{uniforms:mn([Me.lights,Me.fog,{color:{value:new Ae(0)},opacity:{value:1}}]),vertexShader:lt.shadow_vert,fragmentShader:lt.shadow_frag}};oi.physical={uniforms:mn([oi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new j(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Ae(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new j},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ae(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ae(1,1,1)},specularColorMap:{value:null}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag};function Jw(t,e,n,i,r,s){const a=new Ae(0);let o=r===!0?0:1,l,c,h=null,d=0,u=null;function p(f,g){let v=!1,y=g.isScene===!0?g.background:null;y&&y.isTexture&&(y=e.get(y));const w=t.xr,b=w.getSession&&w.getSession();b&&b.environmentBlendMode==="additive"&&(y=null),y===null?m(a,o):y&&y.isColor&&(m(y,1),v=!0),(t.autoClear||v)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),y&&(y.isCubeTexture||y.mapping===bo)?(c===void 0&&(c=new pn(new ir(1,1,1),new Jn({name:"BackgroundCubeMaterial",uniforms:na(oi.cube.uniforms),vertexShader:oi.cube.vertexShader,fragmentShader:oi.cube.fragmentShader,side:qn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(S,_,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=y,c.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,(h!==y||d!==y.version||u!==t.toneMapping)&&(c.material.needsUpdate=!0,h=y,d=y.version,u=t.toneMapping),c.layers.enableAll(),f.unshift(c,c.geometry,c.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new pn(new So(2,2),new Jn({name:"BackgroundMaterial",uniforms:na(oi.background.uniforms),vertexShader:oi.background.vertexShader,fragmentShader:oi.background.fragmentShader,side:Kr,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=y,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(h!==y||d!==y.version||u!==t.toneMapping)&&(l.material.needsUpdate=!0,h=y,d=y.version,u=t.toneMapping),l.layers.enableAll(),f.unshift(l,l.geometry,l.material,0,0,null))}function m(f,g){n.buffers.color.setClear(f.r,f.g,f.b,g,s)}return{getClearColor:function(){return a},setClearColor:function(f,g=1){a.set(f),o=g,m(a,o)},getClearAlpha:function(){return o},setClearAlpha:function(f){o=f,m(a,o)},render:p}}function $w(t,e,n,i){const r=t.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||s!==null,o={},l=g(null);let c=l,h=!1;function d(I,Z,W,q,k){let N=!1;if(a){const O=f(q,W,Z);c!==O&&(c=O,p(c.object)),N=v(I,q,W,k),N&&y(I,q,W,k)}else{const O=Z.wireframe===!0;(c.geometry!==q.id||c.program!==W.id||c.wireframe!==O)&&(c.geometry=q.id,c.program=W.id,c.wireframe=O,N=!0)}k!==null&&n.update(k,34963),(N||h)&&(h=!1,x(I,Z,W,q),k!==null&&t.bindBuffer(34963,n.get(k).buffer))}function u(){return i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()}function p(I){return i.isWebGL2?t.bindVertexArray(I):s.bindVertexArrayOES(I)}function m(I){return i.isWebGL2?t.deleteVertexArray(I):s.deleteVertexArrayOES(I)}function f(I,Z,W){const q=W.wireframe===!0;let k=o[I.id];k===void 0&&(k={},o[I.id]=k);let N=k[Z.id];N===void 0&&(N={},k[Z.id]=N);let O=N[q];return O===void 0&&(O=g(u()),N[q]=O),O}function g(I){const Z=[],W=[],q=[];for(let k=0;k<r;k++)Z[k]=0,W[k]=0,q[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Z,enabledAttributes:W,attributeDivisors:q,object:I,attributes:{},index:null}}function v(I,Z,W,q){const k=c.attributes,N=Z.attributes;let O=0;const V=W.getAttributes();for(const z in V)if(V[z].location>=0){const J=k[z];let ne=N[z];if(ne===void 0&&(z==="instanceMatrix"&&I.instanceMatrix&&(ne=I.instanceMatrix),z==="instanceColor"&&I.instanceColor&&(ne=I.instanceColor)),J===void 0||J.attribute!==ne||ne&&J.data!==ne.data)return!0;O++}return c.attributesNum!==O||c.index!==q}function y(I,Z,W,q){const k={},N=Z.attributes;let O=0;const V=W.getAttributes();for(const z in V)if(V[z].location>=0){let J=N[z];J===void 0&&(z==="instanceMatrix"&&I.instanceMatrix&&(J=I.instanceMatrix),z==="instanceColor"&&I.instanceColor&&(J=I.instanceColor));const ne={};ne.attribute=J,J&&J.data&&(ne.data=J.data),k[z]=ne,O++}c.attributes=k,c.attributesNum=O,c.index=q}function w(){const I=c.newAttributes;for(let Z=0,W=I.length;Z<W;Z++)I[Z]=0}function b(I){S(I,0)}function S(I,Z){const W=c.newAttributes,q=c.enabledAttributes,k=c.attributeDivisors;W[I]=1,q[I]===0&&(t.enableVertexAttribArray(I),q[I]=1),k[I]!==Z&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](I,Z),k[I]=Z)}function _(){const I=c.newAttributes,Z=c.enabledAttributes;for(let W=0,q=Z.length;W<q;W++)Z[W]!==I[W]&&(t.disableVertexAttribArray(W),Z[W]=0)}function E(I,Z,W,q,k,N){i.isWebGL2===!0&&(W===5124||W===5125)?t.vertexAttribIPointer(I,Z,W,k,N):t.vertexAttribPointer(I,Z,W,q,k,N)}function x(I,Z,W,q){if(i.isWebGL2===!1&&(I.isInstancedMesh||q.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;w();const k=q.attributes,N=W.getAttributes(),O=Z.defaultAttributeValues;for(const V in N){const z=N[V];if(z.location>=0){let H=k[V];if(H===void 0&&(V==="instanceMatrix"&&I.instanceMatrix&&(H=I.instanceMatrix),V==="instanceColor"&&I.instanceColor&&(H=I.instanceColor)),H!==void 0){const J=H.normalized,ne=H.itemSize,B=n.get(H);if(B===void 0)continue;const oe=B.buffer,ie=B.type,le=B.bytesPerElement;if(H.isInterleavedBufferAttribute){const K=H.data,pe=K.stride,G=H.offset;if(K.isInstancedInterleavedBuffer){for(let X=0;X<z.locationSize;X++)S(z.location+X,K.meshPerAttribute);I.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=K.meshPerAttribute*K.count)}else for(let X=0;X<z.locationSize;X++)b(z.location+X);t.bindBuffer(34962,oe);for(let X=0;X<z.locationSize;X++)E(z.location+X,ne/z.locationSize,ie,J,pe*le,(G+ne/z.locationSize*X)*le)}else{if(H.isInstancedBufferAttribute){for(let K=0;K<z.locationSize;K++)S(z.location+K,H.meshPerAttribute);I.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=H.meshPerAttribute*H.count)}else for(let K=0;K<z.locationSize;K++)b(z.location+K);t.bindBuffer(34962,oe);for(let K=0;K<z.locationSize;K++)E(z.location+K,ne/z.locationSize,ie,J,ne*le,ne/z.locationSize*K*le)}}else if(O!==void 0){const J=O[V];if(J!==void 0)switch(J.length){case 2:t.vertexAttrib2fv(z.location,J);break;case 3:t.vertexAttrib3fv(z.location,J);break;case 4:t.vertexAttrib4fv(z.location,J);break;default:t.vertexAttrib1fv(z.location,J)}}}}_()}function A(){F();for(const I in o){const Z=o[I];for(const W in Z){const q=Z[W];for(const k in q)m(q[k].object),delete q[k];delete Z[W]}delete o[I]}}function M(I){if(o[I.id]===void 0)return;const Z=o[I.id];for(const W in Z){const q=Z[W];for(const k in q)m(q[k].object),delete q[k];delete Z[W]}delete o[I.id]}function C(I){for(const Z in o){const W=o[Z];if(W[I.id]===void 0)continue;const q=W[I.id];for(const k in q)m(q[k].object),delete q[k];delete W[I.id]}}function F(){$(),h=!0,c!==l&&(c=l,p(c.object))}function $(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:F,resetDefaultState:$,dispose:A,releaseStatesOfGeometry:M,releaseStatesOfProgram:C,initAttributes:w,enableAttribute:b,disableUnusedAttributes:_}}function Yw(t,e,n,i){const r=i.isWebGL2;let s;function a(c){s=c}function o(c,h){t.drawArrays(s,c,h),n.update(h,s,1)}function l(c,h,d){if(d===0)return;let u,p;if(r)u=t,p="drawArraysInstanced";else if(u=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",u===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[p](s,c,h,d),n.update(h,s,d)}this.setMode=a,this.render=o,this.renderInstances=l}function Zw(t,e,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(E){if(E==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";E="mediump"}return E==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&t instanceof WebGL2ComputeRenderingContext;let o=n.precision!==void 0?n.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),h=n.logarithmicDepthBuffer===!0,d=t.getParameter(34930),u=t.getParameter(35660),p=t.getParameter(3379),m=t.getParameter(34076),f=t.getParameter(34921),g=t.getParameter(36347),v=t.getParameter(36348),y=t.getParameter(36349),w=u>0,b=a||e.has("OES_texture_float"),S=w&&b,_=a?t.getParameter(36183):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:h,maxTextures:d,maxVertexTextures:u,maxTextureSize:p,maxCubemapSize:m,maxAttributes:f,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:y,vertexTextures:w,floatFragmentTextures:b,floatVertexTextures:S,maxSamples:_}}function Kw(t){const e=this;let n=null,i=0,r=!1,s=!1;const a=new Pi,o=new zt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,u,p){const m=d.length!==0||u||i!==0||r;return r=u,n=h(d,p,0),i=d.length,m},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(d,u,p){const m=d.clippingPlanes,f=d.clipIntersection,g=d.clipShadows,v=t.get(d);if(!r||m===null||m.length===0||s&&!g)s?h(null):c();else{const y=s?0:i,w=y*4;let b=v.clippingState||null;l.value=b,b=h(m,u,w,p);for(let S=0;S!==w;++S)b[S]=n[S];v.clippingState=b,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(d,u,p,m){const f=d!==null?d.length:0;let g=null;if(f!==0){if(g=l.value,m!==!0||g===null){const v=p+f*4,y=u.matrixWorldInverse;o.getNormalMatrix(y),(g===null||g.length<v)&&(g=new Float32Array(v));for(let w=0,b=p;w!==f;++w,b+=4)a.copy(d[w]).applyMatrix4(y,o),a.normal.toArray(g,b),g[b+3]=a.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,g}}function Qw(t){let e=new WeakMap;function n(a,o){return o===kh?a.mapping=Qr:o===Vh&&(a.mapping=es),a}function i(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===kh||o===Vh)if(e.has(a)){const l=e.get(a).texture;return n(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new Sg(l.height/2);return c.fromEquirectangularTexture(t,a),e.set(a,c),a.addEventListener("dispose",r),n(c.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class ac extends da{constructor(e=-1,n=1,i=1,r=-1,s=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=r+n,l=r-n;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}ac.prototype.isOrthographicCamera=!0;const js=4,Sp=[.125,.215,.35,.446,.526,.582],Hr=20,rh=new ac,Mp=new Ae;let sh=null;const kr=(1+Math.sqrt(5))/2,Ls=1/kr,Tp=[new T(1,1,1),new T(-1,1,1),new T(1,1,-1),new T(-1,1,-1),new T(0,kr,Ls),new T(0,kr,-Ls),new T(Ls,0,kr),new T(-Ls,0,kr),new T(kr,Ls,0),new T(-kr,Ls,0)];class Ep{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,r=100){sh=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),n>0&&this._blur(s,0,0,n),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Lp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Cp(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(sh),e.scissorTest=!1,Qo(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===Qr||e.mapping===es?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),sh=this._renderer.getRenderTarget();const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:_n,minFilter:_n,generateMipmaps:!1,type:so,format:ui,encoding:gi,depthBuffer:!1},r=Ap(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ap(e,n,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=e1(s)),this._blurMaterial=t1(s,e,n)}return r}_compileMaterial(e){const n=new pn(this._lodPlanes[0],e);this._renderer.compile(n,rh)}_sceneToCubeUV(e,n,i,r){const o=new gn(90,1,n,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,u=h.toneMapping;h.getClearColor(Mp),h.toneMapping=er,h.autoClear=!1;const p=new Cr({name:"PMREM.Background",side:qn,depthWrite:!1,depthTest:!1}),m=new pn(new ir,p);let f=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,f=!0):(p.color.copy(Mp),f=!0);for(let v=0;v<6;v++){const y=v%3;y===0?(o.up.set(0,l[v],0),o.lookAt(c[v],0,0)):y===1?(o.up.set(0,0,l[v]),o.lookAt(0,c[v],0)):(o.up.set(0,l[v],0),o.lookAt(0,0,c[v]));const w=this._cubeSize;Qo(r,y*w,v>2?w:0,w,w),h.setRenderTarget(r),f&&h.render(m,o),h.render(e,o)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=u,h.autoClear=d,e.background=g}_textureToCubeUV(e,n){const i=this._renderer,r=e.mapping===Qr||e.mapping===es;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Lp()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Cp());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new pn(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;Qo(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(a,rh)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Tp[(r-1)%Tp.length];this._blur(e,r-1,r,s,a)}n.autoClear=i}_blur(e,n,i,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,r,"latitudinal",s),this._halfBlur(a,e,i,i,r,"longitudinal",s)}_halfBlur(e,n,i,r,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new pn(this._lodPlanes[r],c),u=c.uniforms,p=this._sizeLods[i]-1,m=isFinite(s)?Math.PI/(2*p):2*Math.PI/(2*Hr-1),f=s/m,g=isFinite(s)?1+Math.floor(h*f):Hr;g>Hr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Hr}`);const v=[];let y=0;for(let E=0;E<Hr;++E){const x=E/f,A=Math.exp(-x*x/2);v.push(A),E===0?y+=A:E<g&&(y+=2*A)}for(let E=0;E<v.length;E++)v[E]=v[E]/y;u.envMap.value=e.texture,u.samples.value=g,u.weights.value=v,u.latitudinal.value=a==="latitudinal",o&&(u.poleAxis.value=o);const{_lodMax:w}=this;u.dTheta.value=m,u.mipInt.value=w-i;const b=this._sizeLods[r],S=3*b*(r>w-js?r-w+js:0),_=4*(this._cubeSize-b);Qo(n,S,_,3*b,2*b),l.setRenderTarget(n),l.render(d,rh)}}function e1(t){const e=[],n=[],i=[];let r=t;const s=t-js+1+Sp.length;for(let a=0;a<s;a++){const o=Math.pow(2,r);n.push(o);let l=1/o;a>t-js?l=Sp[a-t+js-1]:a===0&&(l=0),i.push(l);const c=1/(o-2),h=-c,d=1+c,u=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,m=6,f=3,g=2,v=1,y=new Float32Array(f*m*p),w=new Float32Array(g*m*p),b=new Float32Array(v*m*p);for(let _=0;_<p;_++){const E=_%3*2/3-1,x=_>2?0:-1,A=[E,x,0,E+2/3,x,0,E+2/3,x+1,0,E,x,0,E+2/3,x+1,0,E,x+1,0];y.set(A,f*m*_),w.set(u,g*m*_);const M=[_,_,_,_,_,_];b.set(M,v*m*_)}const S=new Ge;S.setAttribute("position",new rt(y,f)),S.setAttribute("uv",new rt(w,g)),S.setAttribute("faceIndex",new rt(b,v)),e.push(S),r>js&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function Ap(t,e,n){const i=new Ln(t,e,n);return i.texture.mapping=bo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Qo(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function t1(t,e,n){const i=new Float32Array(Hr),r=new T(0,1,0);return new Jn({name:"SphericalGaussianBlur",defines:{n:Hr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Hu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Mr,depthTest:!1,depthWrite:!1})}function Cp(){return new Jn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Hu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Mr,depthTest:!1,depthWrite:!1})}function Lp(){return new Jn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Hu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Mr,depthTest:!1,depthWrite:!1})}function Hu(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function n1(t){let e=new WeakMap,n=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===kh||l===Vh,h=l===Qr||l===es;if(c||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let d=e.get(o);return n===null&&(n=new Ep(t)),d=c?n.fromEquirectangular(o,d):n.fromCubemap(o,d),e.set(o,d),d.texture}else{if(e.has(o))return e.get(o).texture;{const d=o.image;if(c&&d&&d.height>0||h&&d&&r(d)){n===null&&(n=new Ep(t));const u=c?n.fromEquirectangular(o):n.fromCubemap(o);return e.set(o,u),o.addEventListener("dispose",s),u.texture}else return null}}}return o}function r(o){let l=0;const c=6;for(let h=0;h<c;h++)o[h]!==void 0&&l++;return l===c}function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:a}}function i1(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r,r}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function r1(t,e,n,i){const r={},s=new WeakMap;function a(d){const u=d.target;u.index!==null&&e.remove(u.index);for(const m in u.attributes)e.remove(u.attributes[m]);u.removeEventListener("dispose",a),delete r[u.id];const p=s.get(u);p&&(e.remove(p),s.delete(u)),i.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,n.memory.geometries--}function o(d,u){return r[u.id]===!0||(u.addEventListener("dispose",a),r[u.id]=!0,n.memory.geometries++),u}function l(d){const u=d.attributes;for(const m in u)e.update(u[m],34962);const p=d.morphAttributes;for(const m in p){const f=p[m];for(let g=0,v=f.length;g<v;g++)e.update(f[g],34962)}}function c(d){const u=[],p=d.index,m=d.attributes.position;let f=0;if(p!==null){const y=p.array;f=p.version;for(let w=0,b=y.length;w<b;w+=3){const S=y[w+0],_=y[w+1],E=y[w+2];u.push(S,_,_,E,E,S)}}else{const y=m.array;f=m.version;for(let w=0,b=y.length/3-1;w<b;w+=3){const S=w+0,_=w+1,E=w+2;u.push(S,_,_,E,E,S)}}const g=new(xg(u)?Za:wg)(u,1);g.version=f;const v=s.get(d);v&&e.remove(v),s.set(d,g)}function h(d){const u=s.get(d);if(u){const p=d.index;p!==null&&u.version<p.version&&c(d)}else c(d);return s.get(d)}return{get:o,update:l,getWireframeAttribute:h}}function s1(t,e,n,i){const r=i.isWebGL2;let s;function a(u){s=u}let o,l;function c(u){o=u.type,l=u.bytesPerElement}function h(u,p){t.drawElements(s,p,o,u*l),n.update(p,s,1)}function d(u,p,m){if(m===0)return;let f,g;if(r)f=t,g="drawElementsInstanced";else if(f=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",f===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[g](s,p,o,u*l,m),n.update(p,s,m)}this.setMode=a,this.setIndex=c,this.render=h,this.renderInstances=d}function a1(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,o){switch(n.calls++,a){case 4:n.triangles+=o*(s/3);break;case 1:n.lines+=o*(s/2);break;case 3:n.lines+=o*(s-1);break;case 2:n.lines+=o*s;break;case 0:n.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function o1(t,e){return t[0]-e[0]}function l1(t,e){return Math.abs(e[1])-Math.abs(t[1])}function ah(t,e){let n=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?n=127:i instanceof Int16Array?n=32767:i instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),t.divideScalar(n)}function c1(t,e,n){const i={},r=new Float32Array(8),s=new WeakMap,a=new ct,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,h,d,u){const p=c.morphTargetInfluences;if(e.isWebGL2===!0){const m=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,f=m!==void 0?m.length:0;let g=s.get(h);if(g===void 0||g.count!==f){let Z=function(){$.dispose(),s.delete(h),h.removeEventListener("dispose",Z)};g!==void 0&&g.texture.dispose();const w=h.morphAttributes.position!==void 0,b=h.morphAttributes.normal!==void 0,S=h.morphAttributes.color!==void 0,_=h.morphAttributes.position||[],E=h.morphAttributes.normal||[],x=h.morphAttributes.color||[];let A=0;w===!0&&(A=1),b===!0&&(A=2),S===!0&&(A=3);let M=h.attributes.position.count*A,C=1;M>e.maxTextureSize&&(C=Math.ceil(M/e.maxTextureSize),M=e.maxTextureSize);const F=new Float32Array(M*C*4*f),$=new rc(F,M,C,f);$.type=Wr,$.needsUpdate=!0;const I=A*4;for(let W=0;W<f;W++){const q=_[W],k=E[W],N=x[W],O=M*C*4*W;for(let V=0;V<q.count;V++){const z=V*I;w===!0&&(a.fromBufferAttribute(q,V),q.normalized===!0&&ah(a,q),F[O+z+0]=a.x,F[O+z+1]=a.y,F[O+z+2]=a.z,F[O+z+3]=0),b===!0&&(a.fromBufferAttribute(k,V),k.normalized===!0&&ah(a,k),F[O+z+4]=a.x,F[O+z+5]=a.y,F[O+z+6]=a.z,F[O+z+7]=0),S===!0&&(a.fromBufferAttribute(N,V),N.normalized===!0&&ah(a,N),F[O+z+8]=a.x,F[O+z+9]=a.y,F[O+z+10]=a.z,F[O+z+11]=N.itemSize===4?a.w:1)}}g={count:f,texture:$,size:new j(M,C)},s.set(h,g),h.addEventListener("dispose",Z)}let v=0;for(let w=0;w<p.length;w++)v+=p[w];const y=h.morphTargetsRelative?1:1-v;u.getUniforms().setValue(t,"morphTargetBaseInfluence",y),u.getUniforms().setValue(t,"morphTargetInfluences",p),u.getUniforms().setValue(t,"morphTargetsTexture",g.texture,n),u.getUniforms().setValue(t,"morphTargetsTextureSize",g.size)}else{const m=p===void 0?0:p.length;let f=i[h.id];if(f===void 0||f.length!==m){f=[];for(let b=0;b<m;b++)f[b]=[b,0];i[h.id]=f}for(let b=0;b<m;b++){const S=f[b];S[0]=b,S[1]=p[b]}f.sort(l1);for(let b=0;b<8;b++)b<m&&f[b][1]?(o[b][0]=f[b][0],o[b][1]=f[b][1]):(o[b][0]=Number.MAX_SAFE_INTEGER,o[b][1]=0);o.sort(o1);const g=h.morphAttributes.position,v=h.morphAttributes.normal;let y=0;for(let b=0;b<8;b++){const S=o[b],_=S[0],E=S[1];_!==Number.MAX_SAFE_INTEGER&&E?(g&&h.getAttribute("morphTarget"+b)!==g[_]&&h.setAttribute("morphTarget"+b,g[_]),v&&h.getAttribute("morphNormal"+b)!==v[_]&&h.setAttribute("morphNormal"+b,v[_]),r[b]=E,y+=E):(g&&h.hasAttribute("morphTarget"+b)===!0&&h.deleteAttribute("morphTarget"+b),v&&h.hasAttribute("morphNormal"+b)===!0&&h.deleteAttribute("morphNormal"+b),r[b]=0)}const w=h.morphTargetsRelative?1:1-y;u.getUniforms().setValue(t,"morphTargetBaseInfluence",w),u.getUniforms().setValue(t,"morphTargetInfluences",r)}}return{update:l}}function h1(t,e,n,i){let r=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,d=e.get(l,h);return r.get(d)!==c&&(e.update(d),r.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),n.update(l.instanceMatrix,34962),l.instanceColor!==null&&n.update(l.instanceColor,34962)),d}function a(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:s,dispose:a}}const Tg=new Bt,Eg=new rc,Ag=new ku,Cg=new wo,Pp=[],Dp=[],Rp=new Float32Array(16),Op=new Float32Array(9),Ip=new Float32Array(4);function pa(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=Pp[r];if(s===void 0&&(s=new Float32Array(r),Pp[r]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=n,t[a].toArray(s,o)}return s}function Sn(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Mn(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function oc(t,e){let n=Dp[e];n===void 0&&(n=new Int32Array(e),Dp[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function u1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function d1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Sn(n,e))return;t.uniform2fv(this.addr,e),Mn(n,e)}}function p1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Sn(n,e))return;t.uniform3fv(this.addr,e),Mn(n,e)}}function f1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Sn(n,e))return;t.uniform4fv(this.addr,e),Mn(n,e)}}function m1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Sn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Mn(n,e)}else{if(Sn(n,i))return;Ip.set(i),t.uniformMatrix2fv(this.addr,!1,Ip),Mn(n,i)}}function g1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Sn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Mn(n,e)}else{if(Sn(n,i))return;Op.set(i),t.uniformMatrix3fv(this.addr,!1,Op),Mn(n,i)}}function v1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Sn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Mn(n,e)}else{if(Sn(n,i))return;Rp.set(i),t.uniformMatrix4fv(this.addr,!1,Rp),Mn(n,i)}}function y1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function x1(t,e){const n=this.cache;Sn(n,e)||(t.uniform2iv(this.addr,e),Mn(n,e))}function b1(t,e){const n=this.cache;Sn(n,e)||(t.uniform3iv(this.addr,e),Mn(n,e))}function _1(t,e){const n=this.cache;Sn(n,e)||(t.uniform4iv(this.addr,e),Mn(n,e))}function w1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function S1(t,e){const n=this.cache;Sn(n,e)||(t.uniform2uiv(this.addr,e),Mn(n,e))}function M1(t,e){const n=this.cache;Sn(n,e)||(t.uniform3uiv(this.addr,e),Mn(n,e))}function T1(t,e){const n=this.cache;Sn(n,e)||(t.uniform4uiv(this.addr,e),Mn(n,e))}function E1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(e||Tg,r)}function A1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||Ag,r)}function C1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||Cg,r)}function L1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||Eg,r)}function P1(t){switch(t){case 5126:return u1;case 35664:return d1;case 35665:return p1;case 35666:return f1;case 35674:return m1;case 35675:return g1;case 35676:return v1;case 5124:case 35670:return y1;case 35667:case 35671:return x1;case 35668:case 35672:return b1;case 35669:case 35673:return _1;case 5125:return w1;case 36294:return S1;case 36295:return M1;case 36296:return T1;case 35678:case 36198:case 36298:case 36306:case 35682:return E1;case 35679:case 36299:case 36307:return A1;case 35680:case 36300:case 36308:case 36293:return C1;case 36289:case 36303:case 36311:case 36292:return L1}}function D1(t,e){t.uniform1fv(this.addr,e)}function R1(t,e){const n=pa(e,this.size,2);t.uniform2fv(this.addr,n)}function O1(t,e){const n=pa(e,this.size,3);t.uniform3fv(this.addr,n)}function I1(t,e){const n=pa(e,this.size,4);t.uniform4fv(this.addr,n)}function N1(t,e){const n=pa(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function z1(t,e){const n=pa(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function B1(t,e){const n=pa(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function F1(t,e){t.uniform1iv(this.addr,e)}function U1(t,e){t.uniform2iv(this.addr,e)}function k1(t,e){t.uniform3iv(this.addr,e)}function V1(t,e){t.uniform4iv(this.addr,e)}function H1(t,e){t.uniform1uiv(this.addr,e)}function G1(t,e){t.uniform2uiv(this.addr,e)}function W1(t,e){t.uniform3uiv(this.addr,e)}function j1(t,e){t.uniform4uiv(this.addr,e)}function q1(t,e,n){const i=e.length,r=oc(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTexture2D(e[s]||Tg,r[s])}function X1(t,e,n){const i=e.length,r=oc(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTexture3D(e[s]||Ag,r[s])}function J1(t,e,n){const i=e.length,r=oc(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTextureCube(e[s]||Cg,r[s])}function $1(t,e,n){const i=e.length,r=oc(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTexture2DArray(e[s]||Eg,r[s])}function Y1(t){switch(t){case 5126:return D1;case 35664:return R1;case 35665:return O1;case 35666:return I1;case 35674:return N1;case 35675:return z1;case 35676:return B1;case 5124:case 35670:return F1;case 35667:case 35671:return U1;case 35668:case 35672:return k1;case 35669:case 35673:return V1;case 5125:return H1;case 36294:return G1;case 36295:return W1;case 36296:return j1;case 35678:case 36198:case 36298:case 36306:case 35682:return q1;case 35679:case 36299:case 36307:return X1;case 35680:case 36300:case 36308:case 36293:return J1;case 36289:case 36303:case 36311:case 36292:return $1}}function Z1(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=P1(e.type)}function K1(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Y1(e.type)}function Lg(t){this.id=t,this.seq=[],this.map={}}Lg.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const a=i[r];a.setValue(t,e[a.id],n)}};const oh=/(\w+)(\])?(\[|\.)?/g;function Np(t,e){t.seq.push(e),t.map[e.id]=e}function Q1(t,e,n){const i=t.name,r=i.length;for(oh.lastIndex=0;;){const s=oh.exec(i),a=oh.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){Np(n,c===void 0?new Z1(o,t,e):new K1(o,t,e));break}else{let d=n.map[o];d===void 0&&(d=new Lg(o),Np(n,d)),n=d}}}function Tr(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),s=t.getUniformLocation(e,r.name);Q1(r,s,this)}}Tr.prototype.setValue=function(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)};Tr.prototype.setOptional=function(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)};Tr.upload=function(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const a=e[r],o=n[a.id];o.needsUpdate!==!1&&a.setValue(t,o.value,i)}};Tr.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const s=t[i];s.id in e&&n.push(s)}return n};function zp(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let eS=0;function tS(t,e){const n=t.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let a=r;a<s;a++)i.push(a+1+": "+n[a]);return i.join(`
`)}function nS(t){switch(t){case gi:return["Linear","( value )"];case Dt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Bp(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const a=parseInt(s[0]);return n.toUpperCase()+`

`+r+`

`+tS(t.getShaderSource(e),a)}else return r}function iS(t,e){const n=nS(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function rS(t,e){let n;switch(e){case cx:n="Linear";break;case hx:n="Reinhard";break;case ux:n="OptimizedCineon";break;case dx:n="ACESFilmic";break;case px:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function sS(t){return[t.extensionDerivatives||!!t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ga).join(`
`)}function aS(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function oS(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const s=t.getActiveAttrib(e,r),a=s.name;let o=1;s.type===35674&&(o=2),s.type===35675&&(o=3),s.type===35676&&(o=4),n[a]={type:s.type,location:t.getAttribLocation(e,a),locationSize:o}}return n}function Ga(t){return t!==""}function Fp(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Up(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const lS=/^[ \t]*#include +<([\w\d./]+)>/gm;function qh(t){return t.replace(lS,cS)}function cS(t,e){const n=lt[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return qh(n)}const hS=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,uS=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function kp(t){return t.replace(uS,Pg).replace(hS,dS)}function dS(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Pg(t,e,n,i)}function Pg(t,e,n,i){let r="";for(let s=parseInt(e);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Vp(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function pS(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===zu?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===Vy?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===Ha&&(e="SHADOWMAP_TYPE_VSM"),e}function fS(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Qr:case es:e="ENVMAP_TYPE_CUBE";break;case bo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function mS(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case es:e="ENVMAP_MODE_REFRACTION";break}return e}function gS(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case ic:e="ENVMAP_BLENDING_MULTIPLY";break;case ox:e="ENVMAP_BLENDING_MIX";break;case lx:e="ENVMAP_BLENDING_ADD";break}return e}function vS(t){const e=t.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function yS(t,e,n,i){const r=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=pS(n),c=fS(n),h=mS(n),d=gS(n),u=vS(n),p=n.isWebGL2?"":sS(n),m=aS(s),f=r.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(g=[m].filter(Ga).join(`
`),g.length>0&&(g+=`
`),v=[p,m].filter(Ga).join(`
`),v.length>0&&(v+=`
`)):(g=[Vp(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ga).join(`
`),v=[p,Vp(n),"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==er?"#define TONE_MAPPING":"",n.toneMapping!==er?lt.tonemapping_pars_fragment:"",n.toneMapping!==er?rS("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",lt.encodings_pars_fragment,iS("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Ga).join(`
`)),a=qh(a),a=Fp(a,n),a=Up(a,n),o=qh(o),o=Fp(o,n),o=Up(o,n),a=kp(a),o=kp(o),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,v=["#define varying in",n.glslVersion===hp?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===hp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const w=y+g+a,b=y+v+o,S=zp(r,35633,w),_=zp(r,35632,b);if(r.attachShader(f,S),r.attachShader(f,_),n.index0AttributeName!==void 0?r.bindAttribLocation(f,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),t.debug.checkShaderErrors){const A=r.getProgramInfoLog(f).trim(),M=r.getShaderInfoLog(S).trim(),C=r.getShaderInfoLog(_).trim();let F=!0,$=!0;if(r.getProgramParameter(f,35714)===!1){F=!1;const I=Bp(r,S,"vertex"),Z=Bp(r,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(f,35715)+`

Program Info Log: `+A+`
`+I+`
`+Z)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(M===""||C==="")&&($=!1);$&&(this.diagnostics={runnable:F,programLog:A,vertexShader:{log:M,prefix:g},fragmentShader:{log:C,prefix:v}})}r.deleteShader(S),r.deleteShader(_);let E;this.getUniforms=function(){return E===void 0&&(E=new Tr(r,f)),E};let x;return this.getAttributes=function(){return x===void 0&&(x=oS(r,f)),x},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.name=n.shaderName,this.id=eS++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=S,this.fragmentShader=_,this}let xS=0;class bS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(n),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(r)===!1&&(a.add(r),r.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;return n.has(e)===!1&&n.set(e,new Set),n.get(e)}_getShaderStage(e){const n=this.shaderCache;if(n.has(e)===!1){const i=new _S(e);n.set(e,i)}return n.get(e)}}class _S{constructor(e){this.id=xS++,this.code=e,this.usedTimes=0}}function wS(t,e,n,i,r,s,a){const o=new _g,l=new bS,c=[],h=r.isWebGL2,d=r.logarithmicDepthBuffer,u=r.vertexTextures;let p=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(x,A,M,C,F){const $=C.fog,I=F.geometry,Z=x.isMeshStandardMaterial?C.environment:null,W=(x.isMeshStandardMaterial?n:e).get(x.envMap||Z),q=!!W&&W.mapping===bo?W.image.height:null,k=m[x.type];x.precision!==null&&(p=r.getMaxPrecision(x.precision),p!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",p,"instead."));const N=I.morphAttributes.position||I.morphAttributes.normal||I.morphAttributes.color,O=N!==void 0?N.length:0;let V=0;I.morphAttributes.position!==void 0&&(V=1),I.morphAttributes.normal!==void 0&&(V=2),I.morphAttributes.color!==void 0&&(V=3);let z,H,J,ne;if(k){const K=oi[k];z=K.vertexShader,H=K.fragmentShader}else z=x.vertexShader,H=x.fragmentShader,l.update(x),J=l.getVertexShaderID(x),ne=l.getFragmentShaderID(x);const B=t.getRenderTarget(),oe=x.alphaTest>0,ie=x.clearcoat>0;return{isWebGL2:h,shaderID:k,shaderName:x.type,vertexShader:z,fragmentShader:H,defines:x.defines,customVertexShaderID:J,customFragmentShaderID:ne,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:p,instancing:F.isInstancedMesh===!0,instancingColor:F.isInstancedMesh===!0&&F.instanceColor!==null,supportsVertexTextures:u,outputEncoding:B===null?t.outputEncoding:B.isXRRenderTarget===!0?B.texture.encoding:gi,map:!!x.map,matcap:!!x.matcap,envMap:!!W,envMapMode:W&&W.mapping,envMapCubeUVHeight:q,lightMap:!!x.lightMap,aoMap:!!x.aoMap,emissiveMap:!!x.emissiveMap,bumpMap:!!x.bumpMap,normalMap:!!x.normalMap,objectSpaceNormalMap:x.normalMapType===zx,tangentSpaceNormalMap:x.normalMapType===ha,decodeVideoTexture:!!x.map&&x.map.isVideoTexture===!0&&x.map.encoding===Dt,clearcoat:ie,clearcoatMap:ie&&!!x.clearcoatMap,clearcoatRoughnessMap:ie&&!!x.clearcoatRoughnessMap,clearcoatNormalMap:ie&&!!x.clearcoatNormalMap,displacementMap:!!x.displacementMap,roughnessMap:!!x.roughnessMap,metalnessMap:!!x.metalnessMap,specularMap:!!x.specularMap,specularIntensityMap:!!x.specularIntensityMap,specularColorMap:!!x.specularColorMap,opaque:x.transparent===!1&&x.blending===qr,alphaMap:!!x.alphaMap,alphaTest:oe,gradientMap:!!x.gradientMap,sheen:x.sheen>0,sheenColorMap:!!x.sheenColorMap,sheenRoughnessMap:!!x.sheenRoughnessMap,transmission:x.transmission>0,transmissionMap:!!x.transmissionMap,thicknessMap:!!x.thicknessMap,combine:x.combine,vertexTangents:!!x.normalMap&&!!I.attributes.tangent,vertexColors:x.vertexColors,vertexAlphas:x.vertexColors===!0&&!!I.attributes.color&&I.attributes.color.itemSize===4,vertexUvs:!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatMap||!!x.clearcoatRoughnessMap||!!x.clearcoatNormalMap||!!x.displacementMap||!!x.transmissionMap||!!x.thicknessMap||!!x.specularIntensityMap||!!x.specularColorMap||!!x.sheenColorMap||!!x.sheenRoughnessMap,uvsVertexOnly:!(!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatNormalMap||x.transmission>0||!!x.transmissionMap||!!x.thicknessMap||!!x.specularIntensityMap||!!x.specularColorMap||x.sheen>0||!!x.sheenColorMap||!!x.sheenRoughnessMap)&&!!x.displacementMap,fog:!!$,useFog:x.fog===!0,fogExp2:$&&$.isFogExp2,flatShading:!!x.flatShading,sizeAttenuation:x.sizeAttenuation,logarithmicDepthBuffer:d,skinning:F.isSkinnedMesh===!0,morphTargets:I.morphAttributes.position!==void 0,morphNormals:I.morphAttributes.normal!==void 0,morphColors:I.morphAttributes.color!==void 0,morphTargetsCount:O,morphTextureStride:V,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:x.dithering,shadowMapEnabled:t.shadowMap.enabled&&M.length>0,shadowMapType:t.shadowMap.type,toneMapping:x.toneMapped?t.toneMapping:er,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:x.premultipliedAlpha,doubleSided:x.side===Bn,flipSided:x.side===qn,useDepthPacking:!!x.depthPacking,depthPacking:x.depthPacking||0,index0AttributeName:x.index0AttributeName,extensionDerivatives:x.extensions&&x.extensions.derivatives,extensionFragDepth:x.extensions&&x.extensions.fragDepth,extensionDrawBuffers:x.extensions&&x.extensions.drawBuffers,extensionShaderTextureLOD:x.extensions&&x.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||i.has("EXT_shader_texture_lod"),customProgramCacheKey:x.customProgramCacheKey()}}function g(x){const A=[];if(x.shaderID?A.push(x.shaderID):(A.push(x.customVertexShaderID),A.push(x.customFragmentShaderID)),x.defines!==void 0)for(const M in x.defines)A.push(M),A.push(x.defines[M]);return x.isRawShaderMaterial===!1&&(v(A,x),y(A,x),A.push(t.outputEncoding)),A.push(x.customProgramCacheKey),A.join()}function v(x,A){x.push(A.precision),x.push(A.outputEncoding),x.push(A.envMapMode),x.push(A.envMapCubeUVHeight),x.push(A.combine),x.push(A.vertexUvs),x.push(A.fogExp2),x.push(A.sizeAttenuation),x.push(A.morphTargetsCount),x.push(A.morphAttributeCount),x.push(A.numDirLights),x.push(A.numPointLights),x.push(A.numSpotLights),x.push(A.numHemiLights),x.push(A.numRectAreaLights),x.push(A.numDirLightShadows),x.push(A.numPointLightShadows),x.push(A.numSpotLightShadows),x.push(A.shadowMapType),x.push(A.toneMapping),x.push(A.numClippingPlanes),x.push(A.numClipIntersection),x.push(A.depthPacking)}function y(x,A){o.disableAll(),A.isWebGL2&&o.enable(0),A.supportsVertexTextures&&o.enable(1),A.instancing&&o.enable(2),A.instancingColor&&o.enable(3),A.map&&o.enable(4),A.matcap&&o.enable(5),A.envMap&&o.enable(6),A.lightMap&&o.enable(7),A.aoMap&&o.enable(8),A.emissiveMap&&o.enable(9),A.bumpMap&&o.enable(10),A.normalMap&&o.enable(11),A.objectSpaceNormalMap&&o.enable(12),A.tangentSpaceNormalMap&&o.enable(13),A.clearcoat&&o.enable(14),A.clearcoatMap&&o.enable(15),A.clearcoatRoughnessMap&&o.enable(16),A.clearcoatNormalMap&&o.enable(17),A.displacementMap&&o.enable(18),A.specularMap&&o.enable(19),A.roughnessMap&&o.enable(20),A.metalnessMap&&o.enable(21),A.gradientMap&&o.enable(22),A.alphaMap&&o.enable(23),A.alphaTest&&o.enable(24),A.vertexColors&&o.enable(25),A.vertexAlphas&&o.enable(26),A.vertexUvs&&o.enable(27),A.vertexTangents&&o.enable(28),A.uvsVertexOnly&&o.enable(29),A.fog&&o.enable(30),x.push(o.mask),o.disableAll(),A.useFog&&o.enable(0),A.flatShading&&o.enable(1),A.logarithmicDepthBuffer&&o.enable(2),A.skinning&&o.enable(3),A.morphTargets&&o.enable(4),A.morphNormals&&o.enable(5),A.morphColors&&o.enable(6),A.premultipliedAlpha&&o.enable(7),A.shadowMapEnabled&&o.enable(8),A.physicallyCorrectLights&&o.enable(9),A.doubleSided&&o.enable(10),A.flipSided&&o.enable(11),A.useDepthPacking&&o.enable(12),A.dithering&&o.enable(13),A.specularIntensityMap&&o.enable(14),A.specularColorMap&&o.enable(15),A.transmission&&o.enable(16),A.transmissionMap&&o.enable(17),A.thicknessMap&&o.enable(18),A.sheen&&o.enable(19),A.sheenColorMap&&o.enable(20),A.sheenRoughnessMap&&o.enable(21),A.decodeVideoTexture&&o.enable(22),A.opaque&&o.enable(23),x.push(o.mask)}function w(x){const A=m[x.type];let M;if(A){const C=oi[A];M=ua.clone(C.uniforms)}else M=x.uniforms;return M}function b(x,A){let M;for(let C=0,F=c.length;C<F;C++){const $=c[C];if($.cacheKey===A){M=$,++M.usedTimes;break}}return M===void 0&&(M=new yS(t,A,x,s),c.push(M)),M}function S(x){if(--x.usedTimes===0){const A=c.indexOf(x);c[A]=c[c.length-1],c.pop(),x.destroy()}}function _(x){l.remove(x)}function E(){l.dispose()}return{getParameters:f,getProgramCacheKey:g,getUniforms:w,acquireProgram:b,releaseProgram:S,releaseShaderCache:_,programs:c,dispose:E}}function SS(){let t=new WeakMap;function e(s){let a=t.get(s);return a===void 0&&(a={},t.set(s,a)),a}function n(s){t.delete(s)}function i(s,a,o){t.get(s)[a]=o}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function MS(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Hp(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Gp(){const t=[];let e=0;const n=[],i=[],r=[];function s(){e=0,n.length=0,i.length=0,r.length=0}function a(d,u,p,m,f,g){let v=t[e];return v===void 0?(v={id:d.id,object:d,geometry:u,material:p,groupOrder:m,renderOrder:d.renderOrder,z:f,group:g},t[e]=v):(v.id=d.id,v.object=d,v.geometry=u,v.material=p,v.groupOrder=m,v.renderOrder=d.renderOrder,v.z=f,v.group=g),e++,v}function o(d,u,p,m,f,g){const v=a(d,u,p,m,f,g);p.transmission>0?i.push(v):p.transparent===!0?r.push(v):n.push(v)}function l(d,u,p,m,f,g){const v=a(d,u,p,m,f,g);p.transmission>0?i.unshift(v):p.transparent===!0?r.unshift(v):n.unshift(v)}function c(d,u){n.length>1&&n.sort(d||MS),i.length>1&&i.sort(u||Hp),r.length>1&&r.sort(u||Hp)}function h(){for(let d=e,u=t.length;d<u;d++){const p=t[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:n,transmissive:i,transparent:r,init:s,push:o,unshift:l,finish:h,sort:c}}function TS(){let t=new WeakMap;function e(i,r){let s;return t.has(i)===!1?(s=new Gp,t.set(i,[s])):r>=t.get(i).length?(s=new Gp,t.get(i).push(s)):s=t.get(i)[r],s}function n(){t=new WeakMap}return{get:e,dispose:n}}function ES(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new T,color:new Ae};break;case"SpotLight":n={position:new T,direction:new T,color:new Ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new T,color:new Ae,distance:0,decay:0};break;case"HemisphereLight":n={direction:new T,skyColor:new Ae,groundColor:new Ae};break;case"RectAreaLight":n={color:new Ae,position:new T,halfWidth:new T,halfHeight:new T};break}return t[e.id]=n,n}}}function AS(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new j};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new j};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new j,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let CS=0;function LS(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function PS(t,e){const n=new ES,i=AS(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)r.probe.push(new T);const s=new T,a=new Re,o=new Re;function l(h,d){let u=0,p=0,m=0;for(let A=0;A<9;A++)r.probe[A].set(0,0,0);let f=0,g=0,v=0,y=0,w=0,b=0,S=0,_=0;h.sort(LS);const E=d!==!0?Math.PI:1;for(let A=0,M=h.length;A<M;A++){const C=h[A],F=C.color,$=C.intensity,I=C.distance,Z=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)u+=F.r*$*E,p+=F.g*$*E,m+=F.b*$*E;else if(C.isLightProbe)for(let W=0;W<9;W++)r.probe[W].addScaledVector(C.sh.coefficients[W],$);else if(C.isDirectionalLight){const W=n.get(C);if(W.color.copy(C.color).multiplyScalar(C.intensity*E),C.castShadow){const q=C.shadow,k=i.get(C);k.shadowBias=q.bias,k.shadowNormalBias=q.normalBias,k.shadowRadius=q.radius,k.shadowMapSize=q.mapSize,r.directionalShadow[f]=k,r.directionalShadowMap[f]=Z,r.directionalShadowMatrix[f]=C.shadow.matrix,b++}r.directional[f]=W,f++}else if(C.isSpotLight){const W=n.get(C);if(W.position.setFromMatrixPosition(C.matrixWorld),W.color.copy(F).multiplyScalar($*E),W.distance=I,W.coneCos=Math.cos(C.angle),W.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),W.decay=C.decay,C.castShadow){const q=C.shadow,k=i.get(C);k.shadowBias=q.bias,k.shadowNormalBias=q.normalBias,k.shadowRadius=q.radius,k.shadowMapSize=q.mapSize,r.spotShadow[v]=k,r.spotShadowMap[v]=Z,r.spotShadowMatrix[v]=C.shadow.matrix,_++}r.spot[v]=W,v++}else if(C.isRectAreaLight){const W=n.get(C);W.color.copy(F).multiplyScalar($),W.halfWidth.set(C.width*.5,0,0),W.halfHeight.set(0,C.height*.5,0),r.rectArea[y]=W,y++}else if(C.isPointLight){const W=n.get(C);if(W.color.copy(C.color).multiplyScalar(C.intensity*E),W.distance=C.distance,W.decay=C.decay,C.castShadow){const q=C.shadow,k=i.get(C);k.shadowBias=q.bias,k.shadowNormalBias=q.normalBias,k.shadowRadius=q.radius,k.shadowMapSize=q.mapSize,k.shadowCameraNear=q.camera.near,k.shadowCameraFar=q.camera.far,r.pointShadow[g]=k,r.pointShadowMap[g]=Z,r.pointShadowMatrix[g]=C.shadow.matrix,S++}r.point[g]=W,g++}else if(C.isHemisphereLight){const W=n.get(C);W.skyColor.copy(C.color).multiplyScalar($*E),W.groundColor.copy(C.groundColor).multiplyScalar($*E),r.hemi[w]=W,w++}}y>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Me.LTC_FLOAT_1,r.rectAreaLTC2=Me.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Me.LTC_HALF_1,r.rectAreaLTC2=Me.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=u,r.ambient[1]=p,r.ambient[2]=m;const x=r.hash;(x.directionalLength!==f||x.pointLength!==g||x.spotLength!==v||x.rectAreaLength!==y||x.hemiLength!==w||x.numDirectionalShadows!==b||x.numPointShadows!==S||x.numSpotShadows!==_)&&(r.directional.length=f,r.spot.length=v,r.rectArea.length=y,r.point.length=g,r.hemi.length=w,r.directionalShadow.length=b,r.directionalShadowMap.length=b,r.pointShadow.length=S,r.pointShadowMap.length=S,r.spotShadow.length=_,r.spotShadowMap.length=_,r.directionalShadowMatrix.length=b,r.pointShadowMatrix.length=S,r.spotShadowMatrix.length=_,x.directionalLength=f,x.pointLength=g,x.spotLength=v,x.rectAreaLength=y,x.hemiLength=w,x.numDirectionalShadows=b,x.numPointShadows=S,x.numSpotShadows=_,r.version=CS++)}function c(h,d){let u=0,p=0,m=0,f=0,g=0;const v=d.matrixWorldInverse;for(let y=0,w=h.length;y<w;y++){const b=h[y];if(b.isDirectionalLight){const S=r.directional[u];S.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(v),u++}else if(b.isSpotLight){const S=r.spot[m];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(v),S.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(v),m++}else if(b.isRectAreaLight){const S=r.rectArea[f];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(v),o.identity(),a.copy(b.matrixWorld),a.premultiply(v),o.extractRotation(a),S.halfWidth.set(b.width*.5,0,0),S.halfHeight.set(0,b.height*.5,0),S.halfWidth.applyMatrix4(o),S.halfHeight.applyMatrix4(o),f++}else if(b.isPointLight){const S=r.point[p];S.position.setFromMatrixPosition(b.matrixWorld),S.position.applyMatrix4(v),p++}else if(b.isHemisphereLight){const S=r.hemi[g];S.direction.setFromMatrixPosition(b.matrixWorld),S.direction.transformDirection(v),g++}}}return{setup:l,setupView:c,state:r}}function Wp(t,e){const n=new PS(t,e),i=[],r=[];function s(){i.length=0,r.length=0}function a(d){i.push(d)}function o(d){r.push(d)}function l(d){n.setup(i,d)}function c(d){n.setupView(i,d)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function DS(t,e){let n=new WeakMap;function i(s,a=0){let o;return n.has(s)===!1?(o=new Wp(t,e),n.set(s,[o])):a>=n.get(s).length?(o=new Wp(t,e),n.get(s).push(o)):o=n.get(s)[a],o}function r(){n=new WeakMap}return{get:i,dispose:r}}class Gu extends rn{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=Ix,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Gu.prototype.isMeshDepthMaterial=!0;class Wu extends rn{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Wu.prototype.isMeshDistanceMaterial=!0;const RS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,OS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Dg(t,e,n){let i=new sc;const r=new j,s=new j,a=new ct,o=new Gu({depthPacking:Nx}),l=new Wu,c={},h=n.maxTextureSize,d={0:qn,1:Kr,2:Bn},u=new Jn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new j},radius:{value:4}},vertexShader:RS,fragmentShader:OS}),p=u.clone();p.defines.HORIZONTAL_PASS=1;const m=new Ge;m.setAttribute("position",new rt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new pn(m,u),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=zu,this.render=function(b,S,_){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||b.length===0)return;const E=t.getRenderTarget(),x=t.getActiveCubeFace(),A=t.getActiveMipmapLevel(),M=t.state;M.setBlending(Mr),M.buffers.color.setClear(1,1,1,1),M.buffers.depth.setTest(!0),M.setScissorTest(!1);for(let C=0,F=b.length;C<F;C++){const $=b[C],I=$.shadow;if(I===void 0){console.warn("THREE.WebGLShadowMap:",$,"has no shadow.");continue}if(I.autoUpdate===!1&&I.needsUpdate===!1)continue;r.copy(I.mapSize);const Z=I.getFrameExtents();if(r.multiply(Z),s.copy(I.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/Z.x),r.x=s.x*Z.x,I.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/Z.y),r.y=s.y*Z.y,I.mapSize.y=s.y)),I.map===null&&!I.isPointLightShadow&&this.type===Ha&&(I.map=new Ln(r.x,r.y),I.map.texture.name=$.name+".shadowMap",I.mapPass=new Ln(r.x,r.y),I.camera.updateProjectionMatrix()),I.map===null){const q={minFilter:on,magFilter:on,format:ui};I.map=new Ln(r.x,r.y,q),I.map.texture.name=$.name+".shadowMap",I.camera.updateProjectionMatrix()}t.setRenderTarget(I.map),t.clear();const W=I.getViewportCount();for(let q=0;q<W;q++){const k=I.getViewport(q);a.set(s.x*k.x,s.y*k.y,s.x*k.z,s.y*k.w),M.viewport(a),I.updateMatrices($,q),i=I.getFrustum(),w(S,_,I.camera,$,this.type)}!I.isPointLightShadow&&this.type===Ha&&v(I,_),I.needsUpdate=!1}g.needsUpdate=!1,t.setRenderTarget(E,x,A)};function v(b,S){const _=e.update(f);u.defines.VSM_SAMPLES!==b.blurSamples&&(u.defines.VSM_SAMPLES=b.blurSamples,p.defines.VSM_SAMPLES=b.blurSamples,u.needsUpdate=!0,p.needsUpdate=!0),u.uniforms.shadow_pass.value=b.map.texture,u.uniforms.resolution.value=b.mapSize,u.uniforms.radius.value=b.radius,t.setRenderTarget(b.mapPass),t.clear(),t.renderBufferDirect(S,null,_,u,f,null),p.uniforms.shadow_pass.value=b.mapPass.texture,p.uniforms.resolution.value=b.mapSize,p.uniforms.radius.value=b.radius,t.setRenderTarget(b.map),t.clear(),t.renderBufferDirect(S,null,_,p,f,null)}function y(b,S,_,E,x,A){let M=null;const C=_.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(C!==void 0?M=C:M=_.isPointLight===!0?l:o,t.localClippingEnabled&&S.clipShadows===!0&&S.clippingPlanes.length!==0||S.displacementMap&&S.displacementScale!==0||S.alphaMap&&S.alphaTest>0){const F=M.uuid,$=S.uuid;let I=c[F];I===void 0&&(I={},c[F]=I);let Z=I[$];Z===void 0&&(Z=M.clone(),I[$]=Z),M=Z}return M.visible=S.visible,M.wireframe=S.wireframe,A===Ha?M.side=S.shadowSide!==null?S.shadowSide:S.side:M.side=S.shadowSide!==null?S.shadowSide:d[S.side],M.alphaMap=S.alphaMap,M.alphaTest=S.alphaTest,M.clipShadows=S.clipShadows,M.clippingPlanes=S.clippingPlanes,M.clipIntersection=S.clipIntersection,M.displacementMap=S.displacementMap,M.displacementScale=S.displacementScale,M.displacementBias=S.displacementBias,M.wireframeLinewidth=S.wireframeLinewidth,M.linewidth=S.linewidth,_.isPointLight===!0&&M.isMeshDistanceMaterial===!0&&(M.referencePosition.setFromMatrixPosition(_.matrixWorld),M.nearDistance=E,M.farDistance=x),M}function w(b,S,_,E,x){if(b.visible===!1)return;if(b.layers.test(S.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&x===Ha)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(_.matrixWorldInverse,b.matrixWorld);const C=e.update(b),F=b.material;if(Array.isArray(F)){const $=C.groups;for(let I=0,Z=$.length;I<Z;I++){const W=$[I],q=F[W.materialIndex];if(q&&q.visible){const k=y(b,q,E,_.near,_.far,x);t.renderBufferDirect(_,null,C,k,b,W)}}}else if(F.visible){const $=y(b,F,E,_.near,_.far,x);t.renderBufferDirect(_,null,C,$,b,null)}}const M=b.children;for(let C=0,F=M.length;C<F;C++)w(M[C],S,_,E,x)}}function IS(t,e,n){const i=n.isWebGL2;function r(){let U=!1;const we=new ct;let be=null;const qe=new ct(0,0,0,0);return{setMask:function(Le){be!==Le&&!U&&(t.colorMask(Le,Le,Le,Le),be=Le)},setLocked:function(Le){U=Le},setClear:function(Le,Fe,Se,Ve,dt){dt===!0&&(Le*=Ve,Fe*=Ve,Se*=Ve),we.set(Le,Fe,Se,Ve),qe.equals(we)===!1&&(t.clearColor(Le,Fe,Se,Ve),qe.copy(we))},reset:function(){U=!1,be=null,qe.set(-1,0,0,0)}}}function s(){let U=!1,we=null,be=null,qe=null;return{setTest:function(Le){Le?ne(2929):B(2929)},setMask:function(Le){we!==Le&&!U&&(t.depthMask(Le),we=Le)},setFunc:function(Le){if(be!==Le){if(Le)switch(Le){case ex:t.depthFunc(512);break;case tx:t.depthFunc(519);break;case nx:t.depthFunc(513);break;case Uh:t.depthFunc(515);break;case ix:t.depthFunc(514);break;case rx:t.depthFunc(518);break;case sx:t.depthFunc(516);break;case ax:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);be=Le}},setLocked:function(Le){U=Le},setClear:function(Le){qe!==Le&&(t.clearDepth(Le),qe=Le)},reset:function(){U=!1,we=null,be=null,qe=null}}}function a(){let U=!1,we=null,be=null,qe=null,Le=null,Fe=null,Se=null,Ve=null,dt=null;return{setTest:function(Xe){U||(Xe?ne(2960):B(2960))},setMask:function(Xe){we!==Xe&&!U&&(t.stencilMask(Xe),we=Xe)},setFunc:function(Xe,cn,vn){(be!==Xe||qe!==cn||Le!==vn)&&(t.stencilFunc(Xe,cn,vn),be=Xe,qe=cn,Le=vn)},setOp:function(Xe,cn,vn){(Fe!==Xe||Se!==cn||Ve!==vn)&&(t.stencilOp(Xe,cn,vn),Fe=Xe,Se=cn,Ve=vn)},setLocked:function(Xe){U=Xe},setClear:function(Xe){dt!==Xe&&(t.clearStencil(Xe),dt=Xe)},reset:function(){U=!1,we=null,be=null,qe=null,Le=null,Fe=null,Se=null,Ve=null,dt=null}}}const o=new r,l=new s,c=new a;let h={},d={},u=new WeakMap,p=[],m=null,f=!1,g=null,v=null,y=null,w=null,b=null,S=null,_=null,E=!1,x=null,A=null,M=null,C=null,F=null;const $=t.getParameter(35661);let I=!1,Z=0;const W=t.getParameter(7938);W.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL (\d)/.exec(W)[1]),I=Z>=1):W.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),I=Z>=2);let q=null,k={};const N=t.getParameter(3088),O=t.getParameter(2978),V=new ct().fromArray(N),z=new ct().fromArray(O);function H(U,we,be){const qe=new Uint8Array(4),Le=t.createTexture();t.bindTexture(U,Le),t.texParameteri(U,10241,9728),t.texParameteri(U,10240,9728);for(let Fe=0;Fe<be;Fe++)t.texImage2D(we+Fe,0,6408,1,1,0,6408,5121,qe);return Le}const J={};J[3553]=H(3553,3553,1),J[34067]=H(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ne(2929),l.setFunc(Uh),ee(!1),se(Nd),ne(2884),G(Mr);function ne(U){h[U]!==!0&&(t.enable(U),h[U]=!0)}function B(U){h[U]!==!1&&(t.disable(U),h[U]=!1)}function oe(U,we){return d[U]!==we?(t.bindFramebuffer(U,we),d[U]=we,i&&(U===36009&&(d[36160]=we),U===36160&&(d[36009]=we)),!0):!1}function ie(U,we){let be=p,qe=!1;if(U)if(be=u.get(we),be===void 0&&(be=[],u.set(we,be)),U.isWebGLMultipleRenderTargets){const Le=U.texture;if(be.length!==Le.length||be[0]!==36064){for(let Fe=0,Se=Le.length;Fe<Se;Fe++)be[Fe]=36064+Fe;be.length=Le.length,qe=!0}}else be[0]!==36064&&(be[0]=36064,qe=!0);else be[0]!==1029&&(be[0]=1029,qe=!0);qe&&(n.isWebGL2?t.drawBuffers(be):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(be))}function le(U){return m!==U?(t.useProgram(U),m=U,!0):!1}const K={[Fs]:32774,[Gy]:32778,[Wy]:32779};if(i)K[Ud]=32775,K[kd]=32776;else{const U=e.get("EXT_blend_minmax");U!==null&&(K[Ud]=U.MIN_EXT,K[kd]=U.MAX_EXT)}const pe={[jy]:0,[qy]:1,[Xy]:768,[mg]:770,[Qy]:776,[Zy]:774,[$y]:772,[Jy]:769,[gg]:771,[Ky]:775,[Yy]:773};function G(U,we,be,qe,Le,Fe,Se,Ve){if(U===Mr){f===!0&&(B(3042),f=!1);return}if(f===!1&&(ne(3042),f=!0),U!==Hy){if(U!==g||Ve!==E){if((v!==Fs||b!==Fs)&&(t.blendEquation(32774),v=Fs,b=Fs),Ve)switch(U){case qr:t.blendFuncSeparate(1,771,1,771);break;case zd:t.blendFunc(1,1);break;case Bd:t.blendFuncSeparate(0,769,0,1);break;case Fd:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case qr:t.blendFuncSeparate(770,771,1,771);break;case zd:t.blendFunc(770,1);break;case Bd:t.blendFuncSeparate(0,769,0,1);break;case Fd:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}y=null,w=null,S=null,_=null,g=U,E=Ve}return}Le=Le||we,Fe=Fe||be,Se=Se||qe,(we!==v||Le!==b)&&(t.blendEquationSeparate(K[we],K[Le]),v=we,b=Le),(be!==y||qe!==w||Fe!==S||Se!==_)&&(t.blendFuncSeparate(pe[be],pe[qe],pe[Fe],pe[Se]),y=be,w=qe,S=Fe,_=Se),g=U,E=null}function X(U,we){U.side===Bn?B(2884):ne(2884);let be=U.side===qn;we&&(be=!be),ee(be),U.blending===qr&&U.transparent===!1?G(Mr):G(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.premultipliedAlpha),l.setFunc(U.depthFunc),l.setTest(U.depthTest),l.setMask(U.depthWrite),o.setMask(U.colorWrite);const qe=U.stencilWrite;c.setTest(qe),qe&&(c.setMask(U.stencilWriteMask),c.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),c.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),fe(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?ne(32926):B(32926)}function ee(U){x!==U&&(U?t.frontFace(2304):t.frontFace(2305),x=U)}function se(U){U!==Uy?(ne(2884),U!==A&&(U===Nd?t.cullFace(1029):U===ky?t.cullFace(1028):t.cullFace(1032))):B(2884),A=U}function he(U){U!==M&&(I&&t.lineWidth(U),M=U)}function fe(U,we,be){U?(ne(32823),(C!==we||F!==be)&&(t.polygonOffset(we,be),C=we,F=be)):B(32823)}function ge(U){U?ne(3089):B(3089)}function _e(U){U===void 0&&(U=33984+$-1),q!==U&&(t.activeTexture(U),q=U)}function Ne(U,we){q===null&&_e();let be=k[q];be===void 0&&(be={type:void 0,texture:void 0},k[q]=be),(be.type!==U||be.texture!==we)&&(t.bindTexture(U,we||J[U]),be.type=U,be.texture=we)}function Be(){const U=k[q];U!==void 0&&U.type!==void 0&&(t.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function D(){try{t.compressedTexImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function L(){try{t.texSubImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ce(){try{t.texSubImage3D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function me(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Te(){try{t.texStorage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ce(){try{t.texStorage3D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ue(){try{t.texImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function R(){try{t.texImage3D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ye(U){V.equals(U)===!1&&(t.scissor(U.x,U.y,U.z,U.w),V.copy(U))}function Ee(U){z.equals(U)===!1&&(t.viewport(U.x,U.y,U.z,U.w),z.copy(U))}function xe(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),i===!0&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),h={},q=null,k={},d={},u=new WeakMap,p=[],m=null,f=!1,g=null,v=null,y=null,w=null,b=null,S=null,_=null,E=!1,x=null,A=null,M=null,C=null,F=null,V.set(0,0,t.canvas.width,t.canvas.height),z.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:ne,disable:B,bindFramebuffer:oe,drawBuffers:ie,useProgram:le,setBlending:G,setMaterial:X,setFlipSided:ee,setCullFace:se,setLineWidth:he,setPolygonOffset:fe,setScissorTest:ge,activeTexture:_e,bindTexture:Ne,unbindTexture:Be,compressedTexImage2D:D,texImage2D:Ue,texImage3D:R,texStorage2D:Te,texStorage3D:Ce,texSubImage2D:L,texSubImage3D:ce,compressedTexSubImage2D:me,scissor:ye,viewport:Ee,reset:xe}}function NS(t,e,n,i,r,s,a){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,d=r.maxSamples,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let f;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(D,L){return v?new OffscreenCanvas(D,L):lo("canvas")}function w(D,L,ce,me){let Te=1;if((D.width>me||D.height>me)&&(Te=me/Math.max(D.width,D.height)),Te<1||L===!0)if(typeof HTMLImageElement!="undefined"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&D instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&D instanceof ImageBitmap){const Ce=L?Ul:Math.floor,Ue=Ce(Te*D.width),R=Ce(Te*D.height);f===void 0&&(f=y(Ue,R));const ye=ce?y(Ue,R):f;return ye.width=Ue,ye.height=R,ye.getContext("2d").drawImage(D,0,0,Ue,R),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+Ue+"x"+R+")."),ye}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D;return D}function b(D){return jh(D.width)&&jh(D.height)}function S(D){return o?!1:D.wrapS!==zn||D.wrapT!==zn||D.minFilter!==on&&D.minFilter!==_n}function _(D,L){return D.generateMipmaps&&L&&D.minFilter!==on&&D.minFilter!==_n}function E(D){t.generateMipmap(D)}function x(D,L,ce,me,Te=!1){if(o===!1)return L;if(D!==null){if(t[D]!==void 0)return t[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let Ce=L;return L===6403&&(ce===5126&&(Ce=33326),ce===5131&&(Ce=33325),ce===5121&&(Ce=33321)),L===33319&&(ce===5126&&(Ce=33328),ce===5131&&(Ce=33327),ce===5121&&(Ce=33323)),L===6408&&(ce===5126&&(Ce=34836),ce===5131&&(Ce=34842),ce===5121&&(Ce=me===Dt&&Te===!1?35907:32856),ce===32819&&(Ce=32854),ce===32820&&(Ce=32855)),(Ce===33325||Ce===33326||Ce===33327||Ce===33328||Ce===34842||Ce===34836)&&e.get("EXT_color_buffer_float"),Ce}function A(D,L,ce){return _(D,ce)===!0||D.isFramebufferTexture&&D.minFilter!==on&&D.minFilter!==_n?Math.log2(Math.max(L.width,L.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?L.mipmaps.length:1}function M(D){return D===on||D===Vd||D===Hd?9728:9729}function C(D){const L=D.target;L.removeEventListener("dispose",C),$(L),L.isVideoTexture&&m.delete(L)}function F(D){const L=D.target;L.removeEventListener("dispose",F),Z(L)}function $(D){const L=i.get(D);if(L.__webglInit===void 0)return;const ce=D.source,me=g.get(ce);if(me){const Te=me[L.__cacheKey];Te.usedTimes--,Te.usedTimes===0&&I(D),Object.keys(me).length===0&&g.delete(ce)}i.remove(D)}function I(D){const L=i.get(D);t.deleteTexture(L.__webglTexture);const ce=D.source,me=g.get(ce);delete me[L.__cacheKey],a.memory.textures--}function Z(D){const L=D.texture,ce=i.get(D),me=i.get(L);if(me.__webglTexture!==void 0&&(t.deleteTexture(me.__webglTexture),a.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let Te=0;Te<6;Te++)t.deleteFramebuffer(ce.__webglFramebuffer[Te]),ce.__webglDepthbuffer&&t.deleteRenderbuffer(ce.__webglDepthbuffer[Te]);else t.deleteFramebuffer(ce.__webglFramebuffer),ce.__webglDepthbuffer&&t.deleteRenderbuffer(ce.__webglDepthbuffer),ce.__webglMultisampledFramebuffer&&t.deleteFramebuffer(ce.__webglMultisampledFramebuffer),ce.__webglColorRenderbuffer&&t.deleteRenderbuffer(ce.__webglColorRenderbuffer),ce.__webglDepthRenderbuffer&&t.deleteRenderbuffer(ce.__webglDepthRenderbuffer);if(D.isWebGLMultipleRenderTargets)for(let Te=0,Ce=L.length;Te<Ce;Te++){const Ue=i.get(L[Te]);Ue.__webglTexture&&(t.deleteTexture(Ue.__webglTexture),a.memory.textures--),i.remove(L[Te])}i.remove(L),i.remove(D)}let W=0;function q(){W=0}function k(){const D=W;return D>=l&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+l),W+=1,D}function N(D){const L=[];return L.push(D.wrapS),L.push(D.wrapT),L.push(D.magFilter),L.push(D.minFilter),L.push(D.anisotropy),L.push(D.internalFormat),L.push(D.format),L.push(D.type),L.push(D.generateMipmaps),L.push(D.premultiplyAlpha),L.push(D.flipY),L.push(D.unpackAlignment),L.push(D.encoding),L.join()}function O(D,L){const ce=i.get(D);if(D.isVideoTexture&&Ne(D),D.isRenderTargetTexture===!1&&D.version>0&&ce.__version!==D.version){const me=D.image;if(me===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ie(ce,D,L);return}}n.activeTexture(33984+L),n.bindTexture(3553,ce.__webglTexture)}function V(D,L){const ce=i.get(D);if(D.version>0&&ce.__version!==D.version){ie(ce,D,L);return}n.activeTexture(33984+L),n.bindTexture(35866,ce.__webglTexture)}function z(D,L){const ce=i.get(D);if(D.version>0&&ce.__version!==D.version){ie(ce,D,L);return}n.activeTexture(33984+L),n.bindTexture(32879,ce.__webglTexture)}function H(D,L){const ce=i.get(D);if(D.version>0&&ce.__version!==D.version){le(ce,D,L);return}n.activeTexture(33984+L),n.bindTexture(34067,ce.__webglTexture)}const J={[Hh]:10497,[zn]:33071,[Gh]:33648},ne={[on]:9728,[Vd]:9984,[Hd]:9986,[_n]:9729,[fx]:9985,[_o]:9987};function B(D,L,ce){if(ce?(t.texParameteri(D,10242,J[L.wrapS]),t.texParameteri(D,10243,J[L.wrapT]),(D===32879||D===35866)&&t.texParameteri(D,32882,J[L.wrapR]),t.texParameteri(D,10240,ne[L.magFilter]),t.texParameteri(D,10241,ne[L.minFilter])):(t.texParameteri(D,10242,33071),t.texParameteri(D,10243,33071),(D===32879||D===35866)&&t.texParameteri(D,32882,33071),(L.wrapS!==zn||L.wrapT!==zn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(D,10240,M(L.magFilter)),t.texParameteri(D,10241,M(L.minFilter)),L.minFilter!==on&&L.minFilter!==_n&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const me=e.get("EXT_texture_filter_anisotropic");if(L.type===Wr&&e.has("OES_texture_float_linear")===!1||o===!1&&L.type===so&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||i.get(L).__currentAnisotropy)&&(t.texParameterf(D,me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,r.getMaxAnisotropy())),i.get(L).__currentAnisotropy=L.anisotropy)}}function oe(D,L){let ce=!1;D.__webglInit===void 0&&(D.__webglInit=!0,L.addEventListener("dispose",C));const me=L.source;let Te=g.get(me);Te===void 0&&(Te={},g.set(me,Te));const Ce=N(L);if(Ce!==D.__cacheKey){Te[Ce]===void 0&&(Te[Ce]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,ce=!0),Te[Ce].usedTimes++;const Ue=Te[D.__cacheKey];Ue!==void 0&&(Te[D.__cacheKey].usedTimes--,Ue.usedTimes===0&&I(L)),D.__cacheKey=Ce,D.__webglTexture=Te[Ce].texture}return ce}function ie(D,L,ce){let me=3553;L.isDataArrayTexture&&(me=35866),L.isData3DTexture&&(me=32879);const Te=oe(D,L),Ce=L.source;if(n.activeTexture(33984+ce),n.bindTexture(me,D.__webglTexture),Ce.version!==Ce.__currentVersion||Te===!0){t.pixelStorei(37440,L.flipY),t.pixelStorei(37441,L.premultiplyAlpha),t.pixelStorei(3317,L.unpackAlignment),t.pixelStorei(37443,0);const Ue=S(L)&&b(L.image)===!1;let R=w(L.image,Ue,!1,h);R=Be(L,R);const ye=b(R)||o,Ee=s.convert(L.format,L.encoding);let xe=s.convert(L.type),U=x(L.internalFormat,Ee,xe,L.encoding,L.isVideoTexture);B(me,L,ye);let we;const be=L.mipmaps,qe=o&&L.isVideoTexture!==!0,Le=D.__version===void 0||Te===!0,Fe=A(L,R,ye);if(L.isDepthTexture)U=6402,o?L.type===Wr?U=36012:L.type===Al?U=33190:L.type===Ys?U=35056:U=33189:L.type===Wr&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===Xr&&U===6402&&L.type!==ro&&L.type!==Al&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=ro,xe=s.convert(L.type)),L.format===ta&&U===6402&&(U=34041,L.type!==Ys&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=Ys,xe=s.convert(L.type))),Le&&(qe?n.texStorage2D(3553,1,U,R.width,R.height):n.texImage2D(3553,0,U,R.width,R.height,0,Ee,xe,null));else if(L.isDataTexture)if(be.length>0&&ye){qe&&Le&&n.texStorage2D(3553,Fe,U,be[0].width,be[0].height);for(let Se=0,Ve=be.length;Se<Ve;Se++)we=be[Se],qe?n.texSubImage2D(3553,Se,0,0,we.width,we.height,Ee,xe,we.data):n.texImage2D(3553,Se,U,we.width,we.height,0,Ee,xe,we.data);L.generateMipmaps=!1}else qe?(Le&&n.texStorage2D(3553,Fe,U,R.width,R.height),n.texSubImage2D(3553,0,0,0,R.width,R.height,Ee,xe,R.data)):n.texImage2D(3553,0,U,R.width,R.height,0,Ee,xe,R.data);else if(L.isCompressedTexture){qe&&Le&&n.texStorage2D(3553,Fe,U,be[0].width,be[0].height);for(let Se=0,Ve=be.length;Se<Ve;Se++)we=be[Se],L.format!==ui?Ee!==null?qe?n.compressedTexSubImage2D(3553,Se,0,0,we.width,we.height,Ee,we.data):n.compressedTexImage2D(3553,Se,U,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):qe?n.texSubImage2D(3553,Se,0,0,we.width,we.height,Ee,xe,we.data):n.texImage2D(3553,Se,U,we.width,we.height,0,Ee,xe,we.data)}else if(L.isDataArrayTexture)qe?(Le&&n.texStorage3D(35866,Fe,U,R.width,R.height,R.depth),n.texSubImage3D(35866,0,0,0,0,R.width,R.height,R.depth,Ee,xe,R.data)):n.texImage3D(35866,0,U,R.width,R.height,R.depth,0,Ee,xe,R.data);else if(L.isData3DTexture)qe?(Le&&n.texStorage3D(32879,Fe,U,R.width,R.height,R.depth),n.texSubImage3D(32879,0,0,0,0,R.width,R.height,R.depth,Ee,xe,R.data)):n.texImage3D(32879,0,U,R.width,R.height,R.depth,0,Ee,xe,R.data);else if(L.isFramebufferTexture){if(Le)if(qe)n.texStorage2D(3553,Fe,U,R.width,R.height);else{let Se=R.width,Ve=R.height;for(let dt=0;dt<Fe;dt++)n.texImage2D(3553,dt,U,Se,Ve,0,Ee,xe,null),Se>>=1,Ve>>=1}}else if(be.length>0&&ye){qe&&Le&&n.texStorage2D(3553,Fe,U,be[0].width,be[0].height);for(let Se=0,Ve=be.length;Se<Ve;Se++)we=be[Se],qe?n.texSubImage2D(3553,Se,0,0,Ee,xe,we):n.texImage2D(3553,Se,U,Ee,xe,we);L.generateMipmaps=!1}else qe?(Le&&n.texStorage2D(3553,Fe,U,R.width,R.height),n.texSubImage2D(3553,0,0,0,Ee,xe,R)):n.texImage2D(3553,0,U,Ee,xe,R);_(L,ye)&&E(me),Ce.__currentVersion=Ce.version,L.onUpdate&&L.onUpdate(L)}D.__version=L.version}function le(D,L,ce){if(L.image.length!==6)return;const me=oe(D,L),Te=L.source;if(n.activeTexture(33984+ce),n.bindTexture(34067,D.__webglTexture),Te.version!==Te.__currentVersion||me===!0){t.pixelStorei(37440,L.flipY),t.pixelStorei(37441,L.premultiplyAlpha),t.pixelStorei(3317,L.unpackAlignment),t.pixelStorei(37443,0);const Ce=L.isCompressedTexture||L.image[0].isCompressedTexture,Ue=L.image[0]&&L.image[0].isDataTexture,R=[];for(let Se=0;Se<6;Se++)!Ce&&!Ue?R[Se]=w(L.image[Se],!1,!0,c):R[Se]=Ue?L.image[Se].image:L.image[Se],R[Se]=Be(L,R[Se]);const ye=R[0],Ee=b(ye)||o,xe=s.convert(L.format,L.encoding),U=s.convert(L.type),we=x(L.internalFormat,xe,U,L.encoding),be=o&&L.isVideoTexture!==!0,qe=D.__version===void 0;let Le=A(L,ye,Ee);B(34067,L,Ee);let Fe;if(Ce){be&&qe&&n.texStorage2D(34067,Le,we,ye.width,ye.height);for(let Se=0;Se<6;Se++){Fe=R[Se].mipmaps;for(let Ve=0;Ve<Fe.length;Ve++){const dt=Fe[Ve];L.format!==ui?xe!==null?be?n.compressedTexSubImage2D(34069+Se,Ve,0,0,dt.width,dt.height,xe,dt.data):n.compressedTexImage2D(34069+Se,Ve,we,dt.width,dt.height,0,dt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):be?n.texSubImage2D(34069+Se,Ve,0,0,dt.width,dt.height,xe,U,dt.data):n.texImage2D(34069+Se,Ve,we,dt.width,dt.height,0,xe,U,dt.data)}}}else{Fe=L.mipmaps,be&&qe&&(Fe.length>0&&Le++,n.texStorage2D(34067,Le,we,R[0].width,R[0].height));for(let Se=0;Se<6;Se++)if(Ue){be?n.texSubImage2D(34069+Se,0,0,0,R[Se].width,R[Se].height,xe,U,R[Se].data):n.texImage2D(34069+Se,0,we,R[Se].width,R[Se].height,0,xe,U,R[Se].data);for(let Ve=0;Ve<Fe.length;Ve++){const Xe=Fe[Ve].image[Se].image;be?n.texSubImage2D(34069+Se,Ve+1,0,0,Xe.width,Xe.height,xe,U,Xe.data):n.texImage2D(34069+Se,Ve+1,we,Xe.width,Xe.height,0,xe,U,Xe.data)}}else{be?n.texSubImage2D(34069+Se,0,0,0,xe,U,R[Se]):n.texImage2D(34069+Se,0,we,xe,U,R[Se]);for(let Ve=0;Ve<Fe.length;Ve++){const dt=Fe[Ve];be?n.texSubImage2D(34069+Se,Ve+1,0,0,xe,U,dt.image[Se]):n.texImage2D(34069+Se,Ve+1,we,xe,U,dt.image[Se])}}}_(L,Ee)&&E(34067),Te.__currentVersion=Te.version,L.onUpdate&&L.onUpdate(L)}D.__version=L.version}function K(D,L,ce,me,Te){const Ce=s.convert(ce.format,ce.encoding),Ue=s.convert(ce.type),R=x(ce.internalFormat,Ce,Ue,ce.encoding);i.get(L).__hasExternalTextures||(Te===32879||Te===35866?n.texImage3D(Te,0,R,L.width,L.height,L.depth,0,Ce,Ue,null):n.texImage2D(Te,0,R,L.width,L.height,0,Ce,Ue,null)),n.bindFramebuffer(36160,D),_e(L)?u.framebufferTexture2DMultisampleEXT(36160,me,Te,i.get(ce).__webglTexture,0,ge(L)):t.framebufferTexture2D(36160,me,Te,i.get(ce).__webglTexture,0),n.bindFramebuffer(36160,null)}function pe(D,L,ce){if(t.bindRenderbuffer(36161,D),L.depthBuffer&&!L.stencilBuffer){let me=33189;if(ce||_e(L)){const Te=L.depthTexture;Te&&Te.isDepthTexture&&(Te.type===Wr?me=36012:Te.type===Al&&(me=33190));const Ce=ge(L);_e(L)?u.renderbufferStorageMultisampleEXT(36161,Ce,me,L.width,L.height):t.renderbufferStorageMultisample(36161,Ce,me,L.width,L.height)}else t.renderbufferStorage(36161,me,L.width,L.height);t.framebufferRenderbuffer(36160,36096,36161,D)}else if(L.depthBuffer&&L.stencilBuffer){const me=ge(L);ce&&_e(L)===!1?t.renderbufferStorageMultisample(36161,me,35056,L.width,L.height):_e(L)?u.renderbufferStorageMultisampleEXT(36161,me,35056,L.width,L.height):t.renderbufferStorage(36161,34041,L.width,L.height),t.framebufferRenderbuffer(36160,33306,36161,D)}else{const me=L.isWebGLMultipleRenderTargets===!0?L.texture[0]:L.texture,Te=s.convert(me.format,me.encoding),Ce=s.convert(me.type),Ue=x(me.internalFormat,Te,Ce,me.encoding),R=ge(L);ce&&_e(L)===!1?t.renderbufferStorageMultisample(36161,R,Ue,L.width,L.height):_e(L)?u.renderbufferStorageMultisampleEXT(36161,R,Ue,L.width,L.height):t.renderbufferStorage(36161,Ue,L.width,L.height)}t.bindRenderbuffer(36161,null)}function G(D,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,D),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),O(L.depthTexture,0);const me=i.get(L.depthTexture).__webglTexture,Te=ge(L);if(L.depthTexture.format===Xr)_e(L)?u.framebufferTexture2DMultisampleEXT(36160,36096,3553,me,0,Te):t.framebufferTexture2D(36160,36096,3553,me,0);else if(L.depthTexture.format===ta)_e(L)?u.framebufferTexture2DMultisampleEXT(36160,33306,3553,me,0,Te):t.framebufferTexture2D(36160,33306,3553,me,0);else throw new Error("Unknown depthTexture format")}function X(D){const L=i.get(D),ce=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!L.__autoAllocateDepthBuffer){if(ce)throw new Error("target.depthTexture not supported in Cube render targets");G(L.__webglFramebuffer,D)}else if(ce){L.__webglDepthbuffer=[];for(let me=0;me<6;me++)n.bindFramebuffer(36160,L.__webglFramebuffer[me]),L.__webglDepthbuffer[me]=t.createRenderbuffer(),pe(L.__webglDepthbuffer[me],D,!1)}else n.bindFramebuffer(36160,L.__webglFramebuffer),L.__webglDepthbuffer=t.createRenderbuffer(),pe(L.__webglDepthbuffer,D,!1);n.bindFramebuffer(36160,null)}function ee(D,L,ce){const me=i.get(D);L!==void 0&&K(me.__webglFramebuffer,D,D.texture,36064,3553),ce!==void 0&&X(D)}function se(D){const L=D.texture,ce=i.get(D),me=i.get(L);D.addEventListener("dispose",F),D.isWebGLMultipleRenderTargets!==!0&&(me.__webglTexture===void 0&&(me.__webglTexture=t.createTexture()),me.__version=L.version,a.memory.textures++);const Te=D.isWebGLCubeRenderTarget===!0,Ce=D.isWebGLMultipleRenderTargets===!0,Ue=b(D)||o;if(Te){ce.__webglFramebuffer=[];for(let R=0;R<6;R++)ce.__webglFramebuffer[R]=t.createFramebuffer()}else if(ce.__webglFramebuffer=t.createFramebuffer(),Ce)if(r.drawBuffers){const R=D.texture;for(let ye=0,Ee=R.length;ye<Ee;ye++){const xe=i.get(R[ye]);xe.__webglTexture===void 0&&(xe.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(o&&D.samples>0&&_e(D)===!1){ce.__webglMultisampledFramebuffer=t.createFramebuffer(),ce.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,ce.__webglColorRenderbuffer);const R=s.convert(L.format,L.encoding),ye=s.convert(L.type),Ee=x(L.internalFormat,R,ye,L.encoding),xe=ge(D);t.renderbufferStorageMultisample(36161,xe,Ee,D.width,D.height),n.bindFramebuffer(36160,ce.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,ce.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),D.depthBuffer&&(ce.__webglDepthRenderbuffer=t.createRenderbuffer(),pe(ce.__webglDepthRenderbuffer,D,!0)),n.bindFramebuffer(36160,null)}if(Te){n.bindTexture(34067,me.__webglTexture),B(34067,L,Ue);for(let R=0;R<6;R++)K(ce.__webglFramebuffer[R],D,L,36064,34069+R);_(L,Ue)&&E(34067),n.unbindTexture()}else if(Ce){const R=D.texture;for(let ye=0,Ee=R.length;ye<Ee;ye++){const xe=R[ye],U=i.get(xe);n.bindTexture(3553,U.__webglTexture),B(3553,xe,Ue),K(ce.__webglFramebuffer,D,xe,36064+ye,3553),_(xe,Ue)&&E(3553)}n.unbindTexture()}else{let R=3553;(D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(o?R=D.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(R,me.__webglTexture),B(R,L,Ue),K(ce.__webglFramebuffer,D,L,36064,R),_(L,Ue)&&E(R),n.unbindTexture()}D.depthBuffer&&X(D)}function he(D){const L=b(D)||o,ce=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let me=0,Te=ce.length;me<Te;me++){const Ce=ce[me];if(_(Ce,L)){const Ue=D.isWebGLCubeRenderTarget?34067:3553,R=i.get(Ce).__webglTexture;n.bindTexture(Ue,R),E(Ue),n.unbindTexture()}}}function fe(D){if(o&&D.samples>0&&_e(D)===!1){const L=D.width,ce=D.height;let me=16384;const Te=[36064],Ce=D.stencilBuffer?33306:36096;D.depthBuffer&&Te.push(Ce);const Ue=i.get(D),R=Ue.__ignoreDepthValues!==void 0?Ue.__ignoreDepthValues:!1;R===!1&&(D.depthBuffer&&(me|=256),D.stencilBuffer&&(me|=1024)),n.bindFramebuffer(36008,Ue.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,Ue.__webglFramebuffer),R===!0&&(t.invalidateFramebuffer(36008,[Ce]),t.invalidateFramebuffer(36009,[Ce])),t.blitFramebuffer(0,0,L,ce,0,0,L,ce,me,9728),p&&t.invalidateFramebuffer(36008,Te),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,Ue.__webglMultisampledFramebuffer)}}function ge(D){return Math.min(d,D.samples)}function _e(D){const L=i.get(D);return o&&D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function Ne(D){const L=a.render.frame;m.get(D)!==L&&(m.set(D,L),D.update())}function Be(D,L){const ce=D.encoding,me=D.format,Te=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||D.format===Wh||ce!==gi&&(ce===Dt?o===!1?e.has("EXT_sRGB")===!0&&me===ui?(D.format=Wh,D.minFilter=_n,D.generateMipmaps=!1):L=ss.sRGBToLinear(L):(me!==ui||Te!==ts)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ce)),L}this.allocateTextureUnit=k,this.resetTextureUnits=q,this.setTexture2D=O,this.setTexture2DArray=V,this.setTexture3D=z,this.setTextureCube=H,this.rebindTextures=ee,this.setupRenderTarget=se,this.updateRenderTargetMipmap=he,this.updateMultisampleRenderTarget=fe,this.setupDepthRenderbuffer=X,this.setupFrameBufferTexture=K,this.useMultisampledRTT=_e}function zS(t,e,n){const i=n.isWebGL2;function r(s,a=null){let o;if(s===ts)return 5121;if(s===yx)return 32819;if(s===xx)return 32820;if(s===mx)return 5120;if(s===gx)return 5122;if(s===ro)return 5123;if(s===vx)return 5124;if(s===Al)return 5125;if(s===Wr)return 5126;if(s===so)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===bx)return 6406;if(s===ui)return 6408;if(s===wx)return 6409;if(s===Sx)return 6410;if(s===Xr)return 6402;if(s===ta)return 34041;if(s===Mx)return 6403;if(s===_x)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Wh)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(s===Tx)return 36244;if(s===Ex)return 33319;if(s===Ax)return 33320;if(s===Cx)return 36249;if(s===Dc||s===Rc||s===Oc||s===Ic)if(a===Dt)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(s===Dc)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Rc)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Oc)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Ic)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Dc)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Rc)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Oc)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Ic)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Gd||s===Wd||s===jd||s===qd)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Gd)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Wd)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===jd)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===qd)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Lx)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Xd||s===Jd)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(s===Xd)return a===Dt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===Jd)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===$d||s===Yd||s===Zd||s===Kd||s===Qd||s===ep||s===tp||s===np||s===ip||s===rp||s===sp||s===ap||s===op||s===lp)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(s===$d)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Yd)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Zd)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Kd)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Qd)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===ep)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===tp)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===np)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===ip)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===rp)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===sp)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===ap)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===op)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===lp)return a===Dt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===cp)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(s===cp)return a===Dt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===Ys?i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):t[s]!==void 0?t[s]:null}return{convert:r}}class Rg extends gn{constructor(e=[]){super(),this.cameras=e}}Rg.prototype.isArrayCamera=!0;class qs extends ht{constructor(){super(),this.type="Group"}}qs.prototype.isGroup=!0;const BS={type:"move"};class lh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new qs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new qs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new T,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new T),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new qs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new T,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new T),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&n.session.visibilityState!=="visible-blurred")if(o!==null&&(r=n.getPose(e.targetRaySpace,i),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(BS))),c&&e.hand){a=!0;for(const f of e.hand.values()){const g=n.getJointPose(f,i);if(c.joints[f.jointName]===void 0){const y=new qs;y.matrixAutoUpdate=!1,y.visible=!1,c.joints[f.jointName]=y,c.add(y)}const v=c.joints[f.jointName];g!==null&&(v.matrix.fromArray(g.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=g.radius),v.visible=g!==null}const h=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],u=h.position.distanceTo(d.position),p=.02,m=.005;c.inputState.pinching&&u>p+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&u<=p-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=n.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}}class ju extends Bt{constructor(e,n,i,r,s,a,o,l,c,h){if(h=h!==void 0?h:Xr,h!==Xr&&h!==ta)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===Xr&&(i=ro),i===void 0&&h===ta&&(i=Ys),super(null,r,s,a,o,l,h,i,c),this.image={width:e,height:n},this.magFilter=o!==void 0?o:on,this.minFilter=l!==void 0?l:on,this.flipY=!1,this.generateMipmaps=!1}}ju.prototype.isDepthTexture=!0;class FS extends yi{constructor(e,n){super();const i=this;let r=null,s=1,a=null,o="local-floor",l=null,c=null,h=null,d=null,u=null,p=null;const m=n.getContextAttributes();let f=null,g=null;const v=[],y=new Map,w=new gn;w.layers.enable(1),w.viewport=new ct;const b=new gn;b.layers.enable(2),b.viewport=new ct;const S=[w,b],_=new Rg;_.layers.enable(1),_.layers.enable(2);let E=null,x=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(N){let O=v[N];return O===void 0&&(O=new lh,v[N]=O),O.getTargetRaySpace()},this.getControllerGrip=function(N){let O=v[N];return O===void 0&&(O=new lh,v[N]=O),O.getGripSpace()},this.getHand=function(N){let O=v[N];return O===void 0&&(O=new lh,v[N]=O),O.getHandSpace()};function A(N){const O=y.get(N.inputSource);O&&O.dispatchEvent({type:N.type,data:N.inputSource})}function M(){y.forEach(function(N,O){N.disconnect(O)}),y.clear(),E=null,x=null,e.setRenderTarget(f),u=null,d=null,h=null,r=null,g=null,k.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(N){s=N,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(N){o=N,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(N){l=N},this.getBaseLayer=function(){return d!==null?d:u},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(N){if(r=N,r!==null){if(f=e.getRenderTarget(),r.addEventListener("select",A),r.addEventListener("selectstart",A),r.addEventListener("selectend",A),r.addEventListener("squeeze",A),r.addEventListener("squeezestart",A),r.addEventListener("squeezeend",A),r.addEventListener("end",M),r.addEventListener("inputsourceschange",C),m.xrCompatible!==!0&&await n.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const O={antialias:r.renderState.layers===void 0?m.antialias:!0,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};u=new XRWebGLLayer(r,n,O),r.updateRenderState({baseLayer:u}),g=new Ln(u.framebufferWidth,u.framebufferHeight,{format:ui,type:ts,encoding:e.outputEncoding})}else{let O=null,V=null,z=null;m.depth&&(z=m.stencil?35056:33190,O=m.stencil?ta:Xr,V=m.stencil?Ys:ro);const H={colorFormat:e.outputEncoding===Dt?35907:32856,depthFormat:z,scaleFactor:s};h=new XRWebGLBinding(r,n),d=h.createProjectionLayer(H),r.updateRenderState({layers:[d]}),g=new Ln(d.textureWidth,d.textureHeight,{format:ui,type:ts,depthTexture:new ju(d.textureWidth,d.textureHeight,V,void 0,void 0,void 0,void 0,void 0,void 0,O),stencilBuffer:m.stencil,encoding:e.outputEncoding,samples:m.antialias?4:0});const J=e.properties.get(g);J.__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),a=await r.requestReferenceSpace(o),k.setContext(r),k.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function C(N){const O=r.inputSources;for(let V=0;V<O.length;V++){const z=O[V].handedness==="right"?1:0;y.set(O[V],v[z])}for(let V=0;V<N.removed.length;V++){const z=N.removed[V],H=y.get(z);H&&(H.dispatchEvent({type:"disconnected",data:z}),y.delete(z))}for(let V=0;V<N.added.length;V++){const z=N.added[V],H=y.get(z);H&&H.dispatchEvent({type:"connected",data:z})}}const F=new T,$=new T;function I(N,O,V){F.setFromMatrixPosition(O.matrixWorld),$.setFromMatrixPosition(V.matrixWorld);const z=F.distanceTo($),H=O.projectionMatrix.elements,J=V.projectionMatrix.elements,ne=H[14]/(H[10]-1),B=H[14]/(H[10]+1),oe=(H[9]+1)/H[5],ie=(H[9]-1)/H[5],le=(H[8]-1)/H[0],K=(J[8]+1)/J[0],pe=ne*le,G=ne*K,X=z/(-le+K),ee=X*-le;O.matrixWorld.decompose(N.position,N.quaternion,N.scale),N.translateX(ee),N.translateZ(X),N.matrixWorld.compose(N.position,N.quaternion,N.scale),N.matrixWorldInverse.copy(N.matrixWorld).invert();const se=ne+X,he=B+X,fe=pe-ee,ge=G+(z-ee),_e=oe*B/he*se,Ne=ie*B/he*se;N.projectionMatrix.makePerspective(fe,ge,_e,Ne,se,he)}function Z(N,O){O===null?N.matrixWorld.copy(N.matrix):N.matrixWorld.multiplyMatrices(O.matrixWorld,N.matrix),N.matrixWorldInverse.copy(N.matrixWorld).invert()}this.updateCamera=function(N){if(r===null)return;_.near=b.near=w.near=N.near,_.far=b.far=w.far=N.far,(E!==_.near||x!==_.far)&&(r.updateRenderState({depthNear:_.near,depthFar:_.far}),E=_.near,x=_.far);const O=N.parent,V=_.cameras;Z(_,O);for(let H=0;H<V.length;H++)Z(V[H],O);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),N.position.copy(_.position),N.quaternion.copy(_.quaternion),N.scale.copy(_.scale),N.matrix.copy(_.matrix),N.matrixWorld.copy(_.matrixWorld);const z=N.children;for(let H=0,J=z.length;H<J;H++)z[H].updateMatrixWorld(!0);V.length===2?I(_,w,b):_.projectionMatrix.copy(w.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(u!==null)return u.fixedFoveation},this.setFoveation=function(N){d!==null&&(d.fixedFoveation=N),u!==null&&u.fixedFoveation!==void 0&&(u.fixedFoveation=N)};let W=null;function q(N,O){if(c=O.getViewerPose(l||a),p=O,c!==null){const z=c.views;u!==null&&(e.setRenderTargetFramebuffer(g,u.framebuffer),e.setRenderTarget(g));let H=!1;z.length!==_.cameras.length&&(_.cameras.length=0,H=!0);for(let J=0;J<z.length;J++){const ne=z[J];let B=null;if(u!==null)B=u.getViewport(ne);else{const ie=h.getViewSubImage(d,ne);B=ie.viewport,J===0&&(e.setRenderTargetTextures(g,ie.colorTexture,d.ignoreDepthValues?void 0:ie.depthStencilTexture),e.setRenderTarget(g))}const oe=S[J];oe.matrix.fromArray(ne.transform.matrix),oe.projectionMatrix.fromArray(ne.projectionMatrix),oe.viewport.set(B.x,B.y,B.width,B.height),J===0&&_.matrix.copy(oe.matrix),H===!0&&_.cameras.push(oe)}}const V=r.inputSources;for(let z=0;z<v.length;z++){const H=V[z],J=y.get(H);J!==void 0&&J.update(H,O,l||a)}W&&W(N,O),p=null}const k=new Mg;k.setAnimationLoop(q),this.setAnimationLoop=function(N){W=N},this.dispose=function(){}}}function US(t,e){function n(f,g){f.fogColor.value.copy(g.color),g.isFog?(f.fogNear.value=g.near,f.fogFar.value=g.far):g.isFogExp2&&(f.fogDensity.value=g.density)}function i(f,g,v,y,w){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(f,g):g.isMeshToonMaterial?(r(f,g),h(f,g)):g.isMeshPhongMaterial?(r(f,g),c(f,g)):g.isMeshStandardMaterial?(r(f,g),d(f,g),g.isMeshPhysicalMaterial&&u(f,g,w)):g.isMeshMatcapMaterial?(r(f,g),p(f,g)):g.isMeshDepthMaterial?r(f,g):g.isMeshDistanceMaterial?(r(f,g),m(f,g)):g.isMeshNormalMaterial?r(f,g):g.isLineBasicMaterial?(s(f,g),g.isLineDashedMaterial&&a(f,g)):g.isPointsMaterial?o(f,g,v,y):g.isSpriteMaterial?l(f,g):g.isShadowMaterial?(f.color.value.copy(g.color),f.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(f,g){f.opacity.value=g.opacity,g.color&&f.diffuse.value.copy(g.color),g.emissive&&f.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(f.map.value=g.map),g.alphaMap&&(f.alphaMap.value=g.alphaMap),g.bumpMap&&(f.bumpMap.value=g.bumpMap,f.bumpScale.value=g.bumpScale,g.side===qn&&(f.bumpScale.value*=-1)),g.displacementMap&&(f.displacementMap.value=g.displacementMap,f.displacementScale.value=g.displacementScale,f.displacementBias.value=g.displacementBias),g.emissiveMap&&(f.emissiveMap.value=g.emissiveMap),g.normalMap&&(f.normalMap.value=g.normalMap,f.normalScale.value.copy(g.normalScale),g.side===qn&&f.normalScale.value.negate()),g.specularMap&&(f.specularMap.value=g.specularMap),g.alphaTest>0&&(f.alphaTest.value=g.alphaTest);const v=e.get(g).envMap;if(v&&(f.envMap.value=v,f.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=g.reflectivity,f.ior.value=g.ior,f.refractionRatio.value=g.refractionRatio),g.lightMap){f.lightMap.value=g.lightMap;const b=t.physicallyCorrectLights!==!0?Math.PI:1;f.lightMapIntensity.value=g.lightMapIntensity*b}g.aoMap&&(f.aoMap.value=g.aoMap,f.aoMapIntensity.value=g.aoMapIntensity);let y;g.map?y=g.map:g.specularMap?y=g.specularMap:g.displacementMap?y=g.displacementMap:g.normalMap?y=g.normalMap:g.bumpMap?y=g.bumpMap:g.roughnessMap?y=g.roughnessMap:g.metalnessMap?y=g.metalnessMap:g.alphaMap?y=g.alphaMap:g.emissiveMap?y=g.emissiveMap:g.clearcoatMap?y=g.clearcoatMap:g.clearcoatNormalMap?y=g.clearcoatNormalMap:g.clearcoatRoughnessMap?y=g.clearcoatRoughnessMap:g.specularIntensityMap?y=g.specularIntensityMap:g.specularColorMap?y=g.specularColorMap:g.transmissionMap?y=g.transmissionMap:g.thicknessMap?y=g.thicknessMap:g.sheenColorMap?y=g.sheenColorMap:g.sheenRoughnessMap&&(y=g.sheenRoughnessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),f.uvTransform.value.copy(y.matrix));let w;g.aoMap?w=g.aoMap:g.lightMap&&(w=g.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),f.uv2Transform.value.copy(w.matrix))}function s(f,g){f.diffuse.value.copy(g.color),f.opacity.value=g.opacity}function a(f,g){f.dashSize.value=g.dashSize,f.totalSize.value=g.dashSize+g.gapSize,f.scale.value=g.scale}function o(f,g,v,y){f.diffuse.value.copy(g.color),f.opacity.value=g.opacity,f.size.value=g.size*v,f.scale.value=y*.5,g.map&&(f.map.value=g.map),g.alphaMap&&(f.alphaMap.value=g.alphaMap),g.alphaTest>0&&(f.alphaTest.value=g.alphaTest);let w;g.map?w=g.map:g.alphaMap&&(w=g.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),f.uvTransform.value.copy(w.matrix))}function l(f,g){f.diffuse.value.copy(g.color),f.opacity.value=g.opacity,f.rotation.value=g.rotation,g.map&&(f.map.value=g.map),g.alphaMap&&(f.alphaMap.value=g.alphaMap),g.alphaTest>0&&(f.alphaTest.value=g.alphaTest);let v;g.map?v=g.map:g.alphaMap&&(v=g.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),f.uvTransform.value.copy(v.matrix))}function c(f,g){f.specular.value.copy(g.specular),f.shininess.value=Math.max(g.shininess,1e-4)}function h(f,g){g.gradientMap&&(f.gradientMap.value=g.gradientMap)}function d(f,g){f.roughness.value=g.roughness,f.metalness.value=g.metalness,g.roughnessMap&&(f.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(f.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(f.envMapIntensity.value=g.envMapIntensity)}function u(f,g,v){f.ior.value=g.ior,g.sheen>0&&(f.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),f.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(f.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(f.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(f.clearcoat.value=g.clearcoat,f.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(f.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),f.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===qn&&f.clearcoatNormalScale.value.negate())),g.transmission>0&&(f.transmission.value=g.transmission,f.transmissionSamplerMap.value=v.texture,f.transmissionSamplerSize.value.set(v.width,v.height),g.transmissionMap&&(f.transmissionMap.value=g.transmissionMap),f.thickness.value=g.thickness,g.thicknessMap&&(f.thicknessMap.value=g.thicknessMap),f.attenuationDistance.value=g.attenuationDistance,f.attenuationColor.value.copy(g.attenuationColor)),f.specularIntensity.value=g.specularIntensity,f.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(f.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(f.specularColorMap.value=g.specularColorMap)}function p(f,g){g.matcap&&(f.matcap.value=g.matcap)}function m(f,g){f.referencePosition.value.copy(g.referencePosition),f.nearDistance.value=g.nearDistance,f.farDistance.value=g.farDistance}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function kS(){const t=lo("canvas");return t.style.display="block",t}function At(t={}){const e=t.canvas!==void 0?t.canvas:kS(),n=t.context!==void 0?t.context:null,i=t.depth!==void 0?t.depth:!0,r=t.stencil!==void 0?t.stencil:!0,s=t.antialias!==void 0?t.antialias:!1,a=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,o=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,l=t.powerPreference!==void 0?t.powerPreference:"default",c=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let h;n!==null?h=n.getContextAttributes().alpha:h=t.alpha!==void 0?t.alpha:!1;let d=null,u=null;const p=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=gi,this.physicallyCorrectLights=!1,this.toneMapping=er,this.toneMappingExposure=1;const f=this;let g=!1,v=0,y=0,w=null,b=-1,S=null;const _=new ct,E=new ct;let x=null,A=e.width,M=e.height,C=1,F=null,$=null;const I=new ct(0,0,A,M),Z=new ct(0,0,A,M);let W=!1;const q=new sc;let k=!1,N=!1,O=null;const V=new Re,z=new j,H=new T,J={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ne(){return w===null?C:1}let B=n;function oe(P,Y){for(let re=0;re<P.length;re++){const te=P[re],ue=e.getContext(te,Y);if(ue!==null)return ue}return null}try{const P={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Nu}`),e.addEventListener("webglcontextlost",U,!1),e.addEventListener("webglcontextrestored",we,!1),B===null){const Y=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&Y.shift(),B=oe(Y,P),B===null)throw oe(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let ie,le,K,pe,G,X,ee,se,he,fe,ge,_e,Ne,Be,D,L,ce,me,Te,Ce,Ue,R,ye;function Ee(){ie=new i1(B),le=new Zw(B,ie,t),ie.init(le),R=new zS(B,ie,le),K=new IS(B,ie,le),pe=new a1,G=new SS,X=new NS(B,ie,K,G,le,R,pe),ee=new Qw(f),se=new n1(f),he=new bb(B,le),ye=new $w(B,ie,he,le),fe=new r1(B,he,pe,ye),ge=new h1(B,fe,he,pe),Te=new c1(B,le,X),L=new Kw(G),_e=new wS(f,ee,se,ie,le,ye,L),Ne=new US(f,G),Be=new TS,D=new DS(ie,le),me=new Jw(f,ee,K,ge,h,a),ce=new Dg(f,ge,le),Ce=new Yw(B,ie,pe,le),Ue=new s1(B,ie,pe,le),pe.programs=_e.programs,f.capabilities=le,f.extensions=ie,f.properties=G,f.renderLists=Be,f.shadowMap=ce,f.state=K,f.info=pe}Ee();const xe=new FS(f,B);this.xr=xe,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const P=ie.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=ie.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(P){P!==void 0&&(C=P,this.setSize(A,M,!1))},this.getSize=function(P){return P.set(A,M)},this.setSize=function(P,Y,re){if(xe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=P,M=Y,e.width=Math.floor(P*C),e.height=Math.floor(Y*C),re!==!1&&(e.style.width=P+"px",e.style.height=Y+"px"),this.setViewport(0,0,P,Y)},this.getDrawingBufferSize=function(P){return P.set(A*C,M*C).floor()},this.setDrawingBufferSize=function(P,Y,re){A=P,M=Y,C=re,e.width=Math.floor(P*re),e.height=Math.floor(Y*re),this.setViewport(0,0,P,Y)},this.getCurrentViewport=function(P){return P.copy(_)},this.getViewport=function(P){return P.copy(I)},this.setViewport=function(P,Y,re,te){P.isVector4?I.set(P.x,P.y,P.z,P.w):I.set(P,Y,re,te),K.viewport(_.copy(I).multiplyScalar(C).floor())},this.getScissor=function(P){return P.copy(Z)},this.setScissor=function(P,Y,re,te){P.isVector4?Z.set(P.x,P.y,P.z,P.w):Z.set(P,Y,re,te),K.scissor(E.copy(Z).multiplyScalar(C).floor())},this.getScissorTest=function(){return W},this.setScissorTest=function(P){K.setScissorTest(W=P)},this.setOpaqueSort=function(P){F=P},this.setTransparentSort=function(P){$=P},this.getClearColor=function(P){return P.copy(me.getClearColor())},this.setClearColor=function(){me.setClearColor.apply(me,arguments)},this.getClearAlpha=function(){return me.getClearAlpha()},this.setClearAlpha=function(){me.setClearAlpha.apply(me,arguments)},this.clear=function(P=!0,Y=!0,re=!0){let te=0;P&&(te|=16384),Y&&(te|=256),re&&(te|=1024),B.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",U,!1),e.removeEventListener("webglcontextrestored",we,!1),Be.dispose(),D.dispose(),G.dispose(),ee.dispose(),se.dispose(),ge.dispose(),ye.dispose(),_e.dispose(),xe.dispose(),xe.removeEventListener("sessionstart",Ve),xe.removeEventListener("sessionend",dt),O&&(O.dispose(),O=null),Xe.stop()};function U(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function we(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const P=pe.autoReset,Y=ce.enabled,re=ce.autoUpdate,te=ce.needsUpdate,ue=ce.type;Ee(),pe.autoReset=P,ce.enabled=Y,ce.autoUpdate=re,ce.needsUpdate=te,ce.type=ue}function be(P){const Y=P.target;Y.removeEventListener("dispose",be),qe(Y)}function qe(P){Le(P),G.remove(P)}function Le(P){const Y=G.get(P).programs;Y!==void 0&&(Y.forEach(function(re){_e.releaseProgram(re)}),P.isShaderMaterial&&_e.releaseShaderCache(P))}this.renderBufferDirect=function(P,Y,re,te,ue,He){Y===null&&(Y=J);const Ze=ue.isMesh&&ue.matrixWorld.determinant()<0,et=pt(P,Y,re,te,ue);K.setMaterial(te,Ze);let at=re.index;const St=re.attributes.position;if(at===null){if(St===void 0||St.count===0)return}else if(at.count===0)return;let ft=1;te.wireframe===!0&&(at=fe.getWireframeAttribute(re),ft=2),ye.setup(ue,te,et,re,at);let yt,Ft=Ce;at!==null&&(yt=he.get(at),Ft=Ue,Ft.setIndex(yt));const Nr=at!==null?at.count:St.count,us=re.drawRange.start*ft,ds=re.drawRange.count*ft,bi=He!==null?He.start*ft:0,bt=He!==null?He.count*ft:1/0,ps=Math.max(us,bi),Jt=Math.min(Nr,us+ds,bi+bt)-1,_i=Math.max(0,Jt-ps+1);if(_i!==0){if(ue.isMesh)te.wireframe===!0?(K.setLineWidth(te.wireframeLinewidth*ne()),Ft.setMode(1)):Ft.setMode(4);else if(ue.isLine){let or=te.linewidth;or===void 0&&(or=1),K.setLineWidth(or*ne()),ue.isLineSegments?Ft.setMode(1):ue.isLineLoop?Ft.setMode(2):Ft.setMode(3)}else ue.isPoints?Ft.setMode(0):ue.isSprite&&Ft.setMode(4);if(ue.isInstancedMesh)Ft.renderInstances(ps,_i,ue.count);else if(re.isInstancedBufferGeometry){const or=Math.min(re.instanceCount,re._maxInstanceCount);Ft.renderInstances(ps,_i,or)}else Ft.render(ps,_i)}},this.compile=function(P,Y){u=D.get(P),u.init(),m.push(u),P.traverseVisible(function(re){re.isLight&&re.layers.test(Y.layers)&&(u.pushLight(re),re.castShadow&&u.pushShadow(re))}),u.setupLights(f.physicallyCorrectLights),P.traverse(function(re){const te=re.material;if(te)if(Array.isArray(te))for(let ue=0;ue<te.length;ue++){const He=te[ue];nt(He,P,re)}else nt(te,P,re)}),m.pop(),u=null};let Fe=null;function Se(P){Fe&&Fe(P)}function Ve(){Xe.stop()}function dt(){Xe.start()}const Xe=new Mg;Xe.setAnimationLoop(Se),typeof self!="undefined"&&Xe.setContext(self),this.setAnimationLoop=function(P){Fe=P,xe.setAnimationLoop(P),P===null?Xe.stop():Xe.start()},xe.addEventListener("sessionstart",Ve),xe.addEventListener("sessionend",dt),this.render=function(P,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;P.autoUpdate===!0&&P.updateMatrixWorld(),Y.parent===null&&Y.updateMatrixWorld(),xe.enabled===!0&&xe.isPresenting===!0&&(xe.cameraAutoUpdate===!0&&xe.updateCamera(Y),Y=xe.getCamera()),P.isScene===!0&&P.onBeforeRender(f,P,Y,w),u=D.get(P,m.length),u.init(),m.push(u),V.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),q.setFromProjectionMatrix(V),N=this.localClippingEnabled,k=L.init(this.clippingPlanes,N,Y),d=Be.get(P,p.length),d.init(),p.push(d),cn(P,Y,0,f.sortObjects),d.finish(),f.sortObjects===!0&&d.sort(F,$),k===!0&&L.beginShadows();const re=u.state.shadowsArray;if(ce.render(re,P,Y),k===!0&&L.endShadows(),this.info.autoReset===!0&&this.info.reset(),me.render(d,P),u.setupLights(f.physicallyCorrectLights),Y.isArrayCamera){const te=Y.cameras;for(let ue=0,He=te.length;ue<He;ue++){const Ze=te[ue];vn(d,P,Ze,Ze.viewport)}}else vn(d,P,Y);w!==null&&(X.updateMultisampleRenderTarget(w),X.updateRenderTargetMipmap(w)),P.isScene===!0&&P.onAfterRender(f,P,Y),ye.resetDefaultState(),b=-1,S=null,m.pop(),m.length>0?u=m[m.length-1]:u=null,p.pop(),p.length>0?d=p[p.length-1]:d=null};function cn(P,Y,re,te){if(P.visible===!1)return;if(P.layers.test(Y.layers)){if(P.isGroup)re=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(Y);else if(P.isLight)u.pushLight(P),P.castShadow&&u.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||q.intersectsSprite(P)){te&&H.setFromMatrixPosition(P.matrixWorld).applyMatrix4(V);const Ze=ge.update(P),et=P.material;et.visible&&d.push(P,Ze,et,re,H.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==pe.render.frame&&(P.skeleton.update(),P.skeleton.frame=pe.render.frame),!P.frustumCulled||q.intersectsObject(P))){te&&H.setFromMatrixPosition(P.matrixWorld).applyMatrix4(V);const Ze=ge.update(P),et=P.material;if(Array.isArray(et)){const at=Ze.groups;for(let St=0,ft=at.length;St<ft;St++){const yt=at[St],Ft=et[yt.materialIndex];Ft&&Ft.visible&&d.push(P,Ze,Ft,re,H.z,yt)}}else et.visible&&d.push(P,Ze,et,re,H.z,null)}}const He=P.children;for(let Ze=0,et=He.length;Ze<et;Ze++)cn(He[Ze],Y,re,te)}function vn(P,Y,re,te){const ue=P.opaque,He=P.transmissive,Ze=P.transparent;u.setupLightsView(re),He.length>0&&Xt(ue,Y,re),te&&K.viewport(_.copy(te)),ue.length>0&&Qe(ue,Y,re),He.length>0&&Qe(He,Y,re),Ze.length>0&&Qe(Ze,Y,re),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1)}function Xt(P,Y,re){const te=le.isWebGL2;O===null&&(O=new Ln(1,1,{generateMipmaps:!0,type:ie.has("EXT_color_buffer_half_float")?so:ts,minFilter:_o,samples:te&&s===!0?4:0})),f.getDrawingBufferSize(z),te?O.setSize(z.x,z.y):O.setSize(Ul(z.x),Ul(z.y));const ue=f.getRenderTarget();f.setRenderTarget(O),f.clear();const He=f.toneMapping;f.toneMapping=er,Qe(P,Y,re),f.toneMapping=He,X.updateMultisampleRenderTarget(O),X.updateRenderTargetMipmap(O),f.setRenderTarget(ue)}function Qe(P,Y,re){const te=Y.isScene===!0?Y.overrideMaterial:null;for(let ue=0,He=P.length;ue<He;ue++){const Ze=P[ue],et=Ze.object,at=Ze.geometry,St=te===null?Ze.material:te,ft=Ze.group;et.layers.test(re.layers)&&st(et,Y,re,at,St,ft)}}function st(P,Y,re,te,ue,He){P.onBeforeRender(f,Y,re,te,ue,He),P.modelViewMatrix.multiplyMatrices(re.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),ue.onBeforeRender(f,Y,re,te,P,He),ue.transparent===!0&&ue.side===Bn?(ue.side=qn,ue.needsUpdate=!0,f.renderBufferDirect(re,Y,te,ue,P,He),ue.side=Kr,ue.needsUpdate=!0,f.renderBufferDirect(re,Y,te,ue,P,He),ue.side=Bn):f.renderBufferDirect(re,Y,te,ue,P,He),P.onAfterRender(f,Y,re,te,ue,He)}function nt(P,Y,re){Y.isScene!==!0&&(Y=J);const te=G.get(P),ue=u.state.lights,He=u.state.shadowsArray,Ze=ue.state.version,et=_e.getParameters(P,ue.state,He,Y,re),at=_e.getProgramCacheKey(et);let St=te.programs;te.environment=P.isMeshStandardMaterial?Y.environment:null,te.fog=Y.fog,te.envMap=(P.isMeshStandardMaterial?se:ee).get(P.envMap||te.environment),St===void 0&&(P.addEventListener("dispose",be),St=new Map,te.programs=St);let ft=St.get(at);if(ft!==void 0){if(te.currentProgram===ft&&te.lightsStateVersion===Ze)return it(P,et),ft}else et.uniforms=_e.getUniforms(P),P.onBuild(re,et,f),P.onBeforeCompile(et,f),ft=_e.acquireProgram(et,at),St.set(at,ft),te.uniforms=et.uniforms;const yt=te.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(yt.clippingPlanes=L.uniform),it(P,et),te.needsLights=Ct(P),te.lightsStateVersion=Ze,te.needsLights&&(yt.ambientLightColor.value=ue.state.ambient,yt.lightProbe.value=ue.state.probe,yt.directionalLights.value=ue.state.directional,yt.directionalLightShadows.value=ue.state.directionalShadow,yt.spotLights.value=ue.state.spot,yt.spotLightShadows.value=ue.state.spotShadow,yt.rectAreaLights.value=ue.state.rectArea,yt.ltc_1.value=ue.state.rectAreaLTC1,yt.ltc_2.value=ue.state.rectAreaLTC2,yt.pointLights.value=ue.state.point,yt.pointLightShadows.value=ue.state.pointShadow,yt.hemisphereLights.value=ue.state.hemi,yt.directionalShadowMap.value=ue.state.directionalShadowMap,yt.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,yt.spotShadowMap.value=ue.state.spotShadowMap,yt.spotShadowMatrix.value=ue.state.spotShadowMatrix,yt.pointShadowMap.value=ue.state.pointShadowMap,yt.pointShadowMatrix.value=ue.state.pointShadowMatrix);const Ft=ft.getUniforms(),Nr=Tr.seqWithValue(Ft.seq,yt);return te.currentProgram=ft,te.uniformsList=Nr,ft}function it(P,Y){const re=G.get(P);re.outputEncoding=Y.outputEncoding,re.instancing=Y.instancing,re.skinning=Y.skinning,re.morphTargets=Y.morphTargets,re.morphNormals=Y.morphNormals,re.morphColors=Y.morphColors,re.morphTargetsCount=Y.morphTargetsCount,re.numClippingPlanes=Y.numClippingPlanes,re.numIntersection=Y.numClipIntersection,re.vertexAlphas=Y.vertexAlphas,re.vertexTangents=Y.vertexTangents,re.toneMapping=Y.toneMapping}function pt(P,Y,re,te,ue){Y.isScene!==!0&&(Y=J),X.resetTextureUnits();const He=Y.fog,Ze=te.isMeshStandardMaterial?Y.environment:null,et=w===null?f.outputEncoding:w.isXRRenderTarget===!0?w.texture.encoding:gi,at=(te.isMeshStandardMaterial?se:ee).get(te.envMap||Ze),St=te.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,ft=!!te.normalMap&&!!re.attributes.tangent,yt=!!re.morphAttributes.position,Ft=!!re.morphAttributes.normal,Nr=!!re.morphAttributes.color,us=te.toneMapped?f.toneMapping:er,ds=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,bi=ds!==void 0?ds.length:0,bt=G.get(te),ps=u.state.lights;if(k===!0&&(N===!0||P!==S)){const wi=P===S&&te.id===b;L.setState(te,P,wi)}let Jt=!1;te.version===bt.__version?(bt.needsLights&&bt.lightsStateVersion!==ps.state.version||bt.outputEncoding!==et||ue.isInstancedMesh&&bt.instancing===!1||!ue.isInstancedMesh&&bt.instancing===!0||ue.isSkinnedMesh&&bt.skinning===!1||!ue.isSkinnedMesh&&bt.skinning===!0||bt.envMap!==at||te.fog===!0&&bt.fog!==He||bt.numClippingPlanes!==void 0&&(bt.numClippingPlanes!==L.numPlanes||bt.numIntersection!==L.numIntersection)||bt.vertexAlphas!==St||bt.vertexTangents!==ft||bt.morphTargets!==yt||bt.morphNormals!==Ft||bt.morphColors!==Nr||bt.toneMapping!==us||le.isWebGL2===!0&&bt.morphTargetsCount!==bi)&&(Jt=!0):(Jt=!0,bt.__version=te.version);let _i=bt.currentProgram;Jt===!0&&(_i=nt(te,Y,ue));let or=!1,Ea=!1,Lc=!1;const yn=_i.getUniforms(),Aa=bt.uniforms;if(K.useProgram(_i.program)&&(or=!0,Ea=!0,Lc=!0),te.id!==b&&(b=te.id,Ea=!0),or||S!==P){if(yn.setValue(B,"projectionMatrix",P.projectionMatrix),le.logarithmicDepthBuffer&&yn.setValue(B,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),S!==P&&(S=P,Ea=!0,Lc=!0),te.isShaderMaterial||te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshStandardMaterial||te.envMap){const wi=yn.map.cameraPosition;wi!==void 0&&wi.setValue(B,H.setFromMatrixPosition(P.matrixWorld))}(te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshLambertMaterial||te.isMeshBasicMaterial||te.isMeshStandardMaterial||te.isShaderMaterial)&&yn.setValue(B,"isOrthographic",P.isOrthographicCamera===!0),(te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshLambertMaterial||te.isMeshBasicMaterial||te.isMeshStandardMaterial||te.isShaderMaterial||te.isShadowMaterial||ue.isSkinnedMesh)&&yn.setValue(B,"viewMatrix",P.matrixWorldInverse)}if(ue.isSkinnedMesh){yn.setOptional(B,ue,"bindMatrix"),yn.setOptional(B,ue,"bindMatrixInverse");const wi=ue.skeleton;wi&&(le.floatVertexTextures?(wi.boneTexture===null&&wi.computeBoneTexture(),yn.setValue(B,"boneTexture",wi.boneTexture,X),yn.setValue(B,"boneTextureSize",wi.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Pc=re.morphAttributes;return(Pc.position!==void 0||Pc.normal!==void 0||Pc.color!==void 0&&le.isWebGL2===!0)&&Te.update(ue,re,te,_i),(Ea||bt.receiveShadow!==ue.receiveShadow)&&(bt.receiveShadow=ue.receiveShadow,yn.setValue(B,"receiveShadow",ue.receiveShadow)),Ea&&(yn.setValue(B,"toneMappingExposure",f.toneMappingExposure),bt.needsLights&&wt(Aa,Lc),He&&te.fog===!0&&Ne.refreshFogUniforms(Aa,He),Ne.refreshMaterialUniforms(Aa,te,C,M,O),Tr.upload(B,bt.uniformsList,Aa,X)),te.isShaderMaterial&&te.uniformsNeedUpdate===!0&&(Tr.upload(B,bt.uniformsList,Aa,X),te.uniformsNeedUpdate=!1),te.isSpriteMaterial&&yn.setValue(B,"center",ue.center),yn.setValue(B,"modelViewMatrix",ue.modelViewMatrix),yn.setValue(B,"normalMatrix",ue.normalMatrix),yn.setValue(B,"modelMatrix",ue.matrixWorld),_i}function wt(P,Y){P.ambientLightColor.needsUpdate=Y,P.lightProbe.needsUpdate=Y,P.directionalLights.needsUpdate=Y,P.directionalLightShadows.needsUpdate=Y,P.pointLights.needsUpdate=Y,P.pointLightShadows.needsUpdate=Y,P.spotLights.needsUpdate=Y,P.spotLightShadows.needsUpdate=Y,P.rectAreaLights.needsUpdate=Y,P.hemisphereLights.needsUpdate=Y}function Ct(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(P,Y,re){G.get(P.texture).__webglTexture=Y,G.get(P.depthTexture).__webglTexture=re;const te=G.get(P);te.__hasExternalTextures=!0,te.__hasExternalTextures&&(te.__autoAllocateDepthBuffer=re===void 0,te.__autoAllocateDepthBuffer||ie.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),te.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,Y){const re=G.get(P);re.__webglFramebuffer=Y,re.__useDefaultFramebuffer=Y===void 0},this.setRenderTarget=function(P,Y=0,re=0){w=P,v=Y,y=re;let te=!0;if(P){const at=G.get(P);at.__useDefaultFramebuffer!==void 0?(K.bindFramebuffer(36160,null),te=!1):at.__webglFramebuffer===void 0?X.setupRenderTarget(P):at.__hasExternalTextures&&X.rebindTextures(P,G.get(P.texture).__webglTexture,G.get(P.depthTexture).__webglTexture)}let ue=null,He=!1,Ze=!1;if(P){const at=P.texture;(at.isData3DTexture||at.isDataArrayTexture)&&(Ze=!0);const St=G.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(ue=St[Y],He=!0):le.isWebGL2&&P.samples>0&&X.useMultisampledRTT(P)===!1?ue=G.get(P).__webglMultisampledFramebuffer:ue=St,_.copy(P.viewport),E.copy(P.scissor),x=P.scissorTest}else _.copy(I).multiplyScalar(C).floor(),E.copy(Z).multiplyScalar(C).floor(),x=W;if(K.bindFramebuffer(36160,ue)&&le.drawBuffers&&te&&K.drawBuffers(P,ue),K.viewport(_),K.scissor(E),K.setScissorTest(x),He){const at=G.get(P.texture);B.framebufferTexture2D(36160,36064,34069+Y,at.__webglTexture,re)}else if(Ze){const at=G.get(P.texture),St=Y||0;B.framebufferTextureLayer(36160,36064,at.__webglTexture,re||0,St)}b=-1},this.readRenderTargetPixels=function(P,Y,re,te,ue,He,Ze){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let et=G.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Ze!==void 0&&(et=et[Ze]),et){K.bindFramebuffer(36160,et);try{const at=P.texture,St=at.format,ft=at.type;if(St!==ui&&R.convert(St)!==B.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const yt=ft===so&&(ie.has("EXT_color_buffer_half_float")||le.isWebGL2&&ie.has("EXT_color_buffer_float"));if(ft!==ts&&R.convert(ft)!==B.getParameter(35738)&&!(ft===Wr&&(le.isWebGL2||ie.has("OES_texture_float")||ie.has("WEBGL_color_buffer_float")))&&!yt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=P.width-te&&re>=0&&re<=P.height-ue&&B.readPixels(Y,re,te,ue,R.convert(St),R.convert(ft),He)}finally{const at=w!==null?G.get(w).__webglFramebuffer:null;K.bindFramebuffer(36160,at)}}},this.copyFramebufferToTexture=function(P,Y,re=0){if(Y.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const te=Math.pow(2,-re),ue=Math.floor(Y.image.width*te),He=Math.floor(Y.image.height*te);X.setTexture2D(Y,0),B.copyTexSubImage2D(3553,re,0,0,P.x,P.y,ue,He),K.unbindTexture()},this.copyTextureToTexture=function(P,Y,re,te=0){const ue=Y.image.width,He=Y.image.height,Ze=R.convert(re.format),et=R.convert(re.type);X.setTexture2D(re,0),B.pixelStorei(37440,re.flipY),B.pixelStorei(37441,re.premultiplyAlpha),B.pixelStorei(3317,re.unpackAlignment),Y.isDataTexture?B.texSubImage2D(3553,te,P.x,P.y,ue,He,Ze,et,Y.image.data):Y.isCompressedTexture?B.compressedTexSubImage2D(3553,te,P.x,P.y,Y.mipmaps[0].width,Y.mipmaps[0].height,Ze,Y.mipmaps[0].data):B.texSubImage2D(3553,te,P.x,P.y,Ze,et,Y.image),te===0&&re.generateMipmaps&&B.generateMipmap(3553),K.unbindTexture()},this.copyTextureToTexture3D=function(P,Y,re,te,ue=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const He=P.max.x-P.min.x+1,Ze=P.max.y-P.min.y+1,et=P.max.z-P.min.z+1,at=R.convert(te.format),St=R.convert(te.type);let ft;if(te.isData3DTexture)X.setTexture3D(te,0),ft=32879;else if(te.isDataArrayTexture)X.setTexture2DArray(te,0),ft=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}B.pixelStorei(37440,te.flipY),B.pixelStorei(37441,te.premultiplyAlpha),B.pixelStorei(3317,te.unpackAlignment);const yt=B.getParameter(3314),Ft=B.getParameter(32878),Nr=B.getParameter(3316),us=B.getParameter(3315),ds=B.getParameter(32877),bi=re.isCompressedTexture?re.mipmaps[0]:re.image;B.pixelStorei(3314,bi.width),B.pixelStorei(32878,bi.height),B.pixelStorei(3316,P.min.x),B.pixelStorei(3315,P.min.y),B.pixelStorei(32877,P.min.z),re.isDataTexture||re.isData3DTexture?B.texSubImage3D(ft,ue,Y.x,Y.y,Y.z,He,Ze,et,at,St,bi.data):re.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),B.compressedTexSubImage3D(ft,ue,Y.x,Y.y,Y.z,He,Ze,et,at,bi.data)):B.texSubImage3D(ft,ue,Y.x,Y.y,Y.z,He,Ze,et,at,St,bi),B.pixelStorei(3314,yt),B.pixelStorei(32878,Ft),B.pixelStorei(3316,Nr),B.pixelStorei(3315,us),B.pixelStorei(32877,ds),ue===0&&te.generateMipmaps&&B.generateMipmap(ft),K.unbindTexture()},this.initTexture=function(P){X.setTexture2D(P,0),K.unbindTexture()},this.resetState=function(){v=0,y=0,w=null,K.reset(),ye.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}At.prototype.isWebGLRenderer=!0;class VS extends At{}VS.prototype.isWebGL1Renderer=!0;class lc{constructor(e,n=1,i=1e3){this.name="",this.color=new Ae(e),this.near=n,this.far=i}clone(){return new lc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}lc.prototype.isFog=!0;class cc extends ht{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}cc.prototype.isScene=!0;class fa{constructor(e,n){this.array=e,this.stride=n,this.count=e!==void 0?e.length/n:0,this.usage=ao,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=pi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,n,i){e*=this.stride,i*=n.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=n.array[i+r];return this}set(e,n=0){return this.array.set(e,n),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=pi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(n,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=pi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}fa.prototype.isInterleavedBuffer=!0;const xn=new T;class ns{constructor(e,n,i,r=!1){this.name="",this.data=e,this.itemSize=n,this.offset=i,this.normalized=r===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let n=0,i=this.data.count;n<i;n++)xn.fromBufferAttribute(this,n),xn.applyMatrix4(e),this.setXYZ(n,xn.x,xn.y,xn.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)xn.fromBufferAttribute(this,n),xn.applyNormalMatrix(e),this.setXYZ(n,xn.x,xn.y,xn.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)xn.fromBufferAttribute(this,n),xn.transformDirection(e),this.setXYZ(n,xn.x,xn.y,xn.z);return this}setX(e,n){return this.data.array[e*this.data.stride+this.offset]=n,this}setY(e,n){return this.data.array[e*this.data.stride+this.offset+1]=n,this}setZ(e,n){return this.data.array[e*this.data.stride+this.offset+2]=n,this}setW(e,n){return this.data.array[e*this.data.stride+this.offset+3]=n,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this}setXYZ(e,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,n,i,r,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)n.push(this.data.array[r+s])}return new rt(new this.array.constructor(n),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ns(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)n.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}ns.prototype.isInterleavedBufferAttribute=!0;class qu extends rn{constructor(e){super(),this.type="SpriteMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}qu.prototype.isSpriteMaterial=!0;let Ps;const Da=new T,Ds=new T,Rs=new T,Os=new j,Ra=new j,Og=new Re,el=new T,Oa=new T,tl=new T,jp=new j,ch=new j,qp=new j;class HS extends ht{constructor(e){if(super(),this.type="Sprite",Ps===void 0){Ps=new Ge;const n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new fa(n,5);Ps.setIndex([0,1,2,0,2,3]),Ps.setAttribute("position",new ns(i,3,0,!1)),Ps.setAttribute("uv",new ns(i,2,3,!1))}this.geometry=Ps,this.material=e!==void 0?e:new qu,this.center=new j(.5,.5)}raycast(e,n){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ds.setFromMatrixScale(this.matrixWorld),Og.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Rs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ds.multiplyScalar(-Rs.z);const i=this.material.rotation;let r,s;i!==0&&(s=Math.cos(i),r=Math.sin(i));const a=this.center;nl(el.set(-.5,-.5,0),Rs,a,Ds,r,s),nl(Oa.set(.5,-.5,0),Rs,a,Ds,r,s),nl(tl.set(.5,.5,0),Rs,a,Ds,r,s),jp.set(0,0),ch.set(1,0),qp.set(1,1);let o=e.ray.intersectTriangle(el,Oa,tl,!1,Da);if(o===null&&(nl(Oa.set(-.5,.5,0),Rs,a,Ds,r,s),ch.set(0,1),o=e.ray.intersectTriangle(el,tl,Oa,!1,Da),o===null))return;const l=e.ray.origin.distanceTo(Da);l<e.near||l>e.far||n.push({distance:l,point:Da.clone(),uv:qt.getUV(Da,el,Oa,tl,jp,ch,qp,new j),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}HS.prototype.isSprite=!0;function nl(t,e,n,i,r,s){Os.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?(Ra.x=s*Os.x-r*Os.y,Ra.y=r*Os.x+s*Os.y):Ra.copy(Os),t.copy(e),t.x+=Ra.x,t.y+=Ra.y,t.applyMatrix4(Og)}const Xp=new T,Jp=new ct,$p=new ct,GS=new T,Yp=new Re;class Ig extends pn{constructor(e,n){super(e,n),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Re,this.bindMatrixInverse=new Re}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,n){this.skeleton=e,n===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),n=this.matrixWorld),this.bindMatrix.copy(n),this.bindMatrixInverse.copy(n).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new ct,n=this.geometry.attributes.skinWeight;for(let i=0,r=n.count;i<r;i++){e.fromBufferAttribute(n,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),n.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,n){const i=this.skeleton,r=this.geometry;Jp.fromBufferAttribute(r.attributes.skinIndex,e),$p.fromBufferAttribute(r.attributes.skinWeight,e),Xp.copy(n).applyMatrix4(this.bindMatrix),n.set(0,0,0);for(let s=0;s<4;s++){const a=$p.getComponent(s);if(a!==0){const o=Jp.getComponent(s);Yp.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),n.addScaledVector(GS.copy(Xp).applyMatrix4(Yp),a)}}return n.applyMatrix4(this.bindMatrixInverse)}}Ig.prototype.isSkinnedMesh=!0;class WS extends ht{constructor(){super(),this.type="Bone"}}WS.prototype.isBone=!0;class jS extends Bt{constructor(e=null,n=1,i=1,r,s,a,o,l,c=on,h=on,d,u){super(null,a,o,l,c,h,r,s,d,u),this.image={data:e,width:n,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}jS.prototype.isDataTexture=!0;class kl extends rt{constructor(e,n,i,r=1){typeof i=="number"&&(r=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,n,i),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}kl.prototype.isInstancedBufferAttribute=!0;const Zp=new Re,Kp=new Re,il=[],Ia=new pn;class qS extends pn{constructor(e,n,i){super(e,n),this.instanceMatrix=new kl(new Float32Array(i*16),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,n){n.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,n){n.fromArray(this.instanceMatrix.array,e*16)}raycast(e,n){const i=this.matrixWorld,r=this.count;if(Ia.geometry=this.geometry,Ia.material=this.material,Ia.material!==void 0)for(let s=0;s<r;s++){this.getMatrixAt(s,Zp),Kp.multiplyMatrices(i,Zp),Ia.matrixWorld=Kp,Ia.raycast(e,il);for(let a=0,o=il.length;a<o;a++){const l=il[a];l.instanceId=s,l.object=this,n.push(l)}il.length=0}}setColorAt(e,n){this.instanceColor===null&&(this.instanceColor=new kl(new Float32Array(this.instanceMatrix.count*3),3)),n.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,n){n.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}qS.prototype.isInstancedMesh=!0;class Yn extends rn{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Ae(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}Yn.prototype.isLineBasicMaterial=!0;const Qp=new T,ef=new T,tf=new Re,hh=new as,rl=new Xn;class co extends ht{constructor(e=new Ge,n=new Yn){super(),this.type="Line",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const n=e.attributes.position,i=[0];for(let r=1,s=n.count;r<s;r++)Qp.fromBufferAttribute(n,r-1),ef.fromBufferAttribute(n,r),i[r]=i[r-1],i[r]+=Qp.distanceTo(ef);e.setAttribute("lineDistance",new Pe(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),rl.copy(i.boundingSphere),rl.applyMatrix4(r),rl.radius+=s,e.ray.intersectsSphere(rl)===!1)return;tf.copy(r).invert(),hh.copy(e.ray).applyMatrix4(tf);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new T,h=new T,d=new T,u=new T,p=this.isLineSegments?2:1;if(i.isBufferGeometry){const m=i.index,g=i.attributes.position;if(m!==null){const v=Math.max(0,a.start),y=Math.min(m.count,a.start+a.count);for(let w=v,b=y-1;w<b;w+=p){const S=m.getX(w),_=m.getX(w+1);if(c.fromBufferAttribute(g,S),h.fromBufferAttribute(g,_),hh.distanceSqToSegment(c,h,u,d)>l)continue;u.applyMatrix4(this.matrixWorld);const x=e.ray.origin.distanceTo(u);x<e.near||x>e.far||n.push({distance:x,point:d.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,a.start),y=Math.min(g.count,a.start+a.count);for(let w=v,b=y-1;w<b;w+=p){if(c.fromBufferAttribute(g,w),h.fromBufferAttribute(g,w+1),hh.distanceSqToSegment(c,h,u,d)>l)continue;u.applyMatrix4(this.matrixWorld);const _=e.ray.origin.distanceTo(u);_<e.near||_>e.far||n.push({distance:_,point:d.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}co.prototype.isLine=!0;const nf=new T,rf=new T;class Rr extends co{constructor(e,n){super(e,n),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const n=e.attributes.position,i=[];for(let r=0,s=n.count;r<s;r+=2)nf.fromBufferAttribute(n,r),rf.fromBufferAttribute(n,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+nf.distanceTo(rf);e.setAttribute("lineDistance",new Pe(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Rr.prototype.isLineSegments=!0;class XS extends co{constructor(e,n){super(e,n),this.type="LineLoop"}}XS.prototype.isLineLoop=!0;class Xu extends rn{constructor(e){super(),this.type="PointsMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}Xu.prototype.isPointsMaterial=!0;const sf=new Re,Xh=new as,sl=new Xn,al=new T;class JS extends ht{constructor(e=new Ge,n=new Xu){super(),this.type="Points",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),sl.copy(i.boundingSphere),sl.applyMatrix4(r),sl.radius+=s,e.ray.intersectsSphere(sl)===!1)return;sf.copy(r).invert(),Xh.copy(e.ray).applyMatrix4(sf);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(i.isBufferGeometry){const c=i.index,d=i.attributes.position;if(c!==null){const u=Math.max(0,a.start),p=Math.min(c.count,a.start+a.count);for(let m=u,f=p;m<f;m++){const g=c.getX(m);al.fromBufferAttribute(d,g),af(al,g,l,r,e,n,this)}}else{const u=Math.max(0,a.start),p=Math.min(d.count,a.start+a.count);for(let m=u,f=p;m<f;m++)al.fromBufferAttribute(d,m),af(al,m,l,r,e,n,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}JS.prototype.isPoints=!0;function af(t,e,n,i,r,s,a){const o=Xh.distanceSqToPoint(t);if(o<n){const l=new T;Xh.closestPointToPoint(t,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class Ng extends Bt{constructor(e,n,i,r,s,a,o,l,c){super(e,n,i,r,s,a,o,l,c),this.minFilter=a!==void 0?a:_n,this.magFilter=s!==void 0?s:_n,this.generateMipmaps=!1;const h=this;function d(){h.needsUpdate=!0,e.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(d)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Ng.prototype.isVideoTexture=!0;class $S extends Bt{constructor(e,n,i){super({width:e,height:n}),this.format=i,this.magFilter=on,this.minFilter=on,this.generateMipmaps=!1,this.needsUpdate=!0}}$S.prototype.isFramebufferTexture=!0;class YS extends Bt{constructor(e,n,i,r,s,a,o,l,c,h,d,u){super(null,a,o,l,c,h,r,s,d,u),this.image={width:n,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}YS.prototype.isCompressedTexture=!0;class ZS extends Bt{constructor(e,n,i,r,s,a,o,l,c){super(e,n,i,r,s,a,o,l,c),this.needsUpdate=!0}}ZS.prototype.isCanvasTexture=!0;class $n{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,n){const i=this.getUtoTmapping(e);return this.getPoint(i,n)}getPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return n}getSpacedPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPointAt(i/e));return n}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,r=this.getPoint(0),s=0;n.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),s+=i.distanceTo(r),n.push(s),r=i;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,n){const i=this.getLengths();let r=0;const s=i.length;let a;n?a=n:a=e*i[s-1];let o=0,l=s-1,c;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),c=i[r]-a,c<0)o=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,i[r]===a)return r/(s-1);const h=i[r],u=i[r+1]-h,p=(a-h)/u;return(r+p)/(s-1)}getTangent(e,n){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const a=this.getPoint(r),o=this.getPoint(s),l=n||(a.isVector2?new j:new T);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,n){const i=this.getUtoTmapping(e);return this.getTangent(i,n)}computeFrenetFrames(e,n){const i=new T,r=[],s=[],a=[],o=new T,l=new Re;for(let p=0;p<=e;p++){const m=p/e;r[p]=this.getTangentAt(m,new T)}s[0]=new T,a[0]=new T;let c=Number.MAX_VALUE;const h=Math.abs(r[0].x),d=Math.abs(r[0].y),u=Math.abs(r[0].z);h<=c&&(c=h,i.set(1,0,0)),d<=c&&(c=d,i.set(0,1,0)),u<=c&&i.set(0,0,1),o.crossVectors(r[0],i).normalize(),s[0].crossVectors(r[0],o),a[0].crossVectors(r[0],s[0]);for(let p=1;p<=e;p++){if(s[p]=s[p-1].clone(),a[p]=a[p-1].clone(),o.crossVectors(r[p-1],r[p]),o.length()>Number.EPSILON){o.normalize();const m=Math.acos(Qt(r[p-1].dot(r[p]),-1,1));s[p].applyMatrix4(l.makeRotationAxis(o,m))}a[p].crossVectors(r[p],s[p])}if(n===!0){let p=Math.acos(Qt(s[0].dot(s[e]),-1,1));p/=e,r[0].dot(o.crossVectors(s[0],s[e]))>0&&(p=-p);for(let m=1;m<=e;m++)s[m].applyMatrix4(l.makeRotationAxis(r[m],p*m)),a[m].crossVectors(r[m],s[m])}return{tangents:r,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Mo extends $n{constructor(e=0,n=0,i=1,r=1,s=0,a=Math.PI*2,o=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=n,this.xRadius=i,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,n){const i=n||new j,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(a?s=0:s=r),this.aClockwise===!0&&!a&&(s===r?s=-r:s=s-r);const o=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),d=Math.sin(this.aRotation),u=l-this.aX,p=c-this.aY;l=u*h-p*d+this.aX,c=u*d+p*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Mo.prototype.isEllipseCurve=!0;class zg extends Mo{constructor(e,n,i,r,s,a){super(e,n,i,i,r,s,a),this.type="ArcCurve"}}zg.prototype.isArcCurve=!0;function Ju(){let t=0,e=0,n=0,i=0;function r(s,a,o,l){t=s,e=o,n=-3*s+3*a-2*o-l,i=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){r(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,h,d){let u=(a-s)/c-(o-s)/(c+h)+(o-a)/h,p=(o-a)/h-(l-a)/(h+d)+(l-o)/d;u*=h,p*=h,r(a,o,u,p)},calc:function(s){const a=s*s,o=a*s;return t+e*s+n*a+i*o}}}const ol=new T,uh=new Ju,dh=new Ju,ph=new Ju;class Bg extends $n{constructor(e=[],n=!1,i="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=n,this.curveType=i,this.tension=r}getPoint(e,n=new T){const i=n,r=this.points,s=r.length,a=(s-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:l===0&&o===s-1&&(o=s-2,l=1);let c,h;this.closed||o>0?c=r[(o-1)%s]:(ol.subVectors(r[0],r[1]).add(r[0]),c=ol);const d=r[o%s],u=r[(o+1)%s];if(this.closed||o+2<s?h=r[(o+2)%s]:(ol.subVectors(r[s-1],r[s-2]).add(r[s-1]),h=ol),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let m=Math.pow(c.distanceToSquared(d),p),f=Math.pow(d.distanceToSquared(u),p),g=Math.pow(u.distanceToSquared(h),p);f<1e-4&&(f=1),m<1e-4&&(m=f),g<1e-4&&(g=f),uh.initNonuniformCatmullRom(c.x,d.x,u.x,h.x,m,f,g),dh.initNonuniformCatmullRom(c.y,d.y,u.y,h.y,m,f,g),ph.initNonuniformCatmullRom(c.z,d.z,u.z,h.z,m,f,g)}else this.curveType==="catmullrom"&&(uh.initCatmullRom(c.x,d.x,u.x,h.x,this.tension),dh.initCatmullRom(c.y,d.y,u.y,h.y,this.tension),ph.initCatmullRom(c.z,d.z,u.z,h.z,this.tension));return i.set(uh.calc(l),dh.calc(l),ph.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new T().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}Bg.prototype.isCatmullRomCurve3=!0;function of(t,e,n,i,r){const s=(i-e)*.5,a=(r-n)*.5,o=t*t,l=t*o;return(2*n-2*i+s+a)*l+(-3*n+3*i-2*s-a)*o+s*t+n}function KS(t,e){const n=1-t;return n*n*e}function QS(t,e){return 2*(1-t)*t*e}function eM(t,e){return t*t*e}function Ka(t,e,n,i){return KS(t,e)+QS(t,n)+eM(t,i)}function tM(t,e){const n=1-t;return n*n*n*e}function nM(t,e){const n=1-t;return 3*n*n*t*e}function iM(t,e){return 3*(1-t)*t*t*e}function rM(t,e){return t*t*t*e}function Qa(t,e,n,i,r){return tM(t,e)+nM(t,n)+iM(t,i)+rM(t,r)}class di extends $n{constructor(e=new j,n=new j,i=new j,r=new j){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new j){const i=n,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Qa(e,r.x,s.x,a.x,o.x),Qa(e,r.y,s.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}di.prototype.isCubicBezierCurve=!0;class Fg extends $n{constructor(e=new T,n=new T,i=new T,r=new T){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new T){const i=n,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Qa(e,r.x,s.x,a.x,o.x),Qa(e,r.y,s.y,a.y,o.y),Qa(e,r.z,s.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Fg.prototype.isCubicBezierCurve3=!0;class fi extends $n{constructor(e=new j,n=new j){super(),this.type="LineCurve",this.v1=e,this.v2=n}getPoint(e,n=new j){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n){const i=n||new j;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}fi.prototype.isLineCurve=!0;class Ug extends $n{constructor(e=new T,n=new T){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=n}getPoint(e,n=new T){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Lr extends $n{constructor(e=new j,n=new j,i=new j){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new j){const i=n,r=this.v0,s=this.v1,a=this.v2;return i.set(Ka(e,r.x,s.x,a.x),Ka(e,r.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Lr.prototype.isQuadraticBezierCurve=!0;class kg extends $n{constructor(e=new T,n=new T,i=new T){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new T){const i=n,r=this.v0,s=this.v1,a=this.v2;return i.set(Ka(e,r.x,s.x,a.x),Ka(e,r.y,s.y,a.y),Ka(e,r.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}kg.prototype.isQuadraticBezierCurve3=!0;class hc extends $n{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,n=new j){const i=n,r=this.points,s=(r.length-1)*e,a=Math.floor(s),o=s-a,l=r[a===0?a:a-1],c=r[a],h=r[a>r.length-2?r.length-1:a+1],d=r[a>r.length-3?r.length-1:a+2];return i.set(of(o,l.x,c.x,h.x,d.x),of(o,l.y,c.y,h.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new j().fromArray(r))}return this}}hc.prototype.isSplineCurve=!0;var Vg=Object.freeze({__proto__:null,ArcCurve:zg,CatmullRomCurve3:Bg,CubicBezierCurve:di,CubicBezierCurve3:Fg,EllipseCurve:Mo,LineCurve:fi,LineCurve3:Ug,QuadraticBezierCurve:Lr,QuadraticBezierCurve3:kg,SplineCurve:hc});class sM extends $n{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),n=this.curves[this.curves.length-1].getPoint(1);e.equals(n)||this.curves.push(new fi(n,e))}getPoint(e,n){const i=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=i){const a=r[s]-i,o=this.curves[s],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,n)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let n=0;for(let i=0,r=this.curves.length;i<r;i++)n+=this.curves[i].getLength(),e.push(n);return this.cacheLengths=e,e}getSpacedPoints(e=40){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return this.autoClose&&n.push(n[0]),n}getPoints(e=12){const n=[];let i;for(let r=0,s=this.curves;r<s.length;r++){const a=s[r],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(n.push(h),i=h)}}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(e){super.copy(e),this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let n=0,i=this.curves.length;n<i;n++){const r=this.curves[n];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(new Vg[r.type]().fromJSON(r))}return this}}class Vl extends sM{constructor(e){super(),this.type="Path",this.currentPoint=new j,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let n=1,i=e.length;n<i;n++)this.lineTo(e[n].x,e[n].y);return this}moveTo(e,n){return this.currentPoint.set(e,n),this}lineTo(e,n){const i=new fi(this.currentPoint.clone(),new j(e,n));return this.curves.push(i),this.currentPoint.set(e,n),this}quadraticCurveTo(e,n,i,r){const s=new Lr(this.currentPoint.clone(),new j(e,n),new j(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}bezierCurveTo(e,n,i,r,s,a){const o=new di(this.currentPoint.clone(),new j(e,n),new j(i,r),new j(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const n=[this.currentPoint.clone()].concat(e),i=new hc(n);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,n,i,r,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,n+l,i,r,s,a),this}absarc(e,n,i,r,s,a){return this.absellipse(e,n,i,i,r,s,a),this}ellipse(e,n,i,r,s,a,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,n+h,i,r,s,a,o,l),this}absellipse(e,n,i,r,s,a,o,l){const c=new Mo(e,n,i,r,s,a,o,l);if(this.curves.length>0){const d=c.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class $u extends Ge{constructor(e=[new j(0,.5),new j(.5,0),new j(0,-.5)],n=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:n,phiStart:i,phiLength:r},n=Math.floor(n),r=Qt(r,0,Math.PI*2);const s=[],a=[],o=[],l=[],c=[],h=1/n,d=new T,u=new j,p=new T,m=new T,f=new T;let g=0,v=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:g=e[y+1].x-e[y].x,v=e[y+1].y-e[y].y,p.x=v*1,p.y=-g,p.z=v*0,f.copy(p),p.normalize(),l.push(p.x,p.y,p.z);break;case e.length-1:l.push(f.x,f.y,f.z);break;default:g=e[y+1].x-e[y].x,v=e[y+1].y-e[y].y,p.x=v*1,p.y=-g,p.z=v*0,m.copy(p),p.x+=f.x,p.y+=f.y,p.z+=f.z,p.normalize(),l.push(p.x,p.y,p.z),f.copy(m)}for(let y=0;y<=n;y++){const w=i+y*h*r,b=Math.sin(w),S=Math.cos(w);for(let _=0;_<=e.length-1;_++){d.x=e[_].x*b,d.y=e[_].y,d.z=e[_].x*S,a.push(d.x,d.y,d.z),u.x=y/n,u.y=_/(e.length-1),o.push(u.x,u.y);const E=l[3*_+0]*b,x=l[3*_+1],A=l[3*_+0]*S;c.push(E,x,A)}}for(let y=0;y<n;y++)for(let w=0;w<e.length-1;w++){const b=w+y*e.length,S=b,_=b+e.length,E=b+e.length+1,x=b+1;s.push(S,_,x),s.push(E,x,_)}this.setIndex(s),this.setAttribute("position",new Pe(a,3)),this.setAttribute("uv",new Pe(o,2)),this.setAttribute("normal",new Pe(c,3))}static fromJSON(e){return new $u(e.points,e.segments,e.phiStart,e.phiLength)}}class uc extends Ge{constructor(e=1,n=1,i=1,r=8,s=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const h=[],d=[],u=[],p=[];let m=0;const f=[],g=i/2;let v=0;y(),a===!1&&(e>0&&w(!0),n>0&&w(!1)),this.setIndex(h),this.setAttribute("position",new Pe(d,3)),this.setAttribute("normal",new Pe(u,3)),this.setAttribute("uv",new Pe(p,2));function y(){const b=new T,S=new T;let _=0;const E=(n-e)/i;for(let x=0;x<=s;x++){const A=[],M=x/s,C=M*(n-e)+e;for(let F=0;F<=r;F++){const $=F/r,I=$*l+o,Z=Math.sin(I),W=Math.cos(I);S.x=C*Z,S.y=-M*i+g,S.z=C*W,d.push(S.x,S.y,S.z),b.set(Z,E,W).normalize(),u.push(b.x,b.y,b.z),p.push($,1-M),A.push(m++)}f.push(A)}for(let x=0;x<r;x++)for(let A=0;A<s;A++){const M=f[A][x],C=f[A+1][x],F=f[A+1][x+1],$=f[A][x+1];h.push(M,C,$),h.push(C,F,$),_+=6}c.addGroup(v,_,0),v+=_}function w(b){const S=m,_=new j,E=new T;let x=0;const A=b===!0?e:n,M=b===!0?1:-1;for(let F=1;F<=r;F++)d.push(0,g*M,0),u.push(0,M,0),p.push(.5,.5),m++;const C=m;for(let F=0;F<=r;F++){const I=F/r*l+o,Z=Math.cos(I),W=Math.sin(I);E.x=A*W,E.y=g*M,E.z=A*Z,d.push(E.x,E.y,E.z),u.push(0,M,0),_.x=Z*.5+.5,_.y=W*.5*M+.5,p.push(_.x,_.y),m++}for(let F=0;F<r;F++){const $=S+F,I=C+F;b===!0?h.push(I,I+1,$):h.push(I+1,I,$),x+=3}c.addGroup(v,x,b===!0?1:2),v+=x}}static fromJSON(e){return new uc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Yu extends uc{constructor(e=1,n=1,i=8,r=1,s=!1,a=0,o=Math.PI*2){super(0,e,n,i,r,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Yu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class dc extends Ge{constructor(e=[],n=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:n,radius:i,detail:r};const s=[],a=[];o(r),c(i),h(),this.setAttribute("position",new Pe(s,3)),this.setAttribute("normal",new Pe(s.slice(),3)),this.setAttribute("uv",new Pe(a,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const w=new T,b=new T,S=new T;for(let _=0;_<n.length;_+=3)p(n[_+0],w),p(n[_+1],b),p(n[_+2],S),l(w,b,S,y)}function l(y,w,b,S){const _=S+1,E=[];for(let x=0;x<=_;x++){E[x]=[];const A=y.clone().lerp(b,x/_),M=w.clone().lerp(b,x/_),C=_-x;for(let F=0;F<=C;F++)F===0&&x===_?E[x][F]=A:E[x][F]=A.clone().lerp(M,F/C)}for(let x=0;x<_;x++)for(let A=0;A<2*(_-x)-1;A++){const M=Math.floor(A/2);A%2===0?(u(E[x][M+1]),u(E[x+1][M]),u(E[x][M])):(u(E[x][M+1]),u(E[x+1][M+1]),u(E[x+1][M]))}}function c(y){const w=new T;for(let b=0;b<s.length;b+=3)w.x=s[b+0],w.y=s[b+1],w.z=s[b+2],w.normalize().multiplyScalar(y),s[b+0]=w.x,s[b+1]=w.y,s[b+2]=w.z}function h(){const y=new T;for(let w=0;w<s.length;w+=3){y.x=s[w+0],y.y=s[w+1],y.z=s[w+2];const b=g(y)/2/Math.PI+.5,S=v(y)/Math.PI+.5;a.push(b,1-S)}m(),d()}function d(){for(let y=0;y<a.length;y+=6){const w=a[y+0],b=a[y+2],S=a[y+4],_=Math.max(w,b,S),E=Math.min(w,b,S);_>.9&&E<.1&&(w<.2&&(a[y+0]+=1),b<.2&&(a[y+2]+=1),S<.2&&(a[y+4]+=1))}}function u(y){s.push(y.x,y.y,y.z)}function p(y,w){const b=y*3;w.x=e[b+0],w.y=e[b+1],w.z=e[b+2]}function m(){const y=new T,w=new T,b=new T,S=new T,_=new j,E=new j,x=new j;for(let A=0,M=0;A<s.length;A+=9,M+=6){y.set(s[A+0],s[A+1],s[A+2]),w.set(s[A+3],s[A+4],s[A+5]),b.set(s[A+6],s[A+7],s[A+8]),_.set(a[M+0],a[M+1]),E.set(a[M+2],a[M+3]),x.set(a[M+4],a[M+5]),S.copy(y).add(w).add(b).divideScalar(3);const C=g(S);f(_,M+0,y,C),f(E,M+2,w,C),f(x,M+4,b,C)}}function f(y,w,b,S){S<0&&y.x===1&&(a[w]=y.x-1),b.x===0&&b.z===0&&(a[w]=S/2/Math.PI+.5)}function g(y){return Math.atan2(y.z,-y.x)}function v(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}static fromJSON(e){return new dc(e.vertices,e.indices,e.radius,e.details)}}class Zu extends dc{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,n),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new Zu(e.radius,e.detail)}}new T;new T;new T;new qt;class mi extends Vl{constructor(e){super(e),this.uuid=pi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const n=[];for(let i=0,r=this.holes.length;i<r;i++)n[i]=this.holes[i].getPoints(e);return n}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let n=0,i=this.holes.length;n<i;n++){const r=this.holes[n];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(new Vl().fromJSON(r))}return this}}const aM={triangulate:function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let s=Hg(t,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,d,u,p;if(i&&(s=uM(t,e,s,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let m=n;m<r;m+=n)d=t[m],u=t[m+1],d<o&&(o=d),u<l&&(l=u),d>c&&(c=d),u>h&&(h=u);p=Math.max(c-o,h-l),p=p!==0?1/p:0}return ho(s,a,n,o,l,p),a}};function Hg(t,e,n,i,r){let s,a;if(r===wM(t,e,n,i)>0)for(s=e;s<n;s+=i)a=lf(s,t[s],t[s+1],a);else for(s=n-i;s>=e;s-=i)a=lf(s,t[s],t[s+1],a);return a&&pc(a,a.next)&&(po(a),a=a.next),a}function Pr(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(pc(n,n.next)||Nt(n.prev,n,n.next)===0)){if(po(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function ho(t,e,n,i,r,s,a){if(!t)return;!a&&s&&gM(t,i,r,s);let o=t,l,c;for(;t.prev!==t.next;){if(l=t.prev,c=t.next,s?lM(t,i,r,s):oM(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),po(t),t=c.next,o=c.next;continue}if(t=c,t===o){a?a===1?(t=cM(Pr(t),e,n),ho(t,e,n,i,r,s,2)):a===2&&hM(t,e,n,i,r,s):ho(Pr(t),e,n,i,r,s,1);break}}}function oM(t){const e=t.prev,n=t,i=t.next;if(Nt(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Xs(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Nt(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function lM(t,e,n,i){const r=t.prev,s=t,a=t.next;if(Nt(r,s,a)>=0)return!1;const o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,c=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,h=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,d=Jh(o,l,e,n,i),u=Jh(c,h,e,n,i);let p=t.prevZ,m=t.nextZ;for(;p&&p.z>=d&&m&&m.z<=u;){if(p!==t.prev&&p!==t.next&&Xs(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Nt(p.prev,p,p.next)>=0||(p=p.prevZ,m!==t.prev&&m!==t.next&&Xs(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&Nt(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;p&&p.z>=d;){if(p!==t.prev&&p!==t.next&&Xs(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Nt(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=u;){if(m!==t.prev&&m!==t.next&&Xs(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&Nt(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function cM(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!pc(r,s)&&Gg(r,i,i.next,s)&&uo(r,s)&&uo(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),po(i),po(i.next),i=t=s),i=i.next}while(i!==t);return Pr(i)}function hM(t,e,n,i,r,s){let a=t;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&xM(a,o)){let l=Wg(a,o);a=Pr(a,a.next),l=Pr(l,l.next),ho(a,e,n,i,r,s),ho(l,e,n,i,r,s);return}o=o.next}a=a.next}while(a!==t)}function uM(t,e,n,i){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:t.length,c=Hg(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(yM(c));for(r.sort(dM),s=0;s<r.length;s++)pM(r[s],n),n=Pr(n,n.next);return n}function dM(t,e){return t.x-e.x}function pM(t,e){if(e=fM(t,e),e){const n=Wg(e,t);Pr(e,e.next),Pr(n,n.next)}}function fM(t,e){let n=e;const i=t.x,r=t.y;let s=-1/0,a;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const u=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(u<=i&&u>s){if(s=u,u===i){if(r===n.y)return n;if(r===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(i===s)return a;const o=a,l=a.x,c=a.y;let h=1/0,d;n=a;do i>=n.x&&n.x>=l&&i!==n.x&&Xs(r<c?i:s,r,l,c,r<c?s:i,r,n.x,n.y)&&(d=Math.abs(r-n.y)/(i-n.x),uo(n,t)&&(d<h||d===h&&(n.x>a.x||n.x===a.x&&mM(a,n)))&&(a=n,h=d)),n=n.next;while(n!==o);return a}function mM(t,e){return Nt(t.prev,t,e.prev)<0&&Nt(e.next,t,t.next)<0}function gM(t,e,n,i){let r=t;do r.z===null&&(r.z=Jh(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,vM(r)}function vM(t){let e,n,i,r,s,a,o,l,c=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(a>1);return t}function Jh(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function yM(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function Xs(t,e,n,i,r,s,a,o){return(r-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(i-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(r-a)*(i-o)>=0}function xM(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!bM(t,e)&&(uo(t,e)&&uo(e,t)&&_M(t,e)&&(Nt(t.prev,t,e.prev)||Nt(t,e.prev,e))||pc(t,e)&&Nt(t.prev,t,t.next)>0&&Nt(e.prev,e,e.next)>0)}function Nt(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function pc(t,e){return t.x===e.x&&t.y===e.y}function Gg(t,e,n,i){const r=cl(Nt(t,e,n)),s=cl(Nt(t,e,i)),a=cl(Nt(n,i,t)),o=cl(Nt(n,i,e));return!!(r!==s&&a!==o||r===0&&ll(t,n,e)||s===0&&ll(t,i,e)||a===0&&ll(n,t,i)||o===0&&ll(n,e,i))}function ll(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function cl(t){return t>0?1:t<0?-1:0}function bM(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Gg(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function uo(t,e){return Nt(t.prev,t,t.next)<0?Nt(t,e,t.next)>=0&&Nt(t,t.prev,e)>=0:Nt(t,e,t.prev)<0||Nt(t,t.next,e)<0}function _M(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function Wg(t,e){const n=new $h(t.i,t.x,t.y),i=new $h(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function lf(t,e,n,i){const r=new $h(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function po(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function $h(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function wM(t,e,n,i){let r=0;for(let s=e,a=n-i;s<n;s+=i)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}class tr{static area(e){const n=e.length;let i=0;for(let r=n-1,s=0;s<n;r=s++)i+=e[r].x*e[s].y-e[s].x*e[r].y;return i*.5}static isClockWise(e){return tr.area(e)<0}static triangulateShape(e,n){const i=[],r=[],s=[];cf(e),hf(i,e);let a=e.length;n.forEach(cf);for(let l=0;l<n.length;l++)r.push(a),a+=n[l].length,hf(i,n[l]);const o=aM.triangulate(i,r);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function cf(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function hf(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class ma extends Ge{constructor(e=new mi([new j(.5,.5),new j(-.5,.5),new j(-.5,-.5),new j(.5,-.5)]),n={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new Pe(r,3)),this.setAttribute("uv",new Pe(s,2)),this.computeVertexNormals();function a(o){const l=[],c=n.curveSegments!==void 0?n.curveSegments:12,h=n.steps!==void 0?n.steps:1;let d=n.depth!==void 0?n.depth:1,u=n.bevelEnabled!==void 0?n.bevelEnabled:!0,p=n.bevelThickness!==void 0?n.bevelThickness:.2,m=n.bevelSize!==void 0?n.bevelSize:p-.1,f=n.bevelOffset!==void 0?n.bevelOffset:0,g=n.bevelSegments!==void 0?n.bevelSegments:3;const v=n.extrudePath,y=n.UVGenerator!==void 0?n.UVGenerator:SM;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=n.amount);let w,b=!1,S,_,E,x;v&&(w=v.getSpacedPoints(h),b=!0,u=!1,S=v.computeFrenetFrames(h,!1),_=new T,E=new T,x=new T),u||(g=0,p=0,m=0,f=0);const A=o.extractPoints(c);let M=A.shape;const C=A.holes;if(!tr.isClockWise(M)){M=M.reverse();for(let G=0,X=C.length;G<X;G++){const ee=C[G];tr.isClockWise(ee)&&(C[G]=ee.reverse())}}const $=tr.triangulateShape(M,C),I=M;for(let G=0,X=C.length;G<X;G++){const ee=C[G];M=M.concat(ee)}function Z(G,X,ee){return X||console.error("THREE.ExtrudeGeometry: vec does not exist"),X.clone().multiplyScalar(ee).add(G)}const W=M.length,q=$.length;function k(G,X,ee){let se,he,fe;const ge=G.x-X.x,_e=G.y-X.y,Ne=ee.x-G.x,Be=ee.y-G.y,D=ge*ge+_e*_e,L=ge*Be-_e*Ne;if(Math.abs(L)>Number.EPSILON){const ce=Math.sqrt(D),me=Math.sqrt(Ne*Ne+Be*Be),Te=X.x-_e/ce,Ce=X.y+ge/ce,Ue=ee.x-Be/me,R=ee.y+Ne/me,ye=((Ue-Te)*Be-(R-Ce)*Ne)/(ge*Be-_e*Ne);se=Te+ge*ye-G.x,he=Ce+_e*ye-G.y;const Ee=se*se+he*he;if(Ee<=2)return new j(se,he);fe=Math.sqrt(Ee/2)}else{let ce=!1;ge>Number.EPSILON?Ne>Number.EPSILON&&(ce=!0):ge<-Number.EPSILON?Ne<-Number.EPSILON&&(ce=!0):Math.sign(_e)===Math.sign(Be)&&(ce=!0),ce?(se=-_e,he=ge,fe=Math.sqrt(D)):(se=ge,he=_e,fe=Math.sqrt(D/2))}return new j(se/fe,he/fe)}const N=[];for(let G=0,X=I.length,ee=X-1,se=G+1;G<X;G++,ee++,se++)ee===X&&(ee=0),se===X&&(se=0),N[G]=k(I[G],I[ee],I[se]);const O=[];let V,z=N.concat();for(let G=0,X=C.length;G<X;G++){const ee=C[G];V=[];for(let se=0,he=ee.length,fe=he-1,ge=se+1;se<he;se++,fe++,ge++)fe===he&&(fe=0),ge===he&&(ge=0),V[se]=k(ee[se],ee[fe],ee[ge]);O.push(V),z=z.concat(V)}for(let G=0;G<g;G++){const X=G/g,ee=p*Math.cos(X*Math.PI/2),se=m*Math.sin(X*Math.PI/2)+f;for(let he=0,fe=I.length;he<fe;he++){const ge=Z(I[he],N[he],se);oe(ge.x,ge.y,-ee)}for(let he=0,fe=C.length;he<fe;he++){const ge=C[he];V=O[he];for(let _e=0,Ne=ge.length;_e<Ne;_e++){const Be=Z(ge[_e],V[_e],se);oe(Be.x,Be.y,-ee)}}}const H=m+f;for(let G=0;G<W;G++){const X=u?Z(M[G],z[G],H):M[G];b?(E.copy(S.normals[0]).multiplyScalar(X.x),_.copy(S.binormals[0]).multiplyScalar(X.y),x.copy(w[0]).add(E).add(_),oe(x.x,x.y,x.z)):oe(X.x,X.y,0)}for(let G=1;G<=h;G++)for(let X=0;X<W;X++){const ee=u?Z(M[X],z[X],H):M[X];b?(E.copy(S.normals[G]).multiplyScalar(ee.x),_.copy(S.binormals[G]).multiplyScalar(ee.y),x.copy(w[G]).add(E).add(_),oe(x.x,x.y,x.z)):oe(ee.x,ee.y,d/h*G)}for(let G=g-1;G>=0;G--){const X=G/g,ee=p*Math.cos(X*Math.PI/2),se=m*Math.sin(X*Math.PI/2)+f;for(let he=0,fe=I.length;he<fe;he++){const ge=Z(I[he],N[he],se);oe(ge.x,ge.y,d+ee)}for(let he=0,fe=C.length;he<fe;he++){const ge=C[he];V=O[he];for(let _e=0,Ne=ge.length;_e<Ne;_e++){const Be=Z(ge[_e],V[_e],se);b?oe(Be.x,Be.y+w[h-1].y,w[h-1].x+ee):oe(Be.x,Be.y,d+ee)}}}J(),ne();function J(){const G=r.length/3;if(u){let X=0,ee=W*X;for(let se=0;se<q;se++){const he=$[se];ie(he[2]+ee,he[1]+ee,he[0]+ee)}X=h+g*2,ee=W*X;for(let se=0;se<q;se++){const he=$[se];ie(he[0]+ee,he[1]+ee,he[2]+ee)}}else{for(let X=0;X<q;X++){const ee=$[X];ie(ee[2],ee[1],ee[0])}for(let X=0;X<q;X++){const ee=$[X];ie(ee[0]+W*h,ee[1]+W*h,ee[2]+W*h)}}i.addGroup(G,r.length/3-G,0)}function ne(){const G=r.length/3;let X=0;B(I,X),X+=I.length;for(let ee=0,se=C.length;ee<se;ee++){const he=C[ee];B(he,X),X+=he.length}i.addGroup(G,r.length/3-G,1)}function B(G,X){let ee=G.length;for(;--ee>=0;){const se=ee;let he=ee-1;he<0&&(he=G.length-1);for(let fe=0,ge=h+g*2;fe<ge;fe++){const _e=W*fe,Ne=W*(fe+1),Be=X+se+_e,D=X+he+_e,L=X+he+Ne,ce=X+se+Ne;le(Be,D,L,ce)}}}function oe(G,X,ee){l.push(G),l.push(X),l.push(ee)}function ie(G,X,ee){K(G),K(X),K(ee);const se=r.length/3,he=y.generateTopUV(i,r,se-3,se-2,se-1);pe(he[0]),pe(he[1]),pe(he[2])}function le(G,X,ee,se){K(G),K(X),K(se),K(X),K(ee),K(se);const he=r.length/3,fe=y.generateSideWallUV(i,r,he-6,he-3,he-2,he-1);pe(fe[0]),pe(fe[1]),pe(fe[3]),pe(fe[1]),pe(fe[2]),pe(fe[3])}function K(G){r.push(l[G*3+0]),r.push(l[G*3+1]),r.push(l[G*3+2])}function pe(G){s.push(G.x),s.push(G.y)}}}toJSON(){const e=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return MM(n,i,e)}static fromJSON(e,n){const i=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=n[e.shapes[s]];i.push(o)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new Vg[r.type]().fromJSON(r)),new ma(i,e.options)}}const SM={generateTopUV:function(t,e,n,i,r){const s=e[n*3],a=e[n*3+1],o=e[i*3],l=e[i*3+1],c=e[r*3],h=e[r*3+1];return[new j(s,a),new j(o,l),new j(c,h)]},generateSideWallUV:function(t,e,n,i,r,s){const a=e[n*3],o=e[n*3+1],l=e[n*3+2],c=e[i*3],h=e[i*3+1],d=e[i*3+2],u=e[r*3],p=e[r*3+1],m=e[r*3+2],f=e[s*3],g=e[s*3+1],v=e[s*3+2];return Math.abs(o-h)<Math.abs(a-c)?[new j(a,1-l),new j(c,1-d),new j(u,1-m),new j(f,1-v)]:[new j(o,1-l),new j(h,1-d),new j(p,1-m),new j(g,1-v)]}};function MM(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const s=t[i];n.shapes.push(s.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class Ku extends dc{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,n),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new Ku(e.radius,e.detail)}}class fc extends Ge{constructor(e=new mi([new j(0,.5),new j(-.5,-.5),new j(.5,-.5)]),n=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:n};const i=[],r=[],s=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(o,l,h),o+=l,l=0;this.setIndex(i),this.setAttribute("position",new Pe(r,3)),this.setAttribute("normal",new Pe(s,3)),this.setAttribute("uv",new Pe(a,2));function c(h){const d=r.length/3,u=h.extractPoints(n);let p=u.shape;const m=u.holes;tr.isClockWise(p)===!1&&(p=p.reverse());for(let g=0,v=m.length;g<v;g++){const y=m[g];tr.isClockWise(y)===!0&&(m[g]=y.reverse())}const f=tr.triangulateShape(p,m);for(let g=0,v=m.length;g<v;g++){const y=m[g];p=p.concat(y)}for(let g=0,v=p.length;g<v;g++){const y=p[g];r.push(y.x,y.y,0),s.push(0,0,1),a.push(y.x,y.y)}for(let g=0,v=f.length;g<v;g++){const y=f[g],w=y[0]+d,b=y[1]+d,S=y[2]+d;i.push(w,b,S),l+=3}}}toJSON(){const e=super.toJSON(),n=this.parameters.shapes;return TM(n,e)}static fromJSON(e,n){const i=[];for(let r=0,s=e.shapes.length;r<s;r++){const a=n[e.shapes[r]];i.push(a)}return new fc(i,e.curveSegments)}}function TM(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class mc extends Ge{constructor(e=1,n=32,i=16,r=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:a,thetaLength:o},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const l=Math.min(a+o,Math.PI);let c=0;const h=[],d=new T,u=new T,p=[],m=[],f=[],g=[];for(let v=0;v<=i;v++){const y=[],w=v/i;let b=0;v==0&&a==0?b=.5/n:v==i&&l==Math.PI&&(b=-.5/n);for(let S=0;S<=n;S++){const _=S/n;d.x=-e*Math.cos(r+_*s)*Math.sin(a+w*o),d.y=e*Math.cos(a+w*o),d.z=e*Math.sin(r+_*s)*Math.sin(a+w*o),m.push(d.x,d.y,d.z),u.copy(d).normalize(),f.push(u.x,u.y,u.z),g.push(_+b,1-w),y.push(c++)}h.push(y)}for(let v=0;v<i;v++)for(let y=0;y<n;y++){const w=h[v][y+1],b=h[v][y],S=h[v+1][y],_=h[v+1][y+1];(v!==0||a>0)&&p.push(w,b,_),(v!==i-1||l<Math.PI)&&p.push(b,S,_)}this.setIndex(p),this.setAttribute("position",new Pe(m,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(g,2))}static fromJSON(e){return new mc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Qu extends Ge{constructor(e=1,n=.4,i=64,r=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:a},i=Math.floor(i),r=Math.floor(r);const o=[],l=[],c=[],h=[],d=new T,u=new T,p=new T,m=new T,f=new T,g=new T,v=new T;for(let w=0;w<=i;++w){const b=w/i*s*Math.PI*2;y(b,s,a,e,p),y(b+.01,s,a,e,m),g.subVectors(m,p),v.addVectors(m,p),f.crossVectors(g,v),v.crossVectors(f,g),f.normalize(),v.normalize();for(let S=0;S<=r;++S){const _=S/r*Math.PI*2,E=-n*Math.cos(_),x=n*Math.sin(_);d.x=p.x+(E*v.x+x*f.x),d.y=p.y+(E*v.y+x*f.y),d.z=p.z+(E*v.z+x*f.z),l.push(d.x,d.y,d.z),u.subVectors(d,p).normalize(),c.push(u.x,u.y,u.z),h.push(w/i),h.push(S/r)}}for(let w=1;w<=i;w++)for(let b=1;b<=r;b++){const S=(r+1)*(w-1)+(b-1),_=(r+1)*w+(b-1),E=(r+1)*w+b,x=(r+1)*(w-1)+b;o.push(S,_,x),o.push(_,E,x)}this.setIndex(o),this.setAttribute("position",new Pe(l,3)),this.setAttribute("normal",new Pe(c,3)),this.setAttribute("uv",new Pe(h,2));function y(w,b,S,_,E){const x=Math.cos(w),A=Math.sin(w),M=S/b*w,C=Math.cos(M);E.x=_*(2+C)*.5*x,E.y=_*(2+C)*A*.5,E.z=_*Math.sin(M)*.5}}static fromJSON(e){return new Qu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class jg extends rn{constructor(e){super(),this.type="ShadowMaterial",this.color=new Ae(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}jg.prototype.isShadowMaterial=!0;class qg extends Jn{constructor(e){super(e),this.type="RawShaderMaterial"}}qg.prototype.isRawShaderMaterial=!0;class ed extends rn{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}ed.prototype.isMeshStandardMaterial=!0;class Xg extends ed{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new j(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Qt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(n){this.ior=(1+.4*n)/(1-.4*n)}}),this.sheenColor=new Ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ae(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Xg.prototype.isMeshPhysicalMaterial=!0;class Jg extends rn{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Ae(16777215),this.specular=new Ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ic,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}Jg.prototype.isMeshPhongMaterial=!0;class $g extends rn{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}$g.prototype.isMeshToonMaterial=!0;class Yg extends rn{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Yg.prototype.isMeshNormalMaterial=!0;class Zg extends rn{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ic,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Zg.prototype.isMeshLambertMaterial=!0;class Kg extends rn{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}Kg.prototype.isMeshMatcapMaterial=!0;class Qg extends Yn{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Qg.prototype.isLineDashedMaterial=!0;const EM={ShadowMaterial:jg,SpriteMaterial:qu,RawShaderMaterial:qg,ShaderMaterial:Jn,PointsMaterial:Xu,MeshPhysicalMaterial:Xg,MeshStandardMaterial:ed,MeshPhongMaterial:Jg,MeshToonMaterial:$g,MeshNormalMaterial:Yg,MeshLambertMaterial:Zg,MeshDepthMaterial:Gu,MeshDistanceMaterial:Wu,MeshBasicMaterial:Cr,MeshMatcapMaterial:Kg,LineDashedMaterial:Qg,LineBasicMaterial:Yn,Material:rn};rn.fromType=function(t){return new EM[t]};const It={arraySlice:function(t,e,n){return It.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(r,s){return t[r]-t[s]}const n=t.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,a=0;a!==i;++s){const o=n[s]*e;for(let l=0;l!==e;++l)r[a++]=t[o+l]}return r},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;s!==void 0&&s[i]===void 0;)s=t[r++];if(s===void 0)return;let a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),n.push.apply(n,a)),s=t[r++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),n.push(a)),s=t[r++];while(s!==void 0)},subclip:function(t,e,n,i,r=30){const s=t.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),d=[],u=[];for(let p=0;p<c.times.length;++p){const m=c.times[p]*r;if(!(m<n||m>=i)){d.push(c.times[p]);for(let f=0;f<h;++f)u.push(c.values[p*h+f])}}d.length!==0&&(c.times=It.convertArray(d,c.times.constructor),c.values=It.convertArray(u,c.values.constructor),a.push(c))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let a=0;a<r;++a){const o=n.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=t.tracks.find(function(v){return v.name===o.name&&v.ValueTypeName===l});if(c===void 0)continue;let h=0;const d=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=d/3);let u=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=p/3);const m=o.times.length-1;let f;if(s<=o.times[0]){const v=h,y=d-h;f=It.arraySlice(o.values,v,y)}else if(s>=o.times[m]){const v=m*d+h,y=v+d-h;f=It.arraySlice(o.values,v,y)}else{const v=o.createInterpolant(),y=h,w=d-h;v.evaluate(s),f=It.arraySlice(v.resultBuffer,y,w)}l==="quaternion"&&new ln().fromArray(f).normalize().conjugate().toArray(f);const g=c.times.length;for(let v=0;v<g;++v){const y=v*p+u;if(l==="quaternion")ln.multiplyQuaternionsFlat(c.values,y,f,0,c.values,y);else{const w=p-u*2;for(let b=0;b<w;++b)c.values[y+b]-=f[b]}}}return t.blendMode=yg,t}};class Dr{constructor(e,n,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new n.constructor(i),this.sampleValues=n,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const n=this.parameterPositions;let i=this._cachedIndex,r=n[i],s=n[i-1];e:{t:{let a;n:{i:if(!(e<r)){for(let o=i+2;;){if(r===void 0){if(e<s)break i;return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,e,s)}if(i===o)break;if(s=r,r=n[++i],e<r)break t}a=n.length;break n}if(!(e>=s)){const o=n[1];e<o&&(i=2,s=o);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(i===l)break;if(r=s,s=n[--i-1],e>=s)break t}a=i,i=0;break n}break e}for(;i<a;){const o=i+a>>>1;e<n[o]?a=o:i=o+1}if(r=n[i],s=n[i-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===void 0)return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,s,e)}this._cachedIndex=i,this.intervalChanged_(i,s,r)}return this.interpolate_(i,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const n=this.resultBuffer,i=this.sampleValues,r=this.valueSize,s=e*r;for(let a=0;a!==r;++a)n[a]=i[s+a];return n}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Dr.prototype.beforeStart_=Dr.prototype.copySampleValue_;Dr.prototype.afterEnd_=Dr.prototype.copySampleValue_;class AM extends Dr{constructor(e,n,i,r){super(e,n,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Gs,endingEnd:Gs}}intervalChanged_(e,n,i){const r=this.parameterPositions;let s=e-2,a=e+1,o=r[s],l=r[a];if(o===void 0)switch(this.getSettings_().endingStart){case Ws:s=e,o=2*n-i;break;case Bl:s=r.length-2,o=n+r[s]-r[s+1];break;default:s=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Ws:a=e,l=2*i-n;break;case Bl:a=1,l=i+r[1]-r[0];break;default:a=e-1,l=n}const c=(i-n)*.5,h=this.valueSize;this._weightPrev=c/(n-o),this._weightNext=c/(l-i),this._offsetPrev=s*h,this._offsetNext=a*h}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,d=this._offsetNext,u=this._weightPrev,p=this._weightNext,m=(i-n)/(r-n),f=m*m,g=f*m,v=-u*g+2*u*f-u*m,y=(1+u)*g+(-1.5-2*u)*f+(-.5+u)*m+1,w=(-1-p)*g+(1.5+p)*f+.5*m,b=p*g-p*f;for(let S=0;S!==o;++S)s[S]=v*a[h+S]+y*a[c+S]+w*a[l+S]+b*a[d+S];return s}}class e0 extends Dr{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(i-n)/(r-n),d=1-h;for(let u=0;u!==o;++u)s[u]=a[c+u]*d+a[l+u]*h;return s}}class CM extends Dr{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class ki{constructor(e,n,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(n===void 0||n.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=It.convertArray(n,this.TimeBufferType),this.values=It.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const n=e.constructor;let i;if(n.toJSON!==this.toJSON)i=n.toJSON(e);else{i={name:e.name,times:It.convertArray(e.times,Array),values:It.convertArray(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new CM(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new e0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new AM(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let n;switch(e){case Nl:n=this.InterpolantFactoryMethodDiscrete;break;case zl:n=this.InterpolantFactoryMethodLinear;break;case Nc:n=this.InterpolantFactoryMethodSmooth;break}if(n===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=n,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Nl;case this.InterpolantFactoryMethodLinear:return zl;case this.InterpolantFactoryMethodSmooth:return Nc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]+=e}return this}scale(e){if(e!==1){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]*=e}return this}trim(e,n){const i=this.times,r=i.length;let s=0,a=r-1;for(;s!==r&&i[s]<e;)++s;for(;a!==-1&&i[a]>n;)--a;if(++a,s!==0||a!==r){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=It.arraySlice(i,s,a),this.values=It.arraySlice(this.values,s*o,a*o)}return this}validate(){let e=!0;const n=this.getValueSize();n-Math.floor(n)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(r!==void 0&&It.isTypedArray(r))for(let o=0,l=r.length;o!==l;++o){const c=r[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=It.arraySlice(this.times),n=It.arraySlice(this.values),i=this.getValueSize(),r=this.getInterpolation()===Nc,s=e.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const c=e[o],h=e[o+1];if(c!==h&&(o!==1||c!==e[0]))if(r)l=!0;else{const d=o*i,u=d-i,p=d+i;for(let m=0;m!==i;++m){const f=n[d+m];if(f!==n[u+m]||f!==n[p+m]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const d=o*i,u=a*i;for(let p=0;p!==i;++p)n[u+p]=n[d+p]}++a}}if(s>0){e[a]=e[s];for(let o=s*i,l=a*i,c=0;c!==i;++c)n[l+c]=n[o+c];++a}return a!==e.length?(this.times=It.arraySlice(e,0,a),this.values=It.arraySlice(n,0,a*i)):(this.times=e,this.values=n),this}clone(){const e=It.arraySlice(this.times,0),n=It.arraySlice(this.values,0),i=this.constructor,r=new i(this.name,e,n);return r.createInterpolant=this.createInterpolant,r}}ki.prototype.TimeBufferType=Float32Array;ki.prototype.ValueBufferType=Float32Array;ki.prototype.DefaultInterpolation=zl;class ga extends ki{}ga.prototype.ValueTypeName="bool";ga.prototype.ValueBufferType=Array;ga.prototype.DefaultInterpolation=Nl;ga.prototype.InterpolantFactoryMethodLinear=void 0;ga.prototype.InterpolantFactoryMethodSmooth=void 0;class t0 extends ki{}t0.prototype.ValueTypeName="color";class Hl extends ki{}Hl.prototype.ValueTypeName="number";class LM extends Dr{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(i-n)/(r-n);let c=e*o;for(let h=c+o;c!==h;c+=4)ln.slerpFlat(s,0,a,c-o,a,c,l);return s}}class To extends ki{InterpolantFactoryMethodLinear(e){return new LM(this.times,this.values,this.getValueSize(),e)}}To.prototype.ValueTypeName="quaternion";To.prototype.DefaultInterpolation=zl;To.prototype.InterpolantFactoryMethodSmooth=void 0;class va extends ki{}va.prototype.ValueTypeName="string";va.prototype.ValueBufferType=Array;va.prototype.DefaultInterpolation=Nl;va.prototype.InterpolantFactoryMethodLinear=void 0;va.prototype.InterpolantFactoryMethodSmooth=void 0;class Gl extends ki{}Gl.prototype.ValueTypeName="vector";class uf{constructor(e,n=-1,i,r=Bu){this.name=e,this.tracks=i,this.duration=n,this.blendMode=r,this.uuid=pi(),this.duration<0&&this.resetDuration()}static parse(e){const n=[],i=e.tracks,r=1/(e.fps||1);for(let a=0,o=i.length;a!==o;++a)n.push(DM(i[a]).scale(r));const s=new this(e.name,e.duration,n,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const n=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=i.length;s!==a;++s)n.push(ki.toJSON(i[s]));return r}static CreateFromMorphTargetSequence(e,n,i,r){const s=n.length,a=[];for(let o=0;o<s;o++){let l=[],c=[];l.push((o+s-1)%s,o,(o+1)%s),c.push(0,1,0);const h=It.getKeyframeOrder(l);l=It.sortedArray(l,1,h),c=It.sortedArray(c,1,h),!r&&l[0]===0&&(l.push(s),c.push(c[0])),a.push(new Hl(".morphTargetInfluences["+n[o].name+"]",l,c).scale(1/i))}return new this(e,-1,a)}static findByName(e,n){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===n)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,n,i){const r={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(s);if(h&&h.length>1){const d=h[1];let u=r[d];u||(r[d]=u=[]),u.push(c)}}const a=[];for(const o in r)a.push(this.CreateFromMorphTargetSequence(o,r[o],n,i));return a}static parseAnimation(e,n){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(d,u,p,m,f){if(p.length!==0){const g=[],v=[];It.flattenJSON(p,g,v,m),g.length!==0&&f.push(new d(u,g,v))}},r=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let d=0;d<c.length;d++){const u=c[d].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const p={};let m;for(m=0;m<u.length;m++)if(u[m].morphTargets)for(let f=0;f<u[m].morphTargets.length;f++)p[u[m].morphTargets[f]]=-1;for(const f in p){const g=[],v=[];for(let y=0;y!==u[m].morphTargets.length;++y){const w=u[m];g.push(w.time),v.push(w.morphTarget===f?1:0)}r.push(new Hl(".morphTargetInfluence["+f+"]",g,v))}l=p.length*a}else{const p=".bones["+n[d].name+"]";i(Gl,p+".position",u,"pos",r),i(To,p+".quaternion",u,"rot",r),i(Gl,p+".scale",u,"scl",r)}}return r.length===0?null:new this(s,l,r,o)}resetDuration(){const e=this.tracks;let n=0;for(let i=0,r=e.length;i!==r;++i){const s=this.tracks[i];n=Math.max(n,s.times[s.times.length-1])}return this.duration=n,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let n=0;n<this.tracks.length;n++)e=e&&this.tracks[n].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function PM(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Hl;case"vector":case"vector2":case"vector3":case"vector4":return Gl;case"color":return t0;case"quaternion":return To;case"bool":case"boolean":return ga;case"string":return va}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function DM(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=PM(t.type);if(t.times===void 0){const n=[],i=[];It.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const ia={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class RM{constructor(e,n,i){const r=this;let s=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.itemStart=function(h){o++,s===!1&&r.onStart!==void 0&&r.onStart(h,a,o),s=!0},this.itemEnd=function(h){a++,r.onProgress!==void 0&&r.onProgress(h,a,o),a===o&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(h){r.onError!==void 0&&r.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,d){return c.push(h,d),this},this.removeHandler=function(h){const d=c.indexOf(h);return d!==-1&&c.splice(d,2),this},this.getHandler=function(h){for(let d=0,u=c.length;d<u;d+=2){const p=c[d],m=c[d+1];if(p.global&&(p.lastIndex=0),p.test(h))return m}return null}}}const OM=new RM;class Zn{constructor(e){this.manager=e!==void 0?e:OM,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(r,s){i.load(e,r,n,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Xi={};class ra extends Zn{constructor(e){super(e)}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ia.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{n&&n(s),this.manager.itemEnd(e)},0),s;if(Xi[e]!==void 0){Xi[e].push({onLoad:n,onProgress:i,onError:r});return}Xi[e]=[],Xi[e].push({onLoad:n,onProgress:i,onError:r});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body===void 0||c.body.getReader===void 0)return c;const h=Xi[e],d=c.body.getReader(),u=c.headers.get("Content-Length"),p=u?parseInt(u):0,m=p!==0;let f=0;const g=new ReadableStream({start(v){y();function y(){d.read().then(({done:w,value:b})=>{if(w)v.close();else{f+=b.byteLength;const S=new ProgressEvent("progress",{lengthComputable:m,loaded:f,total:p});for(let _=0,E=h.length;_<E;_++){const x=h[_];x.onProgress&&x.onProgress(S)}v.enqueue(b),y()}})}}});return new Response(g)}else throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o===void 0)return c.text();{const d=/charset="?([^;"\s]*)"?/i.exec(o),u=d&&d[1]?d[1].toLowerCase():void 0,p=new TextDecoder(u);return c.arrayBuffer().then(m=>p.decode(m))}}}).then(c=>{ia.add(e,c);const h=Xi[e];delete Xi[e];for(let d=0,u=h.length;d<u;d++){const p=h[d];p.onLoad&&p.onLoad(c)}}).catch(c=>{const h=Xi[e];if(h===void 0)throw this.manager.itemError(e),c;delete Xi[e];for(let d=0,u=h.length;d<u;d++){const p=h[d];p.onError&&p.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class n0 extends Zn{constructor(e){super(e)}load(e,n,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=ia.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){n&&n(a),s.manager.itemEnd(e)},0),a;const o=lo("img");function l(){h(),ia.add(e,this),n&&n(this),s.manager.itemEnd(e)}function c(d){h(),r&&r(d),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class IM extends Zn{constructor(e){super(e)}load(e,n,i,r){const s=new wo,a=new n0(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(e[c],function(h){s.images[c]=h,o++,o===6&&(s.needsUpdate=!0,n&&n(s))},void 0,r)}for(let c=0;c<e.length;++c)l(c);return s}}class NM extends Zn{constructor(e){super(e)}load(e,n,i,r){const s=new Bt,a=new n0(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,n!==void 0&&n(s)},i,r),s}}class vi extends ht{constructor(e,n=1){super(),this.type="Light",this.color=new Ae(e),this.intensity=n}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}}vi.prototype.isLight=!0;class Wl extends vi{constructor(e,n,i){super(e,i),this.type="HemisphereLight",this.position.copy(ht.DefaultUp),this.updateMatrix(),this.groundColor=new Ae(n)}copy(e){return vi.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Wl.prototype.isHemisphereLight=!0;const df=new Re,pf=new T,ff=new T;class td{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new j(512,512),this.map=null,this.mapPass=null,this.matrix=new Re,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new sc,this._frameExtents=new j(1,1),this._viewportCount=1,this._viewports=[new ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;pf.setFromMatrixPosition(e.matrixWorld),n.position.copy(pf),ff.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(ff),n.updateMatrixWorld(),df.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(df),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(n.projectionMatrix),i.multiply(n.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class i0 extends td{constructor(){super(new gn(50,1,.5,500)),this.focus=1}updateMatrices(e){const n=this.camera,i=oo*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||n.far;(i!==n.fov||r!==n.aspect||s!==n.far)&&(n.fov=i,n.aspect=r,n.far=s,n.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}i0.prototype.isSpotLightShadow=!0;class r0 extends vi{constructor(e,n,i=0,r=Math.PI/3,s=0,a=1){super(e,n),this.type="SpotLight",this.position.copy(ht.DefaultUp),this.updateMatrix(),this.target=new ht,this.distance=i,this.angle=r,this.penumbra=s,this.decay=a,this.shadow=new i0}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}r0.prototype.isSpotLight=!0;const mf=new Re,Na=new T,fh=new T;class s0 extends td{constructor(){super(new gn(90,1,.5,500)),this._frameExtents=new j(4,2),this._viewportCount=6,this._viewports=[new ct(2,1,1,1),new ct(0,1,1,1),new ct(3,1,1,1),new ct(1,1,1,1),new ct(3,0,1,1),new ct(1,0,1,1)],this._cubeDirections=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],this._cubeUps=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)]}updateMatrices(e,n=0){const i=this.camera,r=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Na.setFromMatrixPosition(e.matrixWorld),i.position.copy(Na),fh.copy(i.position),fh.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(fh),i.updateMatrixWorld(),r.makeTranslation(-Na.x,-Na.y,-Na.z),mf.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(mf)}}s0.prototype.isPointLightShadow=!0;class a0 extends vi{constructor(e,n,i=0,r=1){super(e,n),this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new s0}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}a0.prototype.isPointLight=!0;class o0 extends td{constructor(){super(new ac(-5,5,5,-5,.5,500))}}o0.prototype.isDirectionalLightShadow=!0;class l0 extends vi{constructor(e,n){super(e,n),this.type="DirectionalLight",this.position.copy(ht.DefaultUp),this.updateMatrix(),this.target=new ht,this.shadow=new o0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}l0.prototype.isDirectionalLight=!0;class zM extends vi{constructor(e,n){super(e,n),this.type="AmbientLight"}}zM.prototype.isAmbientLight=!0;class BM extends vi{constructor(e,n,i=10,r=10){super(e,n),this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const n=super.toJSON(e);return n.object.width=this.width,n.object.height=this.height,n}}BM.prototype.isRectAreaLight=!0;class c0{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new T)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.282095),n.addScaledVector(a[1],.488603*r),n.addScaledVector(a[2],.488603*s),n.addScaledVector(a[3],.488603*i),n.addScaledVector(a[4],1.092548*(i*r)),n.addScaledVector(a[5],1.092548*(r*s)),n.addScaledVector(a[6],.315392*(3*s*s-1)),n.addScaledVector(a[7],1.092548*(i*s)),n.addScaledVector(a[8],.546274*(i*i-r*r)),n}getIrradianceAt(e,n){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.886227),n.addScaledVector(a[1],2*.511664*r),n.addScaledVector(a[2],2*.511664*s),n.addScaledVector(a[3],2*.511664*i),n.addScaledVector(a[4],2*.429043*i*r),n.addScaledVector(a[5],2*.429043*r*s),n.addScaledVector(a[6],.743125*s*s-.247708),n.addScaledVector(a[7],2*.429043*i*s),n.addScaledVector(a[8],.429043*(i*i-r*r)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,n+r*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,n+r*3);return e}static getBasisAt(e,n){const i=e.x,r=e.y,s=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}c0.prototype.isSphericalHarmonics3=!0;class nd extends vi{constructor(e=new c0,n=1){super(void 0,n),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const n=super.toJSON(e);return n.object.sh=this.sh.toArray(),n}}nd.prototype.isLightProbe=!0;class FM{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let n="";for(let i=0,r=e.length;i<r;i++)n+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(n))}catch{return n}}static extractUrlBase(e){const n=e.lastIndexOf("/");return n===-1?"./":e.slice(0,n+1)}static resolveURL(e,n){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(n)&&/^\//.test(e)&&(n=n.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:n+e)}}class h0 extends Ge{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}h0.prototype.isInstancedBufferGeometry=!0;class id extends Zn{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new ra(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{n(s.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const n={},i={};function r(p,m){if(n[m]!==void 0)return n[m];const g=p.interleavedBuffers[m],v=s(p,g.buffer),y=Oo(g.type,v),w=new fa(y,g.stride);return w.uuid=g.uuid,n[m]=w,w}function s(p,m){if(i[m]!==void 0)return i[m];const g=p.arrayBuffers[m],v=new Uint32Array(g).buffer;return i[m]=v,v}const a=e.isInstancedBufferGeometry?new h0:new Ge,o=e.data.index;if(o!==void 0){const p=Oo(o.type,o.array);a.setIndex(new rt(p,1))}const l=e.data.attributes;for(const p in l){const m=l[p];let f;if(m.isInterleavedBufferAttribute){const g=r(e.data,m.data);f=new ns(g,m.itemSize,m.offset,m.normalized)}else{const g=Oo(m.type,m.array),v=m.isInstancedBufferAttribute?kl:rt;f=new v(g,m.itemSize,m.normalized)}m.name!==void 0&&(f.name=m.name),m.usage!==void 0&&f.setUsage(m.usage),m.updateRange!==void 0&&(f.updateRange.offset=m.updateRange.offset,f.updateRange.count=m.updateRange.count),a.setAttribute(p,f)}const c=e.data.morphAttributes;if(c)for(const p in c){const m=c[p],f=[];for(let g=0,v=m.length;g<v;g++){const y=m[g];let w;if(y.isInterleavedBufferAttribute){const b=r(e.data,y.data);w=new ns(b,y.itemSize,y.offset,y.normalized)}else{const b=Oo(y.type,y.array);w=new rt(b,y.itemSize,y.normalized)}y.name!==void 0&&(w.name=y.name),f.push(w)}a.morphAttributes[p]=f}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const d=e.data.groups||e.data.drawcalls||e.data.offsets;if(d!==void 0)for(let p=0,m=d.length;p!==m;++p){const f=d[p];a.addGroup(f.start,f.count,f.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const p=new T;u.center!==void 0&&p.fromArray(u.center),a.boundingSphere=new Xn(p,u.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class UM extends Zn{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=ia.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){n&&n(a),s.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){ia.add(e,l),n&&n(l),s.manager.itemEnd(e)}).catch(function(l){r&&r(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}UM.prototype.isImageBitmapLoader=!0;let hl;const kM={getContext:function(){return hl===void 0&&(hl=new(window.AudioContext||window.webkitAudioContext)),hl},setContext:function(t){hl=t}};class VM extends Zn{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new ra(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{const l=o.slice(0);kM.getContext().decodeAudioData(l,function(h){n(h)})}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}}class HM extends nd{constructor(e,n,i=1){super(void 0,i);const r=new Ae().set(e),s=new Ae().set(n),a=new T(r.r,r.g,r.b),o=new T(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}}HM.prototype.isHemisphereLightProbe=!0;class GM extends nd{constructor(e,n=1){super(void 0,n);const i=new Ae().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}GM.prototype.isAmbientLightProbe=!0;class WM extends ht{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class jM{constructor(e,n,i){this.binding=e,this.valueSize=i;let r,s,a;switch(n){case"quaternion":r=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:r=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,n){const i=this.buffer,r=this.valueSize,s=e*r+r;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==r;++o)i[s+o]=i[o];a=n}else{a+=n;const o=n/a;this._mixBufferRegion(i,s,0,o,r)}this.cumulativeWeight=a}accumulateAdditive(e){const n=this.buffer,i=this.valueSize,r=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(n,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,i=this.buffer,r=e*n+n,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=n*this._origIndex;this._mixBufferRegion(i,r,l,1-s,n)}a>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*n,1,n);for(let l=n,c=n+n;l!==c;++l)if(i[l]!==i[l+n]){o.setValue(i,r);break}}saveOriginalState(){const e=this.binding,n=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(n,r);for(let s=i,a=r;s!==a;++s)n[s]=n[r+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,n=e+this.valueSize;for(let i=e;i<n;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[n+i]=this.buffer[e+i]}_select(e,n,i,r,s){if(r>=.5)for(let a=0;a!==s;++a)e[n+a]=e[i+a]}_slerp(e,n,i,r){ln.slerpFlat(e,n,e,n,e,i,r)}_slerpAdditive(e,n,i,r,s){const a=this._workIndex*s;ln.multiplyQuaternionsFlat(e,a,e,n,e,i),ln.slerpFlat(e,n,e,n,e,a,r)}_lerp(e,n,i,r,s){const a=1-r;for(let o=0;o!==s;++o){const l=n+o;e[l]=e[l]*a+e[i+o]*r}}_lerpAdditive(e,n,i,r,s){for(let a=0;a!==s;++a){const o=n+a;e[o]=e[o]+e[i+a]*r}}}const rd="\\[\\]\\.:\\/",qM=new RegExp("["+rd+"]","g"),sd="[^"+rd+"]",XM="[^"+rd.replace("\\.","")+"]",JM=/((?:WC+[\/:])*)/.source.replace("WC",sd),$M=/(WCOD+)?/.source.replace("WCOD",XM),YM=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",sd),ZM=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",sd),KM=new RegExp("^"+JM+$M+YM+ZM+"$"),QM=["material","materials","bones"];class eT{constructor(e,n,i){const r=i||Et.parseTrackName(n);this._targetGroup=e,this._bindings=e.subscribe_(n,r)}getValue(e,n){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,n)}setValue(e,n){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=i.length;r!==s;++r)i[r].setValue(e,n)}bind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].bind()}unbind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].unbind()}}class Et{constructor(e,n,i){this.path=n,this.parsedPath=i||Et.parseTrackName(n),this.node=Et.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,n,i){return e&&e.isAnimationObjectGroup?new Et.Composite(e,n,i):new Et(e,n,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(qM,"")}static parseTrackName(e){const n=KM.exec(e);if(n===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=i.nodeName.substring(r+1);QM.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,n){if(n===void 0||n===""||n==="."||n===-1||n===e.name||n===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(n);if(i!==void 0)return i}if(e.children){const i=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===n||o.uuid===n)return o;const l=i(o.children);if(l)return l}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,n){e[n]=this.targetObject[this.propertyName]}_getValue_array(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[n++]=i[r]}_getValue_arrayElement(e,n){e[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,n){this.resolvedProperty.toArray(e,n)}_setValue_direct(e,n){this.targetObject[this.propertyName]=e[n]}_setValue_direct_setNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++]}_setValue_array_setNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,n){this.resolvedProperty[this.propertyIndex]=e[n]}_setValue_arrayElement_setNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,n){this.resolvedProperty.fromArray(e,n)}_setValue_fromArray_setNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,n){this.bind(),this.getValue(e,n)}_setValue_unbound(e,n){this.bind(),this.setValue(e,n)}bind(){let e=this.node;const n=this.parsedPath,i=n.objectName,r=n.propertyName;let s=n.propertyIndex;if(e||(e=Et.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let c=n.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const a=e[r];if(a===void 0){const c=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Et.Composite=eT;Et.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Et.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Et.prototype.GetterByBindingType=[Et.prototype._getValue_direct,Et.prototype._getValue_array,Et.prototype._getValue_arrayElement,Et.prototype._getValue_toArray];Et.prototype.SetterByBindingTypeAndVersioning=[[Et.prototype._setValue_direct,Et.prototype._setValue_direct_setNeedsUpdate,Et.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_array,Et.prototype._setValue_array_setNeedsUpdate,Et.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_arrayElement,Et.prototype._setValue_arrayElement_setNeedsUpdate,Et.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Et.prototype._setValue_fromArray,Et.prototype._setValue_fromArray_setNeedsUpdate,Et.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class tT{constructor(e,n,i=null,r=n.blendMode){this._mixer=e,this._clip=n,this._localRoot=i,this.blendMode=r;const s=n.tracks,a=s.length,o=new Array(a),l={endingStart:Gs,endingEnd:Gs};for(let c=0;c!==a;++c){const h=s[c].createInterpolant(null);o[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Dx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=e._clip.duration,a=s/r,o=r/s;e.warp(1,a,n),this.warp(o,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const r=this._mixer,s=r.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/a,c[1]=n/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;if(l<0||i===0)return;this._startTime=null,n=i*l}n*=this._updateTimeScale(e);const a=this._updateTime(n),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case yg:for(let h=0,d=l.length;h!==d;++h)l[h].evaluate(a),c[h].accumulateAdditive(o);break;case Bu:default:for(let h=0,d=l.length;h!==d;++h)l[h].evaluate(a),c[h].accumulate(r,o)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(n*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n))}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const a=i===Rx;if(e===0)return s===-1?r:a&&(s&1)===1?n-r:r;if(i===Px){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),r>=n||r<0){const o=Math.floor(r/n);r-=n*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(a&&(s&1)===1)return n-r}return r}_setEndings(e,n,i){const r=this._interpolantSettings;i?(r.endingStart=Ws,r.endingEnd=Ws):(e?r.endingStart=this.zeroSlopeAtStart?Ws:Gs:r.endingStart=Bl,n?r.endingEnd=this.zeroSlopeAtEnd?Ws:Gs:r.endingEnd=Bl)}_scheduleFading(e,n,i){const r=this._mixer,s=r.time;let a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=n,o[1]=s+e,l[1]=i,this}}class nT extends yi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const i=e._localRoot||this._root,r=e._clip.tracks,s=r.length,a=e._propertyBindings,o=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let d=0;d!==s;++d){const u=r[d],p=u.name;let m=h[p];if(m!==void 0)++m.referenceCount,a[d]=m;else{if(m=a[d],m!==void 0){m._cacheIndex===null&&(++m.referenceCount,this._addInactiveBinding(m,l,p));continue}const f=n&&n._propertyBindings[d].binding.parsedPath;m=new jM(Et.create(i,p,f),u.ValueTypeName,u.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,l,p),a[d]=m}o[d].resultBuffer=m.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,i)}const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const n=e._cacheIndex;return n!==null&&n<this._nActiveActions}_addInactiveAction(e,n,i){const r=this._actions,s=this._actionsByClip;let a=s[n];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[n]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){const n=this._actions,i=n[n.length-1],r=e._cacheIndex;i._cacheIndex=r,n[r]=i,n.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,o=a[s],l=o.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const d=o.actionByRoot,u=(e._localRoot||this._root).uuid;delete d[u],l.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const n=this._actions,i=e._cacheIndex,r=this._nActiveActions++,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_takeBackAction(e){const n=this._actions,i=e._cacheIndex,r=--this._nActiveActions,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_addInactiveBinding(e,n,i){const r=this._bindingsByRootAndName,s=this._bindings;let a=r[n];a===void 0&&(a={},r[n]=a),a[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const n=this._bindings,i=e.binding,r=i.rootNode.uuid,s=i.path,a=this._bindingsByRootAndName,o=a[r],l=n[n.length-1],c=e._cacheIndex;l._cacheIndex=c,n[c]=l,n.pop(),delete o[s],Object.keys(o).length===0&&delete a[r]}_lendBinding(e){const n=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_takeBackBinding(e){const n=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,n=this._nActiveControlInterpolants++;let i=e[n];return i===void 0&&(i=new e0(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=n,e[n]=i),i}_takeBackControlInterpolant(e){const n=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=n[r];e.__cacheIndex=r,n[r]=e,s.__cacheIndex=i,n[i]=s}clipAction(e,n,i){const r=n||this._root,s=r.uuid;let a=typeof e=="string"?uf.findByName(r,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let c=null;if(i===void 0&&(a!==null?i=a.blendMode:i=Bu),l!==void 0){const d=l.actionByRoot[s];if(d!==void 0&&d.blendMode===i)return d;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const h=new tT(this,a,n,i);return this._bindAction(h,c),this._addInactiveAction(h,o,s),h}existingAction(e,n){const i=n||this._root,r=i.uuid,s=typeof e=="string"?uf.findByName(i,e):e,a=s?s.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[r]||null}stopAllAction(){const e=this._actions,n=this._nActiveActions;for(let i=n-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const n=this._actions,i=this._nActiveActions,r=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let c=0;c!==i;++c)n[c]._update(r,e,s,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(e){this.time=0;for(let n=0;n<this._actions.length;n++)this._actions[n].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,i=e.uuid,r=this._actionsByClip,s=r[i];if(s!==void 0){const a=s.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const h=c._cacheIndex,d=n[n.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,d._cacheIndex=h,n[h]=d,n.pop(),this._removeInactiveBindingsForAction(c)}delete r[i]}}uncacheRoot(e){const n=e.uuid,i=this._actionsByClip;for(const a in i){const o=i[a].actionByRoot,l=o[n];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[n];if(s!==void 0)for(const a in s){const o=s[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,n){const i=this.existingAction(e,n);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}nT.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class iT extends fa{constructor(e,n,i=1){super(e,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const n=super.clone(e);return n.meshPerAttribute=this.meshPerAttribute,n}toJSON(e){const n=super.toJSON(e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}}iT.prototype.isInstancedInterleavedBuffer=!0;class gf{constructor(e=1,n=0,i=0){return this.radius=e,this.phi=n,this.theta=i,this}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Qt(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const vf=new T,ul=new T;class On{constructor(e=new T,n=new T){this.start=e,this.end=n}set(e,n){return this.start.copy(e),this.end.copy(n),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,n){return this.delta(n).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,n){vf.subVectors(e,this.start),ul.subVectors(this.end,this.start);const i=ul.dot(ul);let s=ul.dot(vf)/i;return n&&(s=Qt(s,0,1)),s}closestPointToPoint(e,n,i){const r=this.closestPointToPointParameter(e,n);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const yf=new T;class rT extends ht{constructor(e,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Ge,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const c=a/l*Math.PI*2,h=o/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new Pe(r,3));const s=new Yn({fog:!1,toneMapped:!1});this.cone=new Rr(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,n=e*Math.tan(this.light.angle);this.cone.scale.set(n,n,e),yf.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(yf),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const mr=new T,dl=new Re,mh=new Re;class sT extends Rr{constructor(e){const n=u0(e),i=new Ge,r=[],s=[],a=new Ae(0,0,1),o=new Ae(0,1,0);for(let c=0;c<n.length;c++){const h=n[c];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}i.setAttribute("position",new Pe(r,3)),i.setAttribute("color",new Pe(s,3));const l=new Yn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,r=i.getAttribute("position");mh.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<n.length;s++){const o=n[s];o.parent&&o.parent.isBone&&(dl.multiplyMatrices(mh,o.matrixWorld),mr.setFromMatrixPosition(dl),r.setXYZ(a,mr.x,mr.y,mr.z),dl.multiplyMatrices(mh,o.parent.matrixWorld),mr.setFromMatrixPosition(dl),r.setXYZ(a+1,mr.x,mr.y,mr.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function u0(t){const e=[];t.isBone===!0&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,u0(t.children[n]));return e}class aT extends pn{constructor(e,n,i){const r=new mc(n,4,2),s=new Cr({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}class oT extends Rr{constructor(e=10,n=10,i=4473924,r=8947848){i=new Ae(i),r=new Ae(r);const s=n/2,a=e/n,o=e/2,l=[],c=[];for(let u=0,p=0,m=-o;u<=n;u++,m+=a){l.push(-o,0,m,o,0,m),l.push(m,0,-o,m,0,o);const f=u===s?i:r;f.toArray(c,p),p+=3,f.toArray(c,p),p+=3,f.toArray(c,p),p+=3,f.toArray(c,p),p+=3}const h=new Ge;h.setAttribute("position",new Pe(l,3)),h.setAttribute("color",new Pe(c,3));const d=new Yn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="GridHelper"}}const xf=new T,pl=new T,bf=new T;class lT extends ht{constructor(e,n,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,n===void 0&&(n=1);let r=new Ge;r.setAttribute("position",new Pe([-n,n,0,n,n,0,n,-n,0,-n,-n,0,-n,n,0],3));const s=new Yn({fog:!1,toneMapped:!1});this.lightPlane=new co(r,s),this.add(this.lightPlane),r=new Ge,r.setAttribute("position",new Pe([0,0,0,0,0,1],3)),this.targetLine=new co(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){xf.setFromMatrixPosition(this.light.matrixWorld),pl.setFromMatrixPosition(this.light.target.matrixWorld),bf.subVectors(pl,xf),this.lightPlane.lookAt(pl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(pl),this.targetLine.scale.z=bf.length()}}const fl=new T,Ut=new da;class br extends Rr{constructor(e){const n=new Ge,i=new Yn({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],a={},o=new Ae(16755200),l=new Ae(16711680),c=new Ae(43775),h=new Ae(16777215),d=new Ae(3355443);u("n1","n2",o),u("n2","n4",o),u("n4","n3",o),u("n3","n1",o),u("f1","f2",o),u("f2","f4",o),u("f4","f3",o),u("f3","f1",o),u("n1","f1",o),u("n2","f2",o),u("n3","f3",o),u("n4","f4",o),u("p","n1",l),u("p","n2",l),u("p","n3",l),u("p","n4",l),u("u1","u2",c),u("u2","u3",c),u("u3","u1",c),u("c","t",h),u("p","c",d),u("cn1","cn2",d),u("cn3","cn4",d),u("cf1","cf2",d),u("cf3","cf4",d);function u(m,f,g){p(m,g),p(f,g)}function p(m,f){r.push(0,0,0),s.push(f.r,f.g,f.b),a[m]===void 0&&(a[m]=[]),a[m].push(r.length/3-1)}n.setAttribute("position",new Pe(r,3)),n.setAttribute("color",new Pe(s,3)),super(n,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const e=this.geometry,n=this.pointMap,i=1,r=1;Ut.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Wt("c",n,e,Ut,0,0,-1),Wt("t",n,e,Ut,0,0,1),Wt("n1",n,e,Ut,-i,-r,-1),Wt("n2",n,e,Ut,i,-r,-1),Wt("n3",n,e,Ut,-i,r,-1),Wt("n4",n,e,Ut,i,r,-1),Wt("f1",n,e,Ut,-i,-r,1),Wt("f2",n,e,Ut,i,-r,1),Wt("f3",n,e,Ut,-i,r,1),Wt("f4",n,e,Ut,i,r,1),Wt("u1",n,e,Ut,i*.7,r*1.1,-1),Wt("u2",n,e,Ut,-i*.7,r*1.1,-1),Wt("u3",n,e,Ut,0,r*2,-1),Wt("cf1",n,e,Ut,-i,0,1),Wt("cf2",n,e,Ut,i,0,1),Wt("cf3",n,e,Ut,0,-r,1),Wt("cf4",n,e,Ut,0,r,1),Wt("cn1",n,e,Ut,-i,0,-1),Wt("cn2",n,e,Ut,i,0,-1),Wt("cn3",n,e,Ut,0,-r,-1),Wt("cn4",n,e,Ut,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Wt(t,e,n,i,r,s,a){fl.set(r,s,a).unproject(i);const o=e[t];if(o!==void 0){const l=n.getAttribute("position");for(let c=0,h=o.length;c<h;c++)l.setXYZ(o[c],fl.x,fl.y,fl.z)}}class ml extends Rr{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Ge;s.setIndex(new rt(i,1)),s.setAttribute("position",new Pe(r,3)),super(s,new Yn({color:n,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class cT extends Rr{constructor(e=1){const n=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Ge;r.setAttribute("position",new Pe(n,3)),r.setAttribute("color",new Pe(i,3));const s=new Yn({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,n,i){const r=new Ae,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(n),r.toArray(s,6),r.toArray(s,9),r.set(i),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class hT{constructor(){this.type="ShapePath",this.color=new Ae,this.subPaths=[],this.currentPath=null}moveTo(e,n){return this.currentPath=new Vl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,n),this}lineTo(e,n){return this.currentPath.lineTo(e,n),this}quadraticCurveTo(e,n,i,r){return this.currentPath.quadraticCurveTo(e,n,i,r),this}bezierCurveTo(e,n,i,r,s,a){return this.currentPath.bezierCurveTo(e,n,i,r,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,n){function i(y){const w=[];for(let b=0,S=y.length;b<S;b++){const _=y[b],E=new mi;E.curves=_.curves,w.push(E)}return w}function r(y,w){const b=w.length;let S=!1;for(let _=b-1,E=0;E<b;_=E++){let x=w[_],A=w[E],M=A.x-x.x,C=A.y-x.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(x=w[E],M=-M,A=w[_],C=-C),y.y<x.y||y.y>A.y)continue;if(y.y===x.y){if(y.x===x.x)return!0}else{const F=C*(y.x-x.x)-M*(y.y-x.y);if(F===0)return!0;if(F<0)continue;S=!S}}else{if(y.y!==x.y)continue;if(A.x<=y.x&&y.x<=x.x||x.x<=y.x&&y.x<=A.x)return!0}}return S}const s=tr.isClockWise,a=this.subPaths;if(a.length===0)return[];if(n===!0)return i(a);let o,l,c;const h=[];if(a.length===1)return l=a[0],c=new mi,c.curves=l.curves,h.push(c),h;let d=!s(a[0].getPoints());d=e?!d:d;const u=[],p=[];let m=[],f=0,g;p[f]=void 0,m[f]=[];for(let y=0,w=a.length;y<w;y++)l=a[y],g=l.getPoints(),o=s(g),o=e?!o:o,o?(!d&&p[f]&&f++,p[f]={s:new mi,p:g},p[f].s.curves=l.curves,d&&f++,m[f]=[]):m[f].push({h:l,p:g[0]});if(!p[0])return i(a);if(p.length>1){let y=!1,w=0;for(let b=0,S=p.length;b<S;b++)u[b]=[];for(let b=0,S=p.length;b<S;b++){const _=m[b];for(let E=0;E<_.length;E++){const x=_[E];let A=!0;for(let M=0;M<p.length;M++)r(x.p,p[M].p)&&(b!==M&&w++,A?(A=!1,u[M].push(x)):y=!0);A&&u[b].push(x)}}w>0&&y===!1&&(m=u)}let v;for(let y=0,w=p.length;y<w;y++){c=p[y].s,h.push(c),v=m[y];for(let b=0,S=v.length;b<S;b++)c.holes.push(v[b].h)}return h}}const Si=new Uint32Array(512),Mi=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(Si[t]=0,Si[t|256]=32768,Mi[t]=24,Mi[t|256]=24):e<-14?(Si[t]=1024>>-e-14,Si[t|256]=1024>>-e-14|32768,Mi[t]=-e-1,Mi[t|256]=-e-1):e<=15?(Si[t]=e+15<<10,Si[t|256]=e+15<<10|32768,Mi[t]=13,Mi[t|256]=13):e<128?(Si[t]=31744,Si[t|256]=64512,Mi[t]=24,Mi[t|256]=24):(Si[t]=31744,Si[t|256]=64512,Mi[t]=13,Mi[t|256]=13)}const d0=new Uint32Array(2048),Eo=new Uint32Array(64),uT=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,n=0;for(;(e&8388608)===0;)e<<=1,n-=8388608;e&=-8388609,n+=947912704,d0[t]=e|n}for(let t=1024;t<2048;++t)d0[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)Eo[t]=t<<23;Eo[31]=1199570944;Eo[32]=2147483648;for(let t=33;t<63;++t)Eo[t]=2147483648+(t-32<<23);Eo[63]=3347054592;for(let t=1;t<64;++t)t!==32&&(uT[t]=1024);$n.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create($n.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Vl.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)};oT.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};sT.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Zn.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),FM.extractUrlBase(t)};Zn.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};fn.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)};fn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};fn.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)};fn.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)};fn.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)};zi.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};Xn.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};sc.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)};On.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)};zt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)};zt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)};zt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};zt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)};zt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};zt.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()};Re.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)};Re.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)};Re.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new T().setFromMatrixColumn(this,3)};Re.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)};Re.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Re.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Re.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)};Re.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Re.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Re.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Re.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Re.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Re.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Re.prototype.makeFrustum=function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)};Re.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()};Pi.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};ln.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)};ln.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};as.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)};as.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)};as.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)};qt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};qt.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)};qt.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)};qt.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)};qt.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)};qt.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),qt.getBarycoord(t,e,n,i,r)};qt.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),qt.getNormal(t,e,n,i)};mi.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)};mi.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ma(this,t)};mi.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new fc(this,t)};j.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};j.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)};j.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};T.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};T.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};T.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)};T.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)};T.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)};T.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)};T.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};T.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)};T.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};ct.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};ct.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};ht.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)};ht.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};ht.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)};ht.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};ht.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)};Object.defineProperties(ht.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});pn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(pn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Ox},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Ig.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};gn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(vi.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(rt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Fl},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Fl)}}});rt.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Fl:ao),this};rt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},rt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Ge.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)};Ge.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new rt(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)};Ge.prototype.addDrawCall=function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)};Ge.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Ge.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Ge.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)};Ge.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)};Object.defineProperties(Ge.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});fa.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Fl:ao),this};fa.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};ma.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};ma.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};ma.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};cc.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(rn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ae}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===fg}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Jn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});At.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)};At.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)};At.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};At.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};At.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};At.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};At.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};At.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};At.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};At.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};At.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};At.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};At.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};At.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};At.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)};At.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};At.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};At.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};At.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};At.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};At.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};At.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};At.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};At.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};At.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(At.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?Dt:gi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Dg.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Ln.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});WM.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new VM().load(t,function(i){e.setBuffer(i)}),this};Vu.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};Vu.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)};ss.crossOrigin=void 0;ss.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new NM;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};ss.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new IM;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};ss.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};ss.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Nu}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Nu);const _f={type:"change"},gh={type:"start"},wf={type:"end"};class dT extends yi{constructor(e,n){super(),n===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),n===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new T,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:fs.ROTATE,MIDDLE:fs.DOLLY,RIGHT:fs.PAN},this.touches={ONE:ms.ROTATE,TWO:ms.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(R){R.addEventListener("keydown",Be),this._domElementKeyEvents=R},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(_f),i.update(),s=r.NONE},this.update=function(){const R=new T,ye=new ln().setFromUnitVectors(e.up,new T(0,1,0)),Ee=ye.clone().invert(),xe=new T,U=new ln,we=2*Math.PI;return function(){const qe=i.object.position;R.copy(qe).sub(i.target),R.applyQuaternion(ye),o.setFromVector3(R),i.autoRotate&&s===r.NONE&&A(E()),i.enableDamping?(o.theta+=l.theta*i.dampingFactor,o.phi+=l.phi*i.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let Le=i.minAzimuthAngle,Fe=i.maxAzimuthAngle;return isFinite(Le)&&isFinite(Fe)&&(Le<-Math.PI?Le+=we:Le>Math.PI&&(Le-=we),Fe<-Math.PI?Fe+=we:Fe>Math.PI&&(Fe-=we),Le<=Fe?o.theta=Math.max(Le,Math.min(Fe,o.theta)):o.theta=o.theta>(Le+Fe)/2?Math.max(Le,o.theta):Math.min(Fe,o.theta)),o.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,o.phi)),o.makeSafe(),o.radius*=c,o.radius=Math.max(i.minDistance,Math.min(i.maxDistance,o.radius)),i.enableDamping===!0?i.target.addScaledVector(h,i.dampingFactor):i.target.add(h),R.setFromSpherical(o),R.applyQuaternion(Ee),qe.copy(i.target).add(R),i.object.lookAt(i.target),i.enableDamping===!0?(l.theta*=1-i.dampingFactor,l.phi*=1-i.dampingFactor,h.multiplyScalar(1-i.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),c=1,d||xe.distanceToSquared(i.object.position)>a||8*(1-U.dot(i.object.quaternion))>a?(i.dispatchEvent(_f),xe.copy(i.object.position),U.copy(i.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",ce),i.domElement.removeEventListener("pointerdown",ee),i.domElement.removeEventListener("pointercancel",fe),i.domElement.removeEventListener("wheel",Ne),i.domElement.removeEventListener("pointermove",se),i.domElement.removeEventListener("pointerup",he),i._domElementKeyEvents!==null&&i._domElementKeyEvents.removeEventListener("keydown",Be)};const i=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const a=1e-6,o=new gf,l=new gf;let c=1;const h=new T;let d=!1;const u=new j,p=new j,m=new j,f=new j,g=new j,v=new j,y=new j,w=new j,b=new j,S=[],_={};function E(){return 2*Math.PI/60/60*i.autoRotateSpeed}function x(){return Math.pow(.95,i.zoomSpeed)}function A(R){l.theta-=R}function M(R){l.phi-=R}const C=function(){const R=new T;return function(Ee,xe){R.setFromMatrixColumn(xe,0),R.multiplyScalar(-Ee),h.add(R)}}(),F=function(){const R=new T;return function(Ee,xe){i.screenSpacePanning===!0?R.setFromMatrixColumn(xe,1):(R.setFromMatrixColumn(xe,0),R.crossVectors(i.object.up,R)),R.multiplyScalar(Ee),h.add(R)}}(),$=function(){const R=new T;return function(Ee,xe){const U=i.domElement;if(i.object.isPerspectiveCamera){const we=i.object.position;R.copy(we).sub(i.target);let be=R.length();be*=Math.tan(i.object.fov/2*Math.PI/180),C(2*Ee*be/U.clientHeight,i.object.matrix),F(2*xe*be/U.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(C(Ee*(i.object.right-i.object.left)/i.object.zoom/U.clientWidth,i.object.matrix),F(xe*(i.object.top-i.object.bottom)/i.object.zoom/U.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function I(R){i.object.isPerspectiveCamera?c/=R:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*R)),i.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function Z(R){i.object.isPerspectiveCamera?c*=R:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/R)),i.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function W(R){u.set(R.clientX,R.clientY)}function q(R){y.set(R.clientX,R.clientY)}function k(R){f.set(R.clientX,R.clientY)}function N(R){p.set(R.clientX,R.clientY),m.subVectors(p,u).multiplyScalar(i.rotateSpeed);const ye=i.domElement;A(2*Math.PI*m.x/ye.clientHeight),M(2*Math.PI*m.y/ye.clientHeight),u.copy(p),i.update()}function O(R){w.set(R.clientX,R.clientY),b.subVectors(w,y),b.y>0?I(x()):b.y<0&&Z(x()),y.copy(w),i.update()}function V(R){g.set(R.clientX,R.clientY),v.subVectors(g,f).multiplyScalar(i.panSpeed),$(v.x,v.y),f.copy(g),i.update()}function z(R){R.deltaY<0?Z(x()):R.deltaY>0&&I(x()),i.update()}function H(R){let ye=!1;switch(R.code){case i.keys.UP:$(0,i.keyPanSpeed),ye=!0;break;case i.keys.BOTTOM:$(0,-i.keyPanSpeed),ye=!0;break;case i.keys.LEFT:$(i.keyPanSpeed,0),ye=!0;break;case i.keys.RIGHT:$(-i.keyPanSpeed,0),ye=!0;break}ye&&(R.preventDefault(),i.update())}function J(){if(S.length===1)u.set(S[0].pageX,S[0].pageY);else{const R=.5*(S[0].pageX+S[1].pageX),ye=.5*(S[0].pageY+S[1].pageY);u.set(R,ye)}}function ne(){if(S.length===1)f.set(S[0].pageX,S[0].pageY);else{const R=.5*(S[0].pageX+S[1].pageX),ye=.5*(S[0].pageY+S[1].pageY);f.set(R,ye)}}function B(){const R=S[0].pageX-S[1].pageX,ye=S[0].pageY-S[1].pageY,Ee=Math.sqrt(R*R+ye*ye);y.set(0,Ee)}function oe(){i.enableZoom&&B(),i.enablePan&&ne()}function ie(){i.enableZoom&&B(),i.enableRotate&&J()}function le(R){if(S.length==1)p.set(R.pageX,R.pageY);else{const Ee=Ue(R),xe=.5*(R.pageX+Ee.x),U=.5*(R.pageY+Ee.y);p.set(xe,U)}m.subVectors(p,u).multiplyScalar(i.rotateSpeed);const ye=i.domElement;A(2*Math.PI*m.x/ye.clientHeight),M(2*Math.PI*m.y/ye.clientHeight),u.copy(p)}function K(R){if(S.length===1)g.set(R.pageX,R.pageY);else{const ye=Ue(R),Ee=.5*(R.pageX+ye.x),xe=.5*(R.pageY+ye.y);g.set(Ee,xe)}v.subVectors(g,f).multiplyScalar(i.panSpeed),$(v.x,v.y),f.copy(g)}function pe(R){const ye=Ue(R),Ee=R.pageX-ye.x,xe=R.pageY-ye.y,U=Math.sqrt(Ee*Ee+xe*xe);w.set(0,U),b.set(0,Math.pow(w.y/y.y,i.zoomSpeed)),I(b.y),y.copy(w)}function G(R){i.enableZoom&&pe(R),i.enablePan&&K(R)}function X(R){i.enableZoom&&pe(R),i.enableRotate&&le(R)}function ee(R){i.enabled!==!1&&(S.length===0&&(i.domElement.setPointerCapture(R.pointerId),i.domElement.addEventListener("pointermove",se),i.domElement.addEventListener("pointerup",he)),me(R),R.pointerType==="touch"?D(R):ge(R))}function se(R){i.enabled!==!1&&(R.pointerType==="touch"?L(R):_e(R))}function he(R){Te(R),S.length===0&&(i.domElement.releasePointerCapture(R.pointerId),i.domElement.removeEventListener("pointermove",se),i.domElement.removeEventListener("pointerup",he)),i.dispatchEvent(wf),s=r.NONE}function fe(R){Te(R)}function ge(R){let ye;switch(R.button){case 0:ye=i.mouseButtons.LEFT;break;case 1:ye=i.mouseButtons.MIDDLE;break;case 2:ye=i.mouseButtons.RIGHT;break;default:ye=-1}switch(ye){case fs.DOLLY:if(i.enableZoom===!1)return;q(R),s=r.DOLLY;break;case fs.ROTATE:if(R.ctrlKey||R.metaKey||R.shiftKey){if(i.enablePan===!1)return;k(R),s=r.PAN}else{if(i.enableRotate===!1)return;W(R),s=r.ROTATE}break;case fs.PAN:if(R.ctrlKey||R.metaKey||R.shiftKey){if(i.enableRotate===!1)return;W(R),s=r.ROTATE}else{if(i.enablePan===!1)return;k(R),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(gh)}function _e(R){if(i.enabled!==!1)switch(s){case r.ROTATE:if(i.enableRotate===!1)return;N(R);break;case r.DOLLY:if(i.enableZoom===!1)return;O(R);break;case r.PAN:if(i.enablePan===!1)return;V(R);break}}function Ne(R){i.enabled===!1||i.enableZoom===!1||s!==r.NONE||(R.preventDefault(),i.dispatchEvent(gh),z(R),i.dispatchEvent(wf))}function Be(R){i.enabled===!1||i.enablePan===!1||H(R)}function D(R){switch(Ce(R),S.length){case 1:switch(i.touches.ONE){case ms.ROTATE:if(i.enableRotate===!1)return;J(),s=r.TOUCH_ROTATE;break;case ms.PAN:if(i.enablePan===!1)return;ne(),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(i.touches.TWO){case ms.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;oe(),s=r.TOUCH_DOLLY_PAN;break;case ms.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;ie(),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(gh)}function L(R){switch(Ce(R),s){case r.TOUCH_ROTATE:if(i.enableRotate===!1)return;le(R),i.update();break;case r.TOUCH_PAN:if(i.enablePan===!1)return;K(R),i.update();break;case r.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;G(R),i.update();break;case r.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;X(R),i.update();break;default:s=r.NONE}}function ce(R){i.enabled!==!1&&R.preventDefault()}function me(R){S.push(R)}function Te(R){delete _[R.pointerId];for(let ye=0;ye<S.length;ye++)if(S[ye].pointerId==R.pointerId){S.splice(ye,1);return}}function Ce(R){let ye=_[R.pointerId];ye===void 0&&(ye=new j,_[R.pointerId]=ye),ye.set(R.pageX,R.pageY)}function Ue(R){const ye=R.pointerId===S[0].pointerId?S[1]:S[0];return _[ye.pointerId]}i.domElement.addEventListener("contextmenu",ce),i.domElement.addEventListener("pointerdown",ee),i.domElement.addEventListener("pointercancel",fe),i.domElement.addEventListener("wheel",Ne,{passive:!1}),this.update()}}const Ti=new Re,vh=new ht,gl=new T;class fo extends yi{constructor(){super(),this.uuid=Lt.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}applyMatrix4(e){const n=new zt().getNormalMatrix(e);for(let i=0,r=this.vertices.length;i<r;i++)this.vertices[i].applyMatrix4(e);for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i];s.normal.applyMatrix3(n).normalize();for(let a=0,o=s.vertexNormals.length;a<o;a++)s.vertexNormals[a].applyMatrix3(n).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this}rotateX(e){return Ti.makeRotationX(e),this.applyMatrix4(Ti),this}rotateY(e){return Ti.makeRotationY(e),this.applyMatrix4(Ti),this}rotateZ(e){return Ti.makeRotationZ(e),this.applyMatrix4(Ti),this}translate(e,n,i){return Ti.makeTranslation(e,n,i),this.applyMatrix4(Ti),this}scale(e,n,i){return Ti.makeScale(e,n,i),this.applyMatrix4(Ti),this}lookAt(e){return vh.lookAt(e),vh.updateMatrix(),this.applyMatrix4(vh.matrix),this}fromBufferGeometry(e){const n=this,i=e.index!==null?e.index:void 0,r=e.attributes;if(r.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const s=r.position,a=r.normal,o=r.color,l=r.uv,c=r.uv2;c!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<s.count;u++)n.vertices.push(new T().fromBufferAttribute(s,u)),o!==void 0&&n.colors.push(new Ae().fromBufferAttribute(o,u));function h(u,p,m,f){const g=o===void 0?[]:[n.colors[u].clone(),n.colors[p].clone(),n.colors[m].clone()],v=a===void 0?[]:[new T().fromBufferAttribute(a,u),new T().fromBufferAttribute(a,p),new T().fromBufferAttribute(a,m)],y=new Yh(u,p,m,v,g,f);n.faces.push(y),l!==void 0&&n.faceVertexUvs[0].push([new j().fromBufferAttribute(l,u),new j().fromBufferAttribute(l,p),new j().fromBufferAttribute(l,m)]),c!==void 0&&n.faceVertexUvs[1].push([new j().fromBufferAttribute(c,u),new j().fromBufferAttribute(c,p),new j().fromBufferAttribute(c,m)])}const d=e.groups;if(d.length>0)for(let u=0;u<d.length;u++){const p=d[u],m=p.start,f=p.count;for(let g=m,v=m+f;g<v;g+=3)i!==void 0?h(i.getX(g),i.getX(g+1),i.getX(g+2),p.materialIndex):h(g,g+1,g+2,p.materialIndex)}else if(i!==void 0)for(let u=0;u<i.count;u+=3)h(i.getX(u),i.getX(u+1),i.getX(u+2));else for(let u=0;u<s.count;u+=3)h(u,u+1,u+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(gl).negate(),this.translate(gl.x,gl.y,gl.z),this}normalize(){this.computeBoundingSphere();const e=this.boundingSphere.center,n=this.boundingSphere.radius,i=n===0?1:1/n,r=new Re;return r.set(i,0,0,-i*e.x,0,i,0,-i*e.y,0,0,i,-i*e.z,0,0,0,1),this.applyMatrix4(r),this}computeFaceNormals(){const e=new T,n=new T;for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i],a=this.vertices[s.a],o=this.vertices[s.b],l=this.vertices[s.c];e.subVectors(l,o),n.subVectors(a,o),e.cross(n),e.normalize(),s.normal.copy(e)}}computeVertexNormals(e=!0){const n=new Array(this.vertices.length);for(let i=0,r=this.vertices.length;i<r;i++)n[i]=new T;if(e){const i=new T,r=new T;for(let s=0,a=this.faces.length;s<a;s++){const o=this.faces[s],l=this.vertices[o.a],c=this.vertices[o.b],h=this.vertices[o.c];i.subVectors(h,c),r.subVectors(l,c),i.cross(r),n[o.a].add(i),n[o.b].add(i),n[o.c].add(i)}}else{this.computeFaceNormals();for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i];n[s.a].add(s.normal),n[s.b].add(s.normal),n[s.c].add(s.normal)}}for(let i=0,r=this.vertices.length;i<r;i++)n[i].normalize();for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i],a=s.vertexNormals;a.length===3?(a[0].copy(n[s.a]),a[1].copy(n[s.b]),a[2].copy(n[s.c])):(a[0]=n[s.a].clone(),a[1]=n[s.b].clone(),a[2]=n[s.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)}computeFlatVertexNormals(){this.computeFaceNormals();for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e],r=i.vertexNormals;r.length===3?(r[0].copy(i.normal),r[1].copy(i.normal),r[2].copy(i.normal)):(r[0]=i.normal.clone(),r[1]=i.normal.clone(),r[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)}computeMorphNormals(){for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]);for(let s=0,a=r.vertexNormals.length;s<a;s++)r.__originalVertexNormals[s]?r.__originalVertexNormals[s].copy(r.vertexNormals[s]):r.__originalVertexNormals[s]=r.vertexNormals[s].clone()}const e=new fo;e.faces=this.faces;for(let n=0,i=this.morphTargets.length;n<i;n++){if(!this.morphNormals[n]){this.morphNormals[n]={},this.morphNormals[n].faceNormals=[],this.morphNormals[n].vertexNormals=[];const s=this.morphNormals[n].faceNormals,a=this.morphNormals[n].vertexNormals;for(let o=0,l=this.faces.length;o<l;o++){const c=new T,h={a:new T,b:new T,c:new T};s.push(c),a.push(h)}}const r=this.morphNormals[n];e.vertices=this.morphTargets[n].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let s=0,a=this.faces.length;s<a;s++){const o=this.faces[s],l=r.faceNormals[s],c=r.vertexNormals[s];l.copy(o.normal),c.a.copy(o.vertexNormals[0]),c.b.copy(o.vertexNormals[1]),c.c.copy(o.vertexNormals[2])}}for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals}}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new fn),this.boundingBox.setFromPoints(this.vertices)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xn),this.boundingSphere.setFromPoints(this.vertices)}merge(e,n,i=0){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}let r;const s=this.vertices.length,a=this.vertices,o=e.vertices,l=this.faces,c=e.faces,h=this.colors,d=e.colors;n!==void 0&&(r=new zt().getNormalMatrix(n));for(let u=0,p=o.length;u<p;u++){const f=o[u].clone();n!==void 0&&f.applyMatrix4(n),a.push(f)}for(let u=0,p=d.length;u<p;u++)h.push(d[u].clone());for(let u=0,p=c.length;u<p;u++){const m=c[u];let f,g;const v=m.vertexNormals,y=m.vertexColors,w=new Yh(m.a+s,m.b+s,m.c+s);w.normal.copy(m.normal),r!==void 0&&w.normal.applyMatrix3(r).normalize();for(let b=0,S=v.length;b<S;b++)f=v[b].clone(),r!==void 0&&f.applyMatrix3(r).normalize(),w.vertexNormals.push(f);w.color.copy(m.color);for(let b=0,S=y.length;b<S;b++)g=y[b],w.vertexColors.push(g.clone());w.materialIndex=m.materialIndex+i,l.push(w)}for(let u=0,p=e.faceVertexUvs.length;u<p;u++){const m=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let f=0,g=m.length;f<g;f++){const v=m[f],y=[];for(let w=0,b=v.length;w<b;w++)y.push(v[w].clone());this.faceVertexUvs[u].push(y)}}}mergeMesh(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)}mergeVertices(e=4){const n={},i=[],r=[],s=Math.pow(10,e);for(let l=0,c=this.vertices.length;l<c;l++){const h=this.vertices[l],d=Math.round(h.x*s)+"_"+Math.round(h.y*s)+"_"+Math.round(h.z*s);n[d]===void 0?(n[d]=l,i.push(this.vertices[l]),r[l]=i.length-1):r[l]=r[n[d]]}const a=[];for(let l=0,c=this.faces.length;l<c;l++){const h=this.faces[l];h.a=r[h.a],h.b=r[h.b],h.c=r[h.c];const d=[h.a,h.b,h.c];for(let u=0;u<3;u++)if(d[u]===d[(u+1)%3]){a.push(l);break}}for(let l=a.length-1;l>=0;l--){const c=a[l];this.faces.splice(c,1);for(let h=0,d=this.faceVertexUvs.length;h<d;h++)this.faceVertexUvs[h].splice(c,1)}const o=this.vertices.length-i.length;return this.vertices=i,o}setFromPoints(e){this.vertices=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];this.vertices.push(new T(r.x,r.y,r.z||0))}return this}sortFacesByMaterialIndex(){const e=this.faces,n=e.length;for(let l=0;l<n;l++)e[l]._id=l;function i(l,c){return l.materialIndex-c.materialIndex}e.sort(i);const r=this.faceVertexUvs[0],s=this.faceVertexUvs[1];let a,o;r&&r.length===n&&(a=[]),s&&s.length===n&&(o=[]);for(let l=0;l<n;l++){const c=e[l]._id;a&&a.push(r[c]),o&&o.push(s[c])}a&&(this.faceVertexUvs[0]=a),o&&(this.faceVertexUvs[1]=o)}toJSON(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){const m=this.parameters;for(const f in m)m[f]!==void 0&&(e[f]=m[f]);return e}const n=[];for(let m=0;m<this.vertices.length;m++){const f=this.vertices[m];n.push(f.x,f.y,f.z)}const i=[],r=[],s={},a=[],o={},l=[],c={};for(let m=0;m<this.faces.length;m++){const f=this.faces[m],g=!0,v=!1,y=this.faceVertexUvs[0][m]!==void 0,w=f.normal.length()>0,b=f.vertexNormals.length>0,S=f.color.r!==1||f.color.g!==1||f.color.b!==1,_=f.vertexColors.length>0;let E=0;if(E=h(E,0,0),E=h(E,1,g),E=h(E,2,v),E=h(E,3,y),E=h(E,4,w),E=h(E,5,b),E=h(E,6,S),E=h(E,7,_),i.push(E),i.push(f.a,f.b,f.c),i.push(f.materialIndex),y){const x=this.faceVertexUvs[0][m];i.push(p(x[0]),p(x[1]),p(x[2]))}if(w&&i.push(d(f.normal)),b){const x=f.vertexNormals;i.push(d(x[0]),d(x[1]),d(x[2]))}if(S&&i.push(u(f.color)),_){const x=f.vertexColors;i.push(u(x[0]),u(x[1]),u(x[2]))}}function h(m,f,g){return g?m|1<<f:m&~(1<<f)}function d(m){const f=m.x.toString()+m.y.toString()+m.z.toString();return s[f]!==void 0||(s[f]=r.length/3,r.push(m.x,m.y,m.z)),s[f]}function u(m){const f=m.r.toString()+m.g.toString()+m.b.toString();return o[f]!==void 0||(o[f]=a.length,a.push(m.getHex())),o[f]}function p(m){const f=m.x.toString()+m.y.toString();return c[f]!==void 0||(c[f]=l.length/2,l.push(m.x,m.y)),c[f]}return e.data={},e.data.vertices=n,e.data.normals=r,a.length>0&&(e.data.colors=a),l.length>0&&(e.data.uvs=[l]),e.data.faces=i,e}clone(){return new fo().copy(this)}copy(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const n=e.vertices;for(let u=0,p=n.length;u<p;u++)this.vertices.push(n[u].clone());const i=e.colors;for(let u=0,p=i.length;u<p;u++)this.colors.push(i[u].clone());const r=e.faces;for(let u=0,p=r.length;u<p;u++)this.faces.push(r[u].clone());for(let u=0,p=e.faceVertexUvs.length;u<p;u++){const m=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let f=0,g=m.length;f<g;f++){const v=m[f],y=[];for(let w=0,b=v.length;w<b;w++){const S=v[w];y.push(S.clone())}this.faceVertexUvs[u].push(y)}}const s=e.morphTargets;for(let u=0,p=s.length;u<p;u++){const m={};if(m.name=s[u].name,s[u].vertices!==void 0){m.vertices=[];for(let f=0,g=s[u].vertices.length;f<g;f++)m.vertices.push(s[u].vertices[f].clone())}if(s[u].normals!==void 0){m.normals=[];for(let f=0,g=s[u].normals.length;f<g;f++)m.normals.push(s[u].normals[f].clone())}this.morphTargets.push(m)}const a=e.morphNormals;for(let u=0,p=a.length;u<p;u++){const m={};if(a[u].vertexNormals!==void 0){m.vertexNormals=[];for(let f=0,g=a[u].vertexNormals.length;f<g;f++){const v=a[u].vertexNormals[f],y={};y.a=v.a.clone(),y.b=v.b.clone(),y.c=v.c.clone(),m.vertexNormals.push(y)}}if(a[u].faceNormals!==void 0){m.faceNormals=[];for(let f=0,g=a[u].faceNormals.length;f<g;f++)m.faceNormals.push(a[u].faceNormals[f].clone())}this.morphNormals.push(m)}const o=e.skinWeights;for(let u=0,p=o.length;u<p;u++)this.skinWeights.push(o[u].clone());const l=e.skinIndices;for(let u=0,p=l.length;u<p;u++)this.skinIndices.push(l[u].clone());const c=e.lineDistances;for(let u=0,p=c.length;u<p;u++)this.lineDistances.push(c[u]);const h=e.boundingBox;h!==null&&(this.boundingBox=h.clone());const d=e.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}toBufferGeometry(){const e=new pT().fromGeometry(this),n=new Ge,i=new Float32Array(e.vertices.length*3);if(n.setAttribute("position",new rt(i,3).copyVector3sArray(e.vertices)),e.normals.length>0){const r=new Float32Array(e.normals.length*3);n.setAttribute("normal",new rt(r,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const r=new Float32Array(e.colors.length*3);n.setAttribute("color",new rt(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const r=new Float32Array(e.uvs.length*2);n.setAttribute("uv",new rt(r,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const r=new Float32Array(e.uvs2.length*2);n.setAttribute("uv2",new rt(r,2).copyVector2sArray(e.uvs2))}n.groups=e.groups;for(const r in e.morphTargets){const s=[],a=e.morphTargets[r];for(let o=0,l=a.length;o<l;o++){const c=a[o],h=new Pe(c.data.length*3,3);h.name=c.name,s.push(h.copyVector3sArray(c.data))}n.morphAttributes[r]=s}if(e.skinIndices.length>0){const r=new Pe(e.skinIndices.length*4,4);n.setAttribute("skinIndex",r.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const r=new Pe(e.skinWeights.length*4,4);n.setAttribute("skinWeight",r.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(n.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(n.boundingBox=e.boundingBox.clone()),n}computeTangents(){console.error("THREE.Geometry: .computeTangents() has been removed.")}computeLineDistances(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}applyMatrix(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}dispose(){this.dispatchEvent({type:"dispose"})}static createBufferGeometryFromObject(e){let n=new Ge;const i=e.geometry;if(e.isPoints||e.isLine){const r=new Pe(i.vertices.length*3,3),s=new Pe(i.colors.length*3,3);if(n.setAttribute("position",r.copyVector3sArray(i.vertices)),n.setAttribute("color",s.copyColorsArray(i.colors)),i.lineDistances&&i.lineDistances.length===i.vertices.length){const a=new Pe(i.lineDistances.length,1);n.setAttribute("lineDistance",a.copyArray(i.lineDistances))}i.boundingSphere!==null&&(n.boundingSphere=i.boundingSphere.clone()),i.boundingBox!==null&&(n.boundingBox=i.boundingBox.clone())}else e.isMesh&&(n=i.toBufferGeometry());return n}}fo.prototype.isGeometry=!0;class pT{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const n=[];let i,r,s;const a=e.faces;for(r=0;r<a.length;r++){const o=a[r];o.materialIndex!==s&&(s=o.materialIndex,i!==void 0&&(i.count=r*3-i.start,n.push(i)),i={start:r*3,materialIndex:s})}i!==void 0&&(i.count=r*3-i.start,n.push(i)),this.groups=n}fromGeometry(e){const n=e.faces,i=e.vertices,r=e.faceVertexUvs,s=r[0]&&r[0].length>0,a=r[1]&&r[1].length>0,o=e.morphTargets,l=o.length;let c;if(l>0){c=[];for(let v=0;v<l;v++)c[v]={name:o[v].name,data:[]};this.morphTargets.position=c}const h=e.morphNormals,d=h.length;let u;if(d>0){u=[];for(let v=0;v<d;v++)u[v]={name:h[v].name,data:[]};this.morphTargets.normal=u}const p=e.skinIndices,m=e.skinWeights,f=p.length===i.length,g=m.length===i.length;i.length>0&&n.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<n.length;v++){const y=n[v];this.vertices.push(i[y.a],i[y.b],i[y.c]);const w=y.vertexNormals;if(w.length===3)this.normals.push(w[0],w[1],w[2]);else{const S=y.normal;this.normals.push(S,S,S)}const b=y.vertexColors;if(b.length===3)this.colors.push(b[0],b[1],b[2]);else{const S=y.color;this.colors.push(S,S,S)}if(s===!0){const S=r[0][v];S!==void 0?this.uvs.push(S[0],S[1],S[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new j,new j,new j))}if(a===!0){const S=r[1][v];S!==void 0?this.uvs2.push(S[0],S[1],S[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new j,new j,new j))}for(let S=0;S<l;S++){const _=o[S].vertices;c[S].data.push(_[y.a],_[y.b],_[y.c])}for(let S=0;S<d;S++){const _=h[S].vertexNormals[v];u[S].data.push(_.a,_.b,_.c)}f&&this.skinIndices.push(p[y.a],p[y.b],p[y.c]),g&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}}class Yh{constructor(e,n,i,r,s,a=0){this.a=e,this.b=n,this.c=i,this.normal=r&&r.isVector3?r:new T,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new Ae,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=a}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let n=0,i=e.vertexNormals.length;n<i;n++)this.vertexNormals[n]=e.vertexNormals[n].clone();for(let n=0,i=e.vertexColors.length;n<i;n++)this.vertexColors[n]=e.vertexColors[n].clone();return this}}class fT extends Zn{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new ra(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){let l;try{l=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),l=JSON.parse(o.substring(65,o.length-2))}const c=s.parse(l);n&&n(c)},i,r)}parse(e){return new p0(e)}}class p0{constructor(e){this.type="Font",this.data=e}generateShapes(e,n=100){const i=[],r=mT(e,n,this.data);for(let s=0,a=r.length;s<a;s++)Array.prototype.push.apply(i,r[s].toShapes());return i}}function mT(t,e,n){const i=Array.from(t),r=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,a=[];let o=0,l=0;for(let c=0;c<i.length;c++){const h=i[c];if(h===`
`)o=0,l-=s;else{const d=gT(h,r,o,l,n);o+=d.offsetX,a.push(d.path)}}return a}function gT(t,e,n,i,r){const s=r.glyphs[t]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");return}const a=new hT;let o,l,c,h,d,u,p,m;if(s.o){const f=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let g=0,v=f.length;g<v;)switch(f[g++]){case"m":o=f[g++]*e+n,l=f[g++]*e+i,a.moveTo(o,l);break;case"l":o=f[g++]*e+n,l=f[g++]*e+i,a.lineTo(o,l);break;case"q":c=f[g++]*e+n,h=f[g++]*e+i,d=f[g++]*e+n,u=f[g++]*e+i,a.quadraticCurveTo(d,u,c,h);break;case"b":c=f[g++]*e+n,h=f[g++]*e+i,d=f[g++]*e+n,u=f[g++]*e+i,p=f[g++]*e+n,m=f[g++]*e+i,a.bezierCurveTo(d,u,p,m,c,h);break}}return{offsetX:s.ha*e,path:a}}p0.prototype.isFont=!0;const yh=new WeakMap;class vT extends Zn{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,n,i,r){const s=new ra(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,a=>{const o={attributeIDs:this.defaultAttributeIDs,attributeTypes:this.defaultAttributeTypes,useUniqueIDs:!1};this.decodeGeometry(a,o).then(n).catch(r)},i,r)}decodeDracoFile(e,n,i,r){const s={attributeIDs:i||this.defaultAttributeIDs,attributeTypes:r||this.defaultAttributeTypes,useUniqueIDs:!!i};this.decodeGeometry(e,s).then(n)}decodeGeometry(e,n){for(const l in n.attributeTypes){const c=n.attributeTypes[l];c.BYTES_PER_ELEMENT!==void 0&&(n.attributeTypes[l]=c.name)}const i=JSON.stringify(n);if(yh.has(e)){const l=yh.get(e);if(l.key===i)return l.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let r;const s=this.workerNextTaskID++,a=e.byteLength,o=this._getWorker(s,a).then(l=>(r=l,new Promise((c,h)=>{r._callbacks[s]={resolve:c,reject:h},r.postMessage({type:"decode",id:s,taskConfig:n,buffer:e},[e])}))).then(l=>this._createGeometry(l.geometry));return o.catch(()=>!0).then(()=>{r&&s&&this._releaseTask(r,s)}),yh.set(e,{key:i,promise:o}),o}_createGeometry(e){const n=new Ge;e.index&&n.setIndex(new rt(e.index.array,1));for(let i=0;i<e.attributes.length;i++){const r=e.attributes[i],s=r.name,a=r.array,o=r.itemSize;n.setAttribute(s,new rt(a,o))}return n}_loadLibrary(e,n){const i=new ra(this.manager);return i.setPath(this.decoderPath),i.setResponseType(n),i.setWithCredentials(this.withCredentials),new Promise((r,s)=>{i.load(e,r,void 0,s)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",n=[];return e?n.push(this._loadLibrary("draco_decoder.js","text")):(n.push(this._loadLibrary("draco_wasm_wrapper.js","text")),n.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(n).then(i=>{const r=i[0];e||(this.decoderConfig.wasmBinary=i[1]);const s=yT.toString(),a=["/* draco decoder */",r,"","/* worker */",s.substring(s.indexOf("{")+1,s.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([a]))}),this.decoderPending}_getWorker(e,n){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const r=new Worker(this.workerSourceURL);r._callbacks={},r._taskCosts={},r._taskLoad=0,r.postMessage({type:"init",decoderConfig:this.decoderConfig}),r.onmessage=function(s){const a=s.data;switch(a.type){case"decode":r._callbacks[a.id].resolve(a);break;case"error":r._callbacks[a.id].reject(a);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+a.type+'"')}},this.workerPool.push(r)}else this.workerPool.sort(function(r,s){return r._taskLoad>s._taskLoad?-1:1});const i=this.workerPool[this.workerPool.length-1];return i._taskCosts[e]=n,i._taskLoad+=n,i})}_releaseTask(e,n){e._taskLoad-=e._taskCosts[n],delete e._callbacks[n],delete e._taskCosts[n]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this}}function yT(){let t,e;onmessage=function(a){const o=a.data;switch(o.type){case"init":t=o.decoderConfig,e=new Promise(function(h){t.onModuleLoaded=function(d){h({draco:d})},DracoDecoderModule(t)});break;case"decode":const l=o.buffer,c=o.taskConfig;e.then(h=>{const d=h.draco,u=new d.Decoder,p=new d.DecoderBuffer;p.Init(new Int8Array(l),l.byteLength);try{const m=n(d,u,p,c),f=m.attributes.map(g=>g.array.buffer);m.index&&f.push(m.index.array.buffer),self.postMessage({type:"decode",id:o.id,geometry:m},f)}catch(m){console.error(m),self.postMessage({type:"error",id:o.id,error:m.message})}finally{d.destroy(p),d.destroy(u)}});break}};function n(a,o,l,c){const h=c.attributeIDs,d=c.attributeTypes;let u,p;const m=o.GetEncodedGeometryType(l);if(m===a.TRIANGULAR_MESH)u=new a.Mesh,p=o.DecodeBufferToMesh(l,u);else if(m===a.POINT_CLOUD)u=new a.PointCloud,p=o.DecodeBufferToPointCloud(l,u);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!p.ok()||u.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+p.error_msg());const f={index:null,attributes:[]};for(const g in h){const v=self[d[g]];let y,w;if(c.useUniqueIDs)w=h[g],y=o.GetAttributeByUniqueId(u,w);else{if(w=o.GetAttributeId(u,a[h[g]]),w===-1)continue;y=o.GetAttribute(u,w)}f.attributes.push(r(a,o,u,g,v,y))}return m===a.TRIANGULAR_MESH&&(f.index=i(a,o,u)),a.destroy(u),f}function i(a,o,l){const h=l.num_faces()*3,d=h*4,u=a._malloc(d);o.GetTrianglesUInt32Array(l,d,u);const p=new Uint32Array(a.HEAPF32.buffer,u,h).slice();return a._free(u),{array:p,itemSize:1}}function r(a,o,l,c,h,d){const u=d.num_components(),m=l.num_points()*u,f=m*h.BYTES_PER_ELEMENT,g=s(a,h),v=a._malloc(f);o.GetAttributeDataArrayForAllPoints(l,d,g,f,v);const y=new h(a.HEAPF32.buffer,v,m).slice();return a._free(v),{name:c,array:y,itemSize:u}}function s(a,o){switch(o){case Float32Array:return a.DT_FLOAT32;case Int8Array:return a.DT_INT8;case Int16Array:return a.DT_INT16;case Int32Array:return a.DT_INT32;case Uint8Array:return a.DT_UINT8;case Uint16Array:return a.DT_UINT16;case Uint32Array:return a.DT_UINT32}}}function xT(t,e=!1){const n=t[0].index!==null,i=new Set(Object.keys(t[0].attributes)),r=new Set(Object.keys(t[0].morphAttributes)),s={},a={},o=t[0].morphTargetsRelative,l=new Ge;let c=0;for(let h=0;h<t.length;++h){const d=t[h];let u=0;if(n!==(d.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const p in d.attributes){if(!i.has(p))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+p+'" attribute exists among all geometries, or in none of them.'),null;s[p]===void 0&&(s[p]=[]),s[p].push(d.attributes[p]),u++}if(u!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(o!==d.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const p in d.morphAttributes){if(!r.has(p))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;a[p]===void 0&&(a[p]=[]),a[p].push(d.morphAttributes[p])}if(l.userData.mergedUserData=l.userData.mergedUserData||[],l.userData.mergedUserData.push(d.userData),e){let p;if(n)p=d.index.count;else if(d.attributes.position!==void 0)p=d.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,p,h),c+=p}}if(n){let h=0;const d=[];for(let u=0;u<t.length;++u){const p=t[u].index;for(let m=0;m<p.count;++m)d.push(p.getX(m)+h);h+=t[u].attributes.position.count}l.setIndex(d)}for(const h in s){const d=Sf(s[h]);if(!d)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,d)}for(const h in a){const d=a[h][0].length;if(d===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let u=0;u<d;++u){const p=[];for(let f=0;f<a[h].length;++f)p.push(a[h][f][u]);const m=Sf(p);if(!m)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(m)}}return l}function Sf(t){let e,n,i,r=0;for(let o=0;o<t.length;++o){const l=t[o];if(l.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(e===void 0&&(e=l.array.constructor),e!==l.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(n===void 0&&(n=l.itemSize),n!==l.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=l.normalized),i!==l.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;r+=l.array.length}const s=new e(r);let a=0;for(let o=0;o<t.length;++o)s.set(t[o].array,a),a+=t[o].array.length;return new rt(s,n,i)}var bT=Object.create,gc=Object.defineProperty,_T=Object.defineProperties,wT=Object.getOwnPropertyDescriptor,ST=Object.getOwnPropertyDescriptors,MT=Object.getOwnPropertyNames,Mf=Object.getOwnPropertySymbols,TT=Object.getPrototypeOf,f0=Object.prototype.hasOwnProperty,ET=Object.prototype.propertyIsEnumerable,Tf=(t,e,n)=>e in t?gc(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ve=(t,e)=>{for(var n in e||(e={}))f0.call(e,n)&&Tf(t,n,e[n]);if(Mf)for(var n of Mf(e))ET.call(e,n)&&Tf(t,n,e[n]);return t},ze=(t,e)=>_T(t,ST(e)),AT=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),m0=(t,e)=>{for(var n in e)gc(t,n,{get:e[n],enumerable:!0})},CT=(t,e,n,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of MT(e))!f0.call(t,r)&&r!==n&&gc(t,r,{get:()=>e[r],enumerable:!(i=wT(e,r))||i.enumerable});return t},LT=(t,e,n)=>(n=t!=null?bT(TT(t)):{},CT(e||!t||!t.__esModule?gc(n,"default",{value:t,enumerable:!0}):n,t)),PT=AT((t,e)=>{(function(n,i){typeof t=="object"&&typeof e<"u"?i(t):typeof define=="function"&&define.amd?define(["exports"],i):i((n=typeof globalThis<"u"?globalThis:n||self).SVDJS={})})(t,function(n){n.SVD=function(i,r,s,a,o){if(r=r===void 0||r,s=s===void 0||s,o=1e-64/(a=a||Math.pow(2,-52)),!i)throw new TypeError("Matrix a is not defined");var l,c,h,d,u,p,m,f,g,v,y,w,b=i[0].length,S=i.length;if(S<b)throw new TypeError("Invalid matrix: m < n");for(var _=[],E=[],x=[],A=r==="f"?S:b,M=v=m=0;M<S;M++)E[M]=new Array(A).fill(0);for(M=0;M<b;M++)x[M]=new Array(b).fill(0);var C,F=new Array(b).fill(0);for(M=0;M<S;M++)for(l=0;l<b;l++)E[M][l]=i[M][l];for(M=0;M<b;M++){for(_[M]=m,g=0,h=M+1,l=M;l<S;l++)g+=Math.pow(E[l][M],2);if(g<o)m=0;else for(f=(p=E[M][M])*(m=p<0?Math.sqrt(g):-Math.sqrt(g))-g,E[M][M]=p-m,l=h;l<b;l++){for(g=0,c=M;c<S;c++)g+=E[c][M]*E[c][l];for(p=g/f,c=M;c<S;c++)E[c][l]=E[c][l]+p*E[c][M]}for(F[M]=m,g=0,l=h;l<b;l++)g+=Math.pow(E[M][l],2);if(g<o)m=0;else{for(f=(p=E[M][M+1])*(m=p<0?Math.sqrt(g):-Math.sqrt(g))-g,E[M][M+1]=p-m,l=h;l<b;l++)_[l]=E[M][l]/f;for(l=h;l<S;l++){for(g=0,c=h;c<b;c++)g+=E[l][c]*E[M][c];for(c=h;c<b;c++)E[l][c]=E[l][c]+g*_[c]}}v<(y=Math.abs(F[M])+Math.abs(_[M]))&&(v=y)}if(s)for(M=b-1;0<=M;M--){if(m!==0){for(f=E[M][M+1]*m,l=h;l<b;l++)x[l][M]=E[M][l]/f;for(l=h;l<b;l++){for(g=0,c=h;c<b;c++)g+=E[M][c]*x[c][l];for(c=h;c<b;c++)x[c][l]=x[c][l]+g*x[c][M]}}for(l=h;l<b;l++)x[M][l]=0,x[l][M]=0;x[M][M]=1,m=_[M],h=M}if(r){if(r==="f")for(M=b;M<S;M++){for(l=b;l<S;l++)E[M][l]=0;E[M][M]=1}for(M=b-1;0<=M;M--){for(h=M+1,m=F[M],l=h;l<A;l++)E[M][l]=0;if(m!==0){for(f=E[M][M]*m,l=h;l<A;l++){for(g=0,c=h;c<S;c++)g+=E[c][M]*E[c][l];for(p=g/f,c=M;c<S;c++)E[c][l]=E[c][l]+p*E[c][M]}for(l=M;l<S;l++)E[l][M]=E[l][M]/m}else for(l=M;l<S;l++)E[l][M]=0;E[M][M]=E[M][M]+1}}for(a*=v,c=b-1;0<=c;c--)for(var $=0;$<50;$++){for(C=!1,h=c;0<=h;h--){if(Math.abs(_[h])<=a){C=!0;break}if(Math.abs(F[h-1])<=a)break}if(!C){for(u=0,d=h-(g=1),M=h;M<c+1&&(p=g*_[M],_[M]=u*_[M],!(Math.abs(p)<=a));M++)if(m=F[M],F[M]=Math.sqrt(p*p+m*m),u=m/(f=F[M]),g=-p/f,r)for(l=0;l<S;l++)y=E[l][d],w=E[l][M],E[l][d]=y*u+w*g,E[l][M]=-y*g+w*u}if(w=F[c],h===c){if(w<0&&(F[c]=-w,s))for(l=0;l<b;l++)x[l][c]=-x[l][c];break}for(v=F[h],p=(((y=F[c-1])-w)*(y+w)+((m=_[c-1])-(f=_[c]))*(m+f))/(2*f*y),m=Math.sqrt(p*p+1),p=((v-w)*(v+w)+f*(y/(p<0?p-m:p+m)-f))/v,M=h+(g=u=1);M<c+1;M++){if(m=_[M],y=F[M],f=g*m,m*=u,w=Math.sqrt(p*p+f*f),p=v*(u=p/(_[M-1]=w))+m*(g=f/w),m=-v*g+m*u,f=y*g,y*=u,s)for(l=0;l<b;l++)v=x[l][M-1],w=x[l][M],x[l][M-1]=v*u+w*g,x[l][M]=-v*g+w*u;if(w=Math.sqrt(p*p+f*f),p=(u=p/(F[M-1]=w))*m+(g=f/w)*y,v=-g*m+u*y,r)for(l=0;l<S;l++)y=E[l][M-1],w=E[l][M],E[l][M-1]=y*u+w*g,E[l][M]=-y*g+w*u}_[h]=0,_[c]=p,F[c]=v}for(M=0;M<b;M++)F[M]<a&&(F[M]=0);return{u:E,q:F,v:x}},n.VERSION="1.1.1",Object.defineProperty(n,"__esModule",{value:!0})})});function DT(t){return Array.isArray(t)?t:[t]}var RT=typeof global=="object"&&global&&global.Object===Object&&global,g0=RT,OT=typeof self=="object"&&self&&self.Object===Object&&self,IT=g0||OT||Function("return this")(),Vi=IT,NT=Vi.Symbol,Bi=NT,v0=Object.prototype,zT=v0.hasOwnProperty,BT=v0.toString,za=Bi?Bi.toStringTag:void 0;function FT(t){var e=zT.call(t,za),n=t[za];try{t[za]=void 0;var i=!0}catch{}var r=BT.call(t);return i&&(e?t[za]=n:delete t[za]),r}var UT=FT,kT=Object.prototype,VT=kT.toString;function HT(t){return VT.call(t)}var GT=HT,WT="[object Null]",jT="[object Undefined]",Ef=Bi?Bi.toStringTag:void 0;function qT(t){return t==null?t===void 0?jT:WT:Ef&&Ef in Object(t)?UT(t):GT(t)}var os=qT;function XT(t){return t!=null&&typeof t=="object"}var Or=XT,JT="[object Symbol]";function $T(t){return typeof t=="symbol"||Or(t)&&os(t)==JT}var ad=$T;function YT(t,e){for(var n=-1,i=t==null?0:t.length,r=Array(i);++n<i;)r[n]=e(t[n],n,t);return r}var y0=YT,ZT=Array.isArray,Fi=ZT,KT=1/0,Af=Bi?Bi.prototype:void 0,Cf=Af?Af.toString:void 0;function x0(t){if(typeof t=="string")return t;if(Fi(t))return y0(t,x0)+"";if(ad(t))return Cf?Cf.call(t):"";var e=t+"";return e=="0"&&1/t==-KT?"-0":e}var QT=x0;function eE(t){var e=typeof t;return t!=null&&(e=="object"||e=="function")}var Ir=eE;function tE(t){return t}var b0=tE,nE="[object AsyncFunction]",iE="[object Function]",rE="[object GeneratorFunction]",sE="[object Proxy]";function aE(t){if(!Ir(t))return!1;var e=os(t);return e==iE||e==rE||e==nE||e==sE}var od=aE,oE=Vi["__core-js_shared__"],xh=oE,Lf=function(){var t=/[^.]+$/.exec(xh&&xh.keys&&xh.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}();function lE(t){return!!Lf&&Lf in t}var cE=lE,hE=Function.prototype,uE=hE.toString;function dE(t){if(t!=null){try{return uE.call(t)}catch{}try{return t+""}catch{}}return""}var ls=dE,pE=/[\\^$.*+?()[\]{}|]/g,fE=/^\[object .+?Constructor\]$/,mE=Function.prototype,gE=Object.prototype,vE=mE.toString,yE=gE.hasOwnProperty,xE=RegExp("^"+vE.call(yE).replace(pE,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function bE(t){if(!Ir(t)||cE(t))return!1;var e=od(t)?xE:fE;return e.test(ls(t))}var _E=bE;function wE(t,e){return t==null?void 0:t[e]}var SE=wE;function ME(t,e){var n=SE(t,e);return _E(n)?n:void 0}var cs=ME,TE=cs(Vi,"WeakMap"),Zh=TE,Pf=Object.create,EE=function(){function t(){}return function(e){if(!Ir(e))return{};if(Pf)return Pf(e);t.prototype=e;var n=new t;return t.prototype=void 0,n}}(),AE=EE;function CE(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}var LE=CE;function PE(t,e){var n=-1,i=t.length;for(e||(e=Array(i));++n<i;)e[n]=t[n];return e}var _0=PE,DE=800,RE=16,OE=Date.now;function IE(t){var e=0,n=0;return function(){var i=OE(),r=RE-(i-n);if(n=i,r>0){if(++e>=DE)return arguments[0]}else e=0;return t.apply(void 0,arguments)}}var NE=IE;function zE(t){return function(){return t}}var BE=zE,FE=function(){try{var t=cs(Object,"defineProperty");return t({},"",{}),t}catch{}}(),jl=FE,UE=jl?function(t,e){return jl(t,"toString",{configurable:!0,enumerable:!1,value:BE(e),writable:!0})}:b0,kE=UE,VE=NE(kE),w0=VE;function HE(t,e){for(var n=-1,i=t==null?0:t.length;++n<i&&e(t[n],n,t)!==!1;);return t}var GE=HE,WE=9007199254740991,jE=/^(?:0|[1-9]\d*)$/;function qE(t,e){var n=typeof t;return e=e==null?WE:e,!!e&&(n=="number"||n!="symbol"&&jE.test(t))&&t>-1&&t%1==0&&t<e}var S0=qE;function XE(t,e,n){e=="__proto__"&&jl?jl(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}var ld=XE;function JE(t,e){return t===e||t!==t&&e!==e}var vc=JE,$E=Object.prototype,YE=$E.hasOwnProperty;function ZE(t,e,n){var i=t[e];(!(YE.call(t,e)&&vc(i,n))||n===void 0&&!(e in t))&&ld(t,e,n)}var M0=ZE;function KE(t,e,n,i){var r=!n;n||(n={});for(var s=-1,a=e.length;++s<a;){var o=e[s],l=i?i(n[o],t[o],o,n,t):void 0;l===void 0&&(l=t[o]),r?ld(n,o,l):M0(n,o,l)}return n}var ya=KE,Df=Math.max;function QE(t,e,n){return e=Df(e===void 0?t.length-1:e,0),function(){for(var i=arguments,r=-1,s=Df(i.length-e,0),a=Array(s);++r<s;)a[r]=i[e+r];r=-1;for(var o=Array(e+1);++r<e;)o[r]=i[r];return o[e]=n(a),LE(t,this,o)}}var T0=QE;function e2(t,e){return w0(T0(t,e,b0),t+"")}var t2=e2,n2=9007199254740991;function i2(t){return typeof t=="number"&&t>-1&&t%1==0&&t<=n2}var E0=i2;function r2(t){return t!=null&&E0(t.length)&&!od(t)}var yc=r2;function s2(t,e,n){if(!Ir(n))return!1;var i=typeof e;return(i=="number"?yc(n)&&S0(e,n.length):i=="string"&&e in n)?vc(n[e],t):!1}var a2=s2;function o2(t){return t2(function(e,n){var i=-1,r=n.length,s=r>1?n[r-1]:void 0,a=r>2?n[2]:void 0;for(s=t.length>3&&typeof s=="function"?(r--,s):void 0,a&&a2(n[0],n[1],a)&&(s=r<3?void 0:s,r=1),e=Object(e);++i<r;){var o=n[i];o&&t(e,o,i,s)}return e})}var l2=o2,c2=Object.prototype;function h2(t){var e=t&&t.constructor,n=typeof e=="function"&&e.prototype||c2;return t===n}var cd=h2;function u2(t,e){for(var n=-1,i=Array(t);++n<t;)i[n]=e(n);return i}var d2=u2,p2="[object Arguments]";function f2(t){return Or(t)&&os(t)==p2}var Rf=f2,A0=Object.prototype,m2=A0.hasOwnProperty,g2=A0.propertyIsEnumerable,v2=Rf(function(){return arguments}())?Rf:function(t){return Or(t)&&m2.call(t,"callee")&&!g2.call(t,"callee")},ql=v2;function y2(){return!1}var x2=y2,C0=typeof Un=="object"&&Un&&!Un.nodeType&&Un,Of=C0&&typeof kn=="object"&&kn&&!kn.nodeType&&kn,b2=Of&&Of.exports===C0,If=b2?Vi.Buffer:void 0,_2=If?If.isBuffer:void 0,w2=_2||x2,hd=w2,S2="[object Arguments]",M2="[object Array]",T2="[object Boolean]",E2="[object Date]",A2="[object Error]",C2="[object Function]",L2="[object Map]",P2="[object Number]",D2="[object Object]",R2="[object RegExp]",O2="[object Set]",I2="[object String]",N2="[object WeakMap]",z2="[object ArrayBuffer]",B2="[object DataView]",F2="[object Float32Array]",U2="[object Float64Array]",k2="[object Int8Array]",V2="[object Int16Array]",H2="[object Int32Array]",G2="[object Uint8Array]",W2="[object Uint8ClampedArray]",j2="[object Uint16Array]",q2="[object Uint32Array]",Rt={};Rt[F2]=Rt[U2]=Rt[k2]=Rt[V2]=Rt[H2]=Rt[G2]=Rt[W2]=Rt[j2]=Rt[q2]=!0;Rt[S2]=Rt[M2]=Rt[z2]=Rt[T2]=Rt[B2]=Rt[E2]=Rt[A2]=Rt[C2]=Rt[L2]=Rt[P2]=Rt[D2]=Rt[R2]=Rt[O2]=Rt[I2]=Rt[N2]=!1;function X2(t){return Or(t)&&E0(t.length)&&!!Rt[os(t)]}var J2=X2;function $2(t){return function(e){return t(e)}}var ud=$2,L0=typeof Un=="object"&&Un&&!Un.nodeType&&Un,eo=L0&&typeof kn=="object"&&kn&&!kn.nodeType&&kn,Y2=eo&&eo.exports===L0,bh=Y2&&g0.process,Z2=function(){try{var t=eo&&eo.require&&eo.require("util").types;return t||bh&&bh.binding&&bh.binding("util")}catch{}}(),sa=Z2,Nf=sa&&sa.isTypedArray,K2=Nf?ud(Nf):J2,P0=K2,Q2=Object.prototype,eA=Q2.hasOwnProperty;function tA(t,e){var n=Fi(t),i=!n&&ql(t),r=!n&&!i&&hd(t),s=!n&&!i&&!r&&P0(t),a=n||i||r||s,o=a?d2(t.length,String):[],l=o.length;for(var c in t)(e||eA.call(t,c))&&!(a&&(c=="length"||r&&(c=="offset"||c=="parent")||s&&(c=="buffer"||c=="byteLength"||c=="byteOffset")||S0(c,l)))&&o.push(c);return o}var D0=tA;function nA(t,e){return function(n){return t(e(n))}}var R0=nA,iA=R0(Object.keys,Object),rA=iA,sA=Object.prototype,aA=sA.hasOwnProperty;function oA(t){if(!cd(t))return rA(t);var e=[];for(var n in Object(t))aA.call(t,n)&&n!="constructor"&&e.push(n);return e}var lA=oA;function cA(t){return yc(t)?D0(t):lA(t)}var dd=cA;function hA(t){var e=[];if(t!=null)for(var n in Object(t))e.push(n);return e}var uA=hA,dA=Object.prototype,pA=dA.hasOwnProperty;function fA(t){if(!Ir(t))return uA(t);var e=cd(t),n=[];for(var i in t)i=="constructor"&&(e||!pA.call(t,i))||n.push(i);return n}var mA=fA;function gA(t){return yc(t)?D0(t,!0):mA(t)}var Ao=gA,vA=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,yA=/^\w*$/;function xA(t,e){if(Fi(t))return!1;var n=typeof t;return n=="number"||n=="symbol"||n=="boolean"||t==null||ad(t)?!0:yA.test(t)||!vA.test(t)||e!=null&&t in Object(e)}var bA=xA,_A=cs(Object,"create"),mo=_A;function wA(){this.__data__=mo?mo(null):{},this.size=0}var SA=wA;function MA(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}var TA=MA,EA="__lodash_hash_undefined__",AA=Object.prototype,CA=AA.hasOwnProperty;function LA(t){var e=this.__data__;if(mo){var n=e[t];return n===EA?void 0:n}return CA.call(e,t)?e[t]:void 0}var PA=LA,DA=Object.prototype,RA=DA.hasOwnProperty;function OA(t){var e=this.__data__;return mo?e[t]!==void 0:RA.call(e,t)}var IA=OA,NA="__lodash_hash_undefined__";function zA(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=mo&&e===void 0?NA:e,this}var BA=zA;function xa(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}xa.prototype.clear=SA;xa.prototype.delete=TA;xa.prototype.get=PA;xa.prototype.has=IA;xa.prototype.set=BA;var zf=xa;function FA(){this.__data__=[],this.size=0}var UA=FA;function kA(t,e){for(var n=t.length;n--;)if(vc(t[n][0],e))return n;return-1}var xc=kA,VA=Array.prototype,HA=VA.splice;function GA(t){var e=this.__data__,n=xc(e,t);if(n<0)return!1;var i=e.length-1;return n==i?e.pop():HA.call(e,n,1),--this.size,!0}var WA=GA;function jA(t){var e=this.__data__,n=xc(e,t);return n<0?void 0:e[n][1]}var qA=jA;function XA(t){return xc(this.__data__,t)>-1}var JA=XA;function $A(t,e){var n=this.__data__,i=xc(n,t);return i<0?(++this.size,n.push([t,e])):n[i][1]=e,this}var YA=$A;function ba(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}ba.prototype.clear=UA;ba.prototype.delete=WA;ba.prototype.get=qA;ba.prototype.has=JA;ba.prototype.set=YA;var bc=ba,ZA=cs(Vi,"Map"),go=ZA;function KA(){this.size=0,this.__data__={hash:new zf,map:new(go||bc),string:new zf}}var QA=KA;function eC(t){var e=typeof t;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?t!=="__proto__":t===null}var tC=eC;function nC(t,e){var n=t.__data__;return tC(e)?n[typeof e=="string"?"string":"hash"]:n.map}var _c=nC;function iC(t){var e=_c(this,t).delete(t);return this.size-=e?1:0,e}var rC=iC;function sC(t){return _c(this,t).get(t)}var aC=sC;function oC(t){return _c(this,t).has(t)}var lC=oC;function cC(t,e){var n=_c(this,t),i=n.size;return n.set(t,e),this.size+=n.size==i?0:1,this}var hC=cC;function _a(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}_a.prototype.clear=QA;_a.prototype.delete=rC;_a.prototype.get=aC;_a.prototype.has=lC;_a.prototype.set=hC;var pd=_a,uC="Expected a function";function fd(t,e){if(typeof t!="function"||e!=null&&typeof e!="function")throw new TypeError(uC);var n=function(){var i=arguments,r=e?e.apply(this,i):i[0],s=n.cache;if(s.has(r))return s.get(r);var a=t.apply(this,i);return n.cache=s.set(r,a)||s,a};return n.cache=new(fd.Cache||pd),n}fd.Cache=pd;var dC=fd,pC=500;function fC(t){var e=dC(t,function(i){return n.size===pC&&n.clear(),i}),n=e.cache;return e}var mC=fC,gC=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,vC=/\\(\\)?/g,yC=mC(function(t){var e=[];return t.charCodeAt(0)===46&&e.push(""),t.replace(gC,function(n,i,r,s){e.push(r?s.replace(vC,"$1"):i||n)}),e}),xC=yC;function bC(t){return t==null?"":QT(t)}var _C=bC;function wC(t,e){return Fi(t)?t:bA(t,e)?[t]:xC(_C(t))}var md=wC,SC=1/0;function MC(t){if(typeof t=="string"||ad(t))return t;var e=t+"";return e=="0"&&1/t==-SC?"-0":e}var O0=MC;function TC(t,e){e=md(e,t);for(var n=0,i=e.length;t!=null&&n<i;)t=t[O0(e[n++])];return n&&n==i?t:void 0}var EC=TC;function AC(t,e){for(var n=-1,i=e.length,r=t.length;++n<i;)t[r+n]=e[n];return t}var gd=AC,Bf=Bi?Bi.isConcatSpreadable:void 0;function CC(t){return Fi(t)||ql(t)||!!(Bf&&t&&t[Bf])}var LC=CC;function I0(t,e,n,i,r){var s=-1,a=t.length;for(n||(n=LC),r||(r=[]);++s<a;){var o=t[s];e>0&&n(o)?e>1?I0(o,e-1,n,i,r):gd(r,o):i||(r[r.length]=o)}return r}var PC=I0;function DC(t){var e=t==null?0:t.length;return e?PC(t,1):[]}var RC=DC;function OC(t){return w0(T0(t,void 0,RC),t+"")}var IC=OC,NC=R0(Object.getPrototypeOf,Object),vd=NC,zC="[object Object]",BC=Function.prototype,FC=Object.prototype,N0=BC.toString,UC=FC.hasOwnProperty,kC=N0.call(Object);function VC(t){if(!Or(t)||os(t)!=zC)return!1;var e=vd(t);if(e===null)return!0;var n=UC.call(e,"constructor")&&e.constructor;return typeof n=="function"&&n instanceof n&&N0.call(n)==kC}var z0=VC;function HC(t,e,n){var i=-1,r=t.length;e<0&&(e=-e>r?0:r+e),n=n>r?r:n,n<0&&(n+=r),r=e>n?0:n-e>>>0,e>>>=0;for(var s=Array(r);++i<r;)s[i]=t[i+e];return s}var GC=HC;function WC(){this.__data__=new bc,this.size=0}var jC=WC;function qC(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}var XC=qC;function JC(t){return this.__data__.get(t)}var $C=JC;function YC(t){return this.__data__.has(t)}var ZC=YC,KC=200;function QC(t,e){var n=this.__data__;if(n instanceof bc){var i=n.__data__;if(!go||i.length<KC-1)return i.push([t,e]),this.size=++n.size,this;n=this.__data__=new pd(i)}return n.set(t,e),this.size=n.size,this}var e3=QC;function wa(t){var e=this.__data__=new bc(t);this.size=e.size}wa.prototype.clear=jC;wa.prototype.delete=XC;wa.prototype.get=$C;wa.prototype.has=ZC;wa.prototype.set=e3;var B0=wa;function t3(t,e){return t&&ya(e,dd(e),t)}var n3=t3;function i3(t,e){return t&&ya(e,Ao(e),t)}var r3=i3,F0=typeof Un=="object"&&Un&&!Un.nodeType&&Un,Ff=F0&&typeof kn=="object"&&kn&&!kn.nodeType&&kn,s3=Ff&&Ff.exports===F0,Uf=s3?Vi.Buffer:void 0,kf=Uf?Uf.allocUnsafe:void 0;function a3(t,e){if(e)return t.slice();var n=t.length,i=kf?kf(n):new t.constructor(n);return t.copy(i),i}var U0=a3;function o3(t,e){for(var n=-1,i=t==null?0:t.length,r=0,s=[];++n<i;){var a=t[n];e(a,n,t)&&(s[r++]=a)}return s}var l3=o3;function c3(){return[]}var k0=c3,h3=Object.prototype,u3=h3.propertyIsEnumerable,Vf=Object.getOwnPropertySymbols,d3=Vf?function(t){return t==null?[]:(t=Object(t),l3(Vf(t),function(e){return u3.call(t,e)}))}:k0,yd=d3;function p3(t,e){return ya(t,yd(t),e)}var f3=p3,m3=Object.getOwnPropertySymbols,g3=m3?function(t){for(var e=[];t;)gd(e,yd(t)),t=vd(t);return e}:k0,V0=g3;function v3(t,e){return ya(t,V0(t),e)}var y3=v3;function x3(t,e,n){var i=e(t);return Fi(t)?i:gd(i,n(t))}var H0=x3;function b3(t){return H0(t,dd,yd)}var _3=b3;function w3(t){return H0(t,Ao,V0)}var G0=w3,S3=cs(Vi,"DataView"),Kh=S3,M3=cs(Vi,"Promise"),Qh=M3,T3=cs(Vi,"Set"),eu=T3,Hf="[object Map]",E3="[object Object]",Gf="[object Promise]",Wf="[object Set]",jf="[object WeakMap]",qf="[object DataView]",A3=ls(Kh),C3=ls(go),L3=ls(Qh),P3=ls(eu),D3=ls(Zh),Vr=os;(Kh&&Vr(new Kh(new ArrayBuffer(1)))!=qf||go&&Vr(new go)!=Hf||Qh&&Vr(Qh.resolve())!=Gf||eu&&Vr(new eu)!=Wf||Zh&&Vr(new Zh)!=jf)&&(Vr=function(t){var e=os(t),n=e==E3?t.constructor:void 0,i=n?ls(n):"";if(i)switch(i){case A3:return qf;case C3:return Hf;case L3:return Gf;case P3:return Wf;case D3:return jf}return e});var xd=Vr,R3=Object.prototype,O3=R3.hasOwnProperty;function I3(t){var e=t.length,n=new t.constructor(e);return e&&typeof t[0]=="string"&&O3.call(t,"index")&&(n.index=t.index,n.input=t.input),n}var N3=I3,z3=Vi.Uint8Array,Xf=z3;function B3(t){var e=new t.constructor(t.byteLength);return new Xf(e).set(new Xf(t)),e}var bd=B3;function F3(t,e){var n=e?bd(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}var U3=F3,k3=/\w*$/;function V3(t){var e=new t.constructor(t.source,k3.exec(t));return e.lastIndex=t.lastIndex,e}var H3=V3,Jf=Bi?Bi.prototype:void 0,$f=Jf?Jf.valueOf:void 0;function G3(t){return $f?Object($f.call(t)):{}}var W3=G3;function j3(t,e){var n=e?bd(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}var W0=j3,q3="[object Boolean]",X3="[object Date]",J3="[object Map]",$3="[object Number]",Y3="[object RegExp]",Z3="[object Set]",K3="[object String]",Q3="[object Symbol]",eL="[object ArrayBuffer]",tL="[object DataView]",nL="[object Float32Array]",iL="[object Float64Array]",rL="[object Int8Array]",sL="[object Int16Array]",aL="[object Int32Array]",oL="[object Uint8Array]",lL="[object Uint8ClampedArray]",cL="[object Uint16Array]",hL="[object Uint32Array]";function uL(t,e,n){var i=t.constructor;switch(e){case eL:return bd(t);case q3:case X3:return new i(+t);case tL:return U3(t,n);case nL:case iL:case rL:case sL:case aL:case oL:case lL:case cL:case hL:return W0(t,n);case J3:return new i;case $3:case K3:return new i(t);case Y3:return H3(t);case Z3:return new i;case Q3:return W3(t)}}var dL=uL;function pL(t){return typeof t.constructor=="function"&&!cd(t)?AE(vd(t)):{}}var j0=pL,fL="[object Map]";function mL(t){return Or(t)&&xd(t)==fL}var gL=mL,Yf=sa&&sa.isMap,vL=Yf?ud(Yf):gL,yL=vL,xL="[object Set]";function bL(t){return Or(t)&&xd(t)==xL}var _L=bL,Zf=sa&&sa.isSet,wL=Zf?ud(Zf):_L,SL=wL,ML=1,TL=2,EL=4,q0="[object Arguments]",AL="[object Array]",CL="[object Boolean]",LL="[object Date]",PL="[object Error]",X0="[object Function]",DL="[object GeneratorFunction]",RL="[object Map]",OL="[object Number]",J0="[object Object]",IL="[object RegExp]",NL="[object Set]",zL="[object String]",BL="[object Symbol]",FL="[object WeakMap]",UL="[object ArrayBuffer]",kL="[object DataView]",VL="[object Float32Array]",HL="[object Float64Array]",GL="[object Int8Array]",WL="[object Int16Array]",jL="[object Int32Array]",qL="[object Uint8Array]",XL="[object Uint8ClampedArray]",JL="[object Uint16Array]",$L="[object Uint32Array]",Pt={};Pt[q0]=Pt[AL]=Pt[UL]=Pt[kL]=Pt[CL]=Pt[LL]=Pt[VL]=Pt[HL]=Pt[GL]=Pt[WL]=Pt[jL]=Pt[RL]=Pt[OL]=Pt[J0]=Pt[IL]=Pt[NL]=Pt[zL]=Pt[BL]=Pt[qL]=Pt[XL]=Pt[JL]=Pt[$L]=!0;Pt[PL]=Pt[X0]=Pt[FL]=!1;function Ll(t,e,n,i,r,s){var a,o=e&ML,l=e&TL,c=e&EL;if(n&&(a=r?n(t,i,r,s):n(t)),a!==void 0)return a;if(!Ir(t))return t;var h=Fi(t);if(h){if(a=N3(t),!o)return _0(t,a)}else{var d=xd(t),u=d==X0||d==DL;if(hd(t))return U0(t,o);if(d==J0||d==q0||u&&!r){if(a=l||u?{}:j0(t),!o)return l?y3(t,r3(a,t)):f3(t,n3(a,t))}else{if(!Pt[d])return r?t:{};a=dL(t,d,o)}}s||(s=new B0);var p=s.get(t);if(p)return p;s.set(t,a),SL(t)?t.forEach(function(g){a.add(Ll(g,e,n,g,t,s))}):yL(t)&&t.forEach(function(g,v){a.set(v,Ll(g,e,n,v,t,s))});var m=c?l?G0:_3:l?Ao:dd,f=h?void 0:m(t);return GE(f||t,function(g,v){f&&(v=g,g=t[v]),M0(a,v,Ll(g,e,n,v,t,s))}),a}var $0=Ll,YL=1,ZL=4;function KL(t){return $0(t,YL|ZL)}var Y0=KL;function QL(t){return function(e,n,i){for(var r=-1,s=Object(e),a=i(e),o=a.length;o--;){var l=a[t?o:++r];if(n(s[l],l,s)===!1)break}return e}}var eP=QL,tP=eP(),nP=tP;function iP(t,e,n){(n!==void 0&&!vc(t[e],n)||n===void 0&&!(e in t))&&ld(t,e,n)}var tu=iP;function rP(t){return Or(t)&&yc(t)}var sP=rP;function aP(t,e){if(!(e==="constructor"&&typeof t[e]=="function")&&e!="__proto__")return t[e]}var nu=aP;function oP(t){return ya(t,Ao(t))}var lP=oP;function cP(t,e,n,i,r,s,a){var o=nu(t,n),l=nu(e,n),c=a.get(l);if(c){tu(t,n,c);return}var h=s?s(o,l,n+"",t,e,a):void 0,d=h===void 0;if(d){var u=Fi(l),p=!u&&hd(l),m=!u&&!p&&P0(l);h=l,u||p||m?Fi(o)?h=o:sP(o)?h=_0(o):p?(d=!1,h=U0(l,!0)):m?(d=!1,h=W0(l,!0)):h=[]:z0(l)||ql(l)?(h=o,ql(o)?h=lP(o):(!Ir(o)||od(o))&&(h=j0(l))):d=!1}d&&(a.set(l,h),r(h,l,i,s,a),a.delete(l)),tu(t,n,h)}var hP=cP;function Z0(t,e,n,i,r){t!==e&&nP(e,function(s,a){if(r||(r=new B0),Ir(s))hP(t,e,a,n,Z0,i,r);else{var o=i?i(nu(t,a),s,a+"",t,e,r):void 0;o===void 0&&(o=s),tu(t,a,o)}},Ao)}var uP=Z0;function dP(t){var e=t==null?0:t.length;return e?t[e-1]:void 0}var pP=dP;function fP(t,e){return e.length<2?t:EC(t,GC(e,0,-1))}var mP=fP,gP=l2(function(t,e,n){uP(t,e,n)}),Xl=gP;function vP(t,e){return e=md(e,t),t=mP(t,e),t==null||delete t[O0(pP(e))]}var yP=vP;function xP(t){return z0(t)?void 0:t}var bP=xP,_P=1,wP=2,SP=4,MP=IC(function(t,e){var n={};if(t==null)return n;var i=!1;e=y0(e,function(s){return s=md(s,t),i||(i=s.length>1),s}),ya(t,G0(t),n),i&&(n=$0(n,_P|wP|SP,bP));for(var r=e.length;r--;)yP(n,e[r]);return n}),iu=MP,Jl;(t=>{t.all=["PerspectiveCamera","OrthographicCamera"];function e(n){return t.all.includes(n)}t.is=e})(Jl||(Jl={}));var vo;(t=>{t.DefaultUp=[0,1,0],t.DefaultTargetOffset=1e3,t.defaultData={far:1e5,type:"OrthographicCamera",perspective:{near:5,fov:45,zoom:1},orthographic:{near:-1e5,zoom:1},up:t.DefaultUp,isUpVectorFlipped:!1,targetOffset:t.DefaultTargetOffset};function e(n){return n.type==="PerspectiveCamera"?n.perspective.zoom:n.orthographic.zoom}t.getZoom=e})(vo||(vo={}));var Kf;(t=>{function e(i,r){return i[0]===r[0]&&i[1]===r[1]}t.isEqual=e;function n(i,r,s){return[i[0]+(r[0]-i[0])*s,i[1]+(r[1]-i[1])*s]}t.lerp=n})(Kf||(Kf={}));var to;(t=>{function e(s,a){return s[0]===a[0]&&s[1]===a[1]&&s[2]===a[2]}t.isEqual=e;function n(s,a){return[s[0]+a[0],s[1]+a[1],s[2]+a[2]]}t.add=n;function i(s,a){return[s[0]-a[0],s[1]-a[1],s[2]-a[2]]}t.sub=i;function r(s,a,o){return[s[0]+(a[0]-s[0])*o,s[1]+(a[1]-s[1])*o,s[2]+(a[2]-s[2])*o]}t.lerp=r})(to||(to={}));var Qf;(t=>{function e(i,r){return i[0]===r[0]&&i[1]===r[1]&&i[2]===r[2]&&i[3]===r[3]}t.isEqual=e;function n(i,r,s){return[i[0]+(r[0]-i[0])*s,i[1]+(r[1]-i[1])*s,i[2]+(r[2]-i[2])*s,i[3]+(r[3]-i[3])*s]}t.lerp=n})(Qf||(Qf={}));var aa;(t=>{t.identity=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function e(r,s){for(let a=0;a<16;a++)if(r[a]!==s[a])return!1;return!0}t.isEqual=e;function n(r){return r!=null?r:t.identity}t.simplify=n;function i(r,s){let a=s.slice(0);for(var o=0,l=s.length;o<l;o+=3){let c=r[3]*s[o]+r[7]*s[o+1]+r[11]*s[o+2]+r[15];a[o]=(r[0]*s[o]+r[4]*s[o+1]+r[8]*s[o+2]+r[12])/c,a[o+1]=(r[1]*s[o]+r[5]*s[o+1]+r[9]*s[o+2]+r[13])/c,a[o+2]=(r[2]*s[o]+r[6]*s[o+1]+r[10]*s[o+2]+r[14])/c}return a}t.applyMatrix4=i})(aa||(aa={}));var ci;(t=>{t.white={r:1,g:1,b:1},t.red={r:1,g:0,b:0},t.black={r:0,g:0,b:0};function e(a){return{r:Math.round(a.r*255),g:Math.round(a.g*255),b:Math.round(a.b*255),a:1}}t.toRgb255a1=e;function n(a){return{r:a.r,g:a.g,b:a.b}}t.clone=n;function i(a){return a=Math.floor(a),{r:(a>>16&255)/255,g:(a>>8&255)/255,b:(a&255)/255}}t.fromHex=i;function r(a,o){return a.r===o.r&&a.g===o.g&&a.b===o.b}t.equals=r;function s(a,o,l){return{r:a.r+(o.r-a.r)*l,g:a.g+(o.g-a.g)*l,b:a.b+(o.b-a.b)*l}}t.lerp=s})(ci||(ci={}));var $r;(t=>{t.white=ze(ve({},ci.white),{a:1});function e(a){return{r:a[0],g:a[1],b:a[2],a:a[3]}}t.from0to1=e;function n(a,o){return ze(ve({},ci.fromHex(a)),{a:o})}t.fromHexAndA=n;function i(a){return{r:Math.round(a.r*255),g:Math.round(a.g*255),b:Math.round(a.b*255),a:a.a}}t.toRgb255a1=i;function r(a,o){return ci.equals(a,o)&&a.a===o.a}t.equals=r;function s(a,o,l){return{r:a.r+(o.r-a.r)*l,g:a.g+(o.g-a.g)*l,b:a.b+(o.b-a.b)*l,a:a.a+(o.a-a.a)*l}}t.lerp=s})($r||($r={}));var ru;(t=>t.identity={position:[0,0,0],rotation:[0,0,0],scale:[1,1,1]})(ru||(ru={}));var em;(t=>t.defaultData={mass:1,stiffness:80,damping:10,velocity:0})(em||(em={}));var tm;(t=>t.defaultData={control1:[.5,.05],control2:[.1,.3]})(tm||(tm={}));var su;(t=>{function e(n,i=.1){return{type:"radial",hideBase:!1,count:3,radial:{radius:Math.max(n[0],n[1])*2,start:0,end:360,alignment:!1,axis:"y",scale:[1,1,1],rotation:[0,0,0],position:[0,0,0]},linear:{scale:[1,1,1],rotation:[0,0,0],position:[n[0]+n[0]*i,0,0]},grid:{count:[2,2,2],size:n.map(r=>r*(1+i)),useCenter:!0}}}t.defaultData=e})(su||(su={}));var Yr=class{modifyById(t,e){let n=this;if(n[t]===void 0)throw new Error("not expected");{let i=ze(ve({},n),{[t]:e});return Object.setPrototypeOf(i,Yr.prototype),i}}add(t,e){var n;let i=this.runOp({type:1,id:t,data:e});return(n=i==null?void 0:i.data)!=null?n:this}runOp(t){let e=this;if(t.type===1){let n=e[t.id],i;n===void 0?i={type:2,id:t.id}:i={type:1,id:t.id,data:n};let{id:r,data:s}=t,a=ze(ve({},e),{[r]:s});return Object.setPrototypeOf(a,Yr.prototype),{data:a,actual:t,reverse:i}}else if(t.type===2){let{id:n}=t,i=e[n];if(i===void 0)return null;{let r=ve({},e);return Object.setPrototypeOf(r,Yr.prototype),delete r[n],{data:r,actual:t,reverse:{type:1,id:n,data:i}}}}throw new Error("illegal arg")}};function _d(t){if(t.deepFreeze!==void 0){t.deepFreeze(t);return}let e=Object.getOwnPropertyNames(t);for(let n of e){let i=t[n];i&&typeof i=="object"&&_d(i)}return Object.freeze(t)}function TP(t,e){let n=0;for(;n<t.length&&n<e.length;){if(t[n]<e[n])return-1;if(t[n]>e[n])return 1;n+=1}return n!==e.length?-1:n!==t.length?1:0}var EP=class extends Error{};function _r(t,e,n){if(t===void 0?e===void 0?(t=0,e=10):t=e-10:e===void 0&&(e=t+10),t>e){let s=t;t=e,e=s}let i=[],r=1/(n+1);for(let s=0;s<n;s++){let a=t+(e-t)*(s+.75+Math.random()*.5)*r;i.push(a)}return i}function AP(t){return t instanceof Uint8Array||t instanceof Uint16Array||t instanceof Uint32Array||t instanceof Int8Array||t instanceof Int16Array||t instanceof Int32Array||t instanceof Float32Array||t instanceof Float64Array}function CP(){return typeof process<"u"}function K0(t,e){for(let n of t)e(n.id,n.data),K0(n.children,e)}function Q0(t,e){e(t.id,t.data);for(let n of t.children)Q0(n,e)}var oa=class extends Array{constructor(...t){super(...t),Object.setPrototypeOf(this,oa.prototype)}deepFreeze(){let t=0;for(;t<this.length;)_d(this[t]),t++}fillCaches0(t,e){this.objCaches.set(t.id,t),this.parentCaches.set(t.id,e);for(let n of t.children)this.fillCaches0(n,t.id)}fillCaches(){if(this.objCaches===void 0){this.objCaches=new Map,this.parentCaches=new Map;for(let t of this)this.fillCaches0(t,null)}}randomId(){this.fillCaches();let t=Array.from(this.objCaches.keys());if(t.length!==0)return t[Math.max(0,Math.floor(Math.random()*t.length)-1)]}isDescendantOf(t,e){for(;t;){let n=this.parent(t);if(n===e)return!0;t=n}return!1}data(t){var e;return(e=this.get(t))==null?void 0:e.data}has(t){return this.childrenOf(t)!==void 0}get(t){return this.fillCaches(),this.objCaches.get(t)}childrenOf(t){var e;return t===null?this:(e=this.get(t))==null?void 0:e.children}traverseFrom(t,e){if(t===null)this.traverse(e);else{let n=this.get(t);n&&Q0(n,e)}}traverse(t){K0(this,t)}totalSize(){return this.fillCaches(),this.objCaches.size}parent(t){return this.fillCaches(),this.parentCaches.get(t)}childrenArray(t){return t===null?this:this.get(t).children}modifyById(t,e){if(this.get(t)===void 0)throw new Error("not expected");{let n=this.parent(t),i=this.childrenArray(n),r=i.findIndex(a=>a.id===t);if(r<0)throw new Error("not expected");let s=i[r];return i=[...i],i[r]=ze(ve({},s),{data:e}),this.modifyArrayBy(n,i)}}modifyArrayBy(t,e){let n=t,i=e;for(;n!==null;){let s=i,a=n;if(n=this.parent(n),n===void 0)throw new Error;i=this.childrenArray(n);let o=i.findIndex(l=>l.id===a);if(o<0)throw new Error;i=[...i],i[o]=ze(ve({},i[o]),{children:s})}Object.setPrototypeOf(i,oa.prototype);let r=i;return r.fillCaches(),r}runOp(t){switch(t.type){case 7:return this.addOp(t);case 8:return this.deleteOp(t);case 9:return this.moveOp(t)}}checkDuplicatedIdRec({id:t,children:e}){if(this.get(t)!==void 0)return!0;for(let n of e)if(this.checkDuplicatedIdRec(n))return!0;return!1}addOp(t){let{parent:e,fi:n,id:i,data:r,children:s}=t;if(e!==null&&this.get(e)===void 0||this.checkDuplicatedIdRec(t))return null;{let a=e,o=this.childrenArray(a),l={fi:n,id:i,data:r,children:s};return o=[...o,l],o.sort((c,h)=>c.fi-h.fi),t.localIndex=o.indexOf(l),{data:this.modifyArrayBy(a,o),actual:t,reverse:{type:8,id:i}}}}deleteOp(t){let{id:e}=t;if(this.get(e)===null)return null;{let n=this.parent(e);if(n===void 0)return null;let i=this.childrenArray(n),r=i.findIndex(a=>a.id===e);t.localIndex=r,i=[...i];let s=i.splice(r,1)[0];return{data:this.modifyArrayBy(n,i),actual:t,reverse:ze(ve({type:7},s),{parent:n})}}}moveOp(t){let{parent:e,fi:n,id:i}=t;if(e!==null&&this.get(e)===void 0)return this.deleteOp({type:8,id:i});if(e!==null){let d=e;for(;d!==null;){if(d===void 0)throw new Error;if(d===i)throw new EP("cyclic tree");d=this.parent(d)}}let r=this.parent(i);if(r===void 0)return null;let s=r,a=this.childrenArray(r),o=a.findIndex(d=>d.id===i);a=[...a];let l=a.splice(o,1)[0],c=this.modifyArrayBy(r,a);r=e,a=c.childrenArray(r);let h=l.fi;return l=ze(ve({},l),{fi:n}),a=[...a,l],a.sort((d,u)=>d.fi-u.fi),t.localIndex=a.indexOf(l),c=c.modifyArrayBy(r,a),{data:c,actual:t,reverse:{type:9,parent:s,fi:h,id:i}}}previous(t,e){if(e===null){let i=this.childrenArray(t);return i.length===0?null:i[i.length-1].id}let n=null;for(let i of this.childrenArray(t)){if(i.id===e)return n;n=i.id}return null}traverseSortNext(t){let e=this.parent(t);if(e!==void 0){let n=this.childrenArray(e),i=n.findIndex(r=>r.id===t)+1;if(i<n.length)return n[i].id;if(e)return this.traverseSortNext(e)}}sortNext(t){let e=this.childrenArray(t);return e.length>0?e[0].id:this.traverseSortNext(t)}traverseSortPrevious(t){let e=this.childrenArray(t);return e.length>0?this.traverseSortPrevious(e[e.length-1].id):t}sortPrevious(t){let e=this.parent(t);if(e!==void 0){let n=this.childrenArray(e),i=n.findIndex(r=>r.id===t)-1;return i>=0?this.traverseSortPrevious(n[i].id):e}}getAllSorted(t){let e=[];for(let n of t){let i=this.getWithSortKey(n.id);i!==void 0&&e.push(ve(ve({},n),i))}e.sort((n,i)=>TP(n.sortKey,i.sortKey));for(let n of e)delete n.sortKey;return e}getWithSortKey(t){var e=t;let n=[],i=this.get(e),r=i;if(i!==void 0){for(;e;)n.splice(0,0,i.fi),e=this.parent(e),e!==null&&(i=this.get(e));return ze(ve({},r),{sortKey:n})}}insertBeforeHelper(t,e,n){return this.insertAfterHelper(t,this.previous(t,e),n)}insertAfterHelper(t,e,n){let i=this.childrenArray(t);if(e===null){if(i.length===0)return _r(0,n,n);{let r=i[0].fi;return _r(r-n,r,n)}}else{let r=this.get(e);if(r===void 0||this.parent(e)!==t)throw new Error("illegal args");let s=i.find(a=>a.fi>r.fi);if(s===void 0){let a=i[i.length-1].fi;return _r(a,a+n,n)}else return _r(r.fi,s.fi,n)}}},au;(t=>{function e(n,i){if(Array.isArray(n)){let r=i.props,s={},a=[...n],o=!1;if(r)for(let l of Object.keys(r)){let c=parseInt(l);if(isNaN(c))throw new Error("wrong index");s[l]=a[c],a[c]=r[l],o=!0}return o?{data:a,actual:i,reverse:{type:0,props:s}}:null}else{let r=i.props,s={},a=ve({},n),o=!1;if(r)for(let l of Object.keys(r)){s[l]=a[l];let c=r[l];c===void 0?delete a[l]:a[l]=c,o=!0}return o?{data:a,actual:i,reverse:{type:0,props:s}}:null}}t.runOp=e})(au||(au={}));var Pn=class extends Array{constructor(...t){super(...t),Object.setPrototypeOf(this,Pn.prototype)}deepFreeze(){let t=0;for(;t<this.length;)_d(this[t]),t++}fillCaches0(t){this.objCaches.set(t.id,t)}fillCaches(){if(this.objCaches===void 0){this.objCaches=new Map,Object.getOwnPropertyDescriptor(this,"objCaches").enumerable=!1;for(let t of this)this.fillCaches0(t)}}randomId(){this.fillCaches();let t=Array.from(this.objCaches.keys());if(t.length!==0)return t[Math.max(0,Math.floor(Math.random()*t.length)-1)]}data(t){var e;return(e=this.get(t))==null?void 0:e.data}get(t){return this.fillCaches(),this.objCaches.get(t)}modifyById(t,e){if(this.get(t)===void 0)throw new Error("not expected");{let n=this,i=n.findIndex(s=>s.id===t);if(i<0)throw new Error("not expected");let r=n[i];return n=[...n],n[i]=ze(ve({},r),{data:e}),this.modifyArrayBy(n)}}modifyArrayBy(t){Object.setPrototypeOf(t,Pn.prototype);let e=t;return CP()||e.fillCaches(),e}runOp(t){switch(t.type){case 4:return this.addOp(t);case 5:return this.deleteOp(t);case 6:return this.moveOp(t)}}addOp(t){let{fi:e,id:n,data:i}=t,r=this,s={fi:e,id:n,data:i};return r=[...r,s],r.sort((a,o)=>a.fi-o.fi),t.localIndex=r.indexOf(s),{data:this.modifyArrayBy(r),actual:t,reverse:{type:5,id:n}}}deleteOp(t){let{id:e}=t,n=this,i=n.findIndex(s=>s.id===e);if(i===-1)return null;t.localIndex=i,n=[...n];let r=n.splice(i,1)[0];return{data:this.modifyArrayBy(n),actual:t,reverse:ve({type:4},r)}}moveOp(t){let{fi:e,id:n}=t,i=this;i=[...i];let r=i.findIndex(o=>o.id===n);if(r===-1)return null;let s=i[r].fi,a=ze(ve({},i[r]),{fi:e});return i[r]=a,i.sort((o,l)=>o.fi-l.fi),t.localIndex=i.indexOf(a),{data:this.modifyArrayBy(i),actual:t,reverse:{type:6,fi:s,id:n}}}previous(t){if(t===null)return this.length===0?null:this[this.length-1].id;let e=null;for(let n of this){if(n.id===t)return e;e=n.id}return null}insertBeforeHelper(t,e){return this.insertAfterHelper(this.previous(t),e)}insertAfterHelper(t,e){let n=this;if(t===null){if(n.length===0)return _r(0,e,e);{let i=n[0].fi;return _r(i-e,i,e)}}else{let i=this.get(t);if(i===void 0)throw new Error("illegal args");let r=n.find(s=>s.fi>i.fi);if(r===void 0){let s=n[n.length-1].fi;return _r(s,s+e,e)}else return _r(i.fi,r.fi,e)}}},ev=Symbol(),wc=Symbol(),Sc=class{reportOp(t,e){let n=this;if(e===null)return;n._current=e.data;let i=[];for(;!(n instanceof nv);){let r=n._path,s=n._current;if(r!==""&&i.splice(0,0,r),n=n._parent,n===null)return;n.update(r,s)}n.push(i,t,e.actual,e.reverse)}deleteChildren(t){if(this._children){let e=this._children[t];if(e){let n=e[wc];n&&n(),delete this._children[t]}}}},LP=class extends Sc{constructor(t,e,n){super(),this._parent=t,this._path=e,this._current=n}update(t,e){if(Array.isArray(this._current)){if(typeof t=="string"&&(t=parseInt(t),isNaN(t)))throw new Error("Invalid path");this._current=[...this._current],this._current[t]=e}else this._current=ze(ve({},this._current),{[t]:e})}runOp(t){this.reportOp(t,au.runOp(this._current,t))}},PP=class extends Sc{constructor(t,e,n){super(),this._parent=t,this._path=e,this._current=n}update(t,e){this._current=ze(ve({},this._current),{[t]:e}),Object.setPrototypeOf(this._current,Yr.prototype)}runOp(t){this.reportOp(t,this._current.runOp(t))}},tv={get(t,e){if(e===wc)return()=>{t._parent=null};if(e===ev)return t._current;let{_current:n,_children:i}=t;if(e==="push"&&Array.isArray(n))throw new Error("not supported to expand array");let r=i===void 0?void 0:i[e];if(r!==void 0)return r;let s=n[e],a=Mc(t,e,s);return a!==s?(i===void 0&&(i={},t._children=i),i[e]=a,a):s},has(t,e){return e in t._current},ownKeys(t){return Reflect.ownKeys(t._current)},defineProperty(){throw Error("not supported")},getPrototypeOf(t){return Object.getPrototypeOf(t._current)},setPrototypeOf(){throw Error("not supported")},getOwnPropertyDescriptor(t,e){let n=t._current,i=Reflect.getOwnPropertyDescriptor(n,e);return i&&{writable:!0,configurable:!0,enumerable:i.enumerable,value:n[e]}}},DP=ze(ve({},tv),{set(t,e,n){var i;let r={type:0,props:{[e]:(i=rv(n))!=null?i:n}};return t.deleteChildren(e),t.runOp(r),!0},deleteProperty(t,e){let n={type:0,props:{[e]:void 0}};return t.deleteChildren(e),t.runOp(n),!0}}),RP=ze(ve({},tv),{set(t,e,n){return n===void 0?this.deleteProperty(t,e):(t.deleteChildren(e),t.runOp({type:1,id:e,data:n})),!0},deleteProperty(t,e){return t.runOp({type:2,id:e}),!0}}),wd=class extends Sc{constructor(t,e,n){super(),this._children={},this._parent=t,this._path=e,this._current=n,this[wc]=()=>{this._parent=null}}unproxy(){return this._current}update(t,e){this._current=this._current.modifyById(t,e)}runOp(t){this.reportOp(t,this._current.runOp(t))}randomId(){return this._current.randomId()}isDescendantOf(t,e){return this._current.isDescendantOf(t,e)}childrenOf(t){return this._current.childrenOf(t)}traverse(t){return this._current.traverse(t)}get(t){return this._current.get(t)}parent(t){return this._current.parent(t)}traverse(t){this._current.traverse((e,n)=>{t(e,this.data(e))})}data(t){var e;let{_current:n,_children:i}=this,r=i===void 0?void 0:i[t];if(r!==void 0)return r;let s=(e=n.get(t))==null?void 0:e.data,a=Mc(this,t,s);return a!==s?(i===void 0&&(i={},this._children=i),i[t]=a,a):s}add(t,e,n,i,r){this.runOp({type:7,parent:t,fi:e,id:n,data:i,children:r})}move(t,e,n){this.runOp({type:9,parent:t,fi:e,id:n})}insertAfter(t,e,n){let i=this._current.insertAfterHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.add(t,i[r],s.id,s.data,s.children)}}insertBefore(t,e,n){let i=this._current.insertBeforeHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.add(t,i[r],s.id,s.data,s.children)}}moveAfter(t,e,n){let i=this._current.insertAfterHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.move(t,i[r],s)}}moveBefore(t,e,n){let i=this._current.insertBeforeHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.move(t,i[r],s)}}delete(t){this.deleteChildren(t),this.runOp({type:8,id:t})}sortNext(t){return this._current.sortNext(t)}sortPrevious(t){return this._current.sortPrevious(t)}getAllSorted(t){return this._current.getAllSorted(t)}},Sd=class extends Sc{constructor(t,e,n){super(),this._children={},this._parent=t,this._path=e,this._current=n,this[wc]=()=>{this._parent=null}}unproxy(){return this._current}get length(){return this._current.length}forEach(t){let e=this.length;for(let n=0;n<e;n++){let i=this._current[n].id;t(this.data(this._current[n].id),i)}}update(t,e){this._current=this._current.modifyById(t,e)}randomId(){return this._current.randomId()}get(t){return ze(ve({},this._current.get(t)),{data:this.data(t)})}data(t){var e;let{_current:n,_children:i}=this,r=i===void 0?void 0:i[t];if(r!==void 0)return r;let s=(e=n.get(t))==null?void 0:e.data,a=Mc(this,t,s);return a!==s?(i===void 0&&(i={},this._children=i),i[t]=a,a):s}runOp(t){this.reportOp(t,this._current.runOp(t))}add(t,e,n){this.runOp({type:4,fi:t,id:e,data:n})}move(t,e){this.runOp({type:6,fi:t,id:e})}insertAfter(t,e){let n=this._current.insertAfterHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.add(n[i],r.id,r.data)}}insertBefore(t,e){let n=this._current.insertBeforeHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.add(n[i],r.id,r.data)}}moveAfter(t,e){let n=this._current.insertAfterHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.move(n[i],r)}}moveBefore(t,e){let n=this._current.insertBeforeHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.move(n[i],r)}}delete(t){this.deleteChildren(t),this.runOp({type:5,id:t})}};function _h(t,e,n){if(t.length>0){let i=t[t.length-1];if(i.type===0&&e.type===0&&ou.equal(i.path,n)){Object.assign(i.props,e.props);return}}t.push(ze(ve({},e),{path:n}))}var nv=class{constructor(t){this.ts=[],this.actual=[],this.reverse=[],this._current=t}update(t,e){if(t!=="")throw new Error("");this._current=e}push(t,e,n,i){_h(this.ts,e,t),_h(this.actual,n,t),_h(this.reverse,i,t)}result(){return{data:this._current,ts:this.ts,actual:this.actual,reverse:this.reverse.reverse()}}};function Mc(t,e,n){return n instanceof oa?new wd(t,e,n):n instanceof Pn?new Sd(t,e,n):n instanceof Yr?new Proxy(new PP(t,e,n),RP):n!==null&&typeof n=="object"?AP(n)?n:new Proxy(new LP(t,e,n),DP):n}function iv(t){let e=new nv(t);return[Mc(e,"",t),e]}function nm(t,e){let[n,i]=iv(t);return e(n),i.result()}function rv(t){return t instanceof wd||t instanceof Sd?t._current:t!==null&&typeof t=="object"?t[ev]:t}var ou;(t=>{function e(r,s){if(s.length===r.length)for(var a=0;a<r.length;){if(r[a]!==s[a])return!1;a+=1}else return!1;return!0}t.equal=e;function n(r,s,a){let o=i(a,r);if(o!==void 0&&typeof o=="object"&&o!==null){let l=ve({},s);return Object.keys(o).forEach(c=>{delete l[c]}),l}else return s}t.removeOverridden=n;function i(r,s,a=0){if(s.length<=a)return r;if((r instanceof oa||r instanceof wd)&&typeof s[a]=="string"||(r instanceof Pn||r instanceof Sd)&&typeof s[a]=="string")return i(r.data(s[a]),s,a+1);if(typeof s[a]=="number"&&Array.isArray(r)||typeof s[a]=="string"&&typeof r=="object")return i(r[s[a]],s,a+1)}t.zoom=i})(ou||(ou={}));var sv=class{},im=class extends sv{constructor(t){super(),this.id=t}},rm=class extends sv{constructor(t){super(),this.data=t}},lu;try{lu=new TextDecoder}catch{}var De,Er,Q=0,av=[],cu=av,hu=0,En={},xt,wr,Wn=0,Ri=0,In,nr,Tn=[],_t,sm={useRecords:!1,mapsAsObjects:!0},ov=class{},lv=new ov;lv.name="MessagePack 0xC1";var la=!1,$l=class{constructor(t){t&&(t.useRecords===!1&&t.mapsAsObjects===void 0&&(t.mapsAsObjects=!0),t.structures?t.structures.sharedLength=t.structures.length:t.getStructures&&((t.structures=[]).uninitialized=!0,t.structures.sharedLength=0)),Object.assign(this,t)}unpack(t,e){if(De)return fv(()=>(du(),this?this.unpack(t,e):$l.prototype.unpack.call(sm,t,e)));Er=e>-1?e:t.length,Q=0,hu=0,Ri=0,wr=null,cu=av,In=null,De=t;try{_t=t.dataView||(t.dataView=new DataView(t.buffer,t.byteOffset,t.byteLength))}catch(n){throw De=null,t instanceof Uint8Array?n:new Error("Source must be a Uint8Array or Buffer but was a "+(t&&typeof t=="object"?t.constructor.name:typeof t))}if(this instanceof $l){if(En=this,this.structures)return xt=this.structures,vl();(!xt||xt.length>0)&&(xt=[])}else En=sm,(!xt||xt.length>0)&&(xt=[]);return vl()}unpackMultiple(t,e){let n,i=0;try{la=!0;let r=t.length,s=this?this.unpack(t,r):Ec.unpack(t,r);if(e){for(e(s);Q<r;)if(i=Q,e(vl())===!1)return}else{for(n=[s];Q<r;)i=Q,n.push(vl());return n}}catch(r){throw r.lastPosition=i,r.values=n,r}finally{la=!1,du()}}_mergeStructures(t,e){t=t||[];for(let n=0,i=t.length;n<i;n++){let r=t[n];r&&(r.isShared=!0,n>=32&&(r.highByte=n-32>>5))}t.sharedLength=t.length;for(let n in e||[])if(n>=0){let i=t[n],r=e[n];r&&(i&&((t.restoreStructures||(t.restoreStructures=[]))[n]=i),t[n]=r)}return this.structures=t}decode(t,e){return this.unpack(t,e)}};function vl(){try{if(!En.trusted&&!la){let e=xt.sharedLength||0;e<xt.length&&(xt.length=e)}let t=Vt();if(Q==Er)xt.restoreStructures&&am(),xt=null,De=null,nr&&(nr=null);else if(Q>Er){let e=new Error("Unexpected end of MessagePack data");throw e.incomplete=!0,e}else if(!la)throw new Error("Data read, but end of buffer not reached");return t}catch(t){throw xt.restoreStructures&&am(),du(),(t instanceof RangeError||t.message.startsWith("Unexpected end of buffer"))&&(t.incomplete=!0),t}}function am(){for(let t in xt.restoreStructures)xt[t]=xt.restoreStructures[t];xt.restoreStructures=null}function Vt(){let t=De[Q++];if(t<160)if(t<128){if(t<64)return t;{let e=xt[t&63]||En.getStructures&&cv()[t&63];return e?(e.read||(e.read=Md(e,t&63)),e.read()):t}}else if(t<144)if(t-=128,En.mapsAsObjects){let e={};for(let n=0;n<t;n++)e[uv()]=Vt();return e}else{let e=new Map;for(let n=0;n<t;n++)e.set(Vt(),Vt());return e}else{t-=144;let e=new Array(t);for(let n=0;n<t;n++)e[n]=Vt();return e}else if(t<192){let e=t-160;if(Ri>=Q)return wr.slice(Q-Wn,(Q+=e)-Wn);if(Ri==0&&Er<140){let n=e<16?Td(e):hv(e);if(n!=null)return n}return uu(e)}else{let e;switch(t){case 192:return null;case 193:return In?(e=Vt(),e>0?In[1].slice(In.position1,In.position1+=e):In[0].slice(In.position0,In.position0-=e)):lv;case 194:return!1;case 195:return!0;case 196:return wh(De[Q++]);case 197:return e=_t.getUint16(Q),Q+=2,wh(e);case 198:return e=_t.getUint32(Q),Q+=4,wh(e);case 199:return Ur(De[Q++]);case 200:return e=_t.getUint16(Q),Q+=2,Ur(e);case 201:return e=_t.getUint32(Q),Q+=4,Ur(e);case 202:if(e=_t.getFloat32(Q),En.useFloat32>2){let n=Ed[(De[Q]&127)<<1|De[Q+1]>>7];return Q+=4,(n*e+(e>0?.5:-.5)>>0)/n}return Q+=4,e;case 203:return e=_t.getFloat64(Q),Q+=8,e;case 204:return De[Q++];case 205:return e=_t.getUint16(Q),Q+=2,e;case 206:return e=_t.getUint32(Q),Q+=4,e;case 207:return En.int64AsNumber?(e=_t.getUint32(Q)*4294967296,e+=_t.getUint32(Q+4)):e=_t.getBigUint64(Q),Q+=8,e;case 208:return _t.getInt8(Q++);case 209:return e=_t.getInt16(Q),Q+=2,e;case 210:return e=_t.getInt32(Q),Q+=4,e;case 211:return En.int64AsNumber?(e=_t.getInt32(Q)*4294967296,e+=_t.getUint32(Q+4)):e=_t.getBigInt64(Q),Q+=8,e;case 212:if(e=De[Q++],e==114)return um(De[Q++]&63);{let n=Tn[e];if(n)return n.read?(Q++,n.read(Vt())):n.noBuffer?(Q++,n()):n(De.subarray(Q,++Q));throw new Error("Unknown extension "+e)}case 213:return e=De[Q],e==114?(Q++,um(De[Q++]&63,De[Q++])):Ur(2);case 214:return Ur(4);case 215:return Ur(8);case 216:return Ur(16);case 217:return e=De[Q++],Ri>=Q?wr.slice(Q-Wn,(Q+=e)-Wn):IP(e);case 218:return e=_t.getUint16(Q),Q+=2,Ri>=Q?wr.slice(Q-Wn,(Q+=e)-Wn):NP(e);case 219:return e=_t.getUint32(Q),Q+=4,Ri>=Q?wr.slice(Q-Wn,(Q+=e)-Wn):zP(e);case 220:return e=_t.getUint16(Q),Q+=2,lm(e);case 221:return e=_t.getUint32(Q),Q+=4,lm(e);case 222:return e=_t.getUint16(Q),Q+=2,cm(e);case 223:return e=_t.getUint32(Q),Q+=4,cm(e);default:if(t>=224)return t-256;if(t===void 0){let n=new Error("Unexpected end of MessagePack data");throw n.incomplete=!0,n}throw new Error("Unknown MessagePack token "+t)}}}var OP=/^[a-zA-Z_$][a-zA-Z\d_$]*$/;function Md(t,e){function n(){if(n.count++>2){let r=t.read=new Function("r","return function(){return {"+t.map(s=>OP.test(s)?s+":r()":"["+JSON.stringify(s)+"]:r()").join(",")+"}}")(Vt);return t.highByte===0&&(t.read=om(e,t.read)),r()}let i={};for(let r=0,s=t.length;r<s;r++){let a=t[r];i[a]=Vt()}return i}return n.count=0,t.highByte===0?om(e,n):n}var om=(t,e)=>function(){let n=De[Q++];if(n===0)return e();let i=t<32?-(t+(n<<5)):t+(n<<5),r=xt[i]||cv()[i];if(!r)throw new Error("Record id is not defined for "+i);return r.read||(r.read=Md(r,t)),r.read()};function cv(){let t=fv(()=>(De=null,En.getStructures()));return xt=En._mergeStructures(t,xt)}var uu=Tc,IP=Tc,NP=Tc,zP=Tc;function Tc(t){let e;if(t<16&&(e=Td(t)))return e;if(t>64&&lu)return lu.decode(De.subarray(Q,Q+=t));let n=Q+t,i=[];for(e="";Q<n;){let r=De[Q++];if((r&128)===0)i.push(r);else if((r&224)===192){let s=De[Q++]&63;i.push((r&31)<<6|s)}else if((r&240)===224){let s=De[Q++]&63,a=De[Q++]&63;i.push((r&31)<<12|s<<6|a)}else if((r&248)===240){let s=De[Q++]&63,a=De[Q++]&63,o=De[Q++]&63,l=(r&7)<<18|s<<12|a<<6|o;l>65535&&(l-=65536,i.push(l>>>10&1023|55296),l=56320|l&1023),i.push(l)}else i.push(r);i.length>=4096&&(e+=an.apply(String,i),i.length=0)}return i.length>0&&(e+=an.apply(String,i)),e}function lm(t){let e=new Array(t);for(let n=0;n<t;n++)e[n]=Vt();return e}function cm(t){if(En.mapsAsObjects){let e={};for(let n=0;n<t;n++)e[uv()]=Vt();return e}else{let e=new Map;for(let n=0;n<t;n++)e.set(Vt(),Vt());return e}}var an=String.fromCharCode;function hv(t){let e=Q,n=new Array(t);for(let i=0;i<t;i++){let r=De[Q++];if((r&128)>0){Q=e;return}n[i]=r}return an.apply(String,n)}function Td(t){if(t<4)if(t<2){if(t===0)return"";{let e=De[Q++];if((e&128)>1){Q-=1;return}return an(e)}}else{let e=De[Q++],n=De[Q++];if((e&128)>0||(n&128)>0){Q-=2;return}if(t<3)return an(e,n);let i=De[Q++];if((i&128)>0){Q-=3;return}return an(e,n,i)}else{let e=De[Q++],n=De[Q++],i=De[Q++],r=De[Q++];if((e&128)>0||(n&128)>0||(i&128)>0||(r&128)>0){Q-=4;return}if(t<6){if(t===4)return an(e,n,i,r);{let s=De[Q++];if((s&128)>0){Q-=5;return}return an(e,n,i,r,s)}}else if(t<8){let s=De[Q++],a=De[Q++];if((s&128)>0||(a&128)>0){Q-=6;return}if(t<7)return an(e,n,i,r,s,a);let o=De[Q++];if((o&128)>0){Q-=7;return}return an(e,n,i,r,s,a,o)}else{let s=De[Q++],a=De[Q++],o=De[Q++],l=De[Q++];if((s&128)>0||(a&128)>0||(o&128)>0||(l&128)>0){Q-=8;return}if(t<10){if(t===8)return an(e,n,i,r,s,a,o,l);{let c=De[Q++];if((c&128)>0){Q-=9;return}return an(e,n,i,r,s,a,o,l,c)}}else if(t<12){let c=De[Q++],h=De[Q++];if((c&128)>0||(h&128)>0){Q-=10;return}if(t<11)return an(e,n,i,r,s,a,o,l,c,h);let d=De[Q++];if((d&128)>0){Q-=11;return}return an(e,n,i,r,s,a,o,l,c,h,d)}else{let c=De[Q++],h=De[Q++],d=De[Q++],u=De[Q++];if((c&128)>0||(h&128)>0||(d&128)>0||(u&128)>0){Q-=12;return}if(t<14){if(t===12)return an(e,n,i,r,s,a,o,l,c,h,d,u);{let p=De[Q++];if((p&128)>0){Q-=13;return}return an(e,n,i,r,s,a,o,l,c,h,d,u,p)}}else{let p=De[Q++],m=De[Q++];if((p&128)>0||(m&128)>0){Q-=14;return}if(t<15)return an(e,n,i,r,s,a,o,l,c,h,d,u,p,m);let f=De[Q++];if((f&128)>0){Q-=15;return}return an(e,n,i,r,s,a,o,l,c,h,d,u,p,m,f)}}}}}function wh(t){return En.copyBuffers?Uint8Array.prototype.slice.call(De,Q,Q+=t):De.subarray(Q,Q+=t)}function Ur(t){let e=De[Q++];if(Tn[e])return Tn[e](De.subarray(Q,Q+=t));throw new Error("Unknown extension type "+e)}var hm=new Array(4096);function uv(){let t=De[Q++];if(t>=160&&t<192){if(t=t-160,Ri>=Q)return wr.slice(Q-Wn,(Q+=t)-Wn);if(!(Ri==0&&Er<180))return uu(t)}else return Q--,Vt();let e=(t<<5^(t>1?_t.getUint16(Q):t>0?De[Q]:0))&4095,n=hm[e],i=Q,r=Q+t-3,s,a=0;if(n&&n.bytes==t){for(;i<r;){if(s=_t.getUint32(i),s!=n[a++]){i=1879048192;break}i+=4}for(r+=3;i<r;)if(s=De[i++],s!=n[a++]){i=1879048192;break}if(i===r)return Q=i,n.string;r-=3,i=Q}for(n=[],hm[e]=n,n.bytes=t;i<r;)s=_t.getUint32(i),n.push(s),i+=4;for(r+=3;i<r;)s=De[i++],n.push(s);let o=t<16?Td(t):hv(t);return o!=null?n.string=o:n.string=uu(t)}var um=(t,e)=>{var n=Vt();let i=t;e!==void 0&&(t=t<32?-((e<<5)+t):(e<<5)+t,n.highByte=e);let r=xt[t];return r&&r.isShared&&((xt.restoreStructures||(xt.restoreStructures=[]))[t]=r),xt[t]=n,n.read=Md(n,i),n.read()},dv=typeof self=="object"?self:global;Tn[0]=()=>{};Tn[0].noBuffer=!0;Tn[101]=()=>{let t=Vt();return(dv[t[0]]||Error)(t[1])};Tn[105]=t=>{let e=_t.getUint32(Q-4);nr||(nr=new Map);let n=De[Q],i;n>=144&&n<160||n==220||n==221?i=[]:i={};let r={target:i};nr.set(e,r);let s=Vt();return r.used?Object.assign(i,s):(r.target=s,s)};Tn[112]=t=>{let e=_t.getUint32(Q-4),n=nr.get(e);return n.used=!0,n.target};Tn[115]=()=>new Set(Vt());var pv=["Int8","Uint8","Uint8Clamped","Int16","Uint16","Int32","Uint32","Float32","Float64","BigInt64","BigUint64"].map(t=>t+"Array");Tn[116]=t=>{let e=t[0],n=pv[e];if(!n)throw new Error("Could not find typed array for code "+e);return new dv[n](Uint8Array.prototype.slice.call(t,1).buffer)};Tn[120]=()=>{let t=Vt();return new RegExp(t[0],t[1])};Tn[98]=t=>{let e=(t[0]<<24)+(t[1]<<16)+(t[2]<<8)+t[3],n=Q;Q+=e-4,In=[Vt(),Vt()],In.position0=0,In.position1=0;let i=Q;Q=n;try{return Vt()}finally{Q=i}};Tn[255]=t=>t.length==4?new Date((t[0]*16777216+(t[1]<<16)+(t[2]<<8)+t[3])*1e3):t.length==8?new Date(((t[0]<<22)+(t[1]<<14)+(t[2]<<6)+(t[3]>>2))/1e6+((t[3]&3)*4294967296+t[4]*16777216+(t[5]<<16)+(t[6]<<8)+t[7])*1e3):t.length==12?new Date(((t[0]<<24)+(t[1]<<16)+(t[2]<<8)+t[3])/1e6+((t[4]&128?-281474976710656:0)+t[6]*1099511627776+t[7]*4294967296+t[8]*16777216+(t[9]<<16)+(t[10]<<8)+t[11])*1e3):new Date("invalid");function fv(t){let e=Er,n=Q,i=hu,r=Wn,s=Ri,a=wr,o=cu,l=nr,c=In,h=new Uint8Array(De.slice(0,Er)),d=xt,u=xt.slice(0,xt.length),p=En,m=la,f=t();return Er=e,Q=n,hu=i,Wn=r,Ri=s,wr=a,cu=o,nr=l,In=c,De=h,la=m,xt=d,xt.splice(0,xt.length,...u),En=p,_t=new DataView(De.buffer,De.byteOffset,De.byteLength),f}function du(){De=null,nr=null,xt=null}function BP(t){t.unpack?Tn[t.type]=t.unpack:Tn[t.type]=t}var Ed=new Array(147);for(let t=0;t<256;t++)Ed[t]=+("1e"+Math.floor(45.15-t*.30103));var Ec=new $l({useRecords:!1});Ec.unpack;Ec.unpackMultiple;Ec.unpack;var FP=new Float32Array(1);new Uint8Array(FP.buffer,0,4);var Pl;try{Pl=new TextEncoder}catch{}var Yl,Ad,Ac=typeof Buffer<"u",Sh=Ac?Buffer.allocUnsafeSlow:Uint8Array,mv=Ac?Buffer:Uint8Array,dm=Ac?4294967296:2144337920,de,jt,ae=0,Ei,Ai=null,UP=/[\u0080-\uFFFF]/,Ba=Symbol("record-id"),gv=class extends $l{constructor(t){super(t),this.offset=0;let e,n,i,r,s,a=0,o=mv.prototype.utf8Write?function(_,E,x){return de.utf8Write(_,E,x)}:Pl&&Pl.encodeInto?function(_,E){return Pl.encodeInto(_,de.subarray(E)).written}:!1,l=this;t||(t={});let c=t&&t.sequential,h=t.structures||t.saveStructures,d=t.maxSharedStructures;if(d==null&&(d=h?32:0),d>8160)throw new Error("Maximum maxSharedStructure is 8160");let u=t.maxOwnStructures;u==null&&(u=h?32:64),c&&!t.saveStructures&&(this.structures=[]);let p=d>32||u+d>64,m=d+64,f=d+u+64;if(f>8256)throw new Error("Maximum maxSharedStructure + maxOwnStructure is 8192");let g=[],v=0,y=0;this.pack=this.encode=function(_,E){if(de||(de=new Sh(8192),jt=new DataView(de.buffer,0,8192),ae=0),Ei=de.length-10,Ei-ae<2048?(de=new Sh(de.length),jt=new DataView(de.buffer,0,de.length),Ei=de.length-10,ae=0):ae=ae+7&2147483640,e=ae,s=l.structuredClone?new Map:null,l.bundleStrings?(Ai=["",""],de[ae++]=214,de[ae++]=98,Ai.position=ae-e,ae+=4):Ai=null,n=l.structures,n){n.uninitialized&&(n=l._mergeStructures(l.getStructures()));let x=n.sharedLength||0;if(x>d)throw new Error("Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to "+n.sharedLength);if(!n.transitions){n.transitions=Object.create(null);for(let A=0;A<x;A++){let M=n[A];if(!M)continue;let C,F=n.transitions;for(let $=0,I=M.length;$<I;$++){let Z=M[$];C=F[Z],C||(C=F[Z]=Object.create(null)),F=C}F[Ba]=A+64}a=x}c||(n.nextId=x+64)}i&&(i=!1),r=n||[];try{if(w(_),Ai){jt.setUint32(Ai.position+e,ae-Ai.position-e);let x=Ai;Ai=null,w(x[0]),w(x[1])}if(l.offset=ae,s&&s.idsToInsert){ae+=s.idsToInsert.length*6,ae>Ei&&S(ae),l.offset=ae;let x=VP(de.subarray(e,ae),s.idsToInsert);return s=null,x}return E&HP?(de.start=e,de.end=ae,de):de.subarray(e,ae)}finally{if(n){if(y<10&&y++,v>1e4)n.transitions=null,y=0,v=0,g.length>0&&(g=[]);else if(g.length>0&&!c){for(let x=0,A=g.length;x<A;x++)g[x][Ba]=0;g=[]}if(i&&l.saveStructures){let x=n.sharedLength||d;n.length>x&&(n=n.slice(0,x));let A=de.subarray(e,ae);return l.saveStructures(n,a)===!1?(l._mergeStructures(l.getStructures()),l.pack(_)):(a=x,A)}}E&GP&&(ae=e)}};let w=_=>{ae>Ei&&(de=S(ae));var E=typeof _,x;if(E==="string"){let A=_.length;if(Ai&&A>=8&&A<4096){let F=UP.test(_);Ai[F?0:1]+=_,de[ae++]=193,w(F?-A:A);return}let M;A<32?M=1:A<256?M=2:A<65536?M=3:M=5;let C=A*3;if(ae+C>Ei&&(de=S(ae+C)),A<64||!o){let F,$,I,Z=ae+M;for(F=0;F<A;F++)$=_.charCodeAt(F),$<128?de[Z++]=$:$<2048?(de[Z++]=$>>6|192,de[Z++]=$&63|128):($&64512)===55296&&((I=_.charCodeAt(F+1))&64512)===56320?($=65536+(($&1023)<<10)+(I&1023),F++,de[Z++]=$>>18|240,de[Z++]=$>>12&63|128,de[Z++]=$>>6&63|128,de[Z++]=$&63|128):(de[Z++]=$>>12|224,de[Z++]=$>>6&63|128,de[Z++]=$&63|128);x=Z-ae-M}else x=o(_,ae+M,C);x<32?de[ae++]=160|x:x<256?(M<2&&de.copyWithin(ae+2,ae+1,ae+1+x),de[ae++]=217,de[ae++]=x):x<65536?(M<3&&de.copyWithin(ae+3,ae+2,ae+2+x),de[ae++]=218,de[ae++]=x>>8,de[ae++]=x&255):(M<5&&de.copyWithin(ae+5,ae+3,ae+3+x),de[ae++]=219,jt.setUint32(ae,x),ae+=4),ae+=x}else if(E==="number")if(_>>>0===_)_<64?de[ae++]=_:_<256?(de[ae++]=204,de[ae++]=_):_<65536?(de[ae++]=205,de[ae++]=_>>8,de[ae++]=_&255):(de[ae++]=206,jt.setUint32(ae,_),ae+=4);else if(_>>0===_)_>=-32?de[ae++]=256+_:_>=-128?(de[ae++]=208,de[ae++]=_+256):_>=-32768?(de[ae++]=209,jt.setInt16(ae,_),ae+=2):(de[ae++]=210,jt.setInt32(ae,_),ae+=4);else{let A;if((A=this.useFloat32)>0&&_<4294967296&&_>=-2147483648){de[ae++]=202,jt.setFloat32(ae,_);let M;if(A<4||(M=_*Ed[(de[ae]&127)<<1|de[ae+1]>>7])>>0===M){ae+=4;return}else ae--}de[ae++]=203,jt.setFloat64(ae,_),ae+=8}else if(E==="object")if(!_)de[ae++]=192;else{if(s){let M=s.get(_);if(M){if(!M.id){let C=s.idsToInsert||(s.idsToInsert=[]);M.id=C.push(M)}de[ae++]=214,de[ae++]=112,jt.setUint32(ae,M.id),ae+=4;return}else s.set(_,{offset:ae-e})}let A=_.constructor;if(A===Object)b(_,!0);else if(A===Array){x=_.length,x<16?de[ae++]=144|x:x<65536?(de[ae++]=220,de[ae++]=x>>8,de[ae++]=x&255):(de[ae++]=221,jt.setUint32(ae,x),ae+=4);for(let M=0;M<x;M++)w(_[M])}else if(A===Map){x=_.size,x<16?de[ae++]=128|x:x<65536?(de[ae++]=222,de[ae++]=x>>8,de[ae++]=x&255):(de[ae++]=223,jt.setUint32(ae,x),ae+=4);for(let[M,C]of _)w(M),w(C)}else{for(let M=0,C=Yl.length;M<C;M++){let F=Ad[M];if(_ instanceof F){let $=Yl[M];if($.write){$.type&&(de[ae++]=212,de[ae++]=$.type,de[ae++]=0),w($.write.call(this,_));return}let I=de,Z=jt,W=ae;de=null;let q;try{q=$.pack.call(this,_,k=>(de=I,I=null,ae+=k,ae>Ei&&S(ae),{target:de,targetView:jt,position:ae-k}),w)}finally{I&&(de=I,jt=Z,ae=W,Ei=de.length-10)}q&&(q.length+ae>Ei&&S(q.length+ae),ae=kP(q,de,ae,$.type));return}}b(_,!_.hasOwnProperty)}}else if(E==="boolean")de[ae++]=_?195:194;else if(E==="bigint"){if(_<BigInt(1)<<BigInt(63)&&_>=-(BigInt(1)<<BigInt(63)))de[ae++]=211,jt.setBigInt64(ae,_);else if(_<BigInt(1)<<BigInt(64)&&_>0)de[ae++]=207,jt.setBigUint64(ae,_);else if(this.largeBigIntToFloat)de[ae++]=203,jt.setFloat64(ae,Number(_));else throw new RangeError(_+" was too large to fit in MessagePack 64-bit integer format, set largeBigIntToFloat to convert to float-64");ae+=8}else if(E==="undefined")this.encodeUndefinedAsNil?de[ae++]=192:(de[ae++]=212,de[ae++]=0,de[ae++]=0);else if(E==="function")w(this.writeFunction&&this.writeFunction());else throw new Error("Unknown type: "+E)},b=this.useRecords===!1?this.variableMapSize?_=>{let E=Object.keys(_),x=E.length;x<16?de[ae++]=128|x:x<65536?(de[ae++]=222,de[ae++]=x>>8,de[ae++]=x&255):(de[ae++]=223,jt.setUint32(ae,x),ae+=4);let A;for(let M=0;M<x;M++)w(A=E[M]),w(_[A])}:(_,E)=>{de[ae++]=222;let x=ae-e;ae+=2;let A=0;for(let M in _)(E||_.hasOwnProperty(M))&&(w(M),w(_[M]),A++);de[x+++e]=A>>8,de[x+e]=A&255}:_=>{let E=Object.keys(_),x,A=r.transitions||(r.transitions=Object.create(null)),M=0;for(let F=0,$=E.length;F<$;F++){let I=E[F];x=A[I],x||(x=A[I]=Object.create(null),M++),A=x}let C=A[Ba];if(C)C>=96&&p?(de[ae++]=((C-=96)&31)+96,de[ae++]=C>>5):de[ae++]=C;else{C=r.nextId,C||(C=64),C<m&&this.shouldShareStructure&&!this.shouldShareStructure(E)?(C=r.nextOwnId,C<f||(C=m),r.nextOwnId=C+1):(C>=f&&(C=m),r.nextId=C+1);let F=E.highByte=C>=96&&p?C-96>>5:-1;A[Ba]=C,r[C-64]=E,C<m?(E.isShared=!0,r.sharedLength=C-63,i=!0,F>=0?(de[ae++]=(C&31)+96,de[ae++]=F):de[ae++]=C):(F>=0?(de[ae++]=213,de[ae++]=114,de[ae++]=(C&31)+96,de[ae++]=F):(de[ae++]=212,de[ae++]=114,de[ae++]=C),M&&(v+=y*M),g.length>=u&&(g.shift()[Ba]=0),g.push(A),w(E))}for(let F=0,$=E.length;F<$;F++)w(_[E[F]])},S=_=>{let E;if(_>16777216){if(_-e>dm)throw new Error("Packed buffer would be larger than maximum buffer size");E=Math.min(dm,Math.round(Math.max((_-e)*(_>67108864?1.25:2),4194304)/4096)*4096)}else E=(Math.max(_-e<<2,de.length-1)>>12)+1<<12;let x=new Sh(E);return jt=new DataView(x.buffer,0,E),de.copy?de.copy(x,0,e,_):x.set(de.slice(e,_)),ae-=e,e=0,Ei=x.length-10,de=x}}useBuffer(t){de=t,jt=new DataView(de.buffer,de.byteOffset,de.byteLength),ae=0}};Ad=[Date,Set,Error,RegExp,ArrayBuffer,Object.getPrototypeOf(Uint8Array.prototype).constructor,ov];Yl=[{pack(t,e,n){let i=t.getTime()/1e3;if((this.useTimestamp32||t.getMilliseconds()===0)&&i>=0&&i<4294967296){let{target:r,targetView:s,position:a}=e(6);r[a++]=214,r[a++]=255,s.setUint32(a,i)}else if(i>0&&i<17179869184){let{target:r,targetView:s,position:a}=e(10);r[a++]=215,r[a++]=255,s.setUint32(a,t.getMilliseconds()*4e6+(i/1e3/4294967296>>0)),s.setUint32(a+4,i)}else if(isNaN(i)){if(this.onInvalidDate)return e(0),n(this.onInvalidDate());let{target:r,targetView:s,position:a}=e(3);r[a++]=212,r[a++]=255,r[a++]=255}else{let{target:r,targetView:s,position:a}=e(15);r[a++]=199,r[a++]=12,r[a++]=255,s.setUint32(a,t.getMilliseconds()*1e6),s.setBigInt64(a+4,BigInt(Math.floor(i)))}}},{pack(t,e,n){let i=Array.from(t),{target:r,position:s}=e(this.structuredClone?3:0);this.structuredClone&&(r[s++]=212,r[s++]=115,r[s++]=0),n(i)}},{pack(t,e,n){let{target:i,position:r}=e(this.structuredClone?3:0);this.structuredClone&&(i[r++]=212,i[r++]=101,i[r++]=0),n([t.name,t.message])}},{pack(t,e,n){let{target:i,position:r}=e(this.structuredClone?3:0);this.structuredClone&&(i[r++]=212,i[r++]=120,i[r++]=0),n([t.source,t.flags])}},{pack(t,e){this.structuredClone?pm(t,16,e):fm(Ac?Buffer.from(t):new Uint8Array(t),e)}},{pack(t,e){let n=t.constructor;n!==mv&&this.structuredClone?pm(t,pv.indexOf(n.name),e):fm(t,e)}},{pack(t,e){let{target:n,position:i}=e(1);n[i]=193}}];function pm(t,e,n,i){let r=t.byteLength;if(r+1<256){var{target:s,position:a}=n(4+r);s[a++]=199,s[a++]=r+1}else if(r+1<65536){var{target:s,position:a}=n(5+r);s[a++]=200,s[a++]=r+1>>8,s[a++]=r+1&255}else{var{target:s,position:a,targetView:o}=n(7+r);s[a++]=201,o.setUint32(a,r+1),a+=4}s[a++]=116,s[a++]=e,s.set(new Uint8Array(t.buffer,t.byteOffset,t.byteLength),a)}function fm(t,e){let n=t.byteLength;var i,r;if(n<256){var{target:i,position:r}=e(n+2);i[r++]=196,i[r++]=n}else if(n<65536){var{target:i,position:r}=e(n+3);i[r++]=197,i[r++]=n>>8,i[r++]=n&255}else{var{target:i,position:r,targetView:s}=e(n+5);i[r++]=198,s.setUint32(r,n),r+=4}i.set(t,r)}function kP(t,e,n,i){let r=t.length;switch(r){case 1:e[n++]=212;break;case 2:e[n++]=213;break;case 4:e[n++]=214;break;case 8:e[n++]=215;break;case 16:e[n++]=216;break;default:r<256?(e[n++]=199,e[n++]=r):r<65536?(e[n++]=200,e[n++]=r>>8,e[n++]=r&255):(e[n++]=201,e[n++]=r>>24,e[n++]=r>>16&255,e[n++]=r>>8&255,e[n++]=r&255)}return e[n++]=i,e.set(t,n),n+=r,n}function VP(t,e){let n,i=e.length*6,r=t.length-i;for(e.sort((s,a)=>s.offset>a.offset?1:-1);n=e.pop();){let s=n.offset,a=n.id;t.copyWithin(s+i,s,r),i-=6;let o=s+i;t[o++]=214,t[o++]=105,t[o++]=a>>24,t[o++]=a>>16&255,t[o++]=a>>8&255,t[o++]=a&255,r=s}return t}function Co(t){if(t.Class){if(!t.pack&&!t.write)throw new Error("Extension has no pack or write function");if(t.pack&&!t.type)throw new Error("Extension has no type (numeric code to identify the extension)");Ad.unshift(t.Class),Yl.unshift(t)}BP(t)}var vv=new gv({useRecords:!1});vv.pack;vv.pack;var HP=512,GP=1024,mm=new gv({structuredClone:!0});Co({Class:Yr.prototype.constructor,type:1,write(t){return ve({},t)},read(t){return Object.setPrototypeOf(t,Yr.prototype),t}});Co({Class:Pn.prototype.constructor,type:2,write(t){return[...t]},read(t){return Object.setPrototypeOf(t,Pn.prototype),t}});Co({Class:oa.prototype.constructor,type:3,write(t){return[...t]},read(t){return Object.setPrototypeOf(t,oa.prototype),t}});Co({Class:im.prototype.constructor,type:4,write(t){return t.id},read(t){return new im(t)}});Co({Class:rm.prototype.constructor,type:5,write(t){return t.data},read(t){return new rm(t)}});function WP(t){var e=0;if(t.length===0)return e;for(let n=0;n<t.length;n++){let i=t[n];e=(e<<5)-e+i,e=e&e}return e}var pu;(t=>{function e(r){return mm.pack(r)}t.serialize=e;function n(r){return mm.unpack(r)}t.deserialize=n;function i(r){return WP(e(r)).toString()}t.checksum=i})(pu||(pu={}));var fu;(t=>{t.all=["PointLight","SpotLight","DirectionalLight","HemisphereLight"];function e(n){return t.all.includes(n)}t.is=e})(fu||(fu={}));var mu;(t=>{function e(i){return n(i)}t.defaultData=e;function n(i){if(i==="PointLight")return{type:i,color:$r.white,intensity:1,distance:2e3,decay:1,shadows:!0,shadowResolution:1024,shadowRadius:1,depth:1e5,helper:!0};if(i==="SpotLight")return{type:i,color:$r.white,intensity:1,distance:2e3,decay:1,shadows:!0,penumbra:0,angle:30/180*Math.PI,depth:1e5,helper:!0,shadowResolution:1024,shadowRadius:1};if(i==="DirectionalLight")return{type:i,color:$r.white,intensity:1,shadows:!0,size:1e3,depth:1e5,shadowResolution:1024,helper:!0,shadowRadius:1};throw new Error("not implemented")}})(mu||(mu={}));var gu;(t=>{t.defaultData={castShadow:!0,receiveShadow:!0};function e(n,i){return n.castShadow===i.castShadow&&n.receiveShadow===i.receiveShadow}t.equals=e})(gu||(gu={}));var vu;(t=>{t.defaultData={flatShading:!1,wireframe:!1,side:0};function e(n,i){return n.flatShading===i.flatShading&&n.side===i.side&&n.wireframe===i.wireframe}t.equals=e})(vu||(vu={}));var yu;(t=>t.defaultData=ze(ve(ve({},vu.defaultData),gu.defaultData),{cloner:null,booleanExclude:null}))(yu||(yu={}));var yv=(t=>(t[t.Left=1]="Left",t[t.Right=2]="Right",t[t.Center=3]="Center",t[t.Justify=4]="Justify",t))(yv||{}),xv=(t=>(t[t.Top=1]="Top",t[t.Center=2]="Center",t[t.Bottom=3]="Bottom",t))(xv||{}),bv=(t=>(t[t.None=1]="None",t[t.Upper=2]="Upper",t[t.Lower=3]="Lower",t))(bv||{}),xu;(t=>t.defaultData={width:100,height:100,horizontalAlign:1,verticalAlign:1,fontSize:16,lineHeight:1.5,letterSpacing:1,text:"",textTransform:1,color:$r.fromHexAndA(6974058,1),alpha:1,font:"roboto_regular"})(xu||(xu={}));var Js;(t=>{function e(r,s){return r==="light"&&s?n(s):i(r)}t.defaultData=e;function n(r){switch(r){case"basic":return{type:"light",category:"basic",alpha:1,visible:!0,mode:0};case"phong":return{category:"phong",specular:{r:.2,g:.2,b:.2},shininess:10,type:"light",alpha:1,visible:!0,mode:0};case"toon":return{category:"toon",specular:{r:.2,g:.2,b:.2},shininess:10,type:"light",alpha:1,visible:!0,mode:0};case"lambert":return{category:"lambert",emissive:{r:0,g:0,b:0,a:1},type:"light",alpha:1,visible:!0,mode:0};case"physical":return{category:"physical",roughness:.2,metalness:.2,reflectivity:.2,type:"light",alpha:1,visible:!0,mode:0}}}function i(r){switch(r){case"texture":return{alpha:1,visible:!0,size:[128,128],mode:0,axis:"x",side:2,type:"texture",projection:0,texture:{image:"image_0",wrapping:1001,repeat:[1,1],offset:[0,0]},crop:!0};case"color":return{type:"color",alpha:1,visible:!0,mode:0,color:ci.fromHex(4737101)};case"depth":return{type:"depth",alpha:1,visible:!0,mode:0,gradientType:1,smooth:!1,isVector:!0,isWorldSpace:!1,origin:[0,0,0],direction:[1,0,0],colors:[[1,1,1,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1]],steps:[0,1,1,1,1,1,1,1,1,1],num:2,near:50,far:200};case"normal":return{type:"normal",alpha:1,visible:!0,mode:0,cnormal:[1,1,1]};case"gradient":return{type:"gradient",alpha:1,visible:!0,mode:0,gradientType:0,smooth:!1,colors:[[0,0,0,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]],steps:[0,1,1,1,1,1,1,1,1,1],num:2,angle:0,offset:[0,0],morph:[0,0]};case"noise":return{type:"noise",alpha:1,visible:!0,mode:0,size:[100,100,100],noiseType:0,scale:1,move:1,colorA:ze(ve({},ci.fromHex(6710886)),{a:1}),colorB:ze(ve({},ci.fromHex(6710886)),{a:1}),colorC:ze(ve({},ci.fromHex(16777215)),{a:1}),colorD:ze(ve({},ci.fromHex(16777215)),{a:1}),distortion:[1,1],fA:[1.7,9.2],fB:[8.3,2.8]};case"fresnel":return{type:"fresnel",alpha:1,visible:!0,mode:0,color:$r.fromHexAndA(16777215,1),bias:.1,scale:1,intensity:2,factor:1};case"rainbow":return{type:"rainbow",alpha:1,visible:!0,mode:0,filmThickness:30,movement:0,wavelengths:[0,0,0],noiseStrength:0,noiseScale:1,offset:[0,0,0]};case"matcap":return{type:"matcap",alpha:1,visible:!0,mode:0,texture:{image:"matcap_0",wrapping:1001,repeat:[1,1],offset:[0,0]}};case"transmission":return{type:"transmission",alpha:1,visible:!0,mode:0,thickness:10,ior:1.5,roughness:1};case"displace":return{type:"displace",displacementType:"noise",noiseType:0,scale:10,movement:1,offset:[0,0,0],intensity:8,visible:!0}}}})(Js||(Js={}));var yo;(t=>{function e(l){return!l.layers.some(c=>{if(c.data.type==="texture"&&c.data.projection!==0||c.data.type==="depth"&&!c.data.isWorldSpace||c.data.type==="noise"||c.data.type==="displace")return!0})&&!i(l)}t.isMergable=e;function n(l){let c="";return l.layers.forEach(h=>{Object.entries(h.data).forEach(([d,u])=>{c+=`${d}${u}`,Array.isArray(u)?u.forEach(p=>c+=`${p}`):typeof u=="object"?Object.values(u).forEach(p=>{typeof p=="number"?c+=`${p.toFixed(4)}`:c+=`${p}`}):c+=`${u}`})}),c}t.getHash=n;function i(l){let c=0;for(let h of l.layers)"alpha"in h.data&&h.data.type!=="light"&&h.data.type!=="fresnel"&&(c+=(1-c)*h.data.alpha);return c<1}t.isTransparent=i;function r(){return{layers:new Pn}}t.defaultEmptyData=r;function s(l="layer1",c="layer2"){return a("phong",l,c)}t.defaultData=s;function a(l,c="layer1",h="layer2"){let d=new Pn;return d.push({fi:0,data:Js.defaultData("light",l),id:c}),d.push({fi:1,data:Js.defaultData("color"),id:h}),{layers:d}}t.defaultTwoLayerData=a;function o(l,c="basic",h="layer1",d="layer2"){let u=Js.defaultData("texture");Object.assign(u.texture,{image:l});let p=new Pn;return p.push({fi:0,data:u,id:h}),p.push({fi:1,data:Js.defaultData("light",c),id:d}),{layers:p}}t.defaultTwoLayerTextureData=o})(yo||(yo={}));var Zl;(t=>{function e(){return{points:new Pn,roundness:0,shapeHoles:[],isClosed:!1}}t.defaultData=e})(Zl||(Zl={}));var bu;(t=>{function e(n){return n==="PolygonGeometry"||n==="RectangleGeometry"||n==="StarGeometry"||n==="TriangleGeometry"||n==="EllipseGeometry"}t.is2DParametricMesh=e})(bu||(bu={}));var Kl;(t=>{function e(n){if(n==="RectangleGeometry")return{width:320,height:320,type:n,cornerRadius:[0,0,0,0],cornerType:0,depth:0,extrudeBevelSize:0,extrudeBevelSegments:1};if(n==="VectorGeometry")return{width:1,height:1,type:n,subdivisions:12,shape:Zl.defaultData(),depth:0,extrudeBevelSize:0,extrudeBevelSegments:1};if(n==="BooleanGeometry")return{type:n,operation:2,width:0,height:0,depth:0,phongAngle:35};throw new Error("not implemented")}t.defaultData=e})(Kl||(Kl={}));var xo;(t=>{t.identity=ze(ve({},ru.identity),{hiddenMatrix:aa.identity});function e(r){return{position:r.position,rotation:r.rotation,scale:r.scale,hiddenMatrix:r.hiddenMatrix}}t.fromObject=e;function n(r,s){return{position:(s==null?void 0:s.position)||r.position,rotation:(s==null?void 0:s.rotation)||r.rotation,scale:(s==null?void 0:s.scale)||r.scale,hiddenMatrix:(s==null?void 0:s.hiddenMatrix)||r.hiddenMatrix}}t.merge=n;function i(r,s){return{position:to.isEqual(r.position,s.position)?null:s.position,rotation:to.isEqual(r.rotation,s.rotation)?null:s.rotation,scale:to.isEqual(r.scale,s.scale)?null:s.scale,hiddenMatrix:aa.isEqual(r.hiddenMatrix,s.hiddenMatrix)?null:s.hiddenMatrix}}t.diff=i})(xo||(xo={}));var rr;(t=>t.defaultData=ve({states:new Pn,events:new Pn,visible:!0,raycastLock:!1},xo.identity))(rr||(rr={}));var gm;(t=>t.defaultData=ve({type:"Empty"},rr.defaultData))(gm||(gm={}));var Ql;(t=>t.defaultData=ve(ve({type:"Mesh"},rr.defaultData),yu.defaultData))(Ql||(Ql={}));var vm;(t=>t.defaultData=ve(ve({type:"TextFrame"},rr.defaultData),xu.defaultData))(vm||(vm={}));var _u;(t=>t.defaultData=ve(ve(ve({},rr.defaultData),xo.identity),vo.defaultData))(_u||(_u={}));var ym;(t=>{function e(n){return ve(ve({},rr.defaultData),mu.defaultData(n))}t.defaultData=e})(ym||(ym={}));var xm;(t=>(t.defaultCamera=ve({position:[0,0,1e3],scale:[1,1,1],rotation:[0,0,0],hiddenMatrix:aa.identity,name:"Play Camera",visible:!0,raycastLock:!1,states:new Pn,events:new Pn},vo.defaultData),t.defaultMeshObject=ze(ve(ve({name:"Rectangle"},rr.defaultData),Ql.defaultData),{geometry:Kl.defaultData("RectangleGeometry"),material:yo.defaultTwoLayerData("basic","layer1","layer2")}),t.defaultBooleanObject=ze(ve(ve({name:"Boolean"},rr.defaultData),Ql.defaultData),{geometry:Kl.defaultData("BooleanGeometry"),material:yo.defaultTwoLayerData("phong","layer1","layer2")})))(xm||(xm={}));var bm;(t=>{function e(i,r){if(r===void 0)return i;let s=ve({},i);return"material"in s&&"material"in r&&r.material&&(s.material=nm(s.material,a=>{if(typeof a!="string")for(let[o,l]of Object.entries(r.material.layers)){let c=a.layers.data(o);c&&Xl(c,l)}}).data),s.materials&&r.materials&&(s.materials=nm(s.materials,a=>{var o,l;for(let c=0;c<s.materials.length;c++){let h=r.materials[c];if(typeof h!="string")for(let[d,u]of Object.entries(h.layers)){let p=(l=(o=a[c])==null?void 0:o.layers)==null?void 0:l.data(d);p&&Xl(p,u)}}}).data),s}t.patchMaterialState=e;function n(i,r){var s,a;if(r===void 0)return i;let o=ve({},i);if(Object.assign(o,xo.merge(o,r)),Jl.is(i.type)){o.orthographic=ve({},o.orthographic),o.perspective=ve({},o.perspective);let l=r;((s=l.orthographic)==null?void 0:s.zoom)!==void 0&&(o.orthographic.zoom=l.orthographic.zoom),((a=l.perspective)==null?void 0:a.zoom)!==void 0&&(o.perspective.zoom=l.perspective.zoom),l.isUpVectorFlipped!==void 0&&(o.isUpVectorFlipped=l.isUpVectorFlipped),l.targetOffset!==void 0&&(o.targetOffset=l.targetOffset)}else if(i.type==="Mesh")o.geometry=ve({},o.geometry),Object.assign(o.geometry,r.geometry),o=e(o,r);else if(fu.is(i.type)){let l=r;o.intensity!==void 0&&(o.intensity=l.intensity),l.color!==void 0&&(typeof l.color=="string"?o.color=l.color:o.color=ci.clone(l.color))}return o}t.patch=n})(bm||(bm={}));var jP=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s,a;let o=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:64,heightSegments:1,openEnded:!1,thetaStart:0,thetaLength:360,cornerRadius:0,cornerSegments:8,hollow:0},t.parameters),l=o.width/2,c=(i=o.radiusTop)!=null?i:l,h=(r=o.radiusBottom)!=null?r:l;return c===h?(c=l,h=l):c>h?(c=l,h=h*l/c):(c=c*l/h,h=l),{parameters:Object.assign(o,{width:Math.abs(o.width),height:Math.abs((s=o.height)!=null?s:o.width),depth:Math.abs((a=o.depth)!=null?a:o.width),radiusTop:c,radiusBottom:h})}}static build(t){let{width:e,depth:n,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l,radiusTop:c,radiusBottom:h,cornerRadius:d,cornerSegments:u,hollow:p}=t.parameters,m;return d||p?m=new _v(c,h,i,r,s,a,o,l*Math.PI/180,d,d,u,p):m=new uc(c,h,i,r,s,a,o,l*Math.PI/180),m.scale(1,1,n/e),Object.assign(m,{userData:ze(ve({},t),{type:"CylinderGeometry"})})}};function gr(t,e,n){n.x=t.x*e.x,n.y=t.y,n.z=t.x*e.y}function _m(t){return new j(t.y,-t.x)}var _v=class extends Ge{constructor(t,e,n,i,r,s,a,o,l,c,h,d,u=!1){super(),this.type="RoundedCylinderBufferGeometry",t=t!==void 0?t:1,e=e!==void 0?e:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,s=s!==void 0?s:!1,a=a!==void 0?a:0,o=o!==void 0?o:Math.PI*2,s&&(l=0,c=0);let p=[],m=[],f=[],g=[],v=0,y=n/2,w=new T,b=new T;u&&t==0&&(t=l),u&&e==0&&(e=c);let S=new j(t,y),_=new j(e,-y),E=null,x=null,A=null,M=null,C=S.clone().sub(_),F=0,$=0,I=0;d>0&&(F=Math.min(t,e)*(1-d),$=t-F,I=e-F);let Z=S.clone();Z.x-=F;let W=Math.PI-C.angle(),q=C.angle(),k=Math.tan(q/2),N=Math.tan(W/2),O=k+N,V=d?O:N,z=d?O:k;if(l=Math.min(l,(t-$)/V,C.length()/O),c=Math.min(c,(e-I)/z,C.length()/O),l>0){let ie=l/k;E=S.clone().sub(new j(ie,l)),d&&(A=E.clone(),A.x-=F-O*l),S.sub(C.clone().setLength(ie))}if(c>0){let ie=c/N;x=_.clone().sub(new j(ie,-c)),_.add(C.clone().setLength(ie)),d&&(M=x.clone(),M.x-=F-O*c,Z.sub(C.clone().setLength(ie)))}C=S.clone().sub(_);let H=C.length()<.5,J=[];for(let ie=0;ie<=i;ie++){let le=[],K=ie/i,pe=K*o+a,G=new j(Math.sin(pe),Math.cos(pe));M&&x?(ne(le,K,G,W,c,M,-1,!0),ne(le,K,G,q,c,x,-1,!1)):x?(B(le,G,x.x,0,-1),ne(le,K,G,q,c,x,-1,!1)):s||B(le,G,e,I,-1);let X=_m(C).normalize();if(gr(X,G,w),!H)for(let ee=0;ee<=r;ee++){let se=ee/r,he=C.clone().multiplyScalar(se).add(_);gr(he,G,b),m.push(b.x,b.y,b.z),f.push(w.x,w.y,w.z),g.push(K,.5+b.y/n),le.push(v++)}if(A&&E?(ne(le,K,G,W,l,E,1,!1),ne(le,K,G,q,l,A,1,!0)):E?(ne(le,K,G,W,l,E,1,!1),B(le,G,E.x,0,1)):s||B(le,G,t,$,1),d&&!H){let ee=_m(C).multiplyScalar(-1).normalize();gr(ee,G,w);for(let se=0;se<=r;se++){let he=se/r,fe=C.clone().multiplyScalar(-he).add(Z);gr(fe,G,b),m.push(b.x,b.y,b.z),f.push(w.x,w.y,w.z),g.push(K,.5+b.y/n),le.push(v++)}}d&&!s&&le.push(le[0]),J.push(le)}for(let ie=0;ie<J.length-1;ie++)for(let le=0;le<J[0].length-1;le++){if(s&&d&&le==r)continue;let K=J[ie][le],pe=J[ie+1][le],G=J[ie+1][le+1],X=J[ie][le+1],ee=m[G*3+0],se=m[G*3+2];p.push(K,pe,X),(ee!=0||se!=0)&&p.push(pe,G,X)}o<Math.PI*2&&(oe(-1,J[0],a),oe(1,J[J.length-1],a+o)),this.setIndex(p),this.setAttribute("position",new Pe(m,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(g,2));function ne(ie,le,K,pe,G,X,ee,se){for(let he=0;he<h+1;he++){let fe=he/h,ge=ee<0?fe:1-fe;se&&(ge-=1),ge*=pe;let _e=new j(Math.sin(ge),Math.cos(ge)*ee),Ne=_e.clone().multiplyScalar(G).add(X);gr(Ne,K,b),m.push(b.x,b.y,b.z),gr(_e,K,w),f.push(w.x,w.y,w.z),g.push(le,.5+b.y/n),ie.push(v++)}}function B(ie,le,K,pe,G){let X=new T,ee=new j,se=[K,pe];G<0&&se.reverse();for(let he of se)ee.set(he,y*G),gr(ee,le,X),m.push(X.x,X.y,X.z),f.push(0,G,0),g.push(.5,.5),ie.push(v++)}function oe(ie,le,K){let pe=new j(Math.sin(K),Math.cos(K)),G=new j(-Math.cos(K),Math.sin(K)),X=new T,ee=ie<0?(fe,ge,_e)=>p.push(fe,ge,_e):(fe,ge,_e)=>p.push(fe,_e,ge),se=new j((t+e+$+I)/4,0);gr(se,pe,X),m.push(X.x,X.y,X.z),f.push(G.x,0,G.y),g.push(.5,.5);let he=v++;for(let fe of le){let ge=m.slice(fe*3,fe*3+3);m.push(...ge),f.push(G.x,0,G.y);let _e=g.slice(fe*2,fe*2+2);g.push(..._e),v++}for(let fe=he+1;fe<v-1;fe++)ee(he,fe,fe+1);ee(he,v-1,he+1)}}},qP=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:32,heightSegments:8,openEnded:!1,thetaStart:0,thetaLength:360,cornerRadiusTop:0,cornerRadiusBottom:0,cornerSegments:8},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,depth:n,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l,cornerRadiusTop:c,cornerRadiusBottom:h,cornerSegments:d}=t.parameters,u;return c>0||h>0||l<360?u=new _v(0,e/2,i,r,s,a,o,l*Math.PI/180,c,h,d,0,!0):u=new Yu(e/2,i,r,s,a),u.scale(1,1,n/e),Object.assign(u,{userData:ze(ve({},t),{type:"ConeGeometry"})})}},XP=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,widthSegments:1,heightSegments:1,depthSegments:1,cornerRadius:0,cornerSegments:8},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:a,cornerRadius:o,cornerSegments:l}=t.parameters,c;return o==0?c=new ir(e,n,i,r,s,a):c=new JP(e,n,i,r,s,a,o,l),Object.assign(c,{userData:ze(ve({},t),{type:"CubeGeometry"})})}},Mh=Math.PI/2,JP=class extends Ge{constructor(t=1,e=1,n=1,i=1,r=1,s=1,a=0,o=4){super(),this.type="BoxBufferGeometry";let l=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s),o=Math.floor(o),a=Math.min(a,t/2,e/2,n/2);let c=[],h=[],d=[],u=[],p=0,m=0;f("z","y","x",-1,-1,n,e,t,s,r,0),f("z","y","x",1,-1,n,e,-t,s,r,1),f("x","z","y",1,1,t,n,e,i,s,2),f("x","z","y",1,-1,t,n,-e,i,s,3),f("x","y","z",1,-1,t,e,n,i,r,4),f("x","y","z",-1,-1,t,e,-n,i,r,5),a>0&&(g("z","y","x",-1,-1,1,n,e,t,s,0),g("z","y","x",1,-1,-1,n,e,t,s,1),g("z","y","x",-1,1,-1,n,e,t,s,1),g("z","y","x",1,1,1,n,e,t,s,0),g("x","y","z",-1,-1,-1,t,e,n,i,0),g("x","y","z",1,-1,1,t,e,n,i,1),g("x","y","z",-1,1,1,t,e,n,i,0),g("x","y","z",1,1,-1,t,e,n,i,1),g("y","x","z",-1,-1,1,e,t,n,r,0),g("y","x","z",1,-1,-1,e,t,n,r,1),g("y","x","z",1,1,1,e,t,n,r,1),g("y","x","z",-1,1,-1,e,t,n,r,0),v(1,1,1),v(-1,1,1),v(1,-1,1),v(-1,-1,1),v(1,1,-1),v(-1,1,-1),v(1,-1,-1),v(-1,-1,-1)),this.setIndex(c),this.setAttribute("position",new Pe(h,3)),this.setAttribute("normal",new Pe(d,3)),this.setAttribute("uv",new Pe(u,2));function f(y,w,b,S,_,E,x,A,M,C,F){let $=(E-2*a)/M,I=(x-2*a)/C,Z=E/2-a,W=x/2-a,q=A/2,k=M+1,N=C+1,O=0,V=0,z=new T;for(let H=0;H<N;H++){let J=H*I-W;for(let ne=0;ne<k;ne++){let B=ne*$-Z;z[y]=B*S,z[w]=J*_,z[b]=q,h.push(z.x,z.y,z.z),z[y]=0,z[w]=0,z[b]=A>0?1:-1,d.push(z.x,z.y,z.z),u.push(ne/M),u.push(1-H/C),O+=1}}for(let H=0;H<C;H++)for(let J=0;J<M;J++){let ne=p+J+k*H,B=p+J+k*(H+1),oe=p+(J+1)+k*(H+1),ie=p+(J+1)+k*H;c.push(ne,B,ie),c.push(B,oe,ie),V+=6}l.addGroup(m,V,F),m+=V,p+=O}function g(y,w,b,S,_,E,x,A,M,C,F){let $=(x-2*a)/C,I=x/2-a,Z=A/2-a,W=M/2,q=C+1,k=0,N=0,O=new T,V=new T;for(let z=0;z<o+1;z++){let H=z/o*Mh,J=Math.sin(H)*a,ne=(1-Math.cos(H))*a,B=Math.sin(H),oe=Math.cos(H);O[w]=(Z+J)*_,O[b]=(W-ne)*E,V[y]=0,V[w]=B*Math.sign(O[w]),V[b]=oe*Math.sign(O[b]);for(let ie=0;ie<q;ie++){let le=ie*$-I;O[y]=le*S,h.push(O.x,O.y,O.z),d.push(V.x,V.y,V.z),u.push(ie/C),u.push(0),k+=1}}for(let z=0;z<o;z++)for(let H=0;H<C;H++){let J=p+H+q*z,ne=p+H+q*(z+1),B=p+(H+1)+q*(z+1),oe=p+(H+1)+q*z;c.push(J,ne,oe),c.push(ne,B,oe),N+=6}l.addGroup(m,N,F),m+=N,p+=k}function v(y,w,b){let S=new T,_=new T(t/2,e/2,n/2);_.subScalar(a);let E=[],x=y*w*b>0?(M,C,F)=>c.push(M,C,F):(M,C,F)=>c.push(M,F,C);for(let M=0;M<=o;M++){let C=[],F=Mh*(1-M/o),$=Math.cos(F),I=Math.sin(F),Z=0;for(let W=0;W<=M;W++){let q=Math.cos(Z),k=Math.sin(Z);S.x=$*q,S.y=I,S.z=$*k;let N=_.clone().addScaledVector(S,a);h.push(y*N.x,w*N.y,b*N.z),d.push(y*S.x,w*S.y,b*S.z),u.push(0,0),C.push(p++),Z+=Mh/M}E.push(C)}let A=E.length-1;for(let M=0;M<A;M++){let C=E[M],F=E[M+1],$=C.length-1;x(C[0],F[1],F[0]);for(let I=1;I<=$;I++)x(C[I-1],C[I],F[I]),x(C[I],F[I+1],F[I])}}}},Cd=class extends Ge{constructor(t=[],e=[],n="",i=1,r=.2,s=4){super(),this.type="PolyhedronGeometryRound";let a=[],o=[],l=[];c(),h(),this.setAttribute("position",new Pe(a,3)),this.setAttribute("normal",new Pe(l,3)),this.setAttribute("uv",new Pe(o,2));return;function c(){var d;r=Math.min(1-1e-5,r),r==0&&(s=0);let u={IcosahedronGeometry:5,DodecahedronGeometry:3,HexahedronGeometry:3,OctahedronGeometry:4,TetrahedronGeometry:3}[n],p=new T,m=p.clone(),f=new qt,g=r*i,v=i-g,y=s+1,w=new T,b=(k,N)=>w.subVectors(k,N).normalize(),S=(k,N)=>Array(k).fill(void 0).map(N),_=S(t.length/3,(k,N)=>new T().fromArray(t,N*3).setLength(i)),E=[],x=1e6;for(let k=0;k<_.length;k++){let N=_[k],O=[],V,z,H,J=1e10,ne=-1;for(;(ne=e.indexOf(k,ne+1))!=-1;){let le=ne-ne%3;V=e[le+(ne+1)%3],z=e[le+(ne+2)%3],H=N.distanceToSquared(_[V]),J=Math.min(J,H),O.push([V,z,H])}J+=1e-6;let B=[],oe=0,ie=O.length;for(let le=0;le<ie;le++){[V,z,H]=O[oe];let K=((d=E[V])==null?void 0:d.includes(k))==!0;H<=J&&B.push(V+ +K*x),oe=O.findIndex(pe=>pe[0]==z)}E.push(B)}let A=[];{let k=0,N=0,O,V,z=u==3;for(let H=0;H<=s;H++){O=H*(H+1)/2,V=(H+1)*(H+2)/2;for(let J=0;J<s-H;J++)[k,N]=[O+J+H+2,V+J+H+3],A.push(O,V,...z?[N,O]:[k,V],N,k),[O,V]=[k,N];A.push(O,V,O+s+2)}}let M=p.clone(),C=p.clone(),F=p.clone(),$=p.clone(),I=p.clone(),Z=[],W=S(_.length,()=>S(u,()=>p.clone()));for(let k=0;k<_.length;k++){p.copy(_[k]).normalize(),M.copy(p).multiplyScalar(v);let N=E[k];for(let B=0;B<N.length;B++){let oe=N[B],ie=N[(B+1)%u];f.setFromPointsAndIndices(_,k,oe%x,ie%x),f.b.sub(f.a).setLength(1e10).add(f.a),f.c.sub(f.a).setLength(1e10).add(f.a),f.closestPointToPoint(M,W[k][B])}let O=[],V=[],z=[],H=new T;s==0&&[...W[k]].reduce((B,oe)=>B.add(oe),H).multiplyScalar(1/u);for(let B=0;B<u;B++){let oe=[],ie=(B-1+u)%u,le=W[k][ie],K=W[k][B];p.copy(le).sub(M),m.copy(K).sub(M);let pe=M.angleTo(p),G=p.angleTo(m),X=Math.cos(pe)*g;s==0?C.copy(H):C.copy(M).setLength(v+X),V.push(X);let ee=[C,le,K];for(let se=0;se<2;se++){let he=ee[se],fe=ee[se+1];$.subVectors(he,M),I.subVectors(fe,M),F.crossVectors($,I).normalize();for(let ge=0;ge<y;ge++){let _e=[pe,G][se]*ge/y;p.copy($).applyAxisAngle(F,_e).add(M),O.push(p.clone()),se&&(b(p,M),oe.push([ge==0?he:p.clone(),w.clone()]))}se&&(b(fe,M),oe.push([fe,w.clone()]))}z.push(oe)}Z.push(z);let J=2*y,ne=2;for(let B=0;B<u;B++){let oe=J*B,ie=J*((B+1)%u),le=[O[oe]];for(let pe=1;pe<y;pe++){$=O[oe+pe],I=O[ie+pe],le.push($);for(let G=1,X=pe-ne+1;G<=X;G++)p.lerpVectors($,I,G/(X+1)),p.sub(M).setLength(V[B]).add(M),le.push(p.clone());le.push(I)}for(let pe=0;pe<y;pe++)le.push(O[pe+y+oe]);le.push(O[ie+y]);let K=A.map(pe=>le[pe]);a.push(...K.map(pe=>[pe.x,pe.y,pe.z]).flat()),l.push(...K.map(pe=>(b(pe,M),[w.x,w.y,w.z])).flat())}}let q=[];for(let k=0;k<E.length;k++)for(let N=0;N<u;N++){let O=E[k][N];if(O<x){let V=E[O].findIndex(J=>J%x==k),z=Z[k][N],H=Z[O][V];for(let J=0;J<y;J++){let ne=z[J],B=H[y-J],oe=z[J+1],ie=H[y-(J+1)];[ne,B,oe,oe,B,ie].forEach(le=>{a.push(le[0].x,le[0].y,le[0].z),l.push(le[1].x,le[1].y,le[1].z)})}q.push(z[0][0],H[y][0],z[y][0],H[0][0])}}for(;q.length;){let k,N,O,V;[k,N]=q.splice(0,2);let z=[k];for(;k!=N;)z.push(N),O=q.indexOf(N),V=O%2,N=q.splice(O-V,2)[1-V];w.subVectors(z[0],z[1]).cross(p.subVectors(z[0],z[2])).normalize();let H=w.dot(z[0])<0;H&&w.negate();for(let J=1;J<=z.length-2;J++)[z[J+ +H],z[J+1-+H],z[0]].forEach(ne=>{a.push(ne.x,ne.y,ne.z),l.push(w.x,w.y,w.z)})}}function h(){let d=new T;for(let _=0;_<a.length;_+=3){d.x=a[_+0],d.y=a[_+1],d.z=a[_+2];let E=b(d)/2/Math.PI+.5,x=S(d)/Math.PI+.5;o.push(E,1-x)}let u=new T,p=new T,m=new T,f=new T,g=new j,v=new j,y=new j,w=(_,E,x,A)=>{A<0&&_.x===1&&(o[E]=_.x-1),x.x===0&&x.z===0&&(o[E]=A/2/Math.PI+.5)};for(let _=0,E=0;_<a.length;_+=9,E+=6){u.set(a[_+0],a[_+1],a[_+2]),p.set(a[_+3],a[_+4],a[_+5]),m.set(a[_+6],a[_+7],a[_+8]),g.set(o[E+0],o[E+1]),v.set(o[E+2],o[E+3]),y.set(o[E+4],o[E+5]),f.copy(u).add(p).add(m).divideScalar(3);let x=b(f);w(g,E+0,u,x),w(v,E+2,p,x),w(y,E+4,m,x)}for(let _=0;_<o.length;_+=6){let E=o[_+0],x=o[_+2],A=o[_+4],M=Math.max(E,x,A),C=Math.min(E,x,A);M>.9&&C<.1&&(E<.2&&(o[_+0]+=1),x<.2&&(o[_+2]+=1),A<.2&&(o[_+4]+=1))}function b(_){return Math.atan2(_.z,-_.x)}function S(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}}}static fromJSON(t){return new Cd(t.vertices,t.indices,t.radius,t.corner,t.cornerSides)}},$P=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,detail:0,corner:0,cornerSides:4},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,detail:r,corner:s,cornerSides:a}=t.parameters,o=r===0&&s!==0?new wv(e*.5,s,a):new Zu(e*.5,r);return o.scale(1,n/e,i/e),Object.assign(o,{userData:ze(ve({},t),{type:"DodecahedronGeometry"})})}},wv=class extends Cd{constructor(t=1,e=.2,n=4){let i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],o="DodecahedronGeometry";super(s,a,o,t,e,n),this.type=o}static fromJSON(t){return new wv(t.radius,t.corner,t.cornerSides)}},Fa=1e-12,Ld=class{constructor(t){this.position=new j,this.startPosition=new j,this.uuid=Lt.generateUUID(),this.position=t.clone()}start(){this.reset()}reset(){this.startPosition.copy(this.position)}applyOffset(t){this.position.copy(this.startPosition).add(t)}copy(t){return this.position.copy(t.position),this.startPosition.copy(t.startPosition),this}clone(){return new Ld(this.position).copy(this)}toJSON(){return[this.position.x,this.position.y]}},wu=class extends Ld{constructor(t){super(t.position),this.parent=t}copy(t){return super.copy(t),this}clone(){return new wu(this.parent).copy(this)}},Zs=class extends Ld{constructor(t,e){super(e),this.controls=[],this.roundness=0,this.areControlsDirectionsMirrored=!0,this.uuid=t,this.controls.push(new wu(this),new wu(this))}static create(t,e){let n=new Zs(t,new j(...e.position));return n.controls[0].position.set(...e.controlPrevious.position),n.controls[1].position.set(...e.controlNext.position),n.roundness=e.roundness,n.areControlsDirectionsMirrored=e.areControlsDirectionsMirrored,n}getOppositeControl(t){let e=this.controls.indexOf(t);return e===0?this.controls[1]:e===1?this.controls[0]:null}applyOffsetToControls(t,e=1){for(let n=0,i=this.controls.length;n<i;n++){let r=this.controls[n];this.position.distanceTo(r.position)<=e?r.position.copy(this.position):r.applyOffset(t)}}controlsMoved(){return!(this.position.equals(this.controls[0].position)&&this.position.equals(this.controls[1].position))}copy(t){return super.copy(t),this.controls[0].copy(t.controls[0]),this.controls[1].copy(t.controls[1]),this.roundness=t.roundness,this.uuid=t.uuid,this}clone(){return new Zs(this.uuid,this.position).copy(this)}toJSON(){return super.toJSON().concat(this.controls[0].toJSON(),this.controls[1].toJSON(),[this.roundness])}computeTangents(){var t,e;let n=(t=this.curveBefore)==null?void 0:t.getTangentAt(1),i=(e=this.curveAfter)==null?void 0:e.getTangentAt(0);return[n,i]}computeNormals(t=new j,e=new j){let[n,i]=this.computeTangents();return n&&i&&(wm(n,t),wm(i,e)),[t,e]}computeTangent(t=new j){let[e,n]=this.computeTangents();return e&&n&&t.copy(e).add(n).normalize(),t}computeNormal(t=new j){let[e,n]=this.computeNormals();return t.copy(e).add(n).normalize(),t}};function wm(t,e=new j){let n=t.length();return e.set(-t.y/n,t.x/n)}var Pd=t=>t,Sa=new j,Cc=new j,YP=new j,ZP=new j,KP=new j,QP=new j,Sv=new T,Mv=new T;function eD(t){let e=new j;e.addVectors(t.v0,Sa.subVectors(t.v1,t.v0).multiplyScalar(2/3));let n=new j;return n.addVectors(t.v2,Cc.subVectors(t.v1,t.v2).multiplyScalar(2/3)),new di(t.v0,e,n,t.v2)}function Wa(t,e,n=Number.EPSILON){return Math.abs(t-e)<n}function tD(t,e,n=Number.EPSILON){return t.distanceTo(e)<n}function nD(t,e,n=Number.EPSILON){return t.distanceTo(e)<n}function Tv(t,e,n){let i=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),r=Math.sqrt(Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2)),s=Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2));return Math.acos((r*r+i*i-s*s)/(2*r*i))}function iD(t,e,n){return Mm(t,e)&&Mm(e,n)&&Su(t.position,e.position,n.position)}function Su(t,e,n){return Sa.copy(e).sub(t).cross(Cc.copy(n).sub(t))===0}function rD(t,e,n,i,r){let s=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),a=(t.y+e.y)/2,o=(t.x+e.x)/2,l=Math.sqrt(Math.pow(n,2)-Math.pow(s/2,2))*(t.y-e.y)/s,c=Math.sqrt(Math.pow(n,2)-Math.pow(s/2,2))*(e.x-t.x)/s;return i.set(o+l,a+c),r.set(o-l,a-c),[i,r]}function sD(t,e,n){let i=t.distanceTo(n),r=e.distanceTo(n);return i<r?e:t}function aD(t,e,n,i,r,s){let a=e.x-t.x,o=e.y-t.y,l=n.x-t.x,c=n.y-t.y,h=Math.sqrt((a+l)*(a+l)+(o+c)*(o+c)),d;return Tv(e,t,n)>Math.PI&&(h*=-1),Wa(c,o)?d=(o+c)*(i/h-.5)*8/3/(a-l):d=(a+l)*(i/h-.5)*8/3/(c-o),r.set(e.x-d*o,e.y+d*a),s.set(n.x+d*c,n.y-d*l),[r,s]}function Sm(t,e){return t.position.equals(t.controls[1].position)&&e.position.equals(e.controls[0].position)}function Mm(t,e){return Su(t.position,t.controls[1].position,e.position)&&Su(t.position,e.controls[0].position,e.position)}function oD(t,e,n,i,r=.5){let s=Sa.subVectors(e,t).multiplyScalar(r).add(t),a=Cc.subVectors(n,e).multiplyScalar(r).add(e),o=YP.subVectors(i,n).multiplyScalar(r).add(n),l=s,c=ZP.subVectors(a,s).multiplyScalar(r).add(s),h=KP.subVectors(o,a).multiplyScalar(r).add(a),d=o,u=QP.subVectors(h,c).multiplyScalar(r).add(c);return[t.x,t.y,l.x,l.y,c.x,c.y,u.x,u.y,h.x,h.y,d.x,d.y,i.x,i.y]}function lD(t,e,n=12,i=!0){let r=Mv.set(0,0,0),s,a=0;for(let o=0;o<e.length;o++){let l=Pd(e[o]),c=Sa,h=Zr(l,n);for(let d=0;d<=h;d++)if(l instanceof di||l instanceof Lr||l instanceof fi){if(l.getPoint(d/h,c),r.set(c.x,c.y,0),s!==void 0&&nD(s,r))continue;s===void 0&&(s=Sv),s.copy(r),t.setXYZ(a,r.x,r.y,r.z),a++}}return i&&a>1&&!(t.getX(a-1)===t.getX(0)&&t.getY(a-1)===t.getY(0)&&t.getZ(a-1)===t.getZ(0))&&(t.setXYZ(a,t.getX(0),t.getY(0),t.getZ(0)),a++),t}function cD(t,e,n,i=12,r=!0){let s=Mv.set(0,0,0),a=0,o=[];for(let l=0;l<e.length;l++){if(n[l]===!1)continue;let c,h=Pd(e[l]),d=Sa,u=Zr(h,i);o.push(u);for(let p=0;p<=u;p++)if(h instanceof di||h instanceof Lr||h instanceof fi){if(h.getPoint(p/u,d),s.set(d.x,d.y,0),c!=null&&c.equals(s))continue;c===void 0?c=Sv:(t.setXYZ(a,c.x,c.y,c.z),a++,t.setXYZ(a,s.x,s.y,s.z),a++),c.copy(s)}}return r&&a>1&&!(t.getX(a-1)===t.getX(0)&&t.getY(a-1)===t.getY(0)&&t.getZ(a-1)===t.getZ(0))&&(t.setXYZ(a,t.getX(0),t.getY(0),t.getZ(0)),a++),o}function Tm(t,e=12,n=!1){let i=[];for(let r=0,s=t.length;r<s;r++){let a=t[r],o=0;if(n&&a.roundedCurveCorner!==void 0){let l=Zr(a.roundedCurveCorner,e)*.5;r>0&&(i[r-1]+=l),o+=l}a.curveAfter!==void 0&&(o+=Zr(a.curveAfter,e)),i.push(o)}return t.length>0&&n&&t[0].roundedCurveCorner!==void 0&&(i[t.length-1]+=Zr(t[0].roundedCurveCorner,e)*.5),i}function Zr(t,e=12){return t&&t instanceof Mo?e*2:t&&(t instanceof fi||t instanceof Ug)?1:t&&t instanceof hc?e*t.points.length:e}function hD(t,e,n=12,i=!0){let r,s=0;for(let a=0;a<e.length;a++){let o=Pd(e[a]),l=Zr(o,n),c=Sa;for(let h=0;h<=l;h++)if(o instanceof di||o instanceof Lr||o instanceof fi){if(o.getPoint(h/l,c),r!==void 0&&tD(r,c,Fa))continue;r===void 0&&(r=Cc),r.copy(c),t.push(c.x,c.y),s++}}return Wa(t[0],t[t.length-2],Fa)&&Wa(t[1],t[t.length-1],Fa)&&(t.pop(),t.pop()),i&&s>1&&!(Wa(t[s-1],t[1],Fa)&&Wa(t[s-2],t[0],Fa))&&(t.push(t[0],t[1]),s++),t}var Th=new j,uD=new j,dD=new j,pD=new j,fD=new j,mD=new j,Ht=class extends mi{constructor(t=100,e=100){super(),this.points=[],this.shapeHoles=[],this.eventDispatcher=new yi,this.plane=new Pi(new T(0,0,-1)),this.subdivision=0,this.controlSnapDistance=4,this.pointIDs=0,this.isMesh2D=!1,this._roundness=0,this.isClosed=!1,this.useCubicForRoundedCorners=!0,this.uuid=Lt.generateUUID(),this.needsUpdate=!1,this.roundedCurves=[],this._width=t,this._height=e}static createFromState(t,e,n){let i=new Ht;return i.isClosed=t.isClosed,i.points=t.points.map(r=>Zs.create(r.id,r.data)),typeof t.roundness=="number"&&(i.roundness=t.roundness),i.shapeHoles=t.shapeHoles.map(r=>Ht.createFromState(r)),e!==void 0&&n!==void 0&&i.applySize(e,n),i.update(),i}get width(){return this._width}get height(){return this._height}get roundness(){return this._roundness}set roundness(t){if(this._roundness!==t){this._roundness=t;for(let e=0,n=this.points.length;e<n;e++)this.points[e].roundness=t;this.needsUpdate=!0}}getPointsIndexesByIds(t){return t.map(e=>this.getPointIndexById(e)).filter(e=>e>=0)}getPointIndexById(t){let e=this.points.length,n=this.points.findIndex(i=>i.uuid===t);if(n<0){let i=e;for(let r=0,s=this.shapeHoles.length;r<s;r++){let a=this.shapeHoles[r],o=a.points.length-1,l=a.getPointIndexById(t);if(l<0)i+=o;else return l+i}}return n}getLineIndexById(t){return this.getPointIndexById(t)}getBezierPoint(t){if(t<=this.points.length-1)return this.points[t];if(this.shapeHoles.length>0)for(let e=0,n=this.shapeHoles.length;e<n;e++){let i=this.shapeHoles[e],r=t-this.points.length;if(r<=i.points.length-1)return i.points[r]}throw new Error("This shape does not have a point for this index: "+t)}getBezierPointIndex(t){let e=this.points.indexOf(t);if(e>=0)return e;if(e=this.points.length,this.shapeHoles.length>0)for(let n=0,i=this.shapeHoles.length;n<i;n++){let r=this.shapeHoles[n],s=r.points.indexOf(t);if(s>=0)return e+s;e+=r.points.length}return-1}getAllPoints(){let t=[].concat(...this.shapeHoles.map(e=>e.points));return[...this.points,...t]}applySize(t,e){t===0&&(t=.001),e===0&&(e=.001),this._width=t,this._height=e}applyScale(t,e){let n=Th.set(t,e);for(let i=0,r=this.points.length;i<r;i++){let s=this.points[i];s.position.multiply(n),s.controls[0].position.multiply(n),s.controls[1].position.multiply(n)}for(let i=0,r=this.shapeHoles.length;i<r;i++)this.shapeHoles[i].applyScale(t,e);this._update(!1)}createPoint(t,e=0,n=Lt.generateUUID()){let i;t instanceof j?i=t:i=new j(t,e);let r=new Zs(n,i);return r.roundness=this.roundness,r}addPoint(t){this.points.push(t),this.needsUpdate=!0}addPointAt(t,e){this.points.splice(e,0,t),this.needsUpdate=!0}getPointByUuid(t){for(let e=0,n=this.points.length;e<n;e++){let i=this.points[e];if(i.uuid===t)return i}for(let e=0,n=this.shapeHoles.length;e<n;e++){let i=this.shapeHoles[e].getPointByUuid(t);if(i)return i}}getFirstPoint(){return this.points[0]}getLastPoint(){return this.points[this.points.length-1]}removePoint(t){let e=this.points.indexOf(t);e>=0&&this.points.splice(e,1),this.needsUpdate=!0}removePointById(t){let e=this.points.find(n=>n.uuid===t);e&&this.removePoint(e)}update(t=!0){for(let e=0,n=this.shapeHoles.length;e<n;e++)this.shapeHoles[e].update(!1);this._update(t)}extractShapePointsToBuffer(t,e=12,n=!1){this.subdivision=e,this.curveDivisions===void 0&&this.computeCurveDivisions(e);let i=n?this.roundedCurveDivisions:this.curveDivisions;return lD(t,n?this.roundedCurves:this.curves,e,this.autoClose),i.reduce((r,s)=>r+s,0)+1}computeCurveDivisions(t=12){return this.curveDivisions=Tm(this.points,t,!1),this.roundedCurveDivisions=Tm(this.points,t,!0),this.curveDivisions}extractFilteredShapePointsToBuffer(t,e,n=12){return cD(t,this.curves,e,n,this.autoClose).reduce((i,r)=>i+r,0)*2}extractShapePointsToFlatArray(t,e=12){return this.subdivision=e,this.curveDivisions===void 0&&this.computeCurveDivisions(e),hD(t,this.roundedCurves,e,this.autoClose)}getCurveIndexFromVertexId(t,e=!1){let n=0;this.curveDivisions===void 0&&this.computeCurveDivisions(this.subdivision);let i=e?this.roundedCurveDivisions:this.curveDivisions,r=0;e&&this.points[0].roundedCurveCorner!==void 0&&(r=Zr(this.points[0].roundedCurveCorner,this.subdivision)*.5);let s=t-r;s<0&&(s+=i.reduce((a,o)=>a+o,0));for(let a=0,o=i.length;a<o;a++){let l=i[a];if(s<n+l)return[a,(s-n+1)/l];n+=l}return[0,1]}getCurveT(t,e,n){let i=this.points[t],r=this.points[t>=this.points.length-1?0:t+1],s=this.curveDivisions,a=s[t];if(Sm(i,r)){let l=i.position.distanceTo(r.position);return i.position.distanceTo(Th.set(n.x,n.y))/l}let o=0;for(let l=0;l<t;l++)o+=s[l];return(e-o)/a}dispose(){this.eventDispatcher=null}_applyCurveForPoint(t,e){Sm(e,t)?this.lineTo(t.position.x,t.position.y):this.bezierCurveTo(e.controls[1].position.x,e.controls[1].position.y,t.controls[0].position.x,t.controls[0].position.y,t.position.x,t.position.y);let n=this.curves[this.curves.length-1];t.curveBefore=n,e.curveAfter=n;let i=n.clone();t.roundedCurveBefore=i,e.roundedCurveAfter=i,t.roundedCurveCorner=void 0,this.roundedCurves.push(i)}_update(t=!0){var e,n,i;if(this.curves=[],this.roundedCurves=[],!this.points.length)return;for(let s=0,a=this.points.length;s<a;s++){let o=this.points[s];if(s===0)this.moveTo(o.position.x,o.position.y);else{let l=this.points[s-1];this._applyCurveForPoint(o,l)}}let r=this.getLastPoint();if(r!=null&&r.curveAfter&&(r.curveAfter=void 0),this.isClosed){let s=this.points[0],a=this.points[this.points.length-1];this._applyCurveForPoint(s,a)}if(this.points.length>2){let s=0;for(let a=0,o=this.points.length;a<o;a++){let l=this.points[a],c=(e=this.points[a-1])!=null?e:this.points[this.points.length-1],h=(n=this.points[a+1])!=null?n:this.points[0],d=l.roundness,u=c&&h&&iD(c,l,h);if(!l.controlsMoved()&&d>0&&!u){let p=l.curveBefore,m=l.curveAfter;if(p===void 0||m===void 0)continue;let f=l.roundedCurveBefore,g=l.roundedCurveAfter,v=p.getLength(),y=m.getLength(),w=Math.min(d,v*.499),b=Math.min(d,y*.499),S=Math.min(w,b),_=1-S/v,E=S/y,x=p.getPointAt(_,Th),A=m.getPointAt(E,uD);this._subSplitCurve(p,f,_,x,void 0),this._subSplitCurve(m,g,E,void 0,A);let M;if(this.useCubicForRoundedCorners){let C=Tv(x,l.position,A)/2,F=Math.tan(C)*x.distanceTo(l.position),[$,I]=rD(x,A,F,dD,pD),Z=sD($,I,l.position),[W,q]=aD(Z,x,A,F,fD,mD);M=new di(x.clone(),W.clone(),q.clone(),A.clone())}else M=new Lr(x.clone(),l.position.clone(),A.clone());l.roundedCurveCorner=M,this.roundedCurves.splice(a+s,0,M),s++}}}t&&((i=this.eventDispatcher)==null||i.dispatchEvent({type:"update"}))}_subSplitCurve(t,e,n,i,r){if(t instanceof fi)i!==void 0&&e.v2.copy(i),r!==void 0&&e.v1.copy(r);else{let s=t,a=e,o=s.getUtoTmapping(n,0),l=oD(s.v0,s.v1,s.v2,s.v3,o);return i!==void 0&&(a.v0.set(l[0],l[1]),a.v1.set(l[2],l[3]),a.v2.set(l[4],l[5]),a.v3.set(l[6],l[7])),r!==void 0&&(a.v0.set(l[6],l[7]),a.v1.set(l[8],l[9]),a.v2.set(l[10],l[11]),a.v3.set(l[12],l[13])),a}return e}clone(){let t=new Ht(this._width,this._height);return t.points=this.points.map(e=>e.clone()),t.isClosed=this.isClosed,t.roundness=this.roundness,t.isMesh2D=this.isMesh2D,t.shapeHoles=this.shapeHoles.map(e=>e.clone()),t}toJSON(){return{points:this.points.reduce((t,e)=>t.concat(e.toJSON()),[]),shapeHoles:this.shapeHoles.map(t=>t.toJSON()),isClosed:this.isClosed,roundness:this.roundness}}fromJSON(t){var e;this.points=[],this.pointIDs=0;let n=t.points.length/7;for(let i=0;i<n;i++){let r=i*7,s=t.points[r+0],a=t.points[r+1],o=t.points[r+2],l=t.points[r+3],c=t.points[r+4],h=t.points[r+5],d=t.points[r+6],u=new Zs(Lt.generateUUID(),new j(s,a));u.controls[0].position.set(o,l),u.controls[1].position.set(c,h),u.roundness=d,this.points.push(u)}return this.shapeHoles=(e=t.shapeHoles)!=null&&e.length?t.shapeHoles.map(i=>{let r=new Ht;return r.fromJSON(i),r}):[],this.isClosed=t.isClosed,this._roundness=t.roundness,this._update(),this}fromShape(t){let e=(i,r)=>{r instanceof di&&r.v3.equals(i.position)&&i.controls[0].position.copy(r.v2)},n=i=>{let r=[],s,a;for(s=0,a=i.length;s<a;s++)i[s]instanceof Lr&&(i[s]=eD(i[s]));for(s=0,a=i.length;s<a;s++){let c=i[s],h=s>0?i[s-1]:null,d;c instanceof di?(d=this.createPoint(c.v0),d.controls[1].position.copy(c.v1)):c instanceof fi&&(d=this.createPoint(c.v1)),d!==void 0&&(h!==null&&e(d,h),r.push(d))}let o=i[i.length-1],l=!1;return o instanceof di?o.v3.equals(r[0].position)&&(r[0].controls[0].position.copy(o.v2),l=!0):o instanceof fi&&o.v2.equals(r[0].position)&&(l=!0),this.isClosed=l,r};return this.points=n(t.curves),t instanceof mi&&(this.shapeHoles=t.holes.map(i=>{let r=new Ht;return r.fromShape(i),r})),this.update(),this}},Mu=Math.PI*2;function Eh({x:t,y:e},n,i,r,s){return{x:t*n+r,y:e*i+s}}function gD(t,e){let n=e===1.5707963267948966?.551915024494:e===-1.5707963267948966?-.551915024494:1.3333333333333333*Math.tan(e/4),i=Math.cos(t),r=Math.sin(t),s=Math.cos(t+e),a=Math.sin(t+e);return[{x:i-r*n,y:r+i*n},{x:s+a*n,y:a-s*n},{x:s,y:a}]}function Em(t,e,n,i){let r=t*i-e*n<0?-1:1,s=Math.min(1,Math.max(-1,t*n+e*i));return r*Math.acos(s)}function vD(t,e,n,i,r,s,a,o,l,c){let h=Math.pow(r,2),d=Math.pow(s,2),u=Math.pow(a,2),p=Math.pow(o,2),m=h*d-h*p-d*u;m<0&&(m=0),m/=h*p+d*u,m=Math.sqrt(m)*(l===c?-1:1);let f=m*r/s*o,g=m*-s/r*a,v=f+(t+n)/2,y=g+(e+i)/2,w=(a-f)/r,b=(o-g)/s,S=(-a-f)/r,_=(-o-g)/s,E=Em(1,0,w,b),x=Em(w,b,S,_);return!c&&x>0&&(x-=Mu),c&&x<0&&(x+=Mu),{centerx:v,centery:y,ang1:E,ang2:x}}function yD({px:t,py:e,cx:n,cy:i,rx:r,ry:s,largeArcFlag:a,sweepFlag:o}){let l=[];if(r===0||s===0)return[];let c=(t-n)/2,h=(e-i)/2;if(c===0&&h===0)return[];r=Math.abs(r),s=Math.abs(s);let d=Math.pow(c,2)/Math.pow(r,2)+Math.pow(h,2)/Math.pow(s,2);d>1&&(r*=Math.sqrt(d),s*=Math.sqrt(d));let u=vD(t,e,n,i,r,s,c,h,a,o),{ang1:p,ang2:m}=u,{centerx:f,centery:g}=u,v=Math.abs(m)/(Mu/4);Math.abs(1-v)<1e-7&&(v=1);let y=Math.max(Math.ceil(v),1);m/=y;for(let w=0;w<y;w++)l.push(gD(p,m)),p+=m;return l.map(w=>{let{x:b,y:S}=Eh(w[0],r,s,f,g),{x:_,y:E}=Eh(w[1],r,s,f,g),{x,y:A}=Eh(w[2],r,s,f,g);return{x1:b,y1:S,x2:_,y2:E,x,y:A}})}var Gt;(function(t){t[t.ODD=0]="ODD",t[t.NONZERO=1]="NONZERO",t[t.POSITIVE=2]="POSITIVE",t[t.NEGATIVE=3]="NEGATIVE",t[t.ABS_GEQ_TWO=4]="ABS_GEQ_TWO"})(Gt||(Gt={}));var dn;(function(t){t[t.POLYGONS=0]="POLYGONS",t[t.CONNECTED_POLYGONS=1]="CONNECTED_POLYGONS",t[t.BOUNDARY_CONTOURS=2]="BOUNDARY_CONTOURS"})(dn||(dn={}));function Je(t,e){if(!t)throw e||"Assertion Failed!"}var We=function(){function t(){}return t.vertEq=function(e,n){return e.s===n.s&&e.t===n.t},t.vertLeq=function(e,n){return e.s<n.s||e.s===n.s&&e.t<=n.t},t.transLeq=function(e,n){return e.t<n.t||e.t===n.t&&e.s<=n.s},t.edgeGoesLeft=function(e){return t.vertLeq(e.Dst,e.Org)},t.edgeGoesRight=function(e){return t.vertLeq(e.Org,e.Dst)},t.vertL1dist=function(e,n){return Math.abs(e.s-n.s)+Math.abs(e.t-n.t)},t.edgeEval=function(e,n,i){Je(t.vertLeq(e,n)&&t.vertLeq(n,i));var r=n.s-e.s,s=i.s-n.s;return r+s>0?r<s?n.t-e.t+(e.t-i.t)*(r/(r+s)):n.t-i.t+(i.t-e.t)*(s/(r+s)):0},t.edgeSign=function(e,n,i){Je(t.vertLeq(e,n)&&t.vertLeq(n,i));var r=n.s-e.s,s=i.s-n.s;return r+s>0?(n.t-i.t)*r+(n.t-e.t)*s:0},t.transEval=function(e,n,i){Je(t.transLeq(e,n)&&t.transLeq(n,i));var r=n.t-e.t,s=i.t-n.t;return r+s>0?r<s?n.s-e.s+(e.s-i.s)*(r/(r+s)):n.s-i.s+(i.s-e.s)*(s/(r+s)):0},t.transSign=function(e,n,i){Je(t.transLeq(e,n)&&t.transLeq(n,i));var r=n.t-e.t,s=i.t-n.t;return r+s>0?(n.s-i.s)*r+(n.s-e.s)*s:0},t.vertCCW=function(e,n,i){return e.s*(n.t-i.t)+n.s*(i.t-e.t)+i.s*(e.t-n.t)>=0},t.interpolate=function(e,n,i,r){return e=e<0?0:e,i=i<0?0:i,e<=i?i===0?(n+r)/2:n+(r-n)*(e/(e+i)):r+(n-r)*(i/(e+i))},t.intersect=function(e,n,i,r,s){var a,o,l;t.vertLeq(e,n)||(l=e,e=n,n=l),t.vertLeq(i,r)||(l=i,i=r,r=l),t.vertLeq(e,i)||(l=e,e=i,i=l,l=n,n=r,r=l),t.vertLeq(i,n)?t.vertLeq(n,r)?(a=t.edgeEval(e,i,n),o=t.edgeEval(i,n,r),a+o<0&&(a=-a,o=-o),s.s=t.interpolate(a,i.s,o,n.s)):(a=t.edgeSign(e,i,n),o=-t.edgeSign(e,r,n),a+o<0&&(a=-a,o=-o),s.s=t.interpolate(a,i.s,o,r.s)):s.s=(i.s+n.s)/2,t.transLeq(e,n)||(l=e,e=n,n=l),t.transLeq(i,r)||(l=i,i=r,r=l),t.transLeq(e,i)||(l=e,e=i,i=l,l=n,n=r,r=l),t.transLeq(i,n)?t.transLeq(n,r)?(a=t.transEval(e,i,n),o=t.transEval(i,n,r),a+o<0&&(a=-a,o=-o),s.t=t.interpolate(a,i.t,o,n.t)):(a=t.transSign(e,i,n),o=-t.transSign(e,r,n),a+o<0&&(a=-a,o=-o),s.t=t.interpolate(a,i.t,o,r.t)):s.t=(i.t+n.t)/2},t}(),Ua=function(){function t(){this.next=null,this.prev=null,this.anEdge=null,this.trail=null,this.n=0,this.marked=!1,this.inside=!1}return t}(),yl=function(){function t(e){this.side=e,this.next=null,this.Org=null,this.Sym=null,this.Onext=null,this.Lnext=null,this.Lface=null,this.activeRegion=null,this.winding=0}return Object.defineProperty(t.prototype,"Rface",{get:function(){return this.Sym.Lface},set:function(e){this.Sym.Lface=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Dst",{get:function(){return this.Sym.Org},set:function(e){this.Sym.Org=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Oprev",{get:function(){return this.Sym.Lnext},set:function(e){this.Sym.Lnext=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Lprev",{get:function(){return this.Onext.Sym},set:function(e){this.Onext.Sym=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Dprev",{get:function(){return this.Lnext.Sym},set:function(e){this.Lnext.Sym=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Rprev",{get:function(){return this.Sym.Onext},set:function(e){this.Sym.Onext=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Dnext",{get:function(){return this.Sym.Onext.Sym},set:function(e){this.Sym.Onext.Sym=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Rnext",{get:function(){return this.Sym.Lnext.Sym},set:function(e){this.Sym.Lnext.Sym=e},enumerable:!0,configurable:!0}),t}(),Us=function(){function t(){this.next=null,this.prev=null,this.anEdge=null,this.coords=[0,0,0],this.s=0,this.t=0,this.pqHandle=0,this.n=0,this.idx=0}return t}(),Am=function(){function t(){var e=new Us,n=new Ua,i=new yl(0),r=new yl(1);e.next=e.prev=e,e.anEdge=null,n.next=n.prev=n,i.next=i,i.Sym=r,r.next=r,r.Sym=i,this.vHead=e,this.fHead=n,this.eHead=i,this.eHeadSym=r}return t.prototype.makeEdge_=function(e){var n=new yl(0),i=new yl(1);e.Sym.side<e.side&&(e=e.Sym);var r=e.Sym.next;return i.next=r,r.Sym.next=n,n.next=e,e.Sym.next=i,n.Sym=i,n.Onext=n,n.Lnext=i,n.Org=null,n.Lface=null,n.winding=0,n.activeRegion=null,i.Sym=n,i.Onext=i,i.Lnext=n,i.Org=null,i.Lface=null,i.winding=0,i.activeRegion=null,n},t.prototype.splice_=function(e,n){var i=e.Onext,r=n.Onext;i.Sym.Lnext=n,r.Sym.Lnext=e,e.Onext=r,n.Onext=i},t.prototype.makeVertex_=function(e,n,i){var r=e;Je(r,"Vertex can't be null!");var s=i.prev;r.prev=s,s.next=r,r.next=i,i.prev=r,r.anEdge=n;var a=n;do a.Org=r,a=a.Onext;while(a!==n)},t.prototype.makeFace_=function(e,n,i){var r=e;Je(r,"Face can't be null");var s=i.prev;r.prev=s,s.next=r,r.next=i,i.prev=r,r.anEdge=n,r.trail=null,r.marked=!1,r.inside=i.inside;var a=n;do a.Lface=r,a=a.Lnext;while(a!==n)},t.prototype.killEdge_=function(e){e.Sym.side<e.side&&(e=e.Sym);var n=e.next,i=e.Sym.next;n.Sym.next=i,i.Sym.next=n},t.prototype.killVertex_=function(e,n){var i=e.anEdge,r=i;do r.Org=n,r=r.Onext;while(r!==i);var s=e.prev,a=e.next;a.prev=s,s.next=a},t.prototype.killFace_=function(e,n){var i=e.anEdge,r=i;do r.Lface=n,r=r.Lnext;while(r!==i);var s=e.prev,a=e.next;a.prev=s,s.next=a},t.prototype.makeEdge=function(){var e=new Us,n=new Us,i=new Ua,r=this.makeEdge_(this.eHead);return this.makeVertex_(e,r,this.vHead),this.makeVertex_(n,r.Sym,this.vHead),this.makeFace_(i,r,this.fHead),r},t.prototype.splice=function(e,n){var i=!1,r=!1;if(e!==n){if(n.Org!==e.Org&&(r=!0,this.killVertex_(n.Org,e.Org)),n.Lface!==e.Lface&&(i=!0,this.killFace_(n.Lface,e.Lface)),this.splice_(n,e),!r){var s=new Us;this.makeVertex_(s,n,e.Org),e.Org.anEdge=e}if(!i){var a=new Ua;this.makeFace_(a,n,e.Lface),e.Lface.anEdge=e}}},t.prototype.delete=function(e){var n=e.Sym,i=!1;if(e.Lface!==e.Rface&&(i=!0,this.killFace_(e.Lface,e.Rface)),e.Onext===e)this.killVertex_(e.Org,null);else if(e.Rface.anEdge=e.Oprev,e.Org.anEdge=e.Onext,this.splice_(e,e.Oprev),!i){var r=new Ua;this.makeFace_(r,e,e.Lface)}n.Onext===n?(this.killVertex_(n.Org,null),this.killFace_(n.Lface,null)):(e.Lface.anEdge=n.Oprev,n.Org.anEdge=n.Onext,this.splice_(n,n.Oprev)),this.killEdge_(e)},t.prototype.addEdgeVertex=function(e){var n=this.makeEdge_(e),i=n.Sym;this.splice_(n,e.Lnext),n.Org=e.Dst;var r=new Us;return this.makeVertex_(r,i,n.Org),n.Lface=i.Lface=e.Lface,n},t.prototype.splitEdge=function(e){var n=this.addEdgeVertex(e),i=n.Sym;return this.splice_(e.Sym,e.Sym.Oprev),this.splice_(e.Sym,i),e.Dst=i.Org,i.Dst.anEdge=i.Sym,i.Rface=e.Rface,i.winding=e.winding,i.Sym.winding=e.Sym.winding,i.idx=e.idx,i.Sym.idx=e.Sym.idx,i},t.prototype.connect=function(e,n){var i=!1,r=this.makeEdge_(e),s=r.Sym;if(n.Lface!==e.Lface&&(i=!0,this.killFace_(n.Lface,e.Lface)),this.splice_(r,e.Lnext),this.splice_(s,n),r.Org=e.Dst,s.Org=n.Org,r.Lface=s.Lface=e.Lface,e.Lface.anEdge=s,!i){var a=new Ua;this.makeFace_(a,r,e.Lface)}return r},t.prototype.zapFace=function(e){var n=e.anEdge,i,r,s,a,o;r=n.Lnext;do i=r,r=i.Lnext,i.Lface=null,i.Rface===null&&(i.Onext===i?this.killVertex_(i.Org,null):(i.Org.anEdge=i.Onext,this.splice_(i,i.Oprev)),s=i.Sym,s.Onext===s?this.killVertex_(s.Org,null):(s.Org.anEdge=s.Onext,this.splice_(s,s.Oprev)),this.killEdge_(i));while(i!=n);a=e.prev,o=e.next,o.prev=a,a.next=o},t.prototype.countFaceVerts_=function(e){var n=e.anEdge,i=0;do i++,n=n.Lnext;while(n!==e.anEdge);return i},t.prototype.mergeConvexFaces=function(e){var n,i,r,s,a,o,l;for(n=this.fHead.next;n!==this.fHead;n=n.next)if(n.inside)for(i=n.anEdge,a=i.Org;r=i.Lnext,s=i.Sym,s&&s.Lface&&s.Lface.inside&&(o=this.countFaceVerts_(n),l=this.countFaceVerts_(s.Lface),o+l-2<=e&&We.vertCCW(i.Lprev.Org,i.Org,s.Lnext.Lnext.Org)&&We.vertCCW(s.Lprev.Org,s.Org,i.Lnext.Lnext.Org)&&(r=s.Lnext,this.delete(s),i=null,s=null)),!(i&&i.Lnext.Org===a);)i=r;return!0},t.prototype.check=function(){var e=this.fHead,n=this.vHead,i=this.eHead,r,s,a,o,l,c;for(s=e,s=e;(r=s.next)!==e;s=r){Je(r.prev===s),l=r.anEdge;do Je(l.Sym!==l),Je(l.Sym.Sym===l),Je(l.Lnext.Onext.Sym===l),Je(l.Onext.Sym.Lnext===l),Je(l.Lface===r),l=l.Lnext;while(l!==r.anEdge)}for(Je(r.prev===s&&r.anEdge===null),o=n,o=n;(a=o.next)!==n;o=a){Je(a.prev===o),l=a.anEdge;do Je(l.Sym!==l),Je(l.Sym.Sym===l),Je(l.Lnext.Onext.Sym===l),Je(l.Onext.Sym.Lnext===l),Je(l.Org===a),l=l.Onext;while(l!==a.anEdge)}for(Je(a.prev===o&&a.anEdge===null),c=i,c=i;(l=c.next)!==i;c=l)Je(l.Sym.next===c.Sym),Je(l.Sym!==l),Je(l.Sym.Sym===l),Je(l.Org!==null),Je(l.Dst!==null),Je(l.Lnext.Onext.Sym===l),Je(l.Onext.Sym.Lnext===l);Je(l.Sym.next===c.Sym&&l.Sym===this.eHeadSym&&l.Sym.Sym===l&&l.Org===null&&l.Dst===null&&l.Lface===null&&l.Rface===null)},t}(),Cm=function(){function t(){this.handle=null}return t}(),Lm=function(){function t(){this.key=null,this.node=0}return t}(),xD=function(){function t(e,n){this.leq=n,this.max=0,this.nodes=[],this.handles=[],this.initialized=!1,this.freeList=0,this.size=0,this.max=e,this.nodes=[],this.handles=[];for(var i=0;i<e+1;i++)this.nodes[i]=new Cm,this.handles[i]=new Lm;this.initialized=!1,this.nodes[1].handle=1,this.handles[1].key=null}return t.prototype.floatDown_=function(e){var n=this.nodes,i=this.handles,r,s,a;for(r=n[e].handle;;){if(a=e<<1,a<this.size&&this.leq(i[n[a+1].handle].key,i[n[a].handle].key)&&++a,Je(a<=this.max),s=n[a].handle,a>this.size||this.leq(i[r].key,i[s].key)){n[e].handle=r,i[r].node=e;break}n[e].handle=s,i[s].node=e,e=a}},t.prototype.floatUp_=function(e){var n=this.nodes,i=this.handles,r,s,a;for(r=n[e].handle;;){if(a=e>>1,s=n[a].handle,a===0||this.leq(i[s].key,i[r].key)){n[e].handle=r,i[r].node=e;break}n[e].handle=s,i[s].node=e,e=a}},t.prototype.init=function(){for(var e=this.size;e>=1;--e)this.floatDown_(e);this.initialized=!0},t.prototype.min=function(){return this.handles[this.nodes[1].handle].key},t.prototype.insert=function(e){var n,i;if(n=++this.size,n*2>this.max){this.max*=2;var r,s;for(s=this.nodes.length,this.nodes.length=this.max+1,r=s;r<this.nodes.length;r++)this.nodes[r]=new Cm;for(s=this.handles.length,this.handles.length=this.max+1,r=s;r<this.handles.length;r++)this.handles[r]=new Lm}return this.freeList===0?i=n:(i=this.freeList,this.freeList=this.handles[i].node),this.nodes[n].handle=i,this.handles[i].node=n,this.handles[i].key=e,this.initialized&&this.floatUp_(n),i},t.prototype.extractMin=function(){var e=this.nodes,n=this.handles,i=e[1].handle,r=n[i].key;return this.size>0&&(e[1].handle=e[this.size].handle,n[e[1].handle].node=1,n[i].key=null,n[i].node=this.freeList,this.freeList=i,--this.size,this.size>0&&this.floatDown_(1)),r},t.prototype.delete=function(e){var n=this.nodes,i=this.handles,r;Je(e>=1&&e<=this.max&&i[e].key!==null),r=i[e].node,n[r].handle=n[this.size].handle,i[n[r].handle].node=r,--this.size,r<=this.size&&(r<=1||this.leq(i[n[r>>1].handle].key,i[n[r].handle].key)?this.floatDown_(r):this.floatUp_(r)),i[e].key=null,i[e].node=this.freeList,this.freeList=e},t}(),Ah=function(){function t(){this.eUp=null,this.nodeUp=null,this.windingNumber=0,this.inside=!1,this.sentinel=!1,this.dirty=!1,this.fixUpperEdge=!1}return t}(),Pm=function(){function t(){this.key=null,this.next=null,this.prev=null}return t}(),bD=function(){function t(e,n){this.frame=e,this.leq=n,this.head=new Pm,this.head.next=this.head,this.head.prev=this.head}return t.prototype.min=function(){return this.head.next},t.prototype.max=function(){return this.head.prev},t.prototype.insert=function(e){return this.insertBefore(this.head,e)},t.prototype.search=function(e){var n=this.head;do n=n.next;while(n.key!==null&&!this.leq(this.frame,e,n.key));return n},t.prototype.insertBefore=function(e,n){do e=e.prev;while(e.key!==null&&!this.leq(this.frame,e.key,n));var i=new Pm;return i.key=n,i.next=e.next,e.next.prev=i,i.prev=e,e.next=i,i},t.prototype.delete=function(e){e.next.prev=e.prev,e.prev.next=e.next},t}(),_D=function(){function t(){}return t.regionBelow=function(e){return e.nodeUp.prev.key},t.regionAbove=function(e){return e.nodeUp.next.key},t.debugEvent=function(e){},t.addWinding=function(e,n){e.winding+=n.winding,e.Sym.winding+=n.Sym.winding},t.edgeLeq=function(e,n,i){var r=e.event,s=n.eUp,a=i.eUp;if(s.Dst===r)return a.Dst===r?We.vertLeq(s.Org,a.Org)?We.edgeSign(a.Dst,s.Org,a.Org)<=0:We.edgeSign(s.Dst,a.Org,s.Org)>=0:We.edgeSign(a.Dst,r,a.Org)<=0;if(a.Dst===r)return We.edgeSign(s.Dst,r,s.Org)>=0;var o=We.edgeEval(s.Dst,r,s.Org),l=We.edgeEval(a.Dst,r,a.Org);return o>=l},t.deleteRegion=function(e,n){n.fixUpperEdge&&Je(n.eUp.winding===0),n.eUp.activeRegion=null,e.dict.delete(n.nodeUp)},t.fixUpperEdge=function(e,n,i){Je(n.fixUpperEdge),e.mesh.delete(n.eUp),n.fixUpperEdge=!1,n.eUp=i,i.activeRegion=n},t.topLeftRegion=function(e,n){var i=n.eUp.Org,r;do n=t.regionAbove(n);while(n.eUp.Org===i);if(n.fixUpperEdge){if(r=e.mesh.connect(t.regionBelow(n).eUp.Sym,n.eUp.Lnext),r===null)return null;t.fixUpperEdge(e,n,r),n=t.regionAbove(n)}return n},t.topRightRegion=function(e){var n=e.eUp.Dst;do e=t.regionAbove(e);while(e.eUp.Dst===n);return e},t.addRegionBelow=function(e,n,i){var r=new Ah;return r.eUp=i,r.nodeUp=e.dict.insertBefore(n.nodeUp,r),r.fixUpperEdge=!1,r.sentinel=!1,r.dirty=!1,i.activeRegion=r,r},t.isWindingInside=function(e,n){switch(e.windingRule){case Gt.ODD:return(n&1)!==0;case Gt.NONZERO:return n!==0;case Gt.POSITIVE:return n>0;case Gt.NEGATIVE:return n<0;case Gt.ABS_GEQ_TWO:return n>=2||n<=-2}throw new Error("Invalid winding rulle")},t.computeWinding=function(e,n){n.windingNumber=t.regionAbove(n).windingNumber+n.eUp.winding,n.inside=t.isWindingInside(e,n.windingNumber)},t.finishRegion=function(e,n){var i=n.eUp,r=i.Lface;r.inside=n.inside,r.anEdge=i,t.deleteRegion(e,n)},t.finishLeftRegions=function(e,n,i){for(var r,s=null,a=n,o=n.eUp;a!==i;){if(a.fixUpperEdge=!1,s=t.regionBelow(a),r=s.eUp,r.Org!=o.Org){if(!s.fixUpperEdge){t.finishRegion(e,a);break}r=e.mesh.connect(o.Lprev,r.Sym),t.fixUpperEdge(e,s,r)}o.Onext!==r&&(e.mesh.splice(r.Oprev,r),e.mesh.splice(o,r)),t.finishRegion(e,a),o=s.eUp,a=s}return o},t.addRightEdges=function(e,n,i,r,s,a){var o,l,c,h,d=!0;c=i;do Je(We.vertLeq(c.Org,c.Dst)),t.addRegionBelow(e,n,c.Sym),c=c.Onext;while(c!==r);for(s===null&&(s=t.regionBelow(n).eUp.Rprev),l=n,h=s;o=t.regionBelow(l),c=o.eUp.Sym,c.Org===h.Org;)c.Onext!==h&&(e.mesh.splice(c.Oprev,c),e.mesh.splice(h.Oprev,c)),o.windingNumber=l.windingNumber-c.winding,o.inside=t.isWindingInside(e,o.windingNumber),l.dirty=!0,!d&&t.checkForRightSplice(e,l)&&(t.addWinding(c,h),t.deleteRegion(e,l),e.mesh.delete(h)),d=!1,l=o,h=c;l.dirty=!0,Je(l.windingNumber-c.winding===o.windingNumber),a&&t.walkDirtyRegions(e,l)},t.spliceMergeVertices=function(e,n,i){e.mesh.splice(n,i)},t.vertexWeights=function(e,n,i){var r=We.vertL1dist(n,e),s=We.vertL1dist(i,e),a=.5*s/(r+s),o=.5*r/(r+s);e.coords[0]+=a*n.coords[0]+o*i.coords[0],e.coords[1]+=a*n.coords[1]+o*i.coords[1],e.coords[2]+=a*n.coords[2]+o*i.coords[2]},t.getIntersectData=function(e,n,i,r,s,a){n.coords[0]=n.coords[1]=n.coords[2]=0,n.idx=-1,t.vertexWeights(n,i,r),t.vertexWeights(n,s,a)},t.checkForRightSplice=function(e,n){var i=t.regionBelow(n),r=n.eUp,s=i.eUp;if(We.vertLeq(r.Org,s.Org)){if(We.edgeSign(s.Dst,r.Org,s.Org)>0)return!1;We.vertEq(r.Org,s.Org)?r.Org!==s.Org&&(e.pq.delete(r.Org.pqHandle),t.spliceMergeVertices(e,s.Oprev,r)):(e.mesh.splitEdge(s.Sym),e.mesh.splice(r,s.Oprev),n.dirty=i.dirty=!0)}else{if(We.edgeSign(r.Dst,s.Org,r.Org)<0)return!1;t.regionAbove(n).dirty=n.dirty=!0,e.mesh.splitEdge(r.Sym),e.mesh.splice(s.Oprev,r)}return!0},t.checkForLeftSplice=function(e,n){var i=t.regionBelow(n),r=n.eUp,s=i.eUp,a;if(Je(!We.vertEq(r.Dst,s.Dst)),We.vertLeq(r.Dst,s.Dst)){if(We.edgeSign(r.Dst,s.Dst,r.Org)<0)return!1;t.regionAbove(n).dirty=n.dirty=!0,a=e.mesh.splitEdge(r),e.mesh.splice(s.Sym,a),a.Lface.inside=n.inside}else{if(We.edgeSign(s.Dst,r.Dst,s.Org)>0)return!1;n.dirty=i.dirty=!0,a=e.mesh.splitEdge(s),e.mesh.splice(r.Lnext,s.Sym),a.Rface.inside=n.inside}return!0},t.checkForIntersect=function(e,n){var i=t.regionBelow(n),r=n.eUp,s=i.eUp,a=r.Org,o=s.Org,l=r.Dst,c=s.Dst,h,d,u=new Us,p,m;if(Je(!We.vertEq(c,l)),Je(We.edgeSign(l,e.event,a)<=0),Je(We.edgeSign(c,e.event,o)>=0),Je(a!==e.event&&o!==e.event),Je(!n.fixUpperEdge&&!i.fixUpperEdge),a===o||(h=Math.min(a.t,l.t),d=Math.max(o.t,c.t),h>d))return!1;if(We.vertLeq(a,o)){if(We.edgeSign(c,a,o)>0)return!1}else if(We.edgeSign(l,o,a)<0)return!1;return t.debugEvent(e),We.intersect(l,a,c,o,u),Je(Math.min(a.t,l.t)<=u.t),Je(u.t<=Math.max(o.t,c.t)),Je(Math.min(c.s,l.s)<=u.s),Je(u.s<=Math.max(o.s,a.s)),We.vertLeq(u,e.event)&&(u.s=e.event.s,u.t=e.event.t),p=We.vertLeq(a,o)?a:o,We.vertLeq(p,u)&&(u.s=p.s,u.t=p.t),We.vertEq(u,a)||We.vertEq(u,o)?(t.checkForRightSplice(e,n),!1):!We.vertEq(l,e.event)&&We.edgeSign(l,e.event,u)>=0||!We.vertEq(c,e.event)&&We.edgeSign(c,e.event,u)<=0?c===e.event?(e.mesh.splitEdge(r.Sym),e.mesh.splice(s.Sym,r),n=t.topLeftRegion(e,n),r=t.regionBelow(n).eUp,t.finishLeftRegions(e,t.regionBelow(n),i),t.addRightEdges(e,n,r.Oprev,r,r,!0),!0):l===e.event?(e.mesh.splitEdge(s.Sym),e.mesh.splice(r.Lnext,s.Oprev),i=n,n=t.topRightRegion(n),m=t.regionBelow(n).eUp.Rprev,i.eUp=s.Oprev,s=t.finishLeftRegions(e,i,null),t.addRightEdges(e,n,s.Onext,r.Rprev,m,!0),!0):(We.edgeSign(l,e.event,u)>=0&&(t.regionAbove(n).dirty=n.dirty=!0,e.mesh.splitEdge(r.Sym),r.Org.s=e.event.s,r.Org.t=e.event.t),We.edgeSign(c,e.event,u)<=0&&(n.dirty=i.dirty=!0,e.mesh.splitEdge(s.Sym),s.Org.s=e.event.s,s.Org.t=e.event.t),!1):(e.mesh.splitEdge(r.Sym),e.mesh.splitEdge(s.Sym),e.mesh.splice(s.Oprev,r),r.Org.s=u.s,r.Org.t=u.t,r.Org.pqHandle=e.pq.insert(r.Org),t.getIntersectData(e,r.Org,a,l,o,c),t.regionAbove(n).dirty=n.dirty=i.dirty=!0,!1)},t.walkDirtyRegions=function(e,n){for(var i=t.regionBelow(n),r,s;;){for(;i.dirty;)n=i,i=t.regionBelow(i);if(!n.dirty&&(i=n,n=t.regionAbove(n),n===null||!n.dirty))return;if(n.dirty=!1,r=n.eUp,s=i.eUp,r.Dst!==s.Dst&&t.checkForLeftSplice(e,n)&&(i.fixUpperEdge?(t.deleteRegion(e,i),e.mesh.delete(s),i=t.regionBelow(n),s=i.eUp):n.fixUpperEdge&&(t.deleteRegion(e,n),e.mesh.delete(r),n=t.regionAbove(i),r=n.eUp)),r.Org!==s.Org)if(r.Dst!==s.Dst&&!n.fixUpperEdge&&!i.fixUpperEdge&&(r.Dst===e.event||s.Dst===e.event)){if(t.checkForIntersect(e,n))return}else t.checkForRightSplice(e,n);r.Org===s.Org&&r.Dst===s.Dst&&(t.addWinding(s,r),t.deleteRegion(e,n),e.mesh.delete(r),n=t.regionAbove(i))}},t.connectRightVertex=function(e,n,i){var r,s=i.Onext,a=t.regionBelow(n),o=n.eUp,l=a.eUp,c=!1;if(o.Dst!==l.Dst&&t.checkForIntersect(e,n),We.vertEq(o.Org,e.event)&&(e.mesh.splice(s.Oprev,o),n=t.topLeftRegion(e,n),s=t.regionBelow(n).eUp,t.finishLeftRegions(e,t.regionBelow(n),a),c=!0),We.vertEq(l.Org,e.event)&&(e.mesh.splice(i,l.Oprev),i=t.finishLeftRegions(e,a,null),c=!0),c){t.addRightEdges(e,n,i.Onext,s,s,!0);return}We.vertLeq(l.Org,o.Org)?r=l.Oprev:r=o,r=e.mesh.connect(i.Lprev,r),t.addRightEdges(e,n,r,r.Onext,r.Onext,!1),r.Sym.activeRegion.fixUpperEdge=!0,t.walkDirtyRegions(e,n)},t.connectLeftDegenerate=function(e,n,i){var r,s,a,o,l;if(r=n.eUp,We.vertEq(r.Org,i)){Je(!1),t.spliceMergeVertices(e,r,i.anEdge);return}if(!We.vertEq(r.Dst,i)){e.mesh.splitEdge(r.Sym),n.fixUpperEdge&&(e.mesh.delete(r.Onext),n.fixUpperEdge=!1),e.mesh.splice(i.anEdge,r),t.sweepEvent(e,i);return}Je(!1),n=t.topRightRegion(n),l=t.regionBelow(n),a=l.eUp.Sym,s=o=a.Onext,l.fixUpperEdge&&(Je(s!==a),t.deleteRegion(e,l),e.mesh.delete(a),a=s.Oprev),e.mesh.splice(i.anEdge,a),We.edgeGoesLeft(s)||(s=null),t.addRightEdges(e,n,a.Onext,o,s,!0)},t.connectLeftVertex=function(e,n){var i,r,s,a,o,l,c=new Ah;if(c.eUp=n.anEdge.Sym,i=e.dict.search(c).key,r=t.regionBelow(i),!!r){if(a=i.eUp,o=r.eUp,We.edgeSign(a.Dst,n,a.Org)===0){t.connectLeftDegenerate(e,i,n);return}if(s=We.vertLeq(o.Dst,a.Dst)?i:r,i.inside||s.fixUpperEdge){if(s===i)l=e.mesh.connect(n.anEdge.Sym,a.Lnext);else{var h=e.mesh.connect(o.Dnext,n.anEdge);l=h.Sym}s.fixUpperEdge?t.fixUpperEdge(e,s,l):t.computeWinding(e,t.addRegionBelow(e,i,l)),t.sweepEvent(e,n)}else t.addRightEdges(e,i,n.anEdge,n.anEdge,null,!0)}},t.sweepEvent=function(e,n){e.event=n,t.debugEvent(e);for(var i=n.anEdge;i.activeRegion===null;)if(i=i.Onext,i===n.anEdge){t.connectLeftVertex(e,n);return}var r=t.topLeftRegion(e,i.activeRegion);Je(r!==null);var s=t.regionBelow(r),a=s.eUp,o=t.finishLeftRegions(e,s,null);o.Onext===a?t.connectRightVertex(e,r,o):t.addRightEdges(e,r,o.Onext,a,a,!0)},t.addSentinel=function(e,n,i,r){var s=new Ah,a=e.mesh.makeEdge();a.Org.s=i,a.Org.t=r,a.Dst.s=n,a.Dst.t=r,e.event=a.Dst,s.eUp=a,s.windingNumber=0,s.inside=!1,s.fixUpperEdge=!1,s.sentinel=!0,s.dirty=!1,s.nodeUp=e.dict.insert(s)},t.initEdgeDict=function(e){e.dict=new bD(e,t.edgeLeq);var n=e.bmax[0]-e.bmin[0],i=e.bmax[1]-e.bmin[1],r=e.bmin[0]-n,s=e.bmax[0]+n,a=e.bmin[1]-i,o=e.bmax[1]+i;t.addSentinel(e,r,s,a),t.addSentinel(e,r,s,o)},t.doneEdgeDict=function(e){for(var n,i=0;(n=e.dict.min().key)!==null;)n.sentinel||(Je(n.fixUpperEdge),Je(++i===1)),Je(n.windingNumber===0),t.deleteRegion(e,n)},t.removeDegenerateEdges=function(e){var n,i,r,s=e.mesh.eHead;for(n=s.next;n!==s;n=i)i=n.next,r=n.Lnext,We.vertEq(n.Org,n.Dst)&&n.Lnext.Lnext!==n&&(t.spliceMergeVertices(e,r,n),e.mesh.delete(n),n=r,r=n.Lnext),r.Lnext===n&&(r!==n&&((r===i||r===i.Sym)&&(i=i.next),e.mesh.delete(r)),(n===i||n===i.Sym)&&(i=i.next),e.mesh.delete(n))},t.initPriorityQ=function(e){var n,i,r,s=0;for(r=e.mesh.vHead,i=r.next;i!==r;i=i.next)s++;for(s+=8,n=e.pq=new xD(s,We.vertLeq),r=e.mesh.vHead,i=r.next;i!==r;i=i.next)i.pqHandle=n.insert(i);return i!==r?!1:(n.init(),!0)},t.donePriorityQ=function(e){e.pq=null},t.removeDegenerateFaces=function(e,n){var i,r,s;for(i=n.fHead.next;i!==n.fHead;i=r)r=i.next,s=i.anEdge,Je(s.Lnext!==s),s.Lnext.Lnext===s&&(t.addWinding(s.Onext,s),e.mesh.delete(s));return!0},t.computeInterior=function(e,n){n===void 0&&(n=!0);var i,r;if(t.removeDegenerateEdges(e),!t.initPriorityQ(e))return!1;for(t.initEdgeDict(e);(i=e.pq.extractMin())!==null;){for(;r=e.pq.min(),!(r===null||!We.vertEq(r,i));)r=e.pq.extractMin(),t.spliceMergeVertices(e,i.anEdge,r.anEdge);t.sweepEvent(e,i)}return e.event=e.dict.min().key.eUp.Org,t.debugEvent(e),t.doneEdgeDict(e),t.donePriorityQ(e),t.removeDegenerateFaces(e,e.mesh)?(n&&e.mesh.check(),!0):!1},t}(),wD=function(){function t(){this.mesh=new Am,this.normal=[0,0,0],this.sUnit=[0,0,0],this.tUnit=[0,0,0],this.bmin=[0,0],this.bmax=[0,0],this.windingRule=Gt.ODD,this.dict=null,this.pq=null,this.event=null,this.vertexIndexCounter=0,this.vertices=[],this.vertexIndices=[],this.vertexCount=0,this.elements=[],this.elementCount=0}return t.prototype.dot_=function(e,n){return e[0]*n[0]+e[1]*n[1]+e[2]*n[2]},t.prototype.normalize_=function(e){var n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];if(!n)throw"Zero-size vector!";n=Math.sqrt(n),e[0]/=n,e[1]/=n,e[2]/=n},t.prototype.longAxis_=function(e){var n=0;return Math.abs(e[1])>Math.abs(e[0])&&(n=1),Math.abs(e[2])>Math.abs(e[n])&&(n=2),n},t.prototype.computeNormal_=function(e){var n,i,r,s,a,o,l=[0,0,0],c=[0,0,0],h=[0,0,0],d=[0,0,0],u=[0,0,0],p=[null,null,null],m=[null,null,null],f=this.mesh.vHead;n=f.next;for(var g=0;g<3;++g)s=n.coords[g],c[g]=s,m[g]=n,l[g]=s,p[g]=n;for(n=f.next;n!==f;n=n.next)for(var v=0;v<3;++v)s=n.coords[v],s<c[v]&&(c[v]=s,m[v]=n),s>l[v]&&(l[v]=s,p[v]=n);var y=0;if(l[1]-c[1]>l[0]-c[0]&&(y=1),l[2]-c[2]>l[y]-c[y]&&(y=2),c[y]>=l[y]){e[0]=0,e[1]=0,e[2]=1;return}for(o=0,i=m[y],r=p[y],h[0]=i.coords[0]-r.coords[0],h[1]=i.coords[1]-r.coords[1],h[2]=i.coords[2]-r.coords[2],n=f.next;n!==f;n=n.next)d[0]=n.coords[0]-r.coords[0],d[1]=n.coords[1]-r.coords[1],d[2]=n.coords[2]-r.coords[2],u[0]=h[1]*d[2]-h[2]*d[1],u[1]=h[2]*d[0]-h[0]*d[2],u[2]=h[0]*d[1]-h[1]*d[0],a=u[0]*u[0]+u[1]*u[1]+u[2]*u[2],a>o&&(o=a,e[0]=u[0],e[1]=u[1],e[2]=u[2]);o<=0&&(e[0]=e[1]=e[2]=0,e[this.longAxis_(h)]=1)},t.prototype.checkOrientation_=function(){for(var e=this.mesh.fHead,n,i=this.mesh.vHead,r,s=0,a=e.next;a!==e;a=a.next)if(r=a.anEdge,!(r.winding<=0))do s+=(r.Org.s-r.Dst.s)*(r.Org.t+r.Dst.t),r=r.Lnext;while(r!==a.anEdge);if(s<0){for(n=i.next;n!==i;n=n.next)n.t=-n.t;this.tUnit[0]=-this.tUnit[0],this.tUnit[1]=-this.tUnit[1],this.tUnit[2]=-this.tUnit[2]}},t.prototype.projectPolygon_=function(){var e=this.mesh.vHead,n=[0,0,0],i,r,s=!1;n[0]=this.normal[0],n[1]=this.normal[1],n[2]=this.normal[2],!n[0]&&!n[1]&&!n[2]&&(this.computeNormal_(n),s=!0),i=this.sUnit,r=this.tUnit;var a=this.longAxis_(n);i[a]=0,i[(a+1)%3]=1,i[(a+2)%3]=0,r[a]=0,r[(a+1)%3]=0,r[(a+2)%3]=n[a]>0?1:-1;for(var o=e.next;o!==e;o=o.next)o.s=this.dot_(o.coords,i),o.t=this.dot_(o.coords,r);s&&this.checkOrientation_();for(var l=!0,c=e.next;c!==e;c=c.next)l?(this.bmin[0]=this.bmax[0]=c.s,this.bmin[1]=this.bmax[1]=c.t,l=!1):(c.s<this.bmin[0]&&(this.bmin[0]=c.s),c.s>this.bmax[0]&&(this.bmax[0]=c.s),c.t<this.bmin[1]&&(this.bmin[1]=c.t),c.t>this.bmax[1]&&(this.bmax[1]=c.t))},t.prototype.addWinding_=function(e,n){e.winding+=n.winding,e.Sym.winding+=n.Sym.winding},t.prototype.tessellateMonoRegion_=function(e,n){var i,r;if(i=n.anEdge,!(i.Lnext!==i&&i.Lnext.Lnext!==i))throw"Mono region invalid";for(;We.vertLeq(i.Dst,i.Org);i=i.Lprev);for(;We.vertLeq(i.Org,i.Dst);i=i.Lnext);r=i.Lprev;for(var s=void 0;i.Lnext!==r;)if(We.vertLeq(i.Dst,r.Org)){for(;r.Lnext!==i&&(We.edgeGoesLeft(r.Lnext)||We.edgeSign(r.Org,r.Dst,r.Lnext.Dst)<=0);)s=e.connect(r.Lnext,r),r=s.Sym;r=r.Lprev}else{for(;r.Lnext!==i&&(We.edgeGoesRight(i.Lprev)||We.edgeSign(i.Dst,i.Org,i.Lprev.Org)>=0);)s=e.connect(i,i.Lprev),i=s.Sym;i=i.Lnext}if(r.Lnext===i)throw"Mono region invalid";for(;r.Lnext.Lnext!==i;)s=e.connect(r.Lnext,r),r=s.Sym;return!0},t.prototype.tessellateInterior_=function(e){for(var n,i=e.fHead.next;i!==e.fHead;i=n)if(n=i.next,i.inside&&!this.tessellateMonoRegion_(e,i))return!1;return!0},t.prototype.discardExterior_=function(e){for(var n,i=e.fHead.next;i!==e.fHead;i=n)n=i.next,i.inside||e.zapFace(i)},t.prototype.setWindingNumber_=function(e,n,i){for(var r,s=e.eHead.next;s!==e.eHead;s=r)r=s.next,s.Rface.inside!==s.Lface.inside?s.winding=s.Lface.inside?n:-n:i?e.delete(s):s.winding=0},t.prototype.getNeighbourFace_=function(e){return!e.Rface||!e.Rface.inside?-1:e.Rface.n},t.prototype.outputPolymesh_=function(e,n,i,r){var s,a=0,o=0,l;i>3&&e.mergeConvexFaces(i);for(var c=e.vHead.next;c!==e.vHead;c=c.next)c.n=-1;for(var h=e.fHead.next;h!==e.fHead;h=h.next)if(h.n=-1,!!h.inside){s=h.anEdge,l=0;do{var c=s.Org;c.n===-1&&(c.n=o,o++),l++,s=s.Lnext}while(s!==h.anEdge);if(l>i)throw"Face vertex greater that support polygon";h.n=a,++a}this.elementCount=a,n===dn.CONNECTED_POLYGONS&&(a*=2),this.elements=[],this.elements.length=a*i,this.vertexCount=o,this.vertices=[],this.vertices.length=o*r,this.vertexIndices=[],this.vertexIndices.length=o;for(var c=e.vHead.next;c!==e.vHead;c=c.next)if(c.n!==-1){var d=c.n*r;this.vertices[d+0]=c.coords[0],this.vertices[d+1]=c.coords[1],r>2&&(this.vertices[d+2]=c.coords[2]),this.vertexIndices[c.n]=c.idx}for(var u=0,h=e.fHead.next;h!==e.fHead;h=h.next)if(h.inside){s=h.anEdge,l=0;do{var c=s.Org;this.elements[u++]=c.n,l++,s=s.Lnext}while(s!==h.anEdge);for(var p=l;p<i;++p)this.elements[u++]=-1;if(n===dn.CONNECTED_POLYGONS){s=h.anEdge;do this.elements[u++]=this.getNeighbourFace_(s),s=s.Lnext;while(s!==h.anEdge);for(var m=l;m<i;++m)this.elements[u++]=-1}}},t.prototype.outputContours_=function(e,n){var i,r,s=0,a=0;this.vertexCount=0,this.elementCount=0;for(var o=e.fHead.next;o!==e.fHead;o=o.next)if(o.inside){r=i=o.anEdge;do this.vertexCount++,i=i.Lnext;while(i!==r);this.elementCount++}this.elements=[],this.elements.length=this.elementCount*2,this.vertices=[],this.vertices.length=this.vertexCount*n,this.vertexIndices=[],this.vertexIndices.length=this.vertexCount;var l=0,c=0,h=0;s=0;for(var o=e.fHead.next;o!==e.fHead;o=o.next)if(o.inside){a=0,r=i=o.anEdge;do this.vertices[l++]=i.Org.coords[0],this.vertices[l++]=i.Org.coords[1],n>2&&(this.vertices[l++]=i.Org.coords[2]),this.vertexIndices[c++]=this.vertexIdCallback?this.vertexIdCallback(i):i.Org.idx,a++,i=i.Lnext;while(i!==r);this.elements[h++]=s,this.elements[h++]=a,s+=a}},t.prototype.addContour=function(e,n){this.mesh===null&&(this.mesh=new Am),e<2&&(e=2),e>3&&(e=3);for(var i=null,r=0;r<n.length;r+=e)i===null?(i=this.mesh.makeEdge(),this.mesh.splice(i,i.Sym)):(this.mesh.splitEdge(i),i=i.Lnext),i.Org.coords[0]=n[r+0],i.Org.coords[1]=n[r+1],e>2?i.Org.coords[2]=n[r+2]:i.Org.coords[2]=0,i.Org.idx=this.vertexIndexCounter++,this.edgeCreateCallback&&this.edgeCreateCallback(i),i.winding=1,i.Sym.winding=-1},t.prototype.tesselate=function(e,n,i,r,s,a){if(e===void 0&&(e=Gt.ODD),n===void 0&&(n=dn.POLYGONS),a===void 0&&(a=!0),this.vertices=[],this.elements=[],this.vertexIndices=[],this.vertexIndexCounter=0,s&&(this.normal[0]=s[0],this.normal[1]=s[1],this.normal[2]=s[2]),this.windingRule=e,r<2&&(r=2),r>3&&(r=3),!this.mesh)return!1;this.projectPolygon_(),_D.computeInterior(this,a);var o=this.mesh;return n===dn.BOUNDARY_CONTOURS?this.setWindingNumber_(o,1,!0):this.tessellateInterior_(o),a&&o.check(),n===dn.BOUNDARY_CONTOURS?this.outputContours_(o,r):this.outputPolymesh_(o,n,i,r),!0},t}();function ja(t){var e=t.windingRule,n=e===void 0?Gt.ODD:e,i=t.elementType,r=i===void 0?dn.POLYGONS:i,s=t.polySize,a=s===void 0?3:s,o=t.vertexSize,l=o===void 0?2:o,c=t.normal,h=c===void 0?[0,0,1]:c,d=t.contours,u=d===void 0?[]:d,p=t.strict,m=p===void 0?!0:p,f=t.debug,g=f===void 0?!1:f;if(!u&&m)throw new Error("Contours can't be empty");if(u){var v=new wD;t.edgeCreateCallback&&(v.edgeCreateCallback=t.edgeCreateCallback),t.vertexIdCallback&&(v.vertexIdCallback=t.vertexIdCallback);for(var y=0;y<u.length;y++)v.addContour(l||2,u[y]);return v.tesselate(n,r,a,l,h,m),{vertices:v.vertices,vertexIndices:v.vertexIndices,vertexCount:v.vertexCount,elements:v.elements,elementCount:v.elementCount,mesh:g?v.mesh:void 0}}}Gt.ODD;Gt.NONZERO;Gt.POSITIVE;Gt.NEGATIVE;Gt.ABS_GEQ_TWO;dn.POLYGONS;dn.CONNECTED_POLYGONS;dn.BOUNDARY_CONTOURS;var Ev=class extends Ge{constructor(t,e=12,n={}){var i,r,s;super(),this.type="ShapeGeometry",this.windingRule=Gt.ODD,this.elementType=dn.POLYGONS,this.polySize=3,this.vertexSize=2,this.strict=!0,this._shape=t,this._curveSegments=e,this._triangulationOptions=Object.assign({windingRule:Gt.ODD,elementType:dn.POLYGONS,polySize:3,vertexSize:2,strict:!0},n);let a=this._shape.extractShapePointsToFlatArray([],this._curveSegments),o=this._shape.shapeHoles.map(f=>f.extractShapePointsToFlatArray([],this._curveSegments)),l,c=!0,h=!0,d,u;for(let f=0,g=a.length/2;f<g;f++){let v=f*2,y=a[v+0],w=a[v+1];if(d!==void 0&&y!==d&&(c=!1),u!==void 0&&w!==u&&(h=!1),d=y,u=w,!c&&!h)break}!c&&!h&&(l=ja({contours:[a,...o],windingRule:this._triangulationOptions.windingRule,elementType:this._triangulationOptions.elementType,polySize:this._triangulationOptions.polySize,vertexSize:this._triangulationOptions.vertexSize,strict:this._triangulationOptions.strict}));let p=(i=l==null?void 0:l.vertexCount)!=null?i:1,m=(r=l==null?void 0:l.elementCount)!=null?r:1;if(this._positionAttribute=new rt(new Float32Array(p*3),3),this._normalAttribute=new rt(new Float32Array(p*3),3),this._uvAttribute=new rt(new Float32Array(p*2),2),this._indexAttribute=new rt(new Uint32Array(m*3),1),l){let f=1/0,g=-1/0,v=1/0,y=-1/0;for(let S=0,_=p;S<_;S++){let E=S*2,x=l.vertices[E+0],A=l.vertices[E+1];x<f&&(f=x),x>g&&(g=x),A<v&&(v=A),A>y&&(y=A)}let w=g-f,b=y-v;for(let S=0,_=p;S<_;S++){let E=S*2,x=l.vertices[E+0],A=l.vertices[E+1],M=(x-f)/w,C=(A-v)/b;this._positionAttribute.setXYZ(S,x,A,0),this._normalAttribute.setXYZ(S,0,0,1),this._uvAttribute.setXY(S,M,C)}for(let S=0,_=m;S<_;S++){let E=S*3,x=l.elements[E+0],A=l.elements[E+1],M=l.elements[E+2];this._indexAttribute.setX(E+0,x),this._indexAttribute.setX(E+1,A),this._indexAttribute.setX(E+2,M)}}this.setAttribute("position",this._positionAttribute),this.setAttribute("normal",this._normalAttribute),this.setAttribute("uv",this._uvAttribute),this.setIndex(this._indexAttribute),this.setDrawRange(0,((s=l==null?void 0:l.elementCount)!=null?s:1)*3)}clone(){let t=new Ev(this._shape,this._curveSegments);return t.userData=Y0(this.userData),t}},Tu=class{constructor(t=256,e=!1){this.capacity=t,this.size=0,this.debug=e,this.debug&&console.log(`allocating with cap ${t}`);let n=t*Tu.eSize;this.buffer=new ArrayBuffer(n);let i=Float32Array.BYTES_PER_ELEMENT,r=0;this.positions=new Float32Array(this.buffer,r*i,3*t),r+=3*t,this.normals=new Float32Array(this.buffer,r*i,3*t),r+=3*t,this.uvs=new Float32Array(this.buffer,r*i,2*t)}realloc(t,e=!1){if(t<this.size)throw Error("cannot shrink buffer");if(t<=this.capacity&&!e)return;this.debug&&console.log(`resizing from ${this.capacity} \u2192 ${t}`);let n=t*Tu.eSize,i=new ArrayBuffer(n),r=Float32Array.BYTES_PER_ELEMENT,s=0,a=new Float32Array(i,s*r,3*t);s+=3*t;let o=new Float32Array(i,s*r,3*t);s+=3*t;let l=new Float32Array(i,s*r,2*t);a.set(this.positions.slice(0,this.size*3)),o.set(this.normals.slice(0,this.size*3)),l.set(this.uvs.slice(0,this.size*2)),this.buffer=i,this.positions=a,this.normals=o,this.uvs=l,this.capacity=t}get(t=1){let e=this.size+t;if(e>this.capacity){let i=this.capacity;for(;e>i;)i*=2;this.realloc(i)}let n=this.size;return this.size=e,n}reserve(t){let e=this.size+t;e>this.capacity&&this.realloc(e)}shrink(){this.debug&&console.log(`shrinking ${this.capacity} \u2192 ${this.size}`),this.realloc(this.size,!0)}},Av=Tu;Av.eSize=(3+3+2)*Float32Array.BYTES_PER_ELEMENT;var Ch=(t,e)=>([n,i])=>(i<n&&(i+=e),(t>=n?t:t+e)<=i),Cv=class extends Ge{constructor(t,e,n=0,i=12,r=3){super(),this.type="ShapeGeometry",this.vertexCache={},this._shape=t,this._depth=e,this._bevel=n,this._curveSegments=i,this._bevelSegmentsInput=r,n<=0?(this._bevelSize=0,this._bevelSegments=0):(this._bevelSize=Math.min(n,e/2-1e-12),this._bevelSegments=Math.floor(r));let s=this._shape.extractShapePointsToFlatArray([],i),a=this._shape.shapeHoles.map(S=>{let _=S.extractShapePointsToFlatArray([],i),E=[];for(let x=_.length-1;x>=1;x-=2){let A=_[x-1],M=_[x-0];E.push(A,M)}return E}),o=ja({windingRule:Gt.ODD,elementType:dn.BOUNDARY_CONTOURS,vertexSize:2,strict:!0,contours:[s]}),l=ja({windingRule:Gt.ODD,elementType:dn.BOUNDARY_CONTOURS,vertexSize:2,strict:!0,contours:[...a]});if(!o)throw new Error("error generating geometry");let c=o.elementCount;if(l){o.elementCount+=l.elementCount;for(let S=0;S<l.elements.length;S++){let _=l.elements[S],E=S%2===0?o.vertexCount:0;o.elements.push(_+E)}for(let S=0;S<l.vertexIndices.length;S++){let _=l.vertexIndices[S],E=o.vertexCount;o.vertexIndices.push(_+E)}for(let S=0;S<l.vertices.length;S++){let _=l.vertices[S];o.vertices.push(_)}}let h=1/0,d=-1/0,u=1/0,p=-1/0;for(let S=0,_=o.vertexCount;S<_;S++){let E=S*2,x=o.vertices[E+0],A=o.vertices[E+1];x<h&&(h=x),x>d&&(d=x),A<u&&(u=A),A>p&&(p=A)}this._minX=h,this._minY=u,this._width=d-h,this._height=p-u;let m=o.vertexCount*2*(2+this._bevelSegments);this._buffer=new Av(m);let f=[],g=[];for(let S=o.elementCount-1;S>=0;S--){let _=S>=c,E=S*2,x=o.elements[E+0],A=o.elements[E+1],M=x+A,C={start:x,count:A,normals:[],continuous:[],concave:[]},F=x,$=M-1,I=x+1,Z=this._shape.roundedCurves.length;do{let N=F-x,O=o.vertices[$*2+0],V=o.vertices[$*2+1],z=o.vertices[F*2+0],H=o.vertices[F*2+1],J=o.vertices[I*2+0],ne=o.vertices[I*2+1],B=z-O,oe=H-V,ie=Math.sqrt(B*B+oe*oe);B/=ie,oe/=ie;let le=z-J,K=H-ne,pe=Math.sqrt(le*le+K*K);le/=pe,K/=pe,C.normals[N*2+0]=-K,C.normals[N*2+1]=le,C.concave[N]=B*K-oe*le>0;let G=o.vertexIndices[F];if(Array.isArray(G))C.continuous[N]=!1;else{let[X,ee]=this._shape.getCurveIndexFromVertexId(G-1,!0);if(ee>0&&ee<1)C.continuous[N]=!0;else{let se=ee===1?X+1:X-1;se=(se+Z)%Z;let he=ee===1?0:1,fe=this._shape.roundedCurves[X].getTangent(ee),ge=this._shape.roundedCurves[se].getTangent(he);C.continuous[N]=fe.dot(ge)>.95}}_&&(C.normals[N*2+0]*=-1,C.normals[N*2+1]*=-1),[$,F,I]=[F,I,I+1],I>=M&&(I-=A)}while(I!==x+1);let W=[];W.push({bevelI:0,angle:0,size:0,boundary:{vertices:o.vertices.slice(x*2,M*2),vertexCount:A,vertexIndices:new Array(A).fill(!0).map((N,O)=>[O,O]),elements:[0,A],elementCount:1,mesh:null},reverseMap:[],insetPoints:o.vertices.slice(x*2,M*2)});for(let N=1;N<=this._bevelSegments;N++){let O=N/this._bevelSegments*Math.PI/2,V=(1-Math.cos(O))*this._bevelSize,z=[],H=[],J=0;for(let B=0;B<A;B++){let oe=B*2,ie=(B-1+A)%A*2,le=o.vertices[C.start*2+oe+0],K=o.vertices[C.start*2+oe+1],pe=-C.normals[ie+0]*V,G=-C.normals[ie+1]*V,X=-C.normals[oe+0]*V,ee=-C.normals[oe+1]*V;if(C.concave[B]||!C.concave[B]&&_){let se=Math.atan2(G,pe),he=Math.atan2(ee,X);he>se&&(he-=Math.PI*2);let fe=he-se;if(C.continuous[B]||_){let ge=se+fe/2,_e=Math.cos(ge)*V,Ne=Math.sin(ge)*V;z[2*J+0]=le+_e*(_?-1:1),z[2*J+1]=K+Ne*(_?-1:1),H[J]=B,J++}else{let ge=Math.max(1,Math.floor(i/4*Math.abs(fe)/Math.PI));for(let _e=0;_e<=ge;_e++){let Ne=se+fe*(_e/ge),Be=Math.cos(Ne)*V,D=Math.sin(Ne)*V;z[2*J+0]=le+Be,z[2*J+1]=K+D,H[J]=B,J++}}}else z[2*J+0]=le+pe,z[2*J+1]=K+G,H[J]=B,J++,z[2*J+0]=le,z[2*J+1]=K,H[J]=B,J++,z[2*J+0]=le+X,z[2*J+1]=K+ee,H[J]=B,J++}let ne=ja({windingRule:Gt.POSITIVE,elementType:dn.BOUNDARY_CONTOURS,vertexSize:2,strict:!0,contours:[z],edgeCreateCallback:B=>{let oe=B.Org.idx,ie=H[oe],le=H[(oe+1)%H.length];B.idx=[ie,le],B.Sym.idx=[le,ie]},vertexIdCallback:B=>{let oe=B.Lprev.idx;return[oe?oe[1]:0,B.idx[0]]}});if(!ne)throw console.log("Error"),new Error(`error generating bevel geometry for ${N}'th loop`);if(!ne.vertexCount)break;for(let B=0;B<ne.vertexIndices.length;B++){let[oe,ie]=ne.vertexIndices[B];if(oe===ie)continue;let le=ie;ie<oe&&(le+=A);for(let K=oe;K<le;K++){let pe=K%A,G=(K+1)%A;if(!C.continuous[pe]||!C.continuous[G]){ne.vertexIndices[B]=[oe,pe],ne.vertexIndices.splice(B+1,0,[G,ie]),ne.vertices.splice((B+1)*2,0,ne.vertices[B*2],ne.vertices[B*2+1]);break}}}W.push({bevelI:N,angle:O,size:V,boundary:ne,reverseMap:H,insetPoints:z})}let q=(N,O,V)=>{let z=0,H=N.boundary.vertexIndices.length;for(;z<H&&V(N.boundary.vertexIndices[O]);)O=(O+1)%H,z++;return z},k=f.length;for(let N=1;N<W.length;N++){let O=W[N-1],V=W[N],z=O.boundary.vertexIndices.length,H=V.boundary.vertexIndices.length;if(!z||!H)break;let J=C.concave.length,ne=0,B=Ch(ne,A);for(;!O.boundary.vertexIndices.filter(B).length||!V.boundary.vertexIndices.filter(B).length;)ne++,B=Ch(ne,A);let oe=O.boundary.vertexIndices.findIndex(B),ie=V.boundary.vertexIndices.findIndex(B);do oe=(oe+1)%z;while(B(O.boundary.vertexIndices[oe]));do ie=(ie+1)%H;while(B(V.boundary.vertexIndices[ie]));ne=(ne+1)%A;let le=ne,K=this.buildBevelVert(C,O,(oe-1+z)%z),pe=this.buildBevelVert(C,V,(ie-1+H)%H),G=K,X=pe,ee,se,he=!1;do{B=Ch(ne,A);let fe=q(O,oe,B),ge=q(V,ie,B),_e=he;if(he=!1,fe&&!ge){for(let Ne=0;Ne<fe;Ne++)ee=this.buildBevelVert(C,O,(oe+Ne)%z,Ne/(fe-1)),f.push(G.topN,ee.topP,X.topN),f.push(ee.bottomP,G.bottomN,X.bottomN),G=ee;he=!0}else if(!fe&&ge)for(let Ne=0;Ne<ge;Ne++)se=this.buildBevelVert(C,V,(ie+Ne)%H,Ne/(ge-1)),f.push(X.topN,G.topP,se.topP),f.push(G.bottomP,X.bottomN,se.bottomP),X=se;else if(fe&&ge)if(ee=this.buildBevelVert(C,O,oe,0),se=this.buildBevelVert(C,V,ie,0),_e?(f.push(G.topN,se.topP,X.topN),f.push(G.topN,ee.topP,se.topP),f.push(se.bottomP,G.bottomN,X.bottomN),f.push(se.bottomP,ee.bottomP,G.bottomN)):(f.push(X.topN,G.topN,ee.topP),f.push(X.topN,ee.topP,se.topP),f.push(ee.bottomP,G.bottomN,X.bottomN),f.push(ee.bottomP,X.bottomN,se.bottomP)),G=ee,X=se,fe===ge)for(let Ne=1;Ne<fe;Ne++)ee=this.buildBevelVert(C,O,(oe+Ne)%z,Ne/(fe-1)),se=this.buildBevelVert(C,V,(ie+Ne)%H,Ne/(ge-1)),f.push(G.topN,ee.topP,X.topN),f.push(X.topN,ee.topP,se.topP),f.push(ee.bottomP,G.bottomN,X.bottomN),f.push(ee.bottomP,X.bottomN,se.bottomP),G=ee,X=se;else if(fe>ge){let Ne=fe/ge,Be=0;for(let D=1;D<fe;D++)ee=this.buildBevelVert(C,O,(oe+D)%z,D/(fe-1)),f.push(G.topN,ee.topP,X.topN),f.push(ee.bottomP,G.bottomN,X.bottomN),G=ee,D>(Be+1)*Ne&&(Be++,se=this.buildBevelVert(C,V,(ie+Be)%H,Be/(ge-1)),f.push(X.topN,ee.topP,se.topP),f.push(ee.bottomP,X.bottomN,se.bottomP),X=se)}else{let Ne=ge/fe,Be=0;for(let D=1;D<ge;D++)se=this.buildBevelVert(C,V,(ie+D)%H,D/(ge-1)),f.push(X.topN,ee.topP,se.topP),f.push(ee.bottomP,X.bottomN,se.bottomP),X=se,D>(Be+1)*Ne&&(Be++,ee=this.buildBevelVert(C,O,(oe+Be)%z,Be/(fe-1)),f.push(G.topN,ee.topP,X.topN),f.push(ee.bottomP,G.bottomN,X.bottomN),G=ee)}oe=(oe+fe)%z,ie=(ie+ge)%H,ne=(ne+1)%J}while(ne!==le)}{let N=W[0];for(let O=0,V=N.boundary.vertexCount;O<V;O++){let z=this.buildBevelVert(C,N,O),H=this.buildBevelVert(C,N,(O+1)%V);f.push(H.topP,z.topN,z.bottomN),f.push(H.topP,z.bottomN,H.bottomP)}}if(_){let N=[];for(let O=f.length-1;O>=k+2;O-=3){let V=f[O-2],z=f[O-1],H=f[O-0];N.push(H,z,V)}f.splice(k,f.length-k,...N)}if(_){let N=[];for(let O=W[W.length-1].boundary.vertices.length-1;O>=1;O-=2){let V=W[W.length-1].boundary.vertices[O-1],z=W[W.length-1].boundary.vertices[O-0];N.push(V,z)}g.push(N)}if(!_){let N=W[W.length-1],O=ja({windingRule:W.length>1?Gt.POSITIVE:Gt.ODD,elementType:dn.POLYGONS,vertexSize:2,strict:!0,contours:[N.insetPoints,...g]});if(!O)throw new Error("Error generating geometry for surface");Object.assign(this,{capStartIndex:f.length});for(let V=0;V<O.elementCount*3;V+=3){let z=this.buildSurfaceVert(O,O.elements[V+0]),H=this.buildSurfaceVert(O,O.elements[V+1]),J=this.buildSurfaceVert(O,O.elements[V+2]);f.push(z.top,H.top,J.top),f.push(J.bottom,H.bottom,z.bottom)}}this.vertexCache={}}this._buffer.shrink();let v=new rt(Uint32Array.from(f),1),y=new rt(this._buffer.positions,3),w=new rt(this._buffer.normals,3),b=new rt(this._buffer.uvs,2);y.needsUpdate=!0,w.needsUpdate=!0,b.needsUpdate=!0,v.needsUpdate=!0,this.setAttribute("position",y),this.setAttribute("normal",w),this.setAttribute("uv",b),this.setIndex(v)}buildSurfaceVert(t,e){let n=e.toString();if(n in this.vertexCache)return this.vertexCache[n];let i=t.vertices[e*2+0],r=t.vertices[e*2+1],s=(i-this._minX)/this._width,a=(r-this._minY)/this._height,o=this._buffer.get(2),l=o*3,c=o*2,h={top:o+0,bottom:o+1};return this._buffer.positions[l+0]=i,this._buffer.positions[l+1]=r,this._buffer.positions[l+2]=this._depth,this._buffer.normals[l+0]=0,this._buffer.normals[l+1]=0,this._buffer.normals[l+2]=1,this._buffer.uvs[c+0]=s,this._buffer.uvs[c+1]=a,this._buffer.positions[l+3]=i,this._buffer.positions[l+4]=r,this._buffer.positions[l+5]=0,this._buffer.normals[l+3]=0,this._buffer.normals[l+4]=0,this._buffer.normals[l+5]=-1,this._buffer.uvs[c+2]=s,this._buffer.uvs[c+3]=a,this.vertexCache[n]=h,h}buildBevelVert(t,e,n,i=1){let r=`${e.bevelI}:${n}`;if(r in this.vertexCache)return this.vertexCache[r];let[s,a]=e.boundary.vertexIndices[n],o,l,c,h;s!==a?(l=s,o=a,h=!1,c=t.continuous[l]&&t.continuous[o]):(o=s,l=(o-1+t.count)%t.count,h=t.concave[o]&&e.bevelI>0,c=t.continuous[o]||h);let d=Math.cos(e.angle),u=Math.sin(e.angle),p=n*2,m=o*2,f=l*2,g=e.boundary.vertices[p+0],v=e.boundary.vertices[p+1],y=(1-u)*this._bevelSize,w=(g-this._minX)/this._width,b=(v-this._minY)/this._height,S=t.normals[m+0],_=t.normals[m+1],E=t.normals[f+0],x=t.normals[f+1];if(h){let $=E-S,I=x-_;S=S+$*(1-i),_=_+I*(1-i);let Z=Math.sqrt(S*S+_*_);S/=Z,_/=Z}let A=this._buffer.get(c?2:4),M=A*3,C=A*2,F={i:n,fi:o,topP:A+0,topN:A+0,bottomP:A+1,bottomN:A+1};return this._buffer.positions[M+0]=g,this._buffer.positions[M+1]=v,this._buffer.positions[M+2]=this._depth-y,this._buffer.normals[M+0]=S*d,this._buffer.normals[M+1]=_*d,this._buffer.normals[M+2]=u,this._buffer.uvs[C+0]=w,this._buffer.uvs[C+1]=b,this._buffer.positions[M+3]=g,this._buffer.positions[M+4]=v,this._buffer.positions[M+5]=y,this._buffer.normals[M+3]=S*d,this._buffer.normals[M+4]=_*d,this._buffer.normals[M+5]=-u,this._buffer.uvs[C+2]=b,this._buffer.uvs[C+3]=w,c||(A+=2,M+=6,C+=4,F.topP=A+0,F.bottomP=A+1,this._buffer.positions[M+0]=g,this._buffer.positions[M+1]=v,this._buffer.positions[M+2]=this._depth-y,this._buffer.normals[M+0]=E*d,this._buffer.normals[M+1]=x*d,this._buffer.normals[M+2]=u,this._buffer.uvs[C+0]=w,this._buffer.uvs[C+1]=b,this._buffer.positions[M+3]=g,this._buffer.positions[M+4]=v,this._buffer.positions[M+5]=y,this._buffer.normals[M+3]=E*d,this._buffer.normals[M+4]=x*d,this._buffer.normals[M+5]=-u,this._buffer.uvs[C+2]=b,this._buffer.uvs[C+3]=w),this.vertexCache[r]=F,F}clone(){let t=new Cv(this._shape,this._depth,this._bevel,this._curveSegments,this._bevelSegmentsInput);return t.userData=Y0(this.userData),t}},sr=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s,a,o,l;let c=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,subdivisions:40,roundness:0,extrudeBevelSize:0,extrudeBevelSegments:3},t.parameters),h=Math.abs(c.width),d=Math.abs((i=c.height)!=null?i:c.width),u=Math.abs((r=c.depth)!=null?r:0),p=(s=t.shape)!=null?s:e==null?void 0:e.shape,m=(a=p==null?void 0:p.roundness)!=null?a:c.roundness;p!==void 0&&(p instanceof Ht?(p.width!==h||p.height!==d)&&p.applySize(h,d):p=new Ht(h,d).fromJSON(p),((o=t.parameters)==null?void 0:o.roundness)!==void 0&&((l=t.parameters)==null?void 0:l.roundness)>0&&p.update(!1));let f=p!=null?p:new Ht(h,d);return{parameters:Object.assign(c,{width:h,height:d,depth:u,roundness:m}),shape:f}}static build(t){let{depth:e,extrudeBevelSize:n,extrudeBevelSegments:i,subdivisions:r,roundness:s}=t.parameters;t.shape.roundness=s;let a;return e<=0?a=new Ev(t.shape,r):a=new Cv(t.shape,e,n,r,i),Object.assign(a,{userData:ze(ve({},t),{type:"VectorGeometry"})})}},Lv=Math.PI*2,SD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,spikes:64,angle:360,innerRadius:0,extrudeBevelSize:0,extrudeBevelSegments:1},t.parameters);return{shape:t.shape&&t.shape instanceof Ht?t.shape:new Ht,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n,spikes:i,angle:r,innerRadius:s,depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}=t.parameters,c=t.shape,h=e*.5,d=n*.5,u=MD(c,h,d,r*Math.PI/180,i,s);c.isClosed=!0,c.update();let p=sr.create({shape:c,parameters:{subdivisions:u,depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}});return Object.assign(p,{userData:ze(ve({},t),{type:"EllipseGeometry"})})}};function MD(t,e,n,i,r,s){if(i>=Lv)return r>30||r%4===0?(ED(t,e,n,s),Math.round(r/4)):Dm(t,i,r,e,n,s);let a={x:0,y:n},o=i+Math.PI*.5,l={x:Math.cos(o)*e,y:Math.sin(o)*n},c=yD({px:a.x,py:a.y,cx:l.x,cy:l.y,rx:e,ry:n,largeArcFlag:i>Math.PI,sweepFlag:!0});return r>30||r%c.length===0?TD(t,a.x,a.y,c,r,e,n,s):Dm(t,i,r,e,n,s)}function TD(t,e,n,i,r,s,a,o){let l=Math.round(r/i.length);t.addPoint(Ks(e,n));for(let c=0,h=i.length;c<h;c++){let d=i[c],u=t.points[c],p=Ks(d.x,d.y);u.controls[1].position.set(d.x1,d.y1),p.controls[0].position.set(d.x2,d.y2),t.addPoint(p)}return o>0?Pv(t,s,a,o):t.addPoint(Ks(0,0)),l}function Dm(t,e,n,i,r,s){let a=-e/n;for(let o=0;o<=n;o++){let l=a*o,c=Math.sin(l)*i,h=Math.cos(l)*r;t.addPoint(Ks(c,h))}return e<Lv?s>0?Pv(t,i,r,s):t.addPoint(Ks(0,0)):(t.removePoint(t.points[t.points.length-1]),s>0&&Dv(t,i,r,s)),1}function ED(t,e,n,i=0,r=0,s=0){let a=.5522847498,o=e*a,l=n*a;t.addPoint(xl(r-e,s,r-e,s-l,r-e,s+l)),t.addPoint(xl(r,s+n,r-o,s+n,r+o,s+n)),t.addPoint(xl(r+e,s,r+e,s+l,r+e,s-l)),t.addPoint(xl(r,s-n,r+o,s-n,r-o,s-n)),i>0&&Dv(t,e,n,i)}function Ks(t,e){return new Zs(Lt.generateUUID(),new j(t,e))}function xl(t,e,n,i,r,s){let a=Ks(t,e);return a.controls[0].position.set(n,i),a.controls[1].position.set(r,s),a}function Pv(t,e,n,i){Rv(t,e,n,i).forEach(r=>t.addPoint(r))}function Dv(t,e,n,i){let r=Rv(t,e,n,i),s=new Ht;r.forEach(a=>s.addPoint(a)),s.isClosed=!0,t.shapeHoles.push(s)}function Rv(t,e,n,i){let r=i*e/100,s=r*(Math.abs(n)/Math.abs(e)),a=new j(r/e,s/n),o=t.points.map(l=>{let c=l.clone();return c.uuid=Lt.generateUUID(),c}).reverse();return o.forEach(l=>{l.position.multiply(a);let c=l.controls[0].position.clone().multiply(a),h=l.controls[1].position.clone().multiply(a);l.controls[0].position.copy(h),l.controls[1].position.copy(c)}),o}var AD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,revolutions:2,segments:40,pathRadius:10,pathType:0,pathSegments:30,cornerRadius:30,cornerSegments:4},t.parameters),a=Math.abs(s.width),o=Math.abs((i=s.height)!=null?i:a),l=Math.abs((r=s.depth)!=null?r:a),c=Math.abs(Math.min(a,l))/2;return{parameters:Object.assign(s,{width:a,height:o,depth:l,radius:c,segments:Math.round(s.segments),pathSegments:Math.round(s.pathSegments),cornerSegments:Math.round(s.cornerSegments)})}}static build(t){let{width:e,height:n,depth:i,radius:r,revolutions:s,segments:a,pathRadius:o,pathType:l,pathSegments:c,cornerRadius:h,cornerSegments:d}=t.parameters,u=new Ov(!1,e,n,i,r,s,a,o,l,c,h,d);return Object.assign(u,{userData:ze(ve({},t),{type:"HelixGeometry"})})}},Ov=class extends Ge{constructor(t=!0,e=1,n=1,i=1,r=1,s=1,a=1,o=1,l=1,c=1,h=1,d=1){super();let u=t&&s===1;u&&(d=0),h>100&&(h=100);let p=()=>new T,m=new T,f=p(),g=p(),v=p(),y,w,b,S,_,E,x,A,M=p(),C=p(),F=p(),$=p(),I=p(),Z=p(),W=p(),q=p(),k=n-2*o+.001,N=k/s,O=Math.ceil(a*s),V=O+1,z=k/O,H=-k/2,J=c+1,ne=2*Math.PI/c,B=Math.PI/2/d,oe=.01,ie=Math.min((1-h/100)*o,o-oe),le=o-ie,K=0,pe=2,G=d*pe+pe,X=J*G/pe,ee=X+J*V,se=J*(V+G),[he,fe,ge]=[3,3,2].map(Ee=>Array(se*Ee).fill(0)),_e=[],Ne=r-o;function Be(Ee,xe){let U=Math.PI/2;E=xe*z,A=2*Math.PI*(E%N)/N+U,E+=H,x=Math.sin(A)*Ne,_=Math.cos(A)*Ne,t?Ee.set(_,x,E):Ee.set(_,E,x)}Be(m,-1e-10),Be(f,0),M.copy(m),Be(m,1);let D=m.distanceTo(f),L=le+ie,ce=D*O+2*L,me=ie,Te=ce-L;for(let Ee=0;Ee<=O;Ee++){Be(g,Ee),q.subVectors(g,M).normalize(),M.copy(g),Z.copy(g).setComponent(+t+1,0).normalize(),W.crossVectors(q,Z).normalize();let xe=Ee===0,U=Ee===O,we=xe?3*Math.PI/2:B,be=xe?me:Te,qe=xe?J:ee,Le=xe?0:se-J,Fe=q.clone().multiplyScalar(xe?-le:le).add(g),Se=q.clone().multiplyScalar(xe?-1:1).normalize();for(let Ve=0;Ve<J;Ve++){let dt=Ve*ne;if(C.addVectors(m.copy(Z).multiplyScalar(o*Math.cos(dt)),f.copy(W).multiplyScalar(o*Math.sin(dt))),F.copy(C).normalize(),xe||U){u||(K=Le+Ve,[0,1,2].forEach(Xe=>{he[K*3+Xe]=Fe.getComponent(Xe),fe[K*3+Xe]=Se.getComponent(Xe)}),ge[K*2]=+U,ge[K*2+1]=Ve/c),f.copy(F).multiplyScalar(ie),v.addVectors(g,f);for(let Xe=0;Xe<d;Xe++){let cn=Xe*B+we;$.addVectors(m.copy(q).multiplyScalar(le*Math.sin(cn)),f.copy(F).multiplyScalar(le*Math.cos(cn))),I.copy($).normalize(),f.addVectors(v,$),$.normalize(),K=qe+Xe*J+Ve,[0,1,2].forEach(Xt=>{he[K*3+Xt]=f.getComponent(Xt),fe[K*3+Xt]=I.getComponent(Xt)});let vn=+xe+Math.sin(cn);ge[K*2]=(be+le*vn)/ce,ge[K*2+1]=Ve/c}}f.addVectors(g,C),K=X+Ee*J+Ve,[0,1,2].forEach(Xe=>{he[K*3+Xe]=f.getComponent(Xe),fe[K*3+Xe]=F.getComponent(Xe)}),ge[K*2]=(L+Ee*D)/ce,ge[K*2+1]=Ve/c}}let Ce=V+2*d+pe,Ue=1,[R,ye]=u?[Ue,Ue+V-1]:[0,Ce-1];for(let Ee=R;Ee<=ye-1;Ee++){let xe=u&&Ee===ye-1;for(let U=0;U<J-1;U++)y=Ee*J+U,w=y+1,b=(xe?U:y)+J,S=(xe?U+1:w)+J,Ee===0?_e.push(w,S,b):Ee===Ce-2?_e.push(y,w,b):_e.push(y,w,b,w,S,b)}this.setIndex(_e),this.setAttribute("position",new Pe(he,3)),this.setAttribute("normal",new Pe(fe,3)),this.setAttribute("uv",new Pe(ge,2))}},CD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,detail:0,corner:0,cornerSides:4},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,detail:r,corner:s,cornerSides:a}=t.parameters,o=r===0&&s!==0?new Iv(e*.5,s,a):new Ku(e*.5,r);return o.scale(1,n/e,i/e),Object.assign(o,{userData:ze(ve({},t),{type:"IcosahedronGeometry"})})}},Iv=class extends Cd{constructor(t=1,e=.2,n=4){let i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a="IcosahedronGeometry";super(r,s,a,t,e,n),this.type=a}static fromJSON(t){return new Iv(t.radius,t.corner,t.cornerSides)}},LD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s,a;((i=(n=t.parameters)==null?void 0:n.points)!=null?i:[]).forEach(l=>{Array.isArray(l)&&(l.x=l[0],l.y=l[1])});let o=Object.assign({},(r=e==null?void 0:e.parameters)!=null?r:{width:100,segments:64,verticalSegments:64,points:[{x:0,y:-50,id:0},{x:50,y:-50,id:1},{x:50,y:50,id:2},{x:0,y:50,id:3}]},t.parameters);return{parameters:Object.assign(o,{width:Math.abs(o.width),height:Math.abs((s=o.height)!=null?s:o.width),depth:Math.abs((a=o.depth)!=null?a:o.width)})}}static build(t){let{points:e,segments:n,verticalSegments:i}=t.parameters,r=new mi;r.moveTo(e[0].x,e[0].y),r.bezierCurveTo(e[1].x,e[1].y,e[2].x,e[2].y,e[3].x,e[3].y);let s=new $u(r.extractPoints(i).shape,n);return s.rotateZ(Math.PI),Object.assign(s,{userData:ze(ve({},t),{type:"LatheGeometry"})})}},PD=["a","b","c"];function DD(t,e){switch(e){case"c":return t.c;case"b":return t.b;case"a":default:return t.a}}function Lh(t,e,n){let i=Math.min(t,e),r=Math.max(t,e),s=i+"_"+r;return n.get(s)}function Ph(t,e,n,i,r,s){let a=Math.min(t,e),o=Math.max(t,e),l=a+"_"+o,c;if(i.has(l))c=i.get(l);else{let h=n[a],d=n[o];c={a:h,b:d,newEdge:null,faces:[]},i.set(l,c)}c.faces.push(r),s[t].edges.push(c),s[e].edges.push(c)}function RD(t,e,n,i){let r,s,a;for(r=0,s=t.length;r<s;r++)n[r]={edges:[]};for(r=0,s=e.length;r<s;r++)a=e[r],Ph(a.a,a.b,t,i,a,n),Ph(a.b,a.c,t,i,a,n),Ph(a.c,a.a,t,i,a,n)}function bl(t,e,n,i,r){t.push(new Yh(e,n,i,void 0,void 0,r))}function Is(t,e){return Math.abs(e-t)/2+Math.min(t,e)}function _l(t,e,n,i){t.push([e.clone(),n.clone(),i.clone()])}var OD=class{constructor(t=1){this.subdivisions=t}modify(t){t instanceof Ge?t=new fo().fromBufferGeometry(t):t=t.clone(),t.mergeVertices();let e=this.subdivisions;for(;e-- >0;)this._smooth(t);return t.computeFaceNormals(),t.computeVertexNormals(),t}_smooth(t){let e=new T,n,i,r,s,a,o=t.vertices,l=t.faces,c=t.faceVertexUvs[0],h=c!==void 0&&c.length>0,d=[],u=new Map;RD(o,l,d,u);let p=[],m,f,g,v,y,w,b;for(let oe of Array.from(u.keys())){for(f=u.get(oe),g=new T,y=3/8,w=1/8,b=f.faces.length,b!=2&&(y=.5,w=0,b!=1),g.addVectors(f.a,f.b).multiplyScalar(y),e.set(0,0,0),s=0;s<b;s++){for(v=f.faces[s],a=0;a<3&&(m=o[DD(v,PD[a])],!(m!==f.a&&m!==f.b));a++);m&&e.add(m)}e.multiplyScalar(w),g.add(e),f.newEdge=p.length,p.push(g)}let S,_,E,x,A,M,C,F=[];for(i=0,r=o.length;i<r;i++){for(M=o[i],A=d[i].edges,n=A.length,n==3?S=3/16:n>3&&(S=3/(8*n)),_=1-n*Number(S),E=S,n<=2&&(n==2?(_=3/4,E=1/8):n==1||n==0),C=M.clone().multiplyScalar(_),e.set(0,0,0),s=0;s<n;s++)x=A[s],m=x.a!==M?x.a:x.b,e.add(m);e.multiplyScalar(Number(E)),C.add(e),F.push(C)}let $=F.concat(p),I=F.length,Z,W,q,k=[],N=[],O,V,z,H,J=new j,ne=new j,B=new j;for(i=0,r=l.length;i<r;i++)v=l[i],Z=Number(Lh(v.a,v.b,u).newEdge)+I,W=Number(Lh(v.b,v.c,u).newEdge)+I,q=Number(Lh(v.c,v.a,u).newEdge)+I,bl(k,Z,W,q,v.materialIndex),bl(k,v.a,Z,q,v.materialIndex),bl(k,v.b,W,Z,v.materialIndex),bl(k,v.c,q,W,v.materialIndex),h&&(O=c[i],V=O[0],z=O[1],H=O[2],J.set(Is(V.x,z.x),Is(V.y,z.y)),ne.set(Is(z.x,H.x),Is(z.y,H.y)),B.set(Is(V.x,H.x),Is(V.y,H.y)),_l(N,J,ne,B),_l(N,V,J,B),_l(N,z,ne,J),_l(N,H,B,ne));t.vertices=$,t.faces=k,h&&(t.faceVertexUvs[0]=N)}},tn=new T,ID=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i;let r=(i=(n=t.geometry)!=null?n:e==null?void 0:e.geometry)!=null?i:new Ge().copy(new ir(100,100,100)),s;e===void 0?(r.computeBoundingBox(),r.boundingBox.getSize(tn),s={width:tn.x,height:tn.y,depth:tn.z,subdivisions:0}):s=e.parameters;let a=ve(ve({},s),t.parameters);return{parameters:{width:Math.abs(a.width),height:Math.abs(a.height),depth:Math.abs(a.depth),subdivisions:Math.abs(a.subdivisions)},geometry:r}}static build(t){var e;let{width:n,height:i,depth:r,subdivisions:s}=t.parameters,a=(e=t.geometry)!=null?e:new Ge().copy(new ir(100,100,100)),o=a.userData.parameters;o===void 0?(a.computeBoundingBox(),a.boundingBox.getSize(tn)):tn.set(o.width,o.height,o.depth),(n!==tn.x||i!==tn.y||r!==tn.z)&&a.scale(tn.x===0?1:n/tn.x,tn.y===0?1:i/tn.y,tn.z===0?1:r/tn.z);let l=a.originalGeometry;return s>0?(l===void 0||(o==null?void 0:o.subdivisions)!==s)&&(l===void 0&&(l=a),a=new OD(s).modify(l).toBufferGeometry()):(l!==void 0&&(a=l),l=void 0,a.getAttribute("normal")===void 0&&a.computeVertexNormals()),l!==void 0&&Object.assign(a,{originalGeometry:l}),delete t.geometry,Object.assign(a,{userData:ze(ve({},t),{type:"NonParametricGeometry"})})}static loadFromUrl(t,e,n){new id(n).load(t,i=>{let r=this.normalizeInputs({geometry:i});i.boundingBox.getSize(tn);let s=100/tn.x;Object.assign(r.parameters,{width:100,height:tn.y*s,depth:tn.z*s}),e(this.build(r))})}},ND=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,spikes:5,cornerRadius:0,extrudeBevelSize:0,extrudeBevelSegments:3},t.parameters);return{shape:t.shape&&t.shape instanceof Ht?t.shape:new Ht,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n,spikes:i,cornerRadius:r,depth:s,extrudeBevelSize:a,extrudeBevelSegments:o}=t.parameters,l=t.shape,c=e*.5,h=n*.5,d=0,u=0,p=2*Math.PI/i;for(let f=0;f<i;f++){let g=p*f,v=d+Math.sin(g)*c,y=u+Math.cos(g)*h;l.addPoint(l.createPoint(v,y))}l.isClosed=!0;for(let f=0,g=l.points.length;f<g;f++)l.points[f].roundness=r;l.roundness=r,l.update();let m=sr.create({shape:l,parameters:{roundness:r,depth:s,extrudeBevelSize:a,extrudeBevelSegments:o}});return Object.assign(m,{userData:ze(ve({},t),{type:"PolygonGeometry"})})}},zD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:4,heightSegments:1,cornerRadius:0,cornerSegments:8,openEnded:!1},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,radialSegments:r,heightSegments:s,openEnded:a,cornerRadius:o,cornerSegments:l}=t.parameters,c=new FD(e*.5,n,r,s,a,o,l);return c.scale(1,1,i/e),Object.assign(c,{userData:ze(ve({},t),{type:"PyramidGeometry"})})}};function ka(t,e,n){n.x=t.x*e.x,n.y=t.y,n.z=t.x*e.y}function Dh(t,e,n,i,r,s){let a=e.clone().sub(t),o=n.clone().sub(t),l=a.angleTo(o);if(a.normalize(),o.normalize(),i===r){let c=a.add(o).normalize();s.copy(t).addScaledVector(c,i/Math.sin(l/2))}else{let c=a.angleTo(o);s.copy(t),s.addScaledVector(a,r/Math.sin(c)),s.addScaledVector(o,i/Math.sin(c))}}function BD(t,e,n){let i=t.clone().sub(e),r=n.clone().sub(e);return i.projectOnVector(r),i.add(e)}var FD=class extends Ge{constructor(t=.5,e=1,n=4,i=1,r=!1,s=0,a=4){super(),n=Math.floor(Math.max(3,n)),i=Math.floor(i),a=Math.floor(a);let o=[],l=[],c=[],h=[],d=0,u=e/2,p=Math.PI/n,m=t*Math.cos(Math.PI/n),f=2*Math.PI/n,g=(n-2)*Math.PI/n,v=Math.PI-g,y=new T(0,-u,0),w=new T(0,u,0),b=new j(t,-u),S=new j(m,-u),_=new j(0,w.y).sub(S),E=new j(0,w.y).sub(b),x=new j(_.y,-_.x).normalize(),A=new j(E.y,-E.x).normalize(),M=t*Math.cos(Math.PI/n)*Math.tan((Math.PI-_.angle())/2)-1e-8;s=Math.min(s,M);let C;{let q=new T(x.x,x.y,0),k=new T(Math.cos(f)*q.x,q.y,Math.sin(f)*q.x);C=q.angleTo(k)}let F=s/Math.tan((Math.PI-_.angle())/2),$=s/Math.tan((Math.PI-C)/2),I=new T;if(!r){l.push(y.x,y.y,y.z),c.push(0,-1,0),h.push(0,0);let q=d++,k=[],N=b.clone(),O=F/Math.cos(Math.PI/n);N.x-=O;for(let V=0;V<n;V++){let z=V/n*Math.PI*2+p,H=new j(Math.sin(z),Math.cos(z));ka(N,H,I),l.push(I.x,I.y,I.z),c.push(0,-1,0),h.push(0,0),k.push(d++)}for(let V=0;V<k.length;V++)o.push(k[V],q,k[(V+1)%k.length])}{let q=new T,k=new T,N=new T,O=new T,V=new T,z=new T;for(let H=0;H<n;H++){let J=H/n*Math.PI*2+p,ne=(H+.5)/n*Math.PI*2+p,B=(H+1)/n*Math.PI*2+p,oe=new j(Math.sin(J),Math.cos(J)),ie=new j(Math.sin(ne),Math.cos(ne)),le=new j(Math.sin(B),Math.cos(B));ka(b,oe,k),ka(b,le,N),ka(x,ie,q),Dh(w,k,N,$,$,O),l.push(O.x,O.y,O.z),Dh(k,w,N,$,F,V),l.push(V.x,V.y,V.z),Dh(N,k,w,F,$,z),l.push(z.x,z.y,z.z),c.push(q.x,q.y,q.z),c.push(q.x,q.y,q.z),c.push(q.x,q.y,q.z),h.push(0,0),h.push(0,0),h.push(0,0);let K=d++,pe=d++,G=d++;if(o.push(K,pe,G),s>0){{let se=k.clone().add(N).multiplyScalar(.5),he=w.clone().sub(se).normalize(),fe=y.clone().sub(se).normalize().add(he).normalize().multiplyScalar(-1),ge=z.clone().sub(V);Z(se,ge,fe,_.angle())}let X,ee;{let se=new T;ka(A,le,se);let he=z.clone().add(O).multiplyScalar(.5);he=BD(he,N,w);let fe=z.clone().sub(O);[X,ee]=Z(he,fe,se,C,O.y)}{let se=X,he=se.clone().setY(0).normalize(),fe=new T(0,-1,0),ge=he.clone().cross(fe);W(se,he,fe,ge)}{let se=_.angle(),he=Math.PI-se,fe=w.clone();fe.y-=s/Math.sin(se-Math.PI/2);let ge=new T,_e=[];for(let Be=0;Be<a;Be++){let D=[],L=Math.PI/2-he*Be/a,ce=Math.cos(L),me=Math.sin(L),Te=ne;for(let Ce=0;Ce<=Be;Ce++){let Ue=Math.cos(Te),R=Math.sin(Te);q.x=ce*R,q.y=me,q.z=ce*Ue,ge.copy(fe).addScaledVector(q,s),l.push(ge.x,ge.y,ge.z),c.push(q.x,q.y,q.z),h.push(0,0),D.push(d++),Te+=Math.PI*2/Be/n}_e.push(D)}ee.reverse(),_e.push(ee);let Ne=_e.length-1;for(let Be=0;Be<Ne;Be++){let D=_e[Be],L=_e[Be+1],ce=D.length-1;o.push(L[1],D[0],L[0]);for(let me=1;me<=ce;me++)o.push(D[me],D[me-1],L[me]),o.push(L[me+1],D[me],L[me])}}}}}this.setIndex(o),this.setAttribute("position",new Pe(l,3)),this.setAttribute("normal",new Pe(c,3)),this.setAttribute("uv",new Pe(h,2));function Z(q,k,N,O,V){let z=-O/2,H=(Math.PI-O)/2,J=k.clone().normalize().cross(N);q.addScaledVector(N,-s/Math.sin(H));let ne=new T,B=new T,oe=1,ie=d,le=[];for(let K=0;K<=a;K++){let pe=z+K/a*O;B.set(0,0,0),B.addScaledVector(J,Math.sin(pe)),B.addScaledVector(N,Math.cos(pe));for(let G=0;G<=oe;G++){let X=G/oe-.5;if(ne.copy(q),ne.addScaledVector(k,X),ne.addScaledVector(B,s),V!=null){let ee=Math.max(0,ne.y-V);ne.addScaledVector(k,-ee/k.y)}l.push(ne.x,ne.y,ne.z),c.push(B.x,B.y,B.z),h.push(0,0),G===0&&le.push(d),d++}}for(let K=0;K<a;K++)for(let pe=0;pe<oe;pe++){let G=ie+pe+(oe+1)*K,X=G+(oe+1),ee=X+1,se=G+1;o.push(G,X,se),o.push(X,ee,se)}return[q.clone().addScaledVector(k,.5),le]}function W(q,k,N,O){let V=Math.PI/2,z=E.angle()-V,H=[],J=new T,ne=new T;for(let oe=0;oe<=a;oe++){let ie=[],le=oe/a;for(let K=0;K<=oe;K++){let pe=((oe?K/oe:0)-.5)*v,G=Math.cos(pe),X=Math.sin(pe),ee=Math.atan(Math.tan(z)*G),se=(V+ee)*le,he=Math.cos(se),fe=Math.sin(se);J.set(0,0,0),J.addScaledVector(k,fe*G),J.addScaledVector(N,he),J.addScaledVector(O,fe*X),ne.copy(q).addScaledVector(J,s),l.push(ne.x,ne.y,ne.z),c.push(J.x,J.y,J.z),h.push(0,0),ie.push(d++)}H.push(ie)}let B=H.length-1;for(let oe=0;oe<B;oe++){let ie=H[oe],le=H[oe+1],K=ie.length-1;o.push(ie[0],le[1],le[0]);for(let pe=1;pe<=K;pe++)o.push(ie[pe-1],ie[pe],le[pe]),o.push(ie[pe],le[pe+1],le[pe])}}}},Nv=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s;let a=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,cornerRadius:[0,0,0,0],cornerType:1,extrudeBevelSize:0,extrudeBevelSegments:1},t.parameters),o=Object.assign((i=e==null?void 0:e.ui)!=null?i:{enabledIndieCorners:!1},t.ui);return{shape:t.shape&&t.shape instanceof Ht?t.shape:new Ht,parameters:Object.assign(a,{width:Math.abs(a.width),height:Math.abs((r=a.height)!=null?r:a.width),depth:Math.abs((s=a.depth)!=null?s:0)}),ui:o}}static build(t){let e=t.shape,{width:n,height:i,cornerRadius:r,cornerType:s,depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}=t.parameters,c={x:n*.5,y:i*.5},h={x:-c.x,y:-c.y},d={x:c.x,y:c.y};function u(b,S,_){return S>n&&_>i?Math.min(b*n/S,b*i/_):S>n?b*n/S:_>i?b*i/_:b}let p=[];p[0]=r[0]===0?0:u(r[0],r[0]+r[3],r[0]+r[1]),p[1]=r[1]===0?0:u(r[1],r[1]+r[2],r[1]+r[0]),p[2]=r[2]===0?0:u(r[2],r[2]+r[1],r[2]+r[3]),p[3]=r[3]===0?0:u(r[3],r[3]+r[0],r[3]+r[2]);let m=h.x,f=d.x,g=d.y,v=h.y;e.addPoint(e.createPoint(m,g)),e.addPoint(e.createPoint(f,g)),e.addPoint(e.createPoint(f,v)),e.addPoint(e.createPoint(m,v)),e.isClosed=!0;let y=!0;for(let b=0,S=e.points.length;b<S;b++)e.points[b].roundness=p[b],b>0&&p[b]!==p[b-1]&&(y=!1);y&&(e.roundness=p[0]),e.useCubicForRoundedCorners=s!==1,e.update();let w=sr.create({shape:e,parameters:{depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}});return Object.assign(w,{userData:ze(ve({},t),{type:"RectangleGeometry"})})}},UD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,widthSegments:64,heightSegments:64,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e=100,height:n=e,depth:i=e,widthSegments:r=64,heightSegments:s=64,phiStart:a,phiLength:o,thetaStart:l,thetaLength:c}=t.parameters,h=new mc(.5*e,r,s,a,o,l,c);return h.scale(1,n/e,i/e),Object.assign(h,{userData:ze(ve({},t),{type:"SphereGeometry"})})}},kD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i;let r=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,widthSegments:8,heightSegments:8},t.parameters);return{parameters:Object.assign(r,{width:Math.abs(r.width),height:Math.abs((i=r.height)!=null?i:r.width),depth:0})}}static build(t){let{width:e=100,height:n=e,widthSegments:i=8,heightSegments:r=8}=t.parameters,s=new So(e,n,i,r);return s.scale(1,1,1),Object.assign(s,{userData:ze(ve({},t),{type:"PlaneGeometry"})})}},VD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,angle:90,cornerRadius:24,cornerSegments:8},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,angle:r,cornerRadius:s,cornerSegments:a}=t.parameters,o=new HD(e,n,i,r,s,a);return Object.assign(o,{userData:ze(ve({},t),{type:"BackdropGeometry"})})}},HD=class extends Ge{constructor(t=1,e=1,n=1,i=90,r=10,s=24){super(),this.type="BackdropGeometry";let a=[],o=[],l=[],c=.001;r==0&&(s=1),s=Math.max(1,Math.floor(s)),r=Math.min(r,100),i=Math.min(180-c,i),i*=Math.PI/180;let h=[],d=(oe=0,ie=0,le=0)=>new T(oe,ie,le),u=d(),p=d(),[m,f,g]=[e/2,t/2,n/2],v=-f,y=+f,[w,b,S]=[d(v,-m,+g),d(v,-m,-g),d(v,+m,-g)],[_,E]=[oe=>Math.sin(oe),oe=>Math.cos(oe)],x=(oe,ie=!1)=>Math.sin(oe-Math.PI/(1+ +ie)),A=(oe,ie=!1)=>Math.cos(oe-Math.PI/(1+ +ie));S.y=_(i)*e-m;let M=E(i)*e-g;i<=Math.PI/2?S.z=Math.min(M,w.z-c):b.z=Math.min(b.z-M-g,w.z-c),u.subVectors(w,b),p.subVectors(S,b);let C=Math.min(u.length(),p.length())*r/100,F=C*Math.tan(i/2),$=C/Math.cos(i/2),I=u.clone().normalize().add(p.normalize()).setLength($).add(b);u.set(0,x(i,!0),A(i,!0)),h.push([S,u.clone()]);let Z=(Math.PI-i)/s;for(let oe=0;oe<=s;oe++){let ie=Math.PI/2+i+oe*Z;u.set(0,_(ie)*F,E(ie)*F),u.add(I),p.set(0,x(ie),A(ie)),h.push([u.clone(),p.clone()])}h.push([w,d(0,1,0)]);let W=Math.sin(Z/2)*F*2,q=h.length-1,k=h[0][0].distanceTo(h[1][0]),N=h[q-1][0].distanceTo(h[q][0]),O=k+W*s+N;h[0].push(1);for(let oe=0;oe<=s;oe++)h[oe+1].push(1-(k+oe*W)/O);h[q].push(0);let[V,z,H]=h[0],J,ne,B;for(let oe=1;oe<h.length;oe++)[J,ne,B]=h[oe],a.push(v,V.y,V.z,v,J.y,J.z,y,V.y,V.z,y,V.y,V.z,v,J.y,J.z,y,J.y,J.z),o.push(0,z.y,z.z,0,ne.y,ne.z,0,z.y,z.z,0,z.y,z.z,0,ne.y,ne.z,0,ne.y,ne.z),l.push(0,H,0,B,1,H,1,H,0,B,1,B),[V,z,H]=[J,ne,B];this.setAttribute("position",new Pe(a,3)),this.setAttribute("normal",new Pe(o,3)),this.setAttribute("uv",new Pe(l,2))}},GD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,innerRadiusPercent:38.19,spikes:5,cornerRadius:0,angle:360,extrudeBevelSize:0,extrudeBevelSegments:1},t.parameters);return{shape:t.shape&&t.shape instanceof Ht?t.shape:new Ht,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n,innerRadiusPercent:i,spikes:r,cornerRadius:s,angle:a,depth:o,extrudeBevelSize:l,extrudeBevelSegments:c}=t.parameters,h=t.shape,d=e*.5,u=n*.5,p=0,m=0,f=a*Math.PI/360/r,g=Math.PI/2*3*-1,v=d*i/100,y=u*i/100;if(r===3&&i===50){f=2*Math.PI/r;for(let b=0;b<r;b++){let S=f*b,_=p+Math.sin(S)*d,E=m+Math.cos(S)*u;h.addPoint(h.createPoint(_,E))}}else for(let b=0;b<r;b++){let S=p+Math.cos(g)*d,_=m+Math.sin(g)*u;h.addPoint(h.createPoint(S,_)),g+=f,S=p+Math.cos(g)*v,_=m+Math.sin(g)*y,h.addPoint(h.createPoint(S,_)),g+=f}h.isClosed=!0;for(let b=0,S=h.points.length;b<S;b++)h.points[b].roundness=s;h.roundness=s,h.update();let w=sr.create({shape:h,parameters:{roundness:s,depth:o,extrudeBevelSize:l,extrudeBevelSegments:c}});return Object.assign(w,{userData:ze(ve({},t),{type:"StarGeometry"})})}},zv=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n}=t.parameters,i=new So(e,n);return Object.assign(i,{userData:ze(ve({},t),{type:"TextFrameGeometry"})})}},WD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:32,tubularSegments:64,arc:Math.PI*2,cornerRadius:30,cornerSegments:8},t.parameters),a=Math.abs(s.width),o=Math.abs((i=s.height)!=null?i:s.width),l=Math.abs((r=s.depth)!=null?r:s.width*.25);return{parameters:Object.assign(s,{width:a,height:o,depth:l})}}static build(t){let{width:e,height:n,depth:i,radialSegments:r,tubularSegments:s,arc:a,cornerRadius:o,cornerSegments:l}=t.parameters,c=jD(e,n,i,e*.5,a,s,0,0,r,o,l);return c.scale(1,n/e,1),Object.assign(c,{userData:ze(ve({},t),{type:"TorusGeometry"})})}};function jD(t,e,n,i,r,s,a,o,l,c,h){return[e,n]=[n,e],a=e/2,r/=2*Math.PI,r==1&&(c=0),new Ov(!0,t,e,n,i,r,s,a,o,l,c,h)}var qD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s;let a=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,tubularSegments:64,radialSegments:32,p:2,q:3},t.parameters);return{parameters:Object.assign(a,{width:Math.abs(a.width),height:Math.abs((i=a.height)!=null?i:a.width),depth:Math.abs((r=a.depth)!=null?r:a.width),tube:(s=a.tube)!=null?s:a.width*.125})}}static build(t){let{width:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:a}=t.parameters,o=e*.5;o!==n&&(o-=n);let l=new Qu(o,n,i,r,s,a);return Object.assign(l,{userData:ze(ve({},t),{type:"TorusKnotGeometry"})})}},XD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,spikes:5,cornerRadius:0,extrudeBevelSize:0,extrudeBevelSegments:1,isRect:!1},t.parameters);return{shape:t.shape&&t.shape instanceof Ht?t.shape:new Ht,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width*(s.isRect?1:Math.sqrt(3)/2)),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e=100,height:n,cornerRadius:i,depth:r,extrudeBevelSize:s,extrudeBevelSegments:a,isRect:o}=t.parameters,l=t.shape,c=e*.5,h=n*.5;o?(l.addPoint(l.createPoint(-c,h)),l.addPoint(l.createPoint(c,-h)),l.addPoint(l.createPoint(-c,-h))):(l.addPoint(l.createPoint(0,h)),l.addPoint(l.createPoint(c,-h)),l.addPoint(l.createPoint(-c,-h))),l.isClosed=!0;for(let u=0,p=l.points.length;u<p;u++)l.points[u].roundness=i;l.roundness=i,l.update();let d=sr.create({shape:l,parameters:{roundness:i,depth:r,extrudeBevelSize:s,extrudeBevelSegments:a}});return Object.assign(d,{userData:ze(ve({},t),{type:"TriangleGeometry"})})}},Bv={};m0(Bv,{addBarycentricAttribute:()=>YD,fixUvs:()=>KD,loadFromUrl:()=>ZD,resizeGeometry:()=>$D,roundShapePolygon:()=>JD});var Rm=function(t,e){let n=e.x-t.x,i=e.y-t.y,r=Math.sqrt(n*n+i*i),s=n/r,a=i/r,o=Math.atan2(a,s);return{x:n,y:i,len:r,nx:s,ny:a,ang:o}},JD=(t,e,n)=>{let i,r,s,a,o,l,c,h,d,u,p,m,f,g,v=e.length;for(a=e[v-2],t.curves=[],i=1;i<v-1;i++){o=e[i%v],l=e[(i+1)%v];let y=Rm(o,a),w=Rm(o,l);c=y.nx*w.ny-y.ny*w.nx,h=y.nx*w.nx-y.ny*-w.ny,p=Math.asin(c),d=1,u=!1,h<0?p<0?p=Math.PI+p:(p=Math.PI-p,d=-1,u=!0):p>0&&(d=-1,u=!0),m=p/2,g=Math.abs(Math.cos(m)*n/Math.sin(m)),g>Math.min(y.len/2,w.len/2)?(g=Math.min(y.len/2,w.len/2),f=Math.abs(g*Math.sin(m)/Math.cos(m))):f=n,r=o.x+w.nx*g,s=o.y+w.ny*g,r+=-w.ny*f*d,s+=w.nx*f*d,t.absarc(r,s,f,y.ang+Math.PI/2*d,w.ang-Math.PI/2*d,u),a=o,o=l}t.closePath()},$D=(t,{width:e,height:n,depth:i})=>{e=Math.abs(e),n=Math.abs(n),i=Math.abs(i);let r=t.userData.parameters,s,a,o;e===0?(e=r.width,s=1):s=e/r.width,n===0?(n=r.height,a=1):a=n/r.height,i===0?(i=r.depth,o=1):o=i/r.depth,t.scale(s,a,o),r.width=e,r.height=n,r.depth=i},YD=(t,e)=>{let n=[new T(1,0,0),new T(0,1,0),new T(0,0,1)],i=t.attributes.position,r=new Float32Array(i.count*3);for(let s=0,a=i.count;s<a;s++)n[s%3].toArray(r,s*3);t.setAttribute(e,new Pe(r,3))},ZD=t=>new Promise(e=>{new id().load(t,n=>e(n))}),KD=(t,e,n)=>{let i=t.getAttribute("uv");if(i)for(let r=0;r<i.count;r++){let s=i.getX(r),a=i.getY(r);i.setXY(r,(s+e/2)/e,1-(a-n/2)/n*-1)}},Fv=new Promise(t=>{}),Om=class{constructor(t){t=t!=null?t:{},this.name=t.name,this.type=t.type,this.node=t.node,this.size=t.size,this.needsUpdate=t.needsUpdate}get value(){return this.node.value}set value(t){this.node.value=t}},ut=class{constructor(t){this.hashProperties=void 0,this.isNode=!0,this.shortcuts={},this.uuid=Lt.generateUUID(),this.type=t,this.name="",this.userData={}}analyze(t,e){e=e!=null?e:{},t.analyzing=!0,this.build(t.addFlow(e.slot,e.cache,e.context),"v4"),t.clearVertexNodeCode(),t.clearFragmentNodeCode(),t.removeFlow(),t.analyzing=!1}analyzeAndFlow(t,e,n){return n=n!=null?n:{},this.analyze(t,n),this.flow(t,e,n)}flow(t,e,n){n=n!=null?n:{},t.addFlow(n.slot,n.cache,n.context);let i={result:this.build(t,e),code:t.clearNodeCode(),extra:t.context.extra};return t.removeFlow(),i}build(t,e,n){e=e!=null?e:this.getType(t,e);let i=t.getNodeData(n!=null?n:this);return t.analyzing&&this.appendDepsNode(t,i,e),t.nodes.indexOf(this)===-1&&t.nodes.push(this),this.updateFrame!==void 0&&t.updaters.indexOf(this)===-1&&t.updaters.push(this),this.generate(t,e,n)}updateFrame(t){}generateReadonly(t,e,n,i,r,s){return""}generate(t,e,n,i,r){return""}parse(t,e,n,i){}appendDepsNode(t,e,n){e.deps=(e.deps||0)+1;let i=t.getTypeLength(n);(i>(e.outputMax||0)||this.getType(t,n))&&(e.outputMax=i,e.output=n)}setName(t){this.name=t}getName(){return this.name}getType(t,e){return e==="sampler2D"||e==="samplerCube"?e:this.type}getJSONNode(t){if((t==null?void 0:t.materials)&&(t==null?void 0:t.materials[this.uuid])!==void 0)return t.materials[this.uuid]}getHash(){let t="{",e,n;for(e in this)n=this[e],n instanceof ut&&(t+='"'+e+'":'+n.getHash()+",");if(this.hashProperties)for(let i=0;i<this.hashProperties.length;i++)e=this.hashProperties[i],n=this[e],t+='"'+e+'":"'+String(n)+'",';return t+='"id":"'+this.uuid+'"}',t}copy(t){return this.name=t.name,t.type&&(this.type=t.type),t.frameId&&(this.frameId=t.frameId),t.hashProperties&&(this.hashProperties=t.hashProperties.map(e=>e)),this.userData=JSON.parse(JSON.stringify(t.userData)),this.shortcuts=JSON.parse(JSON.stringify(t.shortcuts)),this}clone(){return new this.constructor().copy(this)}createJSONNode(t){let e=t===void 0||typeof t=="string";if(typeof this.type!="string")throw new Error("Node does not allow serialization.");let n={};return n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),!e&&t&&(t.nodes[this.uuid]=n),n}toJSON(t){var e;return(e=this.getJSONNode(t))!=null?e:this.createJSONNode(t)}fromJSON(t,e){return this.uuid=t.uuid,this.type=t.type,t.name&&(this.name=t.name),t.userData&&(this.userData=t.userData),this}},QD=class{constructor(){this.nodes={},this.keywords={}}add(t){this.nodes[t.name]=t}addKeyword(t,e,n){n=n!==void 0?n:!0,this.keywords[t]={callback:e,cache:n}}remove(t){delete this.nodes[t.name]}removeKeyword(t){delete this.keywords[t]}get(t){return this.nodes[t]}getKeyword(t,e){return this.keywords[t].callback(e)}getKeywordData(t){return this.keywords[t]}contains(t){return this.nodes[t]!==void 0}containsKeyword(t){return this.keywords[t]!==void 0}},An=new QD,Ot=class extends ut{constructor(t,e){super(t),this.scope="",e=e!=null?e:{},this.shared=e.shared!==void 0?e.shared:!0,this.unique=e.unique!==void 0?e.unique:!1}build(t,e,n,i){if(e=e!=null?e:this.getType(t),this.getShared(t,e)){let r=this.getUnique(t,e);r&&this.uuid===void 0&&(this.uuid=Lt.generateUUID()),n=t.getUUID(n!=null?n:this.getUUID(),!r);let s=t.getNodeData(n),a=s.output||this.getType(t);if(t.analyzing)return(s.deps||0)>0||this.getLabel()?(this.appendDepsNode(t,s,e),this.generate(t,e,n)):super.build(t,e,n);if(r)return s.name=s.name||super.build(t,e,n),s.name;if(!this.getLabel()&&(!this.getShared(t,a)||t.context.ignoreCache||s.deps===1))return super.build(t,e,n);n=this.getUUID(!1);let o=this.getTemp(t,n);if(o)return t.format(o,a,e);{o=super.generate(t,e,n,s.output,i);let l=this.generate(t,a,n);return t.addNodeCode(o+" = "+l+";"),t.format(o,a,e)}}return super.build(t,e,n)}getShared(t,e){return e!=="sampler2D"&&e!=="samplerCube"&&this.shared}getUnique(t,e){return this.unique}setLabel(t){return this.label=t,this}getLabel(){return this.label}getUUID(t){let e=this.uuid;return typeof this.scope=="string"&&(e=this.scope+"-"+e),e}getTemp(t,e){e=e||this.uuid;let n=t.getVars()[e];return n?n.name:void 0}generate(t,e,n,i,r){return this.getShared(t,e)||console.error("TempNode is not shared"),n=n!=null?n:this.uuid,t.getTempVar(n,i!=null?i:this.getType(t),r,this.getLabel()).name}},Kn=class extends Ot{constructor(t,e){e=e!=null?e:{},e.shared=e.shared!==void 0?e.shared:!1,super(t,e),this.readonly=!1}setReadonly(t){return this.readonly=t,this.hashProperties=this.readonly?["value"]:void 0,this}getReadonly(){return this.readonly}createJSONNode(t){let e=super.createJSONNode(t);return this.readonly===!0&&(e.readonly=this.readonly),e}fromJSON(t,e){return super.fromJSON(t,e),t.readonly!==void 0&&this.setReadonly(t.readonly),this}generate(t,e,n,i,r,s){n=t.getUUID(n!=null?n:this.getUUID()),i=i!=null?i:this.getType(t);let a=t.getNodeData(n);return this.getReadonly()&&this.generateReadonly!==void 0?this.generateReadonly(t,e,n,i,r,s):t.isShader("vertex")?(a.vertex||(a.vertex=t.createVertexUniform(i,this,r,s,this.getLabel())),t.format(a.vertex.name,i,e)):(a.fragment||(a.fragment=t.createFragmentUniform(i,this,r,s,this.getLabel())),t.format(a.fragment.name,i,e))}copy(t){return super.copy(t),this.readonly=t.readonly,this}},si=class extends Kn{constructor(t=0,e){super("v2"),this.nodeType="Vector2",this.value=t instanceof j?t:new j(t,e)}get x(){return this.value.x}set x(t){this.value.x=t}get y(){return this.value.y}set y(t){this.value.y=t}generateReadonly(t,e,n,i,r,s){return t.format("vec2("+this.value.x+", "+this.value.y+")",i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this}},ai=class extends Kn{constructor(t=0,e,n){super("v3"),this.nodeType="Vector3",this.value=t instanceof T?t:new T(t,e,n)}get x(){return this.value.x}set x(t){this.value.x=t}get y(){return this.value.y}set y(t){this.value.y=t}get z(){return this.value.z}set z(t){this.value.z=t}generateReadonly(t,e,n,i,r,s){return t.format("vec3("+this.value.x+", "+this.value.y+", "+this.value.z+")",i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this}},Ar=class extends Ae{constructor(t,e,n,i){super(t,e,n),this.isColorA=!0,this.a=i}setRGBA(t,e,n,i){super.setRGB(t,e,n),this.a=i}copy(t){return super.copy(t),this.a="a"in t?t.a:1,this}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}get x(){return this.r}get y(){return this.g}get z(){return this.b}get w(){return this.a}set x(t){this.r=t}set y(t){this.g=t}set z(t){this.b=t}set w(t){this.a=t}},qa=class extends Kn{constructor(t){super("v4"),this.nodeType="Vector4",this.value=t instanceof Ar?t:new Ar(t.r,t.g,t.b,t.a)}generateReadonly(t,e,n,i,r,s){return t.format("vec4("+this.value.r+", "+this.value.g+", "+this.value.b+", "+this.value.a+")",i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this}},eR=/^\s*([a-z_0-9]+)\s([a-z_0-9]+)\s*\((.*?)\)/i,Im=/[a-z_0-9]+/gi,Ye=class extends Ot{constructor(t,e,n,i,r){super(r),this.src="",this.nodeType="Function",this.useKeywords=!0,this.includes=[],this.extensions={},this.keywords={},this.isMethod=r===void 0,this.isInterface=!1,this.parse(t,e,n,i)}getShared(t,e){return!this.isMethod}getType(t){return t.getTypeByFormat(this.type)}getInputByName(t){if(this.inputs){let e=this.inputs.length;for(;e--;)if(this.inputs[e].name===t)return this.inputs[e]}}getIncludeByName(t){if(this.includes){let e=this.includes.length;for(;e--;)if(this.includes[e].name===t)return this.includes[e]}}generate(t,e,n,i,r){let s,a=0,o=this.src;if(this.includes)for(let c=0;c<this.includes.length;c++)t.include(this.includes[c],this);for(let c in this.extensions)t.extensions[c]=!0;let l=[];for(;s=Im.exec(this.src);)l.push(s);for(let c=0;c<l.length;c++){let h=l[c],d=h[0],u=this.isMethod?!this.getInputByName(d):!0,p=d;if(this.keywords[d]||this.useKeywords&&u&&An.containsKeyword(d)){let m=this.keywords[d];if(!m){let f=An.getKeywordData(d);f.cache&&(m=t.keywords[d]),m=m||An.getKeyword(d,t),f.cache&&(t.keywords[d]=m)}p=m.build(t)}d!==p&&(o=o.substring(0,h.index+a)+p+o.substring(h.index+d.length+a),a+=p.length-d.length),this.getIncludeByName(p)===void 0&&An.contains(p)&&t.include(An.get(p))}return e==="source"?o:this.isMethod?(this.isInterface||t.include(this,void 0,o),this.name):t.format("( "+o+" )",this.getType(t),e)}parse(t,e,n,i){if(this.src=t||"",this.includes=e!=null?e:[],this.extensions=n!=null?n:{},this.keywords=i!=null?i:{},this.isMethod){let r=eR.exec(this.src);if(this.inputs=[],r&&r.length==4){this.type=r[1],this.name=r[2];let s=r[3].match(Im);if(s){let a=0;for(;a<s.length;){let o=s[a++],l;o==="in"||o==="out"||o==="inout"?l=s[a++]:(l=o,o="");let c=s[a++];this.inputs.push({name:c,type:l,qualifier:o})}}this.isInterface=this.src.indexOf("{")===-1}else this.type="",this.name=""}}copy(t){return super.copy(t),this.isMethod=t.isMethod,this.useKeywords=t.useKeywords,t.type!==void 0&&(this.type=t.type),this.parse(t.src,t.includes,t.extensions,t.keywords),this}toJSON(t){var e;let n=this.getJSONNode(t);if(!n){n=this.createJSONNode(t),n.src=this.src,n.isMethod=this.isMethod,n.useKeywords=this.useKeywords,this.isMethod||(n.type=this.type),n.extensions=JSON.parse(JSON.stringify(this.extensions));let i={};for(let r in this.keywords)i[r]=this.keywords[r].toJSON(t).uuid;if(n.keywords=i,(e=this.includes)!=null&&e.length){let r=[];for(let s=0;s<this.includes.length;s++)r.push(this.includes[s].toJSON(t).uuid);n.includes=r}n.isMethod=this.isMethod,n.inputs=this.inputs}return n.nodeType=this.nodeType,n}fromJSON(t,e){if(super.fromJSON(t,e),t.inputs!==void 0&&(this.inputs=t.inputs),t.isMethod!==void 0&&(this.isMethod=t.isMethod),t.src&&(this.src=t.src),t.isMethod&&(this.isMethod=t.isMethod),t.useKeywords&&(this.useKeywords=t.useKeywords),t.type&&(this.type=t.type),t.extensions&&(this.extensions=t.extensions),t.keywords&&e){this.keywords={};for(let n in t.keywords)this.keywords[n]=e.getNode(t.keywords[n])}return t.includes&&e&&(this.includes=t.includes.map(n=>e.getNode(n))),this}},tR=/^([a-z_0-9]+)\s([a-z_0-9]+)\s?\=?\s?(.*?)(\;|$)/i,Uv=class extends Ot{constructor(t="",e){super(),this.src="",this.useDefine=!1,this.nodeType="Const",this.parse(t||Uv.PI,void 0,void 0,void 0,e)}getType(t){return t.getTypeByFormat(this.type)}parse(t,e,n,i,r){this.src=t||"";let s,a,o="",l=tR.exec(t);this.useDefine=r!=null?r:this.src.charAt(0)==="#",l&&l.length>1?(a=l[1],s=l[2],o=l[3]):(s=this.src,a="f"),this.name=s,this.type=a,this.value=o}build(t,e){if(e==="source"){if(this.value)return this.useDefine?"#define "+this.name+" "+this.value:"const "+this.type+" "+this.name+" = "+this.value+";";if(this.useDefine)return this.src}return t.include(this),t.format(this.name,this.getType(t),e)}generate(t,e,n,i,r){return t.format(this.name,this.getType(t),e)}copy(t){return super.copy(t),this.parse(t.src,void 0,void 0,void 0,t.useDefine),this}},Tt=Uv;Tt.PI="PI",Tt.PI2="PI2",Tt.RECIPROCAL_PI="RECIPROCAL_PI",Tt.RECIPROCAL_PI2="RECIPROCAL_PI2",Tt.LOG2="LOG2",Tt.EPSILON="EPSILON";var nR=new RegExp(`^structs*([a-z_0-9]+)s*{s*((.|
)*?)}`,"gim"),iR=new RegExp("s*(w*?)s*(w*?)(=|;)","gim"),kv=class extends Ot{constructor(t=""){super(),this.inputs=[],this.src="",this.nodeType="Struct",this.parse(t)}getType(t){return t.getTypeByFormat(this.name)}getInputByName(t){let e=this.inputs.length;for(;e--;)if(this.inputs[e].name===t)return this.inputs[e]}generate(t,e,n,i,r){return e==="source"?this.src+";":t.format("( "+this.src+" )",this.getType(t),e)}parse(t=""){this.src=t,this.inputs=[];let e=nR.exec(t);if(e){let n=e[2],i;for(;i=iR.exec(n);)this.inputs.push({type:i[1],name:i[2]});this.name=e[1]}else this.name="";this.type=this.name}},Dd=class extends Ot{constructor(t){super("v2",{shared:!1}),this.nodeType="UV",this.index=t!=null?t:0}generate(t,e){t.requires.uv[this.index]=!0;let n=this.index>0?this.index+1:"",i=t.isShader("vertex")?"uv"+n:"vUv"+n;return t.format(i,this.getType(t),e)}copy(t){return super.copy(t),this.index=t.index,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.index=this.index),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.index&&(this.index=t.index),this}};An.addKeyword("uv",function(){return new Dd});An.addKeyword("uv2",function(){return new Dd(1)});var ks=class extends Ot{constructor(t=new ut,e){super("v4"),this.nodeType="ColorSpace",this.factor=new ut,this.input=t,this.method=e!=null?e:ks.LINEAR_TO_LINEAR,this.hashProperties=["method"]}static getEncodingComponents(t){switch(t){case gi:return["Linear"];case Dt:return["sRGB"];default:return[]}}generate(t,e){var n;let i=this.input.build(t,"v4"),r=this.getType(t),s=ks.Nodes[this.method],a=t.include(s);if(a===ks.LINEAR_TO_LINEAR)return t.format(i,r,e);if(((n=s.inputs)==null?void 0:n.length)===2){let o=this.factor.build(t,"f");return t.format(a+"( "+i+", "+o+" )",r,e)}else return t.format(a+"( "+i+" )",r,e)}fromEncoding(t){let e=ks.getEncodingComponents(t);this.method="LinearTo"+e[0],this.factor=e[1]}fromDecoding(t){let e=ks.getEncodingComponents(t);this.method=e[0]+"ToLinear",this.factor=e[1]}copy(t){return super.copy(t),this.input.copy(t.input),this.method=t.method,this.factor.copy(t.factor),this}},Oi=ks;Oi.Nodes={LinearToLinear:new Ye(["vec4 LinearToLinear( in vec4 value ) {","	return value;","}"].join(`
`)),sRGBToLinear:new Ye(["vec4 sRGBToLinear( in vec4 value ) {","	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );","}"].join(`
`)),LinearTosRGB:new Ye(["vec4 LinearTosRGB( in vec4 value ) {","	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );","}"].join(`
`))},Oi.LINEAR_TO_LINEAR="LinearToLinear",Oi.SRGB_TO_LINEAR="sRGBToLinear",Oi.LINEAR_TO_SRGB="LinearTosRGB";var kt=class extends Ye{constructor(t="",e,n,i,r){super(t,r,i,n,e),this.nodeType="Expression"}},Vs=class extends Bt{toJSON(t){let e=super.toJSON(t),n=t===void 0||typeof t=="string";if(this.image!==void 0&&!n){let i=this.image;if(Array.isArray(i)){t.images[i.uuid].url=[];for(let r=0;r<i.length;r++)t.images[i.uuid].url[r]=Nm(i[r])}else t.images[i.uuid].url=Nm(i)}return e}};function Nm(t){return typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap?rR(t):(console.warn("THREE.Texture: Unable to serialize Texture."),"")}var Ns;function rR(t){if(/^data:/i.test(t.src))return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Ns===void 0&&(Ns=document.createElement("canvas")),Ns.width=t.width,Ns.height=t.height;let i=Ns.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Ns}let n=t.src.startsWith("blob:")?t.fileName:t.src;return/\.jpe?g$/i.test(n)?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}var Ki=class extends Kn{constructor(t=new Vs,e,n,i){super("v4",{shared:!0}),this.nodeType="Texture",this.value=t,this.uv=e!=null?e:new Dd,this.bias=n,this.project=i!==void 0?i:!1}getTexture(t,e){return super.generate(t,e,this.value.uuid,"t")}generate(t,e){var n;if(e==="sampler2D")return this.getTexture(t,e);let i=this.getTexture(t,e),r=this.uv.build(t,this.project?"v4":"v2"),s=this.bias?this.bias.build(t,"f"):void 0;s===void 0&&t.context.bias&&(s=t.context.bias.setTexture(this).build(t,"f"));let a,o;this.project?a="texture2DProj":a=s?"tex2DBias":"tex2D",s?o=a+"( "+i+", "+r+", "+s+" )":o=a+"( "+i+", "+r+" )";let l={include:t.isShader("vertex"),ignoreCache:!0},c=this.getType(t);return t.addContext(l),this.colorSpace=(n=this.colorSpace)!=null?n:new Oi(new kt("",c)),this.colorSpace.fromDecoding(t.getTextureEncodingFromMap(this.value)),this.colorSpace.input.parse(o),o=this.colorSpace.build(t,c),t.removeContext(),t.format(o,c,e)}copy(t){return super.copy(t),t.value.isRenderTargetTexture?this.value=t.value:this.value.copy(t.value),this.uv.copy(t.uv),t.bias?this.bias?this.bias.copy(t.bias):this.bias=t.bias.clone():this.bias=void 0,t.colorSpace?this.colorSpace?this.colorSpace.copy(t.colorSpace):this.colorSpace=t.colorSpace.clone():this.colorSpace=void 0,this.project=t.project,t.value.isRenderTargetTexture||(this.value.updateMatrix(),this.value.needsUpdate=!0),this}},ke=class extends Kn{constructor(t){super("f"),this.nodeType="Float",this.value=t!=null?t:0}generateReadonly(t,e,n,i,r,s){return t.format(this.value+(this.value%1?"":".0"),i,e)}copy(t){return super.copy(t),this.value=t.value,this}},zm=class extends Ot{constructor(t,e){super(),this.inputs=[],this.nodeType="FunctionCall",this.value=t,this.inputs=e!=null?e:[]}getFunction(){return this.value}getType(t){return this.value.getType(t)}generate(t,e,n,i,r){i=this.getType(t);let s=this.value,a=s.build(t,e)+"( ",o=[];if(s.inputs){for(let l=0;l<s.inputs.length;l++){let c=s.inputs[l],h=this.inputs[l]||this.inputs[c.name];o.push(h.build(t,t.getTypeByFormat(c.type)))}a+=o.join(", ")+" )"}return t.format(a,i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this.inputs=t.inputs.map(e=>e.clone()),this}toJSON(t){var e;let n=this.getJSONNode(t);if(!n){let i=this.value;if(n=this.createJSONNode(t),n.value=this.value.toJSON(t).uuid,(e=i.inputs)!=null&&e.length){n.inputs={};for(let r=0;r<i.inputs.length;r++){let s=i.inputs[r],a=this.inputs[r];n.inputs[s.name]=a.toJSON(t).uuid}}}return n}},Vv=class extends Ot{constructor(t=new ut,e=new ut,n=Vv.ADD){super(),this.nodeType="Operator",this.type=t.type,this.a=t,this.b=e,this.op=n}getType(t){let e=this.a.getType(t),n=this.b.getType(t);return t.isTypeMatrix(e)?"v4":t.getTypeLength(n)>t.getTypeLength(e)?n:e}generate(t,e){let n=this.getType(t);this.type=n;let i=this.a.build(t,n),r=this.b.build(t,n);return t.format("( "+i+" "+this.op+" "+r+" )",n,e)}copy(t){return super.copy(t),this.a.copy(t.a),this.b.copy(t.b),this.op=t.op,this}},Ii=Vv;Ii.ADD="+",Ii.SUB="-",Ii.MUL="*",Ii.DIV="/";var Mt=class extends Ot{constructor(t=new ut,e=Mt.ABS,n,i){super(),this.nodeType="Math",this.a=t,typeof e!="string"?this.b=e:i=e,typeof n!="string"?this.c=n:i=n,this.method=i,this.hashProperties=["method"]}getNumInputs(t){switch(this.method){case Mt.MIX:case Mt.CLAMP:case Mt.REFRACT:case Mt.SMOOTHSTEP:case Mt.FACEFORWARD:return 3;case Mt.MIN:case Mt.MAX:case Mt.MOD:case Mt.STEP:case Mt.REFLECT:case Mt.DISTANCE:case Mt.DOT:case Mt.CROSS:case Mt.POW:return 2;default:return 1}}getInputType(t){let e=t.getTypeLength(this.a.getType(t)),n=this.b?t.getTypeLength(this.b.getType(t)):0,i=this.c?t.getTypeLength(this.c.getType(t)):0;return e>n&&e>i?this.a.getType(t):n>i?this.b.getType(t):this.c.getType(t)}getType(t){switch(this.method){case Mt.LENGTH:case Mt.DISTANCE:case Mt.DOT:return"f";case Mt.CROSS:return"v3"}return this.getInputType(t)}generate(t,e){let n,i,r,s=this.a?t.getTypeLength(this.a.getType(t)):0,a=this.b?t.getTypeLength(this.b.getType(t)):0,o=this.c?t.getTypeLength(this.c.getType(t)):0,l=this.getInputType(t),c=this.getType(t);switch(this.type=c,this.method){case Mt.NEGATE:return t.format("( -"+this.a.build(t,l)+" )",l,e);case Mt.INVERT:return t.format("( 1.0 - "+this.a.build(t,l)+" )",l,e);case Mt.CROSS:n=this.a.build(t,"v3"),i=this.b.build(t,"v3");break;case Mt.STEP:n=this.a.build(t,s===1?"f":l),i=this.b.build(t,l);break;case Mt.MIN:case Mt.MAX:case Mt.MOD:n=this.a.build(t,l),i=this.b.build(t,a===1?"f":l);break;case Mt.REFRACT:n=this.a.build(t,l),i=this.b.build(t,l),r=this.c.build(t,"f");break;case Mt.MIX:n=this.a.build(t,l),i=this.b.build(t,l),r=this.c.build(t,o===1?"f":l);break;default:n=this.a.build(t,l),this.b&&(i=this.b.build(t,l)),this.c&&(r=this.c.build(t,l));break}let h=[];h.push(n),i&&h.push(i),r&&h.push(r);let d=this.getNumInputs(t);if(h.length!==d)throw Error(`Arguments not match used in "${this.method}". Require ${d}, currently ${h.length}.`);return t.format(this.method+"( "+h.join(", ")+" )",c,e)}copy(t){return super.copy(t),this.a.copy(t.a),this.b=t.b instanceof ut?t.b.clone():t.b,this.c=t.c instanceof ut?t.c.clone():t.c,this.method=t.method,this}},tt=Mt;tt.RAD="radians",tt.DEG="degrees",tt.EXP="exp",tt.EXP2="exp2",tt.LOG="log",tt.LOG2="log2",tt.SQRT="sqrt",tt.INV_SQRT="inversesqrt",tt.FLOOR="floor",tt.CEIL="ceil",tt.NORMALIZE="normalize",tt.FRACT="fract",tt.SATURATE="saturate",tt.SIN="sin",tt.COS="cos",tt.TAN="tan",tt.ASIN="asin",tt.ACOS="acos",tt.ARCTAN="atan",tt.ABS="abs",tt.SIGN="sign",tt.LENGTH="length",tt.NEGATE="negate",tt.INVERT="invert",tt.MIN="min",tt.MAX="max",tt.MOD="mod",tt.STEP="step",tt.REFLECT="reflect",tt.DISTANCE="distance",tt.DOT="dot",tt.CROSS="cross",tt.POW="pow",tt.MIX="mix",tt.CLAMP="clamp",tt.REFRACT="refract",tt.SMOOTHSTEP="smoothstep",tt.FACEFORWARD="faceforward";var Xa=class extends Ot{constructor(t=new ut,e=new ut,n=new ut){super("v4"),this.nodeType="TextureCubeUV",this.value=t,this.uv=e,this.bias=n}bilinearCubeUV(t,e,n,i){var r,s,a,o;let l=new zm(Xa.Nodes.bilinearCubeUV,[e,n,i]);this.colorSpaceTL=(r=this.colorSpaceTL)!=null?r:new Oi(new kt("","v4")),this.colorSpaceTL.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceTL.input.parse(l.build(t)+".tl"),this.colorSpaceTR=(s=this.colorSpaceTR)!=null?s:new Oi(new kt("","v4")),this.colorSpaceTR.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceTR.input.parse(l.build(t)+".tr"),this.colorSpaceBL=(a=this.colorSpaceBL)!=null?a:new Oi(new kt("","v4")),this.colorSpaceBL.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceBL.input.parse(l.build(t)+".bl"),this.colorSpaceBR=(o=this.colorSpaceBR)!=null?o:new Oi(new kt("","v4")),this.colorSpaceBR.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceBR.input.parse(l.build(t)+".br");let c={include:t.isShader("vertex"),ignoreCache:!0};t.addContext(c),this.colorSpaceTLExp=new kt(this.colorSpaceTL.build(t,"v4"),"v4"),this.colorSpaceTRExp=new kt(this.colorSpaceTR.build(t,"v4"),"v4"),this.colorSpaceBLExp=new kt(this.colorSpaceBL.build(t,"v4"),"v4"),this.colorSpaceBRExp=new kt(this.colorSpaceBR.build(t,"v4"),"v4"),t.removeContext();let h=new kt("mix( mix( cubeUV_TL, cubeUV_TR, cubeUV.f.x ), mix( cubeUV_BL, cubeUV_BR, cubeUV.f.x ), cubeUV.f.y )","v4");return h.keywords.cubeUV_TL=this.colorSpaceTLExp,h.keywords.cubeUV_TR=this.colorSpaceTRExp,h.keywords.cubeUV_BL=this.colorSpaceBLExp,h.keywords.cubeUV_BR=this.colorSpaceBRExp,h.keywords.cubeUV=l,h}generate(t,e){if(t.isShader("fragment")){let n=this.uv,i=this.bias||t.context.roughness,r=new zm(Xa.Nodes.roughnessToMip,[i]),s=new tt(r,Xa.Nodes.m0,Xa.Nodes.cubeUV_maxMipLevel,tt.CLAMP),a=new tt(s,tt.FLOOR),o=new tt(s,tt.FRACT),l=this.bilinearCubeUV(t,this.value,n,a),c=this.bilinearCubeUV(t,this.value,n,new Ii(a,new ke(1).setReadonly(!0),Ii.ADD)),h=new tt(l,c,o,tt.MIX);return t.format(h.build(t),"v4",e)}else return console.warn("TextureCubeUVNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.uv.copy(t.uv),this.bias.copy(t.bias),this.value.copy(t.value),t.colorSpaceTL?this.colorSpaceTL?this.colorSpaceTL.copy(t.colorSpaceTL):this.colorSpaceTL=t.colorSpaceTL.clone():this.colorSpaceTL=void 0,t.colorSpaceTR?this.colorSpaceTR?this.colorSpaceTR.copy(t.colorSpaceTR):this.colorSpaceTR=t.colorSpaceTR.clone():this.colorSpaceTR=void 0,t.colorSpaceBL?this.colorSpaceBL?this.colorSpaceBL.copy(t.colorSpaceBL):this.colorSpaceBL=t.colorSpaceBL.clone():this.colorSpaceBL=void 0,t.colorSpaceBR?this.colorSpaceBR?this.colorSpaceBR.copy(t.colorSpaceBR):this.colorSpaceBR=t.colorSpaceBR.clone():this.colorSpaceBR=void 0,t.colorSpaceTLExp?this.colorSpaceTLExp?this.colorSpaceTLExp.copy(t.colorSpaceTLExp):this.colorSpaceTLExp=t.colorSpaceTLExp.clone():this.colorSpaceTLExp=void 0,t.colorSpaceTRExp?this.colorSpaceTRExp?this.colorSpaceTRExp.copy(t.colorSpaceTRExp):this.colorSpaceTRExp=t.colorSpaceTRExp.clone():this.colorSpaceTRExp=void 0,t.colorSpaceBLExp?this.colorSpaceBLExp?this.colorSpaceBLExp.copy(t.colorSpaceBLExp):this.colorSpaceBLExp=t.colorSpaceBLExp.clone():this.colorSpaceBLExp=void 0,t.colorSpaceBRExp?this.colorSpaceBRExp?this.colorSpaceBRExp.copy(t.colorSpaceBRExp):this.colorSpaceBRExp=t.colorSpaceBRExp.clone():this.colorSpaceBRExp=void 0,this}},Eu=Xa;Eu.Nodes=function(){let t=new kv(`struct TextureCubeUVData {
			vec4 tl;
			vec4 tr;
			vec4 br;
			vec4 bl;
			vec2 f;
		}`),e=new Tt("float cubeUV_maxMipLevel 8.0",!0),n=new Tt("float cubeUV_minMipLevel 4.0",!0),i=new Tt("float cubeUV_maxTileSize 256.0",!0),r=new Tt("float cubeUV_minTileSize 16.0",!0),s=new Ye(`float getFace(vec3 direction) {
				vec3 absDirection = abs(direction);
				float face = -1.0;
				if (absDirection.x > absDirection.z) {
					if (absDirection.x > absDirection.y)
						face = direction.x > 0.0 ? 0.0 : 3.0;
					else
						face = direction.y > 0.0 ? 1.0 : 4.0;
				} else {
					if (absDirection.z > absDirection.y)
						face = direction.z > 0.0 ? 2.0 : 5.0;
					else
						face = direction.y > 0.0 ? 1.0 : 4.0;
				}
				return face;
		}`);s.useKeywords=!1;let a=new Ye(`vec2 getUV(vec3 direction, float face) {
				vec2 uv;
				if (face == 0.0) {
					uv = vec2(direction.z, direction.y) / abs(direction.x); // pos x
				} else if (face == 1.0) {
					uv = vec2(-direction.x, -direction.z) / abs(direction.y); // pos y
				} else if (face == 2.0) {
					uv = vec2(-direction.x, direction.y) / abs(direction.z); // pos z
				} else if (face == 3.0) {
					uv = vec2(-direction.z, direction.y) / abs(direction.x); // neg x
				} else if (face == 4.0) {
					uv = vec2(-direction.x, direction.z) / abs(direction.y); // neg y
				} else {
					uv = vec2(direction.x, direction.y) / abs(direction.z); // neg z
				}
				return 0.5 * (uv + 1.0);
		}`);a.useKeywords=!1;let o=new Ye(`TextureCubeUVData bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {
			float face = getFace(direction);
			float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);
			mipInt = max(mipInt, cubeUV_minMipLevel);
			float faceSize = exp2(mipInt);
			float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);
			vec2 uv = getUV(direction, face) * (faceSize - 1.0);
			vec2 f = fract(uv);
			uv += 0.5 - f;
			if (face > 2.0) {
				uv.y += faceSize;
				face -= 3.0;
			}
			uv.x += face * faceSize;
			if(mipInt < cubeUV_maxMipLevel){
				uv.y += 2.0 * cubeUV_maxTileSize;
			}
			uv.y += filterInt * 2.0 * cubeUV_minTileSize;
			uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);
			uv *= texelSize;
			vec4 tl = texture2D(envMap, uv);
			uv.x += texelSize;
			vec4 tr = texture2D(envMap, uv);
			uv.y += texelSize;
			vec4 br = texture2D(envMap, uv);
			uv.x -= texelSize;
			vec4 bl = texture2D(envMap, uv);
			return TextureCubeUVData( tl, tr, br, bl, f );
		}`,[t,s,a,e,n,i,r]);o.useKeywords=!1;let l=new Tt("float r0 1.0",!0),c=new Tt("float v0 0.339",!0),h=new Tt("float m0 -2.0",!0),d=new Tt("float r1 0.8",!0),u=new Tt("float v1 0.276",!0),p=new Tt("float m1 -1.0",!0),m=new Tt("float r4 0.4",!0),f=new Tt("float v4 0.046",!0),g=new Tt("float m4 2.0",!0),v=new Tt("float r5 0.305",!0),y=new Tt("float v5 0.016",!0),w=new Tt("float m5 3.0",!0),b=new Tt("float r6 0.21",!0),S=new Tt("float v6 0.0038",!0),_=new Tt("float m6 4.0",!0),E=[l,c,h,d,u,p,m,f,g,v,y,w,b,S,_],x=new Ye(`float roughnessToMip(float roughness) {
			float mip = 0.0;
			if (roughness >= r1) {
				mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;
			} else if (roughness >= r4) {
				mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;
			} else if (roughness >= r5) {
				mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;
			} else if (roughness >= r6) {
				mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;
			} else {
				mip = -2.0 * log2(1.16 * roughness);// 1.16 = 1.79^0.25
			}
			return mip;
		}`,E);return{bilinearCubeUV:o,roughnessToMip:x,m0:h,cubeUV_maxMipLevel:e}}();var Hs=class extends Ot{constructor(t){super("v3"),this.nodeType="Normal",this.scope=t!=null?t:Hs.VIEW}getShared(){return this.scope===Hs.WORLD}build(t,e,n,i){let r=t.context[this.scope+"Normal"];return r?r.build(t,e,n,i):super.build(t,e,n)}generate(t,e,n,i,r){let s;switch(this.scope){case Hs.VIEW:t.isShader("vertex")?s="transformedNormal":s="geometryNormal";break;case Hs.LOCAL:t.isShader("vertex")?s="objectNormal":(t.requires.normal=!0,s="vObjectNormal");break;case Hs.WORLD:t.isShader("vertex")?s="inverseTransformDirection( transformedNormal, viewMatrix ).xyz":(t.requires.worldNormal=!0,s="vWNormal");break}return t.format(s,this.getType(t),e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.scope&&(this.scope=t.scope),this}},Cn=Hs;Cn.LOCAL="local",Cn.WORLD="world",Cn.VIEW="view",Cn.NORMAL="normal";An.addKeyword("viewNormal",function(){return new Cn(Cn.VIEW)});An.addKeyword("localNormal",function(){return new Cn(Cn.NORMAL)});An.addKeyword("worldNormal",function(){return new Cn(Cn.WORLD)});var Ji=class extends Ot{constructor(t){super("v3"),this.nodeType="Position",this.scope=t!=null?t:Ji.LOCAL}getType(){switch(this.scope){case Ji.PROJECTION:return"v4"}return this.type}getShader(){switch(this.scope){case Ji.LOCAL:case Ji.WORLD:return!1}return!0}generate(t,e,n,i,r){let s;switch(this.scope){case Ji.LOCAL:t.isShader("vertex")?s="transformed":(t.requires.position=!0,s="vPosition");break;case Ji.WORLD:if(t.isShader("vertex"))return"( modelMatrix * vec4( transformed, 1.0 ) ).xyz";t.requires.worldPosition=!0,s="vWPosition";break;case Ji.VIEW:s=t.isShader("vertex")?"-mvPosition.xyz":"vViewPosition";break;case Ji.PROJECTION:s=t.isShader("vertex")?"( projectionMatrix * modelViewMatrix * vec4( position, 1.0 ) )":"vec4( 0.0 )";break}return t.format(s,this.getType(),e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.scope&&(this.scope=t.scope),this}},Fn=Ji;Fn.LOCAL="local",Fn.WORLD="world",Fn.VIEW="view",Fn.PROJECTION="projection";An.addKeyword("position",function(){return new Fn});An.addKeyword("worldPosition",function(){return new Fn(Fn.WORLD)});An.addKeyword("viewPosition",function(){return new Fn(Fn.VIEW)});var Ci=class extends Ot{constructor(t){super("v3"),this.nodeType="Reflect",this.scope=t!=null?t:Ci.CUBE}getUnique(t){return!t.context.viewNormal}getType(){switch(this.scope){case Ci.SPHERE:return"v2"}return this.type}generate(t,e){let n=this.getUnique(t);if(t.isShader("fragment")){let i;switch(this.scope){case Ci.VECTOR:{let r=new Cn(Cn.VIEW),s=t.context.roughness,a=r.build(t,"v3"),o=new Fn(Fn.VIEW).build(t,"v3"),l=s?s.build(t,"f"):void 0,c=`reflect( -normalize( ${o} ), ${a} )`;l&&(c=`normalize( mix( ${c}, ${a}, ${l} * ${l} ) )`);let h=`inverseTransformDirection( ${c}, viewMatrix )`;n?(t.addNodeCode(`vec3 reflectVec = ${h};`),i="reflectVec"):i=h;break}case Ci.CUBE:{let r=new Ci(Ci.VECTOR).build(t,"v3"),s="vec3( -"+r+".x, "+r+".yz )";n?(t.addNodeCode(`vec3 reflectCubeVec = ${s};`),i="reflectCubeVec"):i=s;break}case Ci.SPHERE:{let r=new Ci(Ci.VECTOR).build(t,"v3"),s="normalize( ( viewMatrix * vec4( "+r+", 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) ).xy * 0.5 + 0.5";n?(t.addNodeCode(`vec2 reflectSphereVec = ${s};`),i="reflectSphereVec"):i=s;break}}return t.format(i,this.getType(),e)}else return console.warn("ReflectNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.type,e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.scope&&(this.scope=t.scope),this}},Qs=Ci;Qs.CUBE="cube",Qs.SPHERE="sphere",Qs.VECTOR="vector";var sR=class extends Ot{constructor(t=new Ki,e,n){super("v4"),this.nodeType="TextureCube",this.value=t,this.radianceNode=new Eu(this.value,e!=null?e:new Qs(Qs.VECTOR),n),this.irradianceNode=new Eu(this.value,new Cn(Cn.WORLD),new ke(1).setReadonly(!0))}generate(t,e){return t.isShader("fragment")?(t.require("irradiance"),t.context.bias&&t.context.bias.setTexture(this.value),(t.slot==="irradiance"?this.irradianceNode:this.radianceNode).build(t,e)):(console.warn("TextureCubeNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.getType(t),e))}copy(t){return super.copy(t),this.value.copy(t.value),this.radianceNode.copy(t.radianceNode),this.irradianceNode.copy(t.irradianceNode),this}},aR=class extends Kn{constructor(t=new wo,e,n){super("v4",{shared:!0}),this.nodeType="CubeTexture",this.value=t,this.uv=e!=null?e:new Qs,this.bias=n}getTexture(t,e){return super.generate(t,e,this.value.uuid,"tc")}generate(t,e){var n,i;if(e==="samplerCube")return this.getTexture(t,e);let r=this.getTexture(t,e),s=(n=this.uv)==null?void 0:n.build(t,"v3"),a=this.bias?this.bias.build(t,"f"):void 0;a===void 0&&t.context.bias&&(a=t.context.bias.setTexture(this).build(t,"f"));let o;a?o="texCubeBias( "+r+", "+s+", "+a+" )":o="texCube( "+r+", "+s+" )";let l={include:t.isShader("vertex"),ignoreCache:!0},c=this.getType(t);return t.addContext(l),this.colorSpace=(i=this.colorSpace)!=null?i:new Oi(new kt("",c)),this.colorSpace.fromDecoding(t.getTextureEncodingFromMap(this.value)),this.colorSpace.input.parse(o),o=this.colorSpace.build(t,c),t.removeContext(),t.format(o,c,e)}copy(t){return super.copy(t),this.value.copy(t.value),t.uv?this.uv?this.uv.copy(t.uv):this.uv=t.uv.clone():this.uv=void 0,t.bias?this.bias?this.bias.copy(t.bias):this.bias=t.bias.clone():this.bias=void 0,this}},Bm=["x","y","z","w"],oR=["float","vec2","vec3","vec4"],lR={float:"f",vec2:"v2",vec3:"v3",vec4:"v4",mat4:"v4",int:"i",bool:"b","float[]":"f[]","vec4[]":"v4[]"},cR={t:"sampler2D",tc:"samplerCube",b:"bool",i:"int",f:"float",c:"vec3",v2:"vec2",v3:"vec3",v4:"vec4",m3:"mat3",m4:"mat4","f[]":"float[]","v4[]":"vec4[]"},hR=class{constructor(){this.includes={consts:{},functions:{},structs:{}},this.cache="",this.slot="",this.shader="",this.context={},this.getIncludesCode=function(){function t(e,n){return e.deps.length-n.deps.length}return function(e,n){let i=this.getIncludes(e,n);if(!i)return"";let r="";i=i.sort(t);for(let s=0;s<i.length;s++)i[s].src&&(r+=i[s].src+`
`);return r}}(),this.slots=[],this.caches=[],this.contexts=[],this.keywords={},this.nodeData={},this.fragmentVariables={},this.requires={uv:[],color:[],lights:!1,fog:!1,transparent:!1,irradiance:!1,position:!1,worldPosition:!1,normal:!1,worldNormal:!1,vWorldViewDir:!1,modelMatrix:!1,viewMatrix:!1,projectionMatrix:!1},this.includes={consts:[],functions:[],structs:[]},this.attributes={},this.prefixCode=["#ifdef TEXTURE_LOD_EXT","	#define texCube(a, b) textureCube(a, b)","	#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)","	#define tex2D(a, b) texture2D(a, b)","	#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)","#else","	#define texCube(a, b) textureCube(a, b)","	#define texCubeBias(a, b, c) textureCube(a, b, c)","	#define tex2D(a, b) texture2D(a, b)","	#define tex2DBias(a, b, c) texture2D(a, b, c)","#endif",`
			// NOTE: Include Spline's blending modes. This could be part of BlendNode
			#define SPE_BLENDING_NORMAL 0
			#define SPE_BLENDING_MULTIPLY 1
			#define SPE_BLENDING_SCREEN 2
			#define SPE_BLENDING_OVERLAY 3

			vec3 spe_normalBlend( vec3 a, vec3 b, float alpha ) {
				return mix( a, b, alpha );
			}

			vec3 spe_multiplyBlend( vec3 a, vec3 b, float alpha ) {
				return mix( a, a * b, alpha );
			}

			vec3 spe_screenBlend( vec3 a, vec3 b, float alpha ) {
				vec3 tmp = 1.0 - ( 1.0 - a ) * ( 1.0 - b );
				return mix( a, tmp, alpha );
			}

			vec3 spe_overlayBlend( vec3 a, vec3 b, float alpha ) {
				vec3 tmp = mix( 1. - 2. * (1. - a) * (1. - b), 2. * a * b, step( a, vec3(.5) ) );
				return clamp( mix( a, tmp, alpha ), 0.0, 1.0 );
			}

			vec3 spe_blend( vec3 a, vec3 b, float alpha, int mode ) {
				if ( mode == SPE_BLENDING_NORMAL ) return spe_normalBlend( a, b, alpha );
				else if ( mode == SPE_BLENDING_MULTIPLY ) return spe_multiplyBlend( a, b, alpha );
				else if ( mode == SPE_BLENDING_SCREEN ) return spe_screenBlend( a, b, alpha );
				else if ( mode == SPE_BLENDING_OVERLAY ) return spe_overlayBlend( a, b, alpha );
				return vec3( 1.0 );
			}
			`,"#include <packing>","#include <common>"].join(`
`),this.parsCode={vertex:["float neighbor_offset = 0.0001;",""].join(`
`),fragment:["float accumAlpha = 0.0;",`void accumulateAlpha(float alpha) {
					accumAlpha += (1.0 - accumAlpha) * alpha;
				}`,""].join(`
`)},this.code={vertex:"",fragment:""},this.nodeCode={vertex:"",fragment:""},this.resultCode={vertex:"",fragment:""},this.finalCode={vertex:"",fragment:""},this.inputs={uniforms:{list:[],vertex:[],fragment:[]},arrayUniforms:{list:[],vertex:[],fragment:[]},vars:{varying:[],vertex:[],fragment:[]}},this.defines={},this.uniforms={},this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.updaters=[],this.nodes=[],this.analyzing=!1}build(t,e){this.buildShader("vertex",t),this.buildShader("fragment",e);for(let n=0;n<this.requires.uv.length;n++)if(this.requires.uv[n]){let i=n>0?n+1:"";this.addVaryCode("varying vec2 vUv"+i+";"),n>0&&this.addVertexParsCode("attribute vec2 uv"+i+";"),this.addVertexFinalCode("vUv"+i+" = uv"+i+";")}return this.requires.color[0]&&(this.addVaryCode("varying vec4 vColor;"),this.addVertexParsCode("attribute vec4 color;"),this.addVertexFinalCode("vColor = color;")),this.requires.color[1]&&(this.addVaryCode("varying vec4 vColor2;"),this.addVertexParsCode("attribute vec4 color2;"),this.addVertexFinalCode("vColor2 = color2;")),this.requires.position&&(this.addVaryCode("varying vec3 vPosition;"),this.addVertexFinalCode("vPosition = transformed;")),this.requires.worldPosition,this.requires.normal&&(this.addVaryCode("varying vec3 vObjectNormal;"),this.addVertexFinalCode("vObjectNormal = normal;")),this.requires.modelMatrix&&this.addFragmentParsCode("uniform mat4 modelMatrix;"),this.requires.viewMatrix&&this.addFragmentParsCode("uniform mat4 viewMatrix;"),this.requires.projectionMatrix&&this.addFragmentParsCode("uniform mat4 projectionMatrix;"),this.requires.worldNormal&&(this.addVaryCode("varying vec3 vWNormal;"),this.addVertexFinalCode("vWNormal = inverseTransformDirection( transformedNormal, viewMatrix ).xyz;")),this.requires.vWorldViewDir&&(this.addVaryCode("varying vec3 vWorldViewDir;"),this.addVertexFinalCode("vWorldViewDir = isPerspectiveMatrix( projectionMatrix ) ?  ( (modelMatrix * vec4(position, 1.0)).xyz - cameraPosition ) : vec3( -viewMatrix[0][2], -viewMatrix[1][2], -viewMatrix[2][2] );")),this}buildShader(t,e){this.resultCode[t]=e.build(this.setShader(t),"v4")}setMaterial(t,e){return this.material=t,this.renderer=e,this.requires.lights=t.lights,this.requires.fog=t.fog,this.mergeDefines(t.defines),this}addFlow(t,e,n){return this.addSlot(t).addCache(e).addContext(n)}removeFlow(){return this.removeSlot().removeCache().removeContext()}addCache(t){return this.cache=t!=null?t:"",this.caches.push(this.cache),this}removeCache(){return this.caches.pop(),this.cache=this.caches[this.caches.length-1]||"",this}addContext(t){return this.context=Object.assign({},this.context,t),this.context.extra=this.context.extra||{},this.contexts.push(this.context),this}removeContext(){return this.contexts.pop(),this.context=this.contexts[this.contexts.length-1]||{},this}addSlot(t){return this.slot=t||"",this.slots.push(this.slot),this}removeSlot(){return this.slots.pop(),this.slot=this.slots[this.slots.length-1]||"",this}addFragmentVariable(t,e){this.fragmentVariables[t]===void 0&&(this.addFragmentCode(`${e} ${t};`),this.fragmentVariables[t]="")}addVertexCode(t){this.addCode(t,"vertex")}addFragmentCode(t){this.addCode(t,"fragment")}addCode(t,e){this.code[e!=null?e:this.shader]+=t+`
`}addVertexNodeCode(t){this.addNodeCode(t,"vertex")}addFragmentNodeCode(t){this.addNodeCode(t,"fragment")}addNodeCode(t,e){this.nodeCode[e!=null?e:this.shader]+=t+`
`}clearNodeCode(t){t=t!=null?t:this.shader;let e=this.nodeCode[t];return this.nodeCode[t]="",e}clearVertexNodeCode(){return this.clearNodeCode("vertex")}clearFragmentNodeCode(){return this.clearNodeCode("fragment")}addVertexFinalCode(t){this.addFinalCode(t,"vertex")}addFragmentFinalCode(t){this.addFinalCode(t,"fragment")}addFinalCode(t,e){this.finalCode[e!=null?e:this.shader]+=t+`
`}addVertexParsCode(t){this.addParsCode(t,"vertex")}addFragmentParsCode(t){this.addParsCode(t,"fragment")}addParsCode(t,e){this.parsCode[e!=null?e:this.shader]+=t+`
`}addVaryCode(t){this.addVertexParsCode(t),this.addFragmentParsCode(t)}isCache(t){return this.caches.indexOf(t)!==-1}isSlot(t){return this.slots.indexOf(t)!==-1}define(t,e){this.defines[t]=e===void 0?1:e}require(t){this.requires[t]=!0}isDefined(t){return this.defines[t]!==void 0}getVar(t,e,n,i="varying",r="V",s=""){let a=this.getVars(i),o=a[t];if(!o){let l=a.length;o={name:n||"node"+r+l+(s?"_"+s:""),type:e},a.push(o),a[t]=o}return o}getTempVar(t,e,n,i){return this.getVar(t,e,n,this.shader,"T",i)}getAttribute(t,e){if(!this.attributes[t]){let n=this.getVar(t,e);this.addVertexParsCode("attribute "+e+" "+t+";"),this.addVertexFinalCode(n.name+" = "+t+";"),this.attributes[t]={varying:n,name:t,type:e}}return this.attributes[t]}getCode(t){return[this.prefixCode,this.parsCode[t],this.getVarListCode(this.getVars("varying"),"varying"),this.getVarListCode(this.inputs.uniforms[t],"uniform"),this.getVarListCode(this.inputs.arrayUniforms[t],"uniform"),this.getIncludesCode("consts",t),this.getIncludesCode("structs",t),this.getIncludesCode("functions",t),"void main() {",this.getVarListCode(this.getVars(t)),this.code[t],this.resultCode[t],this.finalCode[t],"}"].join(`
`)}getVarListCode(t,e){e=e!=null?e:"";let n="";for(let i=0,r=t.length;i<r;++i){let s=t[i],a=s.type,o=s.name,l=s.size,c=this.getFormatByType(a);if(c===void 0)throw new Error("Node pars "+c+" not found.");c.includes("[]")?n+=e+" "+c.substring(0,c.length-2)+" "+o+`[${l}];
`:n+=e+" "+c+" "+o+`;
`}return n}getVars(t){return this.inputs.vars[t!=null?t:this.shader]}getNodeData(t){let e=t instanceof ut?t.uuid:t;return this.nodeData[e]=this.nodeData[e]||{}}createUniform(t,e,n,i,r,s){if(e.includes("[]")){let a=this.inputs.arrayUniforms,o=a.list.length,l=new Om({type:e,size:n.size,name:i||"nodeUA"+o+(s?"_"+s:""),node:n,needsUpdate:r});return a.list.push(l),a[t].push(l),a[t][l.name]=l,this.uniforms[l.name]=l,l}else{let a=this.inputs.uniforms,o=a.list.length,l=new Om({type:e,name:i||"nodeU"+o+(s?"_"+s:""),node:n,needsUpdate:r});return a.list.push(l),a[t].push(l),a[t][l.name]=l,this.uniforms[l.name]=l,l}}createVertexUniform(t,e,n,i,r){return this.createUniform("vertex",t,e,n,i,r)}createFragmentUniform(t,e,n,i,r){return this.createUniform("fragment",t,e,n,i,r)}include(t,e,n){var i;let r;if(t=typeof t=="string"?An.get(t):t,this.context.include===!1)return t.name;t instanceof Ye?r=this.includes.functions:t instanceof Tt?r=this.includes.consts:t instanceof kv&&(r=this.includes.structs);let s=r[this.shader]=r[this.shader]||[];if(t){let a=s[t.name];if(a||(a=s[t.name]={node:t,deps:[]},s.push(a),a.src=t.build(this,"source")),t instanceof Ye&&e&&s[e.name]&&s[e.name].deps.indexOf(t)===-1&&(s[e.name].deps.push(t),(i=t.includes)!=null&&i.length)){let o=0;do this.include(t.includes[o++],e);while(o<t.includes.length)}return n&&(a.src=n),t.name}else throw new Error("Include not found.")}colorToVectorProperties(t){return t.replace("r","x").replace("g","y").replace("b","z").replace("a","w")}colorToVector(t){return t.replace(/c/g,"v3")}getIncludes(t,e){return this.includes[t][e||this.shader]}getConstructorFromLength(t){return oR[t-1]}isTypeMatrix(t){return/^m/.test(t)}getTypeLength(t){return t==="f"?1:parseInt(this.colorToVector(t).substr(1))}getTypeFromLength(t){return t===1?"f":"v"+t}findNode(...t){for(let e=0;e<arguments.length;e++){let n=t[e];if(n!=null&&n.isNode)return n}}resolve(...t){for(let e=0;e<arguments.length;e++){let n=t[e];if(n!==void 0){if(n.isNode)return n;if(n.isTexture)switch(n.mapping){case Qr:case es:return new aR(n);case bo:return new sR(new Ki(n));default:return new Ki(n)}else{if(n.isVector2)return new si(n);if(n.isVector3)return new ai(n);if(n.isVector4)return new qa(n)}}}}format(t,e,n){switch(this.colorToVector(n+" <- "+e)){case"f <- v2":return t+".x";case"f <- v3":return t+".x";case"f <- v4":return t+".x";case"f <- i":case"f <- b":return"float( "+t+" )";case"v2 <- f":return"vec2( "+t+" )";case"v2 <- v3":return t+".xy";case"v2 <- v4":return t+".xy";case"v2 <- i":case"v2 <- b":return"vec2( float( "+t+" ) )";case"v3 <- f":return"vec3( "+t+" )";case"v3 <- v2":return"vec3( "+t+", 0.0 )";case"v3 <- v4":return t+".xyz";case"v3 <- i":case"v3 <- b":return"vec2( float( "+t+" ) )";case"v4 <- f":return"vec4( "+t+" )";case"v4 <- v2":return"vec4( "+t+", 0.0, 1.0 )";case"v4 <- v3":return"vec4( "+t+", 1.0 )";case"v4 <- i":case"v4 <- b":return"vec4( float( "+t+" ) )";case"i <- f":case"i <- b":return"int( "+t+" )";case"i <- v2":return"int( "+t+".x )";case"i <- v3":return"int( "+t+".x )";case"i <- v4":return"int( "+t+".x )";case"b <- f":return"( "+t+" != 0.0 )";case"b <- v2":return"( "+t+" != vec2( 0.0 ) )";case"b <- v3":return"( "+t+" != vec3( 0.0 ) )";case"b <- v4":return"( "+t+" != vec4( 0.0 ) )";case"b <- i":return"( "+t+" != 0 )"}return t}getTypeByFormat(t){return lR[t]||t}getFormatByType(t){return cR[t]||t}getUUID(t,e){return e=e!==void 0?e:!0,e&&this.cache&&(t=this.cache+"-"+t),t}getElementByIndex(t){return Bm[t]}getIndexByElement(t){return Bm.indexOf(t)}isShader(t){return this.shader===t}setShader(t){return this.shader=t,this}mergeDefines(t){for(let e in t)this.defines[e]=t[e];return this.defines}mergeUniform(t){for(let e in t)this.uniforms[e]=t[e];return this.uniforms}getTextureEncodingFromMap(t){let e;return t?t.isTexture&&(e=t.encoding):e=gi,e===gi&&this.context.gamma&&(e=Dt),e}},Fm=class extends ut{constructor(t=new ut){super("v4"),this.nodeType="Raw",this.value=t}generate(t){let e=this.value.analyzeAndFlow(t,this.type),n=e.code+`
`;return t.isShader("vertex")?n+="gl_Position = "+e.result+";":n+="gl_FragColor = "+e.result+";",n}copy(t){return super.copy(t),this.value.copy(t.value),this}},nn=class extends Kn{constructor(t=0,e,n,i){super("c"),this.nodeType="Color",this.value=t instanceof Ar?t:new Ar(t||0,e,n,i)}setRGBA(t){this.value.setRGBA(t.r,t.g,t.b,t.a)}generate(t,e,n,i,r,s){n=t.getUUID(n!=null?n:this.getUUID()),i=i!=null?i:this.getType(t);let a=t.getNodeData(n),o=this.getReadonly()&&this.generateReadonly!==void 0;if(this.alpha){let l=this.alpha.build(t,"f");t.addFragmentNodeCode(`accumAlpha += ( 1.0 - accumAlpha ) * ${l};`)}return o?this.generateReadonly(t,e,n,i,r,s):t.isShader("vertex")?(a.vertex||(a.vertex=t.createVertexUniform(i,this,r,s,this.getLabel())),t.format(a.vertex.name,i,e)):(a.fragment||(a.fragment=t.createFragmentUniform(i,this,r,s,this.getLabel())),t.format(a.fragment.name,i,e))}generateReadonly(t,e,n,i,r,s){return t.format("vec3("+this.value.r+", "+this.value.g+", "+this.value.b+")",i,e)}},vt=class extends Kn{constructor(t){super("i"),this.nodeType="Int",this.value=Math.floor(t!=null?t:0)}generateReadonly(t,e,n,i,r,s){return t.format(this.value.toString(),i,e)}copy(t){return super.copy(t),this.value=t.value,this}},Zt=class{constructor(t,e,n,i){if(this.next=void 0,this.uniforms={},this.textures={},this.defines={},this.id=t,this.uuid=e,n){this.type=n.type;for(let r in n)r!=="type"&&r!=="calpha"&&(this.uniforms[`f${this.id}_${r}`]=n[r]);for(let r in i)this.defines[r]=i[r]}}copy(t){this.id=t.id,this.type=t.type,this.defines=ve({},t.defines);for(let e in t.uniforms)this.getName(e)==="transmissionSamplerMap"||this.getName(e)==="transmissionDepthMap"||(this.uniforms[e]?this.uniforms[e].copy(t.uniforms[e]):this.uniforms[e]=t.uniforms[e].clone());return this}clone(){return new Zt(this.id).copy(this)}fromJSON(t,e){this.id=t.id,this.defines=ve({},t.defines);for(let n in t.uniforms)this.uniforms[n]=e.getNode(t.uniforms[n]);if(t.type==="texture"){if(!(`f${this.id}_textureSize`in this.uniforms)){let n=this.uniforms[`f${this.id}_texture`].value.image;this.uniforms[`f${t.id}_textureSize`]=new ai(n.width,n.height)}`f${this.id}_size`in this.uniforms||(this.uniforms[`f${t.id}_size`]=new si(200,200)),`f${t.id}_axis`in this.uniforms||(this.uniforms[`f${t.id}_axis`]=new vt(0)),`f${t.id}_side`in this.uniforms||(this.uniforms[`f${t.id}_side`]=new vt(0)),`f${t.id}_projection`in this.uniforms||(this.uniforms[`f${t.id}_projection`]=new vt(0))}else t.type==="noise"?(`f${t.id}_noiseType`in this.uniforms||(this.uniforms[`f${t.id}_noiseType`]=new vt(0)),`f${t.id}_size`in this.uniforms||(this.uniforms[`f${t.id}_size`]=new ai(-1,-1,-1))):t.type==="depth"&&(`f${t.id}_isWorldSpace`in this.uniforms||(this.uniforms[`f${t.id}_isWorldSpace`]=new ke(1)));return this}toJSON(t){let e={};for(let n in this.uniforms)e[n]=this.uniforms[n].toJSON(t).uuid;return{id:this.id,type:this.type,defines:JSON.parse(JSON.stringify(this.defines)),uniforms:e,next:this.next==null?void 0:this.next.toJSON(t)}}copyUniforms(t){for(let e in this.uniforms){let n=this.getName(e);n!==void 0&&t.uniforms[`f${t.id}_${n}`]&&n!=="transmissionDepthMap"&&n!=="transmissionSamplerMap"&&this.uniforms[e].copy(t.uniforms[`f${t.id}_${n}`])}return this}hasValueByKey(t){return this.uniforms[t]!==void 0}hasValue(t){return this.hasValueByKey(`f${this.id}_${t}`)}setValue(t,e){let n=`f${this.id}_${t}`;this.hasValueByKey(n)&&e!==void 0&&(this.uniforms[n].value=e)}getValue(t){let e=`f${this.id}_${t}`;if(this.hasValueByKey(e))return this.uniforms[e].value}getValues(){let t={type:this.type};for(let e in this.uniforms){let n=this.getName(e);if(n===void 0)continue;let i=this.uniforms[`f${this.id}_${n}`].value;i!==void 0&&(Array.isArray(i)?t[n]=i.map(r=>r.clone?r.clone():r):t[n]=i.clone?i.clone():i)}return t}getName(t){let e=/f\d+_(.*)/.exec(t);if(e&&e.length>1)return e[1];console.log(`Layer.getName: error ${t}`)}getNames(){let t=[];for(let e in this.uniforms){let n=this.getName(e);n&&t.push(n)}return t}isEqual(t){for(let e in t.uniforms){let n=t.getName(e);if(!n)return!1;let i=this.getValue(n),r=t.uniforms[e].value;if(r.value instanceof Bt){if(i.image!==r.image)return!1}else if(Array.isArray(r)){let s=i;for(let a=0,o=s.length;a<o;++a)if(s[a]!==r[a])return!1}else{let s=i;if(s.equals){if(!s.equals(r))return!1}else if(i!==r)return!1}}return!0}dispose(){}};function uR(t){let e=t instanceof Zt?t.type:t;return e==="texture"||e==="displace_map"||e==="matcap"}var Um=class extends Kn{constructor(t){super("b"),this.nodeType="Bool",this.value=t!=null?t:!1}generateReadonly(t,e,n,i){return t.format(this.value?"true":"false",i,e)}copy(t){return super.copy(t),this.value=t.value,this}},wl=class extends Kn{constructor(t=1,e){super("v4[]"),this.nodeType="Vector4Array",this.size=t,this.value=Array.isArray(e)?e:e instanceof ct?new Array(t).fill(e):new Array(t).fill(new ct(0))}copy(t){return super.copy(t),this.value=t.value.map(e=>e.clone()),this}},Qi=class extends Kn{constructor(t=1,e){super("f[]"),this.nodeType="FloatArray",this.size=t,this.value=Array.isArray(e)?e:typeof e=="number"?new Array(t).fill(e):new Array(t).fill(0)}copy(t){return super.copy(t),this.size=t.size,this.value=[...t.value],this}},Hv=class extends Kn{constructor(t){super("m3"),this.nodeType="Matrix3",this.value=t!=null?t:new zt}generateReadonly(t,e,n,i,r,s){return t.format("mat3("+this.value.elements.join(", ")+")",i,e)}copy(t){return super.copy(t),this.elements=t.elements,this}get elements(){return this.value.elements}set elements(t){this.value.fromArray(t)}},Dl=class extends Ot{constructor(t=new Ki,e,n,i,r,s,a,o,l){super("v3"),this.nodeType="CustomTexture",this.firstTime=!0,this.texture=t,this.textureSize=e,this.crop=n,this.projection=i,this.axis=r,this.side=s,this.size=a,this.mat=new Hv(this.texture.value.matrix),this.alpha=o,this.mode=l,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){t.require("position"),t.require("normal"),t.require("uv"),t.requires.uv=[!0],t.extensions.shaderTextureLOD=!0,t.extensions.derivatives=!0;let n=`g${this.uuid.toString().replace(/-/g,"")}`,i;switch(this.projection.value){case 3:i=t.include(Dl.Nodes.cylindrical);break;case 2:i=t.include(Dl.Nodes.spherical);break;case 1:let s=["vec3(1.0, 0.0, 0.0)","vec3(0.0, 1.0, 0.0)","vec3(0.0, 0.0, 1.0)"][this.axis.value],a=new Ye(`
		vec3 ${n}_planarTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {

				vec2 uvs = ( mat * vec3( (${n}_vCustomUv * 2. - 1.) / (size * .5), 1. ) / 2. + 0.5 ).xy;

				vec4 tmp = texture2D( tex, uvs );

				vec3 col = tmp.rgb;
				float lalpha = alpha * tmp.a;
				${this.side.value===0?"":`lalpha *= step(0.0, ${this.side.value===2?"-1.0 * ":""}dot(vObjectNormal, mat * ${s}));`}

				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}`);i=t.include(a);break;default:i=t.include(Dl.Nodes.uv);break}if(this.projection.value===1&&this.firstTime){t.addVertexParsCode(`varying vec2 ${n}_vCustomUv;`),t.addFragmentParsCode(`varying vec2 ${n}_vCustomUv;`);let s=["zy","xz","xy"][this.axis.value];t.addVertexFinalCode(`${n}_vCustomUv = (1. + (transformed.${s})) / 2.;`)}t.addFragmentVariable(this.calpha,"float");let r=[];return r.push(this.texture.getTexture(t,"t")),r.push(this.textureSize.build(t,"v2")),r.push(this.crop.build(t,"f")),r.push(this.mat.build(t,"mat3")),r.push(this.size.build(t,"v2")),r.push(this.alpha.build(t,"f")),r.push(this.mode.build(t,"i")),r.push(this.calpha),this.firstTime=!this.firstTime,t.format(i+"("+r.join(",")+")",this.getType(t),e)}copy(t){return super.copy(t),this.texture.copy(t.texture),this.textureSize=t.textureSize.clone(),this.crop=t.crop.clone(),this.projection=t.projection.clone(),this.axis=t.axis.clone(),this.size=t.size.clone(),this.alpha=t.alpha.clone(),this.mode=t.mode.clone(),this}},Gv=Dl;Gv.Nodes=function(){let t=new Ye(`
vec3 cylindricalTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {
                vec3 posN = normalize(position);
                float u = 0.5 + atan(posN.z, posN.x) / (2.*3.1415);
                float scaledHeight = position.y / (size.y * 0.5);
                float v =  (scaledHeight / 2.) + .5;

                vec2 calculatedUv = vec2(u,v);
				vec2 uvs = ( mat * vec3( calculatedUv * 2. - 1., 1. ) / 2. + 0.5 ).xy;

                vec2 df = fwidth(uvs);
               	if(df.x > 0.5) df.x = 0.;

				#ifdef GL_EXT_shader_texture_lod
                vec4 tmp = texture2DLodEXT(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#else
                vec4 tmp = textureLod(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#endif

				vec3 col = tmp.rgb;
				float lalpha = alpha * tmp.a;
				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}
`),e=new Ye(`
vec3 sphericalTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {
                vec3 posN = normalize(vPosition);
                float u = 0.5 + atan(posN.z, posN.x) / (2.*3.1415);
                float v = 0.5 + asin(posN.y) / 3.1415;

                vec2 calculatedUv = vec2(u,v);
				vec2 uvs = ( mat * vec3( calculatedUv * 2. - 1., 1. ) / 2. + 0.5 ).xy;

                vec2 df = fwidth(uvs);
               	if(df.x > 0.5) df.x = 0.;
				#ifdef GL_EXT_shader_texture_lod
                vec4 tmp = texture2DLodEXT(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#else
                vec4 tmp = textureLod(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#endif

				vec3 col = tmp.rgb;
				float lalpha = alpha * tmp.a;
				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}
`),n=new Ye(`vec3 uvTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {

				vec2 uvs = ( mat * vec3( vUv * 2. - 1., 1. ) / 2. + 0.5 ).xy;
				vec4 tmp = texture2D( tex, uvs );

				vec3 col = tmp.rgb;

				float lalpha = alpha * tmp.a;
				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}`);return{cylindrical:t,spherical:e,uv:n}}();var Wv=class extends Ot{constructor(t,e,n,i,r,s,a){super("v3"),this.nodeType="Fresnel",this.color=t,this.bias=e,this.scale=n,this.intensity=i,this.factor=r,this.alpha=s,this.mode=a,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.require("vWorldViewDir"),t.require("worldNormal"),t.isShader("fragment")){t.addFragmentVariable(this.calpha,"float");let n=t.include(Wv.Nodes.fresnel),i=[];return i.push(this.color.build(t,"c")),i.push(this.bias.build(t,"f")),i.push(this.scale.build(t,"f")),i.push(this.intensity.build(t,"f")),i.push(this.factor.build(t,"f")),i.push(this.alpha.build(t,"f")),i.push(this.mode.build(t,"i")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("FresnelNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.color=t.color.clone(),this.bias=t.bias.clone(),this.scale=t.scale.clone(),this.intensity=t.intensity.clone(),this.factor=t.factor.clone(),this.alpha=t.alpha.clone(),this.mode=t.mode.clone(),this.calpha=t.calpha,this}},jv=Wv;jv.Nodes=function(){return{fresnel:new Ye(`vec3 fresnel(vec3 color, float bias, float scale, float intensity, float factor, float alpha, int mode, out float calpha) {
				float fresnel = bias + scale * pow( abs( factor + dot( normalize( vWorldViewDir ), normalize( vWNormal ) ) ), intensity );

				float lalpha = clamp( fresnel, 0.0, 1.0 ) * alpha;
				calpha = lalpha / clamp(lalpha + accumAlpha, 0.001, 1.0);
				accumAlpha += (1.0 - accumAlpha) * lalpha;
				return color;
			}`)}}();var Rd=(t=>(t.SIMPLEX="simplex3d",t.SIMPLEX_FRACTAL="simplex3dFractal",t.ASHIMA="simplexAshima",t.FBM="fbm",t.PERLIN="perlin",t))(Rd||{}),hi=function(){let t=new Ye(`vec3 random3(vec3 c) {
			float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));
			vec3 r;
			r.z = fract(512.0*j);
			j *= .125;
			r.x = fract(512.0*j);
			j *= .125;
			r.y = fract(512.0*j);
			return r-0.5;
		}`),e=new Ye(`float simplex3d(vec3 p) {
			 vec3 s = floor(p + dot(p, vec3(F3)));
			 vec3 x = p - s + dot(s, vec3(G3));
			 
			 vec3 e = step(vec3(0.0), x - x.yzx);
			 vec3 i1 = e*(1.0 - e.zxy);
			 vec3 i2 = 1.0 - e.zxy*(1.0 - e);
				
			 vec3 x1 = x - i1 + G3;
			 vec3 x2 = x - i2 + 2.0*G3;
			 vec3 x3 = x - 1.0 + 3.0*G3;
			 
			 vec4 w, d;
			 
			 w.x = dot(x, x);
			 w.y = dot(x1, x1);
			 w.z = dot(x2, x2);
			 w.w = dot(x3, x3);
			 
			 w = max(0.6 - w, 0.0);
			 
			 d.x = dot(random3(s), x);
			 d.y = dot(random3(s + i1), x1);
			 d.z = dot(random3(s + i2), x2);
			 d.w = dot(random3(s + 1.0), x3);
			 
			 w *= w;
			 w *= w;
			 d *= w;
			 
			 return dot(d, vec4(52.0));
		}`,[t]);e.keywords.F3=new Tt("float F3 0.3333333"),e.keywords.G3=new Tt("float G3 0.1666667");let n=new Ye(`float simplex3dFractal(vec3 m) {
			mat3 rot1 = mat3(-0.37, 0.36, 0.85,-0.14,-0.93, 0.34,0.92, 0.01,0.4);
			mat3 rot2 = mat3(-0.55,-0.39, 0.74, 0.33,-0.91,-0.24,0.77, 0.12,0.63);
			mat3 rot3 = mat3(-0.71, 0.52,-0.47,-0.08,-0.72,-0.68,-0.7,-0.45,0.56);
			return 0.5333333 * simplex3d(m * rot1)
				 + 0.2666667 * simplex3d(2.0 * m * rot2)
				 + 0.1333333 * simplex3d(4.0 * m * rot3)
				 + 0.0666667 * simplex3d(8.0 * m);
		}`,[e]),i=new Ye("vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}"),r=new Ye("vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}"),s=new Ye(`float simplexAshima(vec3 v) {
		  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;
		  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);
		  vec3 i  = floor(v + dot(v, C.yyy) );
		  vec3 x0 =   v - i + dot(i, C.xxx) ;
		  vec3 g = step(x0.yzx, x0.xyz);
		  vec3 l = 1.0 - g;
		  vec3 i1 = min( g.xyz, l.zxy );
		  vec3 i2 = max( g.xyz, l.zxy );
		  vec3 x1 = x0 - i1 + 1.0 * C.xxx;
		  vec3 x2 = x0 - i2 + 2.0 * C.xxx;
		  vec3 x3 = x0 - 1. + 3.0 * C.xxx;
		  i = mod(i, 289.0 ); 
		  vec4 p = permute( permute( permute( 
					 i.z + vec4(0.0, i1.z, i2.z, 1.0 ))
				   + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) 
				   + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));
		  float n_ = 1.0/7.0; // N=7
		  vec3  ns = n_ * D.wyz - D.xzx;
		  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)
		  vec4 x_ = floor(j * ns.z);
		  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)
		  vec4 x = x_ *ns.x + ns.yyyy;
		  vec4 y = y_ *ns.x + ns.yyyy;
		  vec4 h = 1.0 - abs(x) - abs(y);
		  vec4 b0 = vec4( x.xy, y.xy );
		  vec4 b1 = vec4( x.zw, y.zw );
		  vec4 s0 = floor(b0)*2.0 + 1.0;
		  vec4 s1 = floor(b1)*2.0 + 1.0;
		  vec4 sh = -step(h, vec4(0.0));
		  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;
		  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;
		  vec3 p0 = vec3(a0.xy,h.x);
		  vec3 p1 = vec3(a0.zw,h.y);
		  vec3 p2 = vec3(a1.xy,h.z);
		  vec3 p3 = vec3(a1.zw,h.w);
		  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
		  p0 *= norm.x;
		  p1 *= norm.y;
		  p2 *= norm.z;
		  p3 *= norm.w;
		  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
		  m = m * m;
		  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), 
										dot(p2,x2), dot(p3,x3) ) );
		}`,[i,r]),a=new Ye("vec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}"),o=new Ye("vec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}",[a]),l=new Ye(`float noise(vec3 p){
			vec3 a = floor(p);
			vec3 d = p - a;
			d = d * d * (3.0 - 2.0 * d);
			vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);
			vec4 k1 = perm(b.xyxy);
			vec4 k2 = perm(k1.xyxy + b.zzww);
			vec4 c = k2 + a.zzzz;
			vec4 k3 = perm(c);
			vec4 k4 = perm(c + 1.0);
			vec4 o1 = fract(k3 * (1.0 / 41.0));
			vec4 o2 = fract(k4 * (1.0 / 41.0));
			vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);
			vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);
			return o4.y * d.y + o4.x * (1.0 - d.y);
		}`,[o]),c=new Ye(`float fbm(vec3 x) {
			float v = 0.0;
			float a = 0.5;
			vec3 shift = vec3(100);
			for (int i = 0; i < NUM_OCTAVES; ++i) {
				v += a * noise(x);
				x = x * 2.0 + shift;
				a *= 0.5;
			}
			return v;
		}`,[l]);c.keywords.NUM_OCTAVES=new Tt(`int NUM_OCTAVES ${5}`);let h=new Ye("vec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}"),d=new Ye(`float perlin(vec3 P){
		  vec3 Pi0 = floor(P);
		  vec3 Pi1 = Pi0 + vec3(1.0);
		  Pi0 = mod(Pi0, 289.0);
		  Pi1 = mod(Pi1, 289.0);
		  vec3 Pf0 = fract(P);
		  vec3 Pf1 = Pf0 - vec3(1.0);
		  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
		  vec4 iy = vec4(Pi0.yy, Pi1.yy);
		  vec4 iz0 = Pi0.zzzz;
		  vec4 iz1 = Pi1.zzzz;
		  vec4 ixy = permute(permute(ix) + iy);
		  vec4 ixy0 = permute(ixy + iz0);
		  vec4 ixy1 = permute(ixy + iz1);
		  vec4 gx0 = ixy0 / 7.0;
		  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;
		  gx0 = fract(gx0);
		  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
		  vec4 sz0 = step(gz0, vec4(0.0));
		  gx0 -= sz0 * (step(0.0, gx0) - 0.5);
		  gy0 -= sz0 * (step(0.0, gy0) - 0.5);
		  vec4 gx1 = ixy1 / 7.0;
		  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;
		  gx1 = fract(gx1);
		  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
		  vec4 sz1 = step(gz1, vec4(0.0));
		  gx1 -= sz1 * (step(0.0, gx1) - 0.5);
		  gy1 -= sz1 * (step(0.0, gy1) - 0.5);
		  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
		  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
		  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
		  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
		  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
		  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
		  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
		  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);
		  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
		  g000 *= norm0.x;
		  g010 *= norm0.y;
		  g100 *= norm0.z;
		  g110 *= norm0.w;
		  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
		  g001 *= norm1.x;
		  g011 *= norm1.y;
		  g101 *= norm1.z;
		  g111 *= norm1.w;
		  float n000 = dot(g000, Pf0);
		  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
		  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
		  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
		  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
		  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
		  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
		  float n111 = dot(g111, Pf1);
		  vec3 fade_xyz = fade(Pf0);
		  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
		  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
		  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); 
		  return 2.2 * n_xyz;
		}`,[i,r,h]);return{simplex:e,simplexFractal:n,simplexAshima:s,fbm:c,perlin:d}}(),qv=class extends Ot{constructor(t,e,n,i,r,s,a){super("v3"),this.nodeType="Rainbow",this.filmThickness=t,this.movement=e,this.wavelengths=n,this.noiseStrength=i,this.noiseScale=r,this.offset=s,this.alpha=a,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.require("vWorldViewDir"),t.require("worldNormal"),t.isShader("fragment")){t.require("uv"),t.requires.uv=[!0],t.addFragmentVariable(this.calpha,"float");let n=t.include(qv.Nodes.rainbow),i=[];return i.push(this.filmThickness.build(t,"f")),i.push(this.movement.build(t,"f")),i.push(this.wavelengths.build(t,"v3")),i.push(this.noiseStrength.build(t,"f")),i.push(this.noiseScale.build(t,"f")),i.push(this.offset.build(t,"v3")),i.push(this.alpha.build(t,"f")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("RainbowNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.filmThickness=t.filmThickness.clone(),this.movement=t.movement.clone(),this.wavelengths=t.wavelengths.clone(),this.noiseStrength=t.noiseStrength.clone(),this.noiseScale=t.noiseScale.clone(),this.offset=t.offset.clone(),this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},Xv=qv;Xv.Nodes=function(){let t=new Ye(`vec3 attenuation(vec3 wavelengths, float filmThickness, float movement, float noiseStrength, float noiseScale, vec3 offset) {
                 vec3 st = position / noiseScale;
				 vec3 q = vec3(simplex3d(st),
							  simplex3d(st + vec3(1.0)),
							  simplex3d(st + vec3(1.0)));

				 vec3 r = vec3(simplex3d(st + vec3(1.4, 1.3, 1.0) * q + vec3(1.7, 9.2, 1.0)),
							  simplex3d(st + vec3(2.0, 1.2, 1.0) * q + vec3(8.3, 2.8, 1.0)),
							  simplex3d(st * q));

                 float noise = simplex3d(st + r);

                 return .5 + .5 * cos((((filmThickness + (noise * noiseStrength)) / (vec3(wavelengths.r * 1.0, wavelengths.g * 0.8, wavelengths.b * 0.6) + 1.0)) * dot(normalize(vWorldViewDir + (offset * -0.001)), normalize(vWNormal))) + movement);
             }`,[hi.simplex]);return{rainbow:new Ye(`vec3 rainbow(float filmThickness, float movement, vec3 wavelengths, float noiseStrength, float noiseScale, vec3 offset, float alpha, out float calpha) {
                 vec3 res = clamp(attenuation(wavelengths, filmThickness, movement, noiseStrength, noiseScale, offset), 0.0, 2.0);

                 float rainbowContribution = clamp(res.r + res.g + res.b, 0.0, 1.0);
                 float lalpha = alpha * rainbowContribution;
                 calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
                 accumAlpha += ( 1.0 - accumAlpha ) * lalpha;

                 return res;
             }`,[t])}}();var Jv=class extends Ot{constructor(t,e,n,i,r,s,a,o){super("v3"),this.nodeType="Transmission",this.thickness=t,this.ior=e,this.roughness=n,this.transmissionSamplerSize=i,this.transmissionSamplerMap=r,this.transmissionDepthMap=s,this.aspectRatio=a,this.alpha=o,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.extensions.shaderTextureLOD=!0,t.extensions.derivatives=!0,t.isShader("fragment")){t.define("NUM_SAMPLES",30),t.require("worldPosition"),t.requires.worldNormal=!0,t.requires.modelMatrix=!0,t.requires.projectionMatrix=!0,t.addFragmentVariable(this.calpha,"float");let n=t.include(Jv.Nodes.transmission),i=[];return i.push(this.thickness.build(t,"f")),i.push(this.ior.build(t,"f")),i.push(this.roughness.build(t,"f")),i.push(this.transmissionSamplerSize.build(t,"v2")),i.push(this.transmissionSamplerMap.getTexture(t,"t")),i.push(this.transmissionDepthMap.getTexture(t,"t")),i.push(this.aspectRatio.build(t,"v2")),i.push("normal"),i.push(this.alpha.build(t,"f")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("TransmissionNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(this),this.thickness=t.thickness.clone(),this.ior=t.ior.clone(),this.roughness=t.roughness.clone(),this.transmissionSamplerSize=t.transmissionSamplerSize.clone(),this.transmissionSamplerMap=t.transmissionSamplerMap,this.transmissionDepthMap=t.transmissionDepthMap,this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},$v=Jv;$v.Nodes=function(){let t=new Ye(`
            float gaussian(vec2 i) {
                const float sigma = float(NUM_SAMPLES) * .25;
                return exp( -.5* dot(i/=sigma,i) ) / ( 6.28 * sigma*sigma );
            }`),e=new Ye(`
            vec4 blur(sampler2D sp, vec2 U, vec2 scale, float lod, sampler2D dm, vec2 unrefractedU, vec2 aspectRatio) {
                // Slightly modified version of this:
                // https://www.shadertoy.com/view/ltScRG

                const int LOD = 2;
                const int sLOD = 4; // tile size = 2^LOD

                vec4 O = vec4(0);
                const int s = NUM_SAMPLES/sLOD;
                for ( int i = 0; i < s*s; i++ ) {
                    int modulo = (i)-((i)/(s))*(s);
                    vec2 d = vec2(float(modulo), float(i/s))*float(sLOD) - float(NUM_SAMPLES)/2.;
                    vec2 uv = U + (scale * aspectRatio) * d;
                    // What is the depth of the opaque object we're trying to sample
                    float opaqueDepth = texture2D(dm, uv).r;
                    if (opaqueDepth < gl_FragCoord.z) {
                        uv = unrefractedU + ((scale * min(lod / 2., 1.)) * aspectRatio) * d;
                        lod = lod > 4.0 ? lod : lod / 2.0;
                    }
		            #ifdef TEXTURE_LOD_EXT
                    O += gaussian(d) * texture2DLodEXT( sp, uv, lod);
                    #else
                    O += gaussian(d) * textureLod( sp, uv, lod);
                    #endif
                }
                return O / O.a;
            }`,[t]),n=new Ye(`
            vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		        // Direction of refracted light.
		        vec3 refractionVector = refract( -v,  n, 1.0 / ior );
		        // Compute rotation-independant scaling of the model matrix.
		        vec3 modelScale;
		        modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		        modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		        modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		        // The thickness is specified in local space.
		        return normalize( refractionVector ) * thickness * modelScale;
	        }`),i=new Ye(`
float applyIorToRoughness( float roughness, float ior ) {
		// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and
		// an IOR of 1.5 results in the default amount of microfacet refraction.
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	} `),r=new Ye(`
vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior, vec2 transmissionSamplerSize, sampler2D transmissionSamplerMap, sampler2D transmissionDepthMap, vec2 unrefractedCoords, vec2 aspectRatio) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
        float lod = applyIorToRoughness(roughness, ior);

        return blur(transmissionSamplerMap, fragCoord, vec2(lod / (transmissionSamplerSize.x / 2.)), min(framebufferLod / 5.5, 8.5), transmissionDepthMap, unrefractedCoords, aspectRatio);
	}`,[i,e]),s=new Ye(`
vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec2 transmissionSamplerSize, sampler2D transmissionSamplerMap, sampler2D transmissionDepthMap, vec2 aspectRatio ) {
        vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
        vec3 refractedRayExit = position + transmissionRay;

        // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.
        vec4 ndcPos = projMatrix * viewMatrix *  vec4( refractedRayExit, 1.0 );
        vec2 refractionCoords = ndcPos.xy / ndcPos.w;
        refractionCoords += 1.0;
        refractionCoords /= 2.0;

        vec4 ndcPosUnrefracted = projMatrix * viewMatrix * vec4(position, 1.0 );
        vec2 unrefractedCoords = ndcPosUnrefracted.xy / ndcPosUnrefracted.w;
        unrefractedCoords += 1.0;
        unrefractedCoords /= 2.0;

        // Sample framebuffer to get pixel the refracted ray hits.
        vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior, transmissionSamplerSize, transmissionSamplerMap, transmissionDepthMap, unrefractedCoords, aspectRatio );
        // Get the specular component.
        return vec4( ( 1.0 ) * transmittedLight.rgb, transmittedLight.a );
    }`,[r,n]);return{transmission:new Ye(`
            vec3 transmission(float thickness, float ior, float roughness, vec2 transmissionSamplerSize, sampler2D transmissionSamplerMap, sampler2D transmissionDepthMap, vec2 aspectRatio, vec3 normal, float alpha, out float calpha) {
                vec3 v = vec3(0.);
                if (isOrthographic) {
                    v = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
                } else {
                    v = normalize(vWPosition - cameraPosition);
                }
                vec4 transmission = getIBLVolumeRefraction(vWNormal, -v, roughness,  vWPosition, modelMatrix, viewMatrix, projectionMatrix, ior, thickness, transmissionSamplerSize, transmissionSamplerMap, transmissionDepthMap, aspectRatio );
                float lalpha = alpha;

                 calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
                 accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
                 return transmission.rgb;
            }`,[s])}}();var Yv=class extends Ot{constructor(t,e){super("v3"),this.nodeType="CustomNormal",this.cnormal=t,this.alpha=e}generate(t,e){if(t.isShader("fragment")){let n=t.include(Yv.Nodes.customNormal),i=[];return i.push(this.cnormal.build(t,"v3")),i.push("normal"),i.push(this.alpha.build(t,"f")),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("CustomNormalNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.cnormal.copy(t.cnormal),this.alpha.copy(t.alpha),this}},Zv=Yv;Zv.Nodes=function(){return{customNormal:new Ye(`vec3 customNormal(vec3 cnormal, vec3 norm, float alpha) {
				vec3 normal = packNormalToRGB( norm ).rgb;
				normal *= step( vec3(0.5), cnormal );

				accumAlpha += ( 1.0 - accumAlpha ) * alpha;

				return normal;
			}`)}}();var Kv=class extends Ot{constructor(t,e,n,i,r,s,a,o){super("v3"),this.nodeType="Gradient",this.gradientType=t,this.smooth=e,this.colors=n,this.steps=i,this.offset=r,this.morph=s,this.angle=a,this.alpha=o,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.isShader("fragment")){t.define("GRAD_MAX",10),t.require("uv"),t.requires.uv=[!0],t.addFragmentVariable(this.calpha,"float");let n=t.include(Kv.Nodes.gradient),i=[];return i.push(this.gradientType.build(t,"i")),i.push(this.smooth.build(t,"b")),i.push(this.colors.build(t,"v4[]")),i.push(this.steps.build(t,"f[]")),i.push(this.offset.build(t,"v2")),i.push(this.morph.build(t,"v2")),i.push(this.angle.build(t,"f")),i.push(this.alpha.build(t,"f")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("GradientNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.gradientType=t.gradientType.clone(),this.smooth=t.smooth.clone(),this.colors=t.colors.clone(),this.steps=t.steps.clone(),this.offset=t.offset.clone(),this.morph=t.morph.clone(),this.angle=t.angle.clone(),this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},Qv=Kv;Qv.Nodes=function(){return{gradient:new Ye(`vec3 gradient(int gradientType, bool smoothed, vec4 colors[GRAD_MAX], float steps[GRAD_MAX], vec2 offset, vec2 morph, float angle, float alpha, out float calpha) {
				vec4 color = colors[0];
				vec2 m = morph / vUv.xy;
				vec2 rot = vec2( 0.5 + m.x, m.y );
				vec2 dt = vec2(
					cos( angle ) * rot.x - sin( angle ) * rot.y,
					sin( angle ) * rot.x + cos( angle ) * rot.y
				);
				vec2 pt = ( vUv - 0.5 + offset ) / 2.0 + dt / 2.0;
				float t = dot( pt, dt ) / dot( dt, dt );
				if ( gradientType == 1 ) {
					t = distance (
						( vUv + morph ) * 3.0,
						( vUv + offset ) + 1.0
					) + angle;
				} else if ( gradientType == 2 ) {
					float polar = atan(
						vUv.x + morph.x - 0.5 + offset.x,
						vUv.y + morph.y - 0.5 + offset.y
					) * -1.0;
					t = fract( ( angle / PI / -2.0 ) + 0.5 * ( polar / PI ) );
				}

				float p;
				if (smoothed) {
					for ( int i = 1; i < GRAD_MAX; i++ ) {
						p = clamp( ( t - steps[i-1] ) / ( steps[i] - steps[i-1] ), 0.0, 1.0 );
						color = mix(color, colors[i], smoothstep(0.0, 1.0, p));
					}

				} else {
					for ( int i = 1; i < GRAD_MAX; i++ ) {
						p = clamp( ( t - steps[i-1] ) / ( steps[i] - steps[i-1] ), 0.0, 1.0 );
						color = mix(color, colors[i], p);
					}
				}

				float lalpha = alpha * color.a;
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;

				return color.xyz;
			}`)}}();var Au=(t=>(t.NOISE="noise",t.MAP="map",t))(Au||{}),ey=class extends Ot{constructor(t=new vt(0),e,n,i,r,s){super("v3"),this.nodeType="VertexDisplacement",this.displacementTypeIndex=t,this.intensity=e,this.movementOrTexture=n,Object.values(Au)[this.displacementTypeIndex.value]==="map"&&(this.mat=new Hv(this.movementOrTexture.value.matrix)),this.cropOrOffset=i,this.scale=r,this.noiseFunctionIndex=s}generate(t,e){if(t.isShader("vertex")){t.define("USE_LAYER_DISPLACE");let n,i=[];switch(i.push("displaced_position"),i.push("displaced_normal"),Object.values(Au)[this.displacementTypeIndex.value]){case"map":{n=t.include(ey.Nodes.map),i.push(this.movementOrTexture.getTexture(t,"t")),i.push("uv"),i.push(this.cropOrOffset.build(t,"f")),this.mat&&i.push(this.mat.build(t,"mat3"));break}case"noise":{let r=Object.values(Rd)[this.noiseFunctionIndex.value],s=new Ye(`vec3 orthogonal(vec3 v) {
							return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0) : vec3(0.0, -v.z, v.y));
						}`),a=new Ye(`vec3 distorted(vec3 p, vec3 n, float scale, float intensity, vec3 offset, float neighbour_offset, float movement) {
							return p + n * ${r}((p + offset) * scale * 0.001 + neighbour_offset + (movement * 0.1)) * intensity;
						}`,[hi.simplex,hi.simplexFractal,hi.simplexAshima,hi.fbm,hi.perlin]),o=new Ye(`vec3 vertexDisplacementNoise(vec3 position, vec3 normal, float scale, vec3 offset, float movement, float intensity, out vec3 displaced_normal) {
							vec3 displaced_position = distorted(position, normal, scale, intensity, offset, neighbor_offset, movement);
							vec3 tangent1 = orthogonal(normal);
							vec3 tangent2 = normalize(cross(normal, tangent1));

                            // TODO(Max): The distance to the neighbors was originally scaled by 0.1.
                            // This caused some small oval/circular visual artifacts in the lighting.
                            // For now, simply using neighbors further away betters the problem,
                            // but we should figure out the underlying cause when we have some time.
                            // Maybe its related to how we calculate the tangent and bitangent?
							vec3 nearby1 = position + tangent1;
							vec3 nearby2 = position + tangent2;
							vec3 distorted1 = distorted(nearby1, normal, scale, intensity, offset, neighbor_offset, movement);
							vec3 distorted2 = distorted(nearby2, normal, scale, intensity, offset, neighbor_offset, movement);
							displaced_normal = normalize(cross(distorted1 - displaced_position, distorted2 - displaced_position));
							return displaced_position;
						}`,[a,s]);n=t.include(o),i.push(this.scale.build(t,"f")),i.push(this.cropOrOffset.build(t,"v3")),i.push(this.movementOrTexture.build(t,"f"));break}}return i.push(this.intensity.build(t,"f")),i.push("displaced_normal"),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("VertexDisplacementNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){var e,n;return super.copy(t),this.noiseFunctionIndex=(e=t.noiseFunctionIndex)==null?void 0:e.clone(),this.scale=(n=t.scale)==null?void 0:n.clone(),this.cropOrOffset=t.cropOrOffset.clone(),this.intensity=t.intensity.clone(),this.movementOrTexture=t.movementOrTexture.clone(),this}},Cu=ey;Cu.Nodes=function(){let t=new Ye(`vec3 orthogonal(vec3 v) {
				return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0) : vec3(0.0, -v.z, v.y));
			}`),e=new Ye(`float displacementMapTexture(sampler2D tex, float crop, vec2 uv, mat3 mat, vec2 offset) {
				vec2 uvs = (mat * vec3(uv * 2.0 - 1.0, 1.0) / 2.0 + 0.5).xy + offset;
				vec4 tmp = texture2D(tex, uvs);
				vec3 col = tmp.rgb;
				if (crop > 0.5) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						return 0.0;
					}
				}
				return col.r;
			}`);return{map:new Ye(`vec3 vertexDisplacementMap(vec3 position, vec3 normal, sampler2D tex, vec2 uv, float crop, mat3 mat, float intensity, out vec3 displaced_normal) {
				vec3 displaced_position = position + normal * displacementMapTexture(tex, crop, uv, mat, vec2(0.0)) * intensity;
				vec3 tangent1 = normalize(orthogonal(normal));
				vec3 tangent2 = normalize(cross(normal, tangent1));
				vec3 nearby1 = position + tangent1 * 0.1;
				vec3 nearby2 = position + tangent2 * 0.1;
				vec3 distorted1 = nearby1 + normal * displacementMapTexture(tex, crop, uv, mat, vec2(neighbor_offset)) * intensity;
				vec3 distorted2 = nearby2 + normal * displacementMapTexture(tex, crop, uv, mat, vec2(neighbor_offset)) * intensity;
				displaced_normal = normalize(cross(distorted1 - displaced_position, distorted2 - displaced_position));
				return displaced_position;
			}`,[t,e])}}();var ty=class extends Ot{constructor(t=new ut,e=new ut,n=new ut,i=new ut,r=new ut,s=new ut,a=new ut,o=new ut,l=new ut,c=new ut,h=new ut,d=new ut){super("v3"),this.nodeType="Noise",this.scale=t,this.size=e,this.move=n,this.fA=i,this.fB=r,this.distortion=s,this.colorA=a,this.colorB=o,this.colorC=l,this.colorD=c,this.alpha=h,this.noiseType=d,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e,n,i,r){t.require("uv"),t.requires.uv=[!0],t.addFragmentVariable(this.calpha,"float");let s=Object.values(Rd)[this.noiseType.value],a=new Ye(`vec3 ${s}customNoise(float scale, vec3 size, float move, vec2 fA, vec2 fB, vec2 distortion, vec4 colorA, vec4 colorB, vec4 colorC, vec4 colorD, float alpha, out float calpha) {
                vec3 st = position / size;
				st /= scale;
				vec3 q = vec3(${s}(st),
							  ${s}(st + vec3(1.0)),
							  ${s}(st + vec3(1.0)));
				vec3 r = vec3(${s}(st + vec3(distortion, 1.0) * q + vec3(fA, 1.0) + move),
							  ${s}(st + vec3(distortion, 1.0) * q + vec3(fB, 1.0) + move), 
							  ${s}(st * q));
				float f = ${s}(st + r);
				vec4 color;
				color = mix(colorA, colorB, clamp((f * f) * 4.0, 0.0, 1.0));
				color = mix(color, colorC, clamp(length(q), 0.0, 1.0));
				color = mix(color, colorD, clamp(length(r.x), 0.0, 1.0));

                float lalpha = alpha * color.a;
                calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );

			    accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return clamp(color, 0.0, 1.0).rgb;
			}`,[hi.simplex,hi.simplexFractal,hi.simplexAshima,hi.fbm,hi.perlin]),o=t.include(a),l=[];return l.push(this.scale.build(t,"f")),l.push(this.size.build(t,"v3")),l.push(this.move.build(t,"f")),l.push(this.fA.build(t,"v2")),l.push(this.fB.build(t,"v2")),l.push(this.distortion.build(t,"v2")),l.push(this.colorA.build(t,"v4")),l.push(this.colorB.build(t,"v4")),l.push(this.colorC.build(t,"v4")),l.push(this.colorD.build(t,"v4")),l.push(this.alpha.build(t,"f")),l.push(this.calpha),t.format(o+"("+l.join(",")+")",this.getType(t),e)}copy(t){return super.copy(t),this.scale.copy(t.scale),this.size.copy(t.size),this.move.copy(t.move),this.fA.copy(t.fA),this.fB.copy(t.fB),this.distortion.copy(t.distortion),this.colorA.copy(t.colorA),this.colorB.copy(t.colorB),this.colorC.copy(t.colorC),this.colorD.copy(t.colorD),this.alpha.copy(t.alpha),this.calpha=t.calpha,this.noiseType.copy(t.noiseType),this}};ty.numOctaves=5;var km=class extends Ot{constructor(t=new ut,e=new ut,n=new ut,i=new ut){super("v3"),this.nodeType="Blend",this.a=t,this.b=e,this.alpha=n,this.mode=i}generate(t,e){if(t.isShader("fragment")){let n=[];return n.push(this.a.build(t,"c")),n.push(this.b.build(t,"c")),n.push(this.alpha.build(t,"f")),n.push(this.mode.build(t,"i")),t.format("spe_blend("+n.join(",")+")",this.getType(t),e)}else return console.warn("BlendNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.a.copy(t.a),this.b.copy(t.b),this.alpha.copy(t.alpha),this.mode.copy(t.mode),this}},Ja=class extends Ot{constructor(t,e,n,i,r,s,a,o,l,c,h,d){super("v3"),this.nodeType="Depth",this.gradientType=t,this.smooth=e,this.near=n,this.far=i,this.isVector=r,this.isWorldSpace=s,this.origin=a,this.direction=o,this.colors=l,this.steps=c,this.num=h,this.alpha=d,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){let n=`g${this.uuid.toString().replace(/-/g,"")}`,i=new Ye(`vec3 ${n}_sdepth(float near, float far, vec3 origin, vec3 direction, vec4 colors[${n}_MAX_COLORS], float steps[${n}_MAX_COLORS], float alpha, out float calpha) {
               vec4 color = colors[0];
               #ifdef ${n}_IS_VECTOR
                   #ifdef ${n}_LINEAR
                       #ifdef ${n}_WORLDSPACE
                       float depth = vectorLinearWorldSpaceDepth(direction, origin, near, far);
                       #else
                       float depth = vectorLinearObjectSpaceDepth(direction, origin, near, far);
                       #endif
                   #else
                       #ifdef ${n}_WORLDSPACE
                           float depth = vectorSphericalWorldSpaceDepth(origin, near, far);
                       #else
                           float depth = vectorSphericalObjectSpaceDepth(origin, near, far);
                       #endif
                   #endif
               #else
                   float dist = length(vWPosition - cameraPosition);
			       float depth = ( dist - near ) / ( far - near );
               #endif


              float p;
              #ifdef ${n}_SMOOTH
				for ( int i = 1; i < ${n}_MAX_COLORS; i++ ) {
						p = clamp( ( depth - steps[i-1] ) / ( steps[i] - steps[i-1] ), 0.0, 1.0 );
						color = mix(color, colors[i], smoothstep(0.0, 1.0, p));
					}
              #else
                for ( int i = 1; i < ${n}_MAX_COLORS; i++ ) {
                   p = clamp(( depth - steps[i - 1] ) / ( steps[i] - steps[i - 1] ), 0.0, 1.0);
                   color = mix(color, colors[i], p);
                 }
              #endif

               float lalpha = alpha * color.a;
               calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );

			   accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
               return color.rgb;
			}`,[Ja.Nodes.vectorLinearWorldSpaceDepth,Ja.Nodes.vectorLinearObjectSpaceDepth,Ja.Nodes.vectorSphericalObjectSpaceDepth,Ja.Nodes.vectorSphericalWorldSpaceDepth]);if(t.isShader("fragment")){t.define(`${n}_MAX_COLORS`,this.num.value+1),this.smooth.value&&t.define(`${n}_SMOOTH`),this.isVector.value>.5&&t.define(`${n}_IS_VECTOR`),this.gradientType.value===0&&t.define(`${n}_LINEAR`),this.isWorldSpace.value>.5&&t.define(`${n}_WORLDSPACE`),t.require("worldPosition"),t.addFragmentVariable(this.calpha,"float");let r=t.include(i),s=[];return s.push(this.near.build(t,"f")),s.push(this.far.build(t,"f")),s.push(this.origin.build(t,"v3")),s.push(this.direction.build(t,"v3")),s.push(this.colors.build(t,"v4[]")),s.push(this.steps.build(t,"f[]")),s.push(this.alpha.build(t,"f")),s.push(this.calpha),t.format(r+"("+s.join(",")+")",this.getType(t),e)}else return console.warn("DepthNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.gradientType=t.gradientType.clone(),this.smooth=t.smooth.clone(),this.near=t.near.clone(),this.far=t.far.clone(),this.isVector=t.isVector.clone(),this.isWorldSpace=t.isWorldSpace.clone(),this.origin=t.origin.clone(),this.direction=t.direction.clone(),this.colors=t.colors.clone(),this.steps=t.steps.clone(),this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},ny=Ja;ny.Nodes=function(){let t=new Ye(`float vectorLinearWorldSpaceDepth(vec3 direction, vec3 origin, float near, float far) {
               vec3 n = normalize(direction);
               float dist = (n.x*(vWPosition.x - origin.x) + n.y*(vWPosition.y - origin.y) + n.z*(vWPosition.z - origin.z));
               return ( dist - near ) / ( far - near );
            }`),e=new Ye(`float vectorLinearObjectSpaceDepth(vec3 direction, vec3 origin, float near, float far) {
               vec3 n = normalize(direction);
               float dist = (n.x*(position.x - origin.x) + n.y*(position.y - origin.y) + n.z*(position.z - origin.z));
               return ( dist - near ) / ( far - near );
            }`),n=new Ye(`float vectorSphericalWorldSpaceDepth(vec3 origin, float near, float far) {
               float dist = length(vWPosition - origin);
               return ( dist - near ) / ( far - near );
            }`),i=new Ye(`float vectorSphericalObjectSpaceDepth(vec3 origin, float near, float far) {
               float dist = length(position - origin);
               return ( dist - near ) / ( far - near );
            }`);return{vectorLinearWorldSpaceDepth:t,vectorLinearObjectSpaceDepth:e,vectorSphericalWorldSpaceDepth:n,vectorSphericalObjectSpaceDepth:i}}();var iy=class extends Ot{constructor(t,e,n){super("v3"),this.nodeType="Matcap",this.texture=t,this.alpha=e,this.mode=n,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.isShader("fragment")){t.addFragmentVariable(this.calpha,"float");let n=t.include(iy.Nodes.matcap);t.require("normal"),t.requires.normal=!0;let i=[];return i.push(this.texture.getTexture(t,"t")),i.push("normal"),i.push(this.alpha.build(t,"f")),i.push(this.mode.build(t,"i")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("MatcapNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.texture=t.texture.clone(),this.alpha=t.alpha.clone(),this.mode=t.mode.clone(),this.calpha=t.calpha,this}},ry=iy;ry.Nodes=function(){return{matcap:new Ye(`vec3 matcap(sampler2D matcapTex, vec3 normal, float alpha, int mode, out float calpha) {
                vec3 viewDir = normalize( vViewPosition );
                vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
                vec3 y = cross( viewDir, x );
                vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks
                vec4 matcapColor = texture2D( matcapTex, uv );

                calpha =  alpha / clamp( alpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * alpha;
                
                return matcapColor.rgb;
            }
            `)}}();var hs=class{constructor(t){this.id=2,this.layerCount=2,this.uuid=Lt.generateUUID(),this.needsUpdate=!1,this._material=t,this._layerNodes=[];let e=this._createLayer({id:0,type:"color"});this._material.color=e.color,this._material.alpha===void 0&&(this._material.alpha=new ke(1));let n=new ke(1),i=new vt(0);"shadingAlpha"in this._material&&"shadingBlend"in this._material&&(this._material.shadingAlpha=n,this._material.shadingBlend=i),this._layerNodes.push({id:0,type:"color",color:e.color,alpha:e.alpha,mode:e.mode}),this._layerNodes.push({id:1,type:"light",alpha:n,mode:i}),this.head=e.layer,this.head.next=new Zt(1,void 0,{type:"light",alpha:n,mode:i}),this.attachLightNodes(this.getLightLayer())}get material(){return this._material}set material(t){var e;this._material=t;let n,i,r=this.head;for(;r!==void 0;){if(r.type==="light"){n=r.uniforms[`f${r.id}_alpha`],i=r.uniforms[`f${r.id}_mode`];break}r=r.next}"shadingAlpha"in this._material&&"shadingBlend"in this._material&&(this._material.shadingAlpha=n,this._material.shadingBlend=i),this.attachLightNodes((e=t.userData.layers)==null?void 0:e.getLightLayer()),this.blendColors(),this.blendAfterColors(),this.blendPositions()}getLayersOfType(t){let e=[],n=this.head;for(;n;)n.type===t&&e.push(n),n=n.next;return e}addLayer(t){var e;if(t.id=(e=t.id)!=null?e:++this.id,this.layerCount++,t.type==="light"){let r=this.createLightLayer(t);return this.uuid=Lt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),r}let n=this._createLayer(t),i=n.layer;if(this.head===void 0)this.head=i;else{let r=this.head;for(;r.next!=null;)r=r.next;r.next=i}return n.color&&this._layerNodes.push({id:i.id,type:"color",color:n.color,alpha:n.alpha,mode:n.mode}),n.position&&this._layerNodes.push({id:i.id,type:"position",position:n.position}),this.uuid=Lt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),i}addLayerBeforeAt(t,e){var n;let i=this.head;t.id=(n=t.id)!=null?n:++this.id,this.layerCount++;let r=this._createLayer(t),s=r.layer;s.next=e;let a=0;if(i===e)this.head=s,r.color&&this._layerNodes.splice(0,0,{id:s.id,type:"color",color:r.color,alpha:r.alpha,mode:r.mode}),r.position&&this._layerNodes.splice(0,0,{id:s.id,type:"position",position:r.position});else{for(a=1;(i==null?void 0:i.next)!==e;)i=i==null?void 0:i.next,a++;i.next=s,r.color&&this._layerNodes.splice(a,0,{id:s.id,type:"color",color:r.color,alpha:r.alpha,mode:r.mode}),r.position&&this._layerNodes.splice(a,0,{id:s.id,type:"position",position:r.position})}return this.uuid=Lt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),s}addLayerAt(t,e){var n;e.id=(n=e.id)!=null?n:++this.id,this.layerCount++;let i=this._createLayer(e),r=i.layer;if(i.color&&this._layerNodes.splice(t,0,{id:r.id,type:"color",color:i.color,alpha:i.alpha,mode:i.mode}),i.position&&this._layerNodes.splice(t,0,{id:r.id,type:"position",position:i.position}),t==0)r.next=this.head,this.head=r;else{let s=this.head,a=this.head.next;for(let o=0;o<t-1;o++)s=a,a=a.next;r.next=a,s.next=r}return this.uuid=Lt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),r}removeLayer(t){let e=this.head,n,i=0;if((e==null?void 0:e.id)==t)this.head=e.next;else for(i=1,n=e,e=e==null?void 0:e.next;e!=null;){if(e.id==t){n.next=e.next;break}i++,n=e,e=e.next}return this.cleanupChangedLayer(e),this.blendColors(),this.blendAfterColors(),this.blendPositions(),this.uuid=Lt.generateUUID(),this.layerCount--,i}changeLayer(t,e){let n,i=this.head,r;if((i==null?void 0:i.id)==t){let s=this._createLayer(ve({id:t,uuid:i.uuid},e));r=s.layer,r.next=i.next,this.head=r,s.color&&(this._layerNodes[0]={id:r.id,type:"color",color:s.color,alpha:s.alpha,mode:s.mode}),s.position&&(this._layerNodes[0]={id:r.id,type:"position",position:s.position}),r.uniforms[`f${t}_mode`].value=i.uniforms[`f${t}_mode`].value,r.uniforms[`f${t}_alpha`].value=i.uniforms[`f${t}_alpha`].value}else{n=i,i=i.next;let s=1;for(;i!=null;){if(i.id==t){let a=this._createLayer(ve({id:t,uuid:i.uuid},e));r=a.layer,n.next=r,r.next=i.next,a.color&&(this._layerNodes[s]={id:t,type:"color",color:a.color,alpha:a.alpha,mode:a.mode}),a.position&&(this._layerNodes[s]={id:t,type:"position",position:a.position}),r.uniforms[`f${t}_mode`].value=i.uniforms[`f${t}_mode`].value,r.uniforms[`f${t}_alpha`].value=i.uniforms[`f${t}_alpha`].value;break}n=i,i=i.next,s++}}return this.uuid=Lt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),r}getLayer(t){let e=this.head;for(;e!=null&&e.id!=t;)e=e.next;return e}getLayerByUuid(t){let e=this.head;for(;e!==void 0;){if(e.uuid===t)return e;e=e.next}}getLayers(){let t=[],e=this.head;for(;e!=null;)t.push(e),e=e.next;return t}getLayerPosition(t){let e=this.head,n=0;for(;e!==void 0&&e.id!=t;)n++,e=e.next;return n}getDefines(){}getBeforeProgram(){}getLightingProgram(){}getAfterProgram(){}getVarPrograms(){}getUniforms(){}moveLayer(t,e){let n,i=this.head,r;if(t==0)n=this.head,this.head=n.next;else{for(let a=0;a<t;a++)r=i,i=i.next;r.next=i.next,n=i}if(i=this.head,r=void 0,e==0)n.next=this.head,this.head=n;else{for(let a=0;a<e-1;a++)i=i.next;n.next=i==null?void 0:i.next,i.next=n}let s=this._layerNodes.splice(t,1)[0];this._layerNodes.splice(e,0,s),this.uuid=Lt.generateUUID(),this.blendColors(),this.blendAfterColors()}updateLayerUniform(){this.uuid=Lt.generateUUID(),this.blendColors(),this.blendAfterColors()}copy(t){this.needsUpdate=!1,this.layerCount=t.layerCount,this._layerNodes=[],this.layerCount=0,this.head=void 0,this.rebuildLayerNodes(this.head,t.head);let e=t.head,n=this.head;for(;e.next!=null;)this.rebuildLayerNodes(n,e.next),n=n.next,e=e.next;return this.id=t.id,this.uuid=t.uuid,this.blendColors(),this.blendAfterColors(),this.blendPositions(),this}createLightLayer(t){let e=new ke(t.alpha),n=new vt(t.mode);this._material.shadingAlpha=e,this._material.shadingBlend=n,this._layerNodes.push({id:t.id,type:"light",alpha:e,mode:n});let i=new Zt(t.id,void 0,{type:"light",alpha:e,mode:n});if(this.head===void 0)this.head=i;else{let r=this.head;for(;r.next!=null;)r=r.next;r.next=i}return this.attachLightNodes(this.getLightLayer()),i}rebuildLayerNodes(t,e,n=!1){if(e.type==="light"){let i=n?e.uniforms[`f${e.id}_alpha`]:new ke(e.uniforms[`f${e.id}_alpha`].value),r=n?e.uniforms[`f${e.id}_mode`]:new vt(e.uniforms[`f${e.id}_mode`].value);this._material.shadingAlpha=i,this._material.shadingBlend=r,this._layerNodes.push({id:e.id,type:"light",alpha:i,mode:r}),this.head===void 0?this.head=new Zt(e.id,e.uuid,{type:"light",alpha:i,mode:r}):t&&(t.next=new Zt(e.id,e.uuid,{type:"light",alpha:i,mode:r})),this.attachLightNodes(e)}else{let i={type:e.type,id:e.id};for(let r in e.uniforms){let s=e.getName(r);if(!s)continue;let a=`f${e.id}_${s}`;if(Array.isArray(e.uniforms[a].value))i[s]=e.uniforms[a].value.map(o=>o.clone&&!n?o.clone():o);else{let o=e.uniforms[a].value;if(s==="transmissionDepthMap"){i[s]=o;continue}o!=null&&(i[s]=o.clone&&!n&&!o.isRenderTargetTexture?o.clone():o)}}this.addLayer(i)}}attachLightNodes(t){var e,n,i,r,s,a,o,l,c,h,d;let u={},p=this.getLightLayer();switch(this._material.userData.category){case"Lambert":u.emissive=new nn((n=(e=t==null?void 0:t.getValue("emissive"))==null?void 0:e.clone())!=null?n:0);break;case"Phong":u.shininess=new ke((i=t==null?void 0:t.getValue("shininess"))!=null?i:30),u.specular=new nn((s=(r=t==null?void 0:t.getValue("specular"))==null?void 0:r.clone())!=null?s:1118481);break;case"Toon":u.shininess=new ke((a=t==null?void 0:t.getValue("shininess"))!=null?a:30),u.specular=new nn((l=(o=t==null?void 0:t.getValue("specular"))==null?void 0:o.clone())!=null?l:1118481);break;case"Physical":u.roughness=new ke((c=t==null?void 0:t.getValue("roughness"))!=null?c:.3),u.metalness=new ke((h=t==null?void 0:t.getValue("metalness"))!=null?h:0),u.reflectivity=new ke((d=t==null?void 0:t.getValue("reflectivity"))!=null?d:.5);break}Object.keys(u).forEach(m=>{this._material[m]=u[m],p.uniforms[`f${p.id}_${m}`]=u[m]})}clone(t){return new hs(t).copy(this)}toJSON(t){return{id:this.id,uuid:this.uuid,head:this.head.toJSON(t)}}fromJSON(t,e,n){let i=new Zt(t.head.id,void 0,{type:t.head.type}).fromJSON(t.head,e),r=t.head.next,s=i;for(;r!=null;)s.next=new Zt(r.id,void 0,{type:r.type}).fromJSON(r,e),r=r.next,s=s.next;this._layerNodes=[],this.head=void 0,this.rebuildLayerNodes(this.head,i,!0);let a=i;for(s=this.head;a.next!=null;)this.rebuildLayerNodes(s,a.next,!0),s=s.next,a=a.next;return this._material=n,this.id=t.id,this.uuid=t.uuid,this.blendColors(),this.blendAfterColors(),this.blendPositions(),this}getLightLayer(){var t;let e=this.head;for(;e!==void 0&&e.type!=="light";)e=(t=e.next)!=null?t:e;return e}dispose(){let t=this.head;for(this._layerNodes=[],this.layerCount=0;t!==void 0;)t.hasOwnProperty("dispose")===!0&&t.dispose(),t=t.next;this.head=void 0}_createLayer(t){var e,n,i,r,s,a,o,l,c,h,d,u,p,m,f,g,v,y,w,b,S,_,E,x,A,M,C,F,$,I,Z,W,q,k,N,O,V,z,H,J,ne,B,oe,ie,le,K,pe,G,X,ee,se,he,fe,ge,_e,Ne,Be,D,L,ce,me,Te,Ce,Ue,R,ye,Ee,xe,U,we,be,qe,Le,Fe,Se,Ve,dt,Xe,cn,vn;let Xt=t.type;switch(Xt){case"color":{let Qe=new nn((e=t.color)!=null?e:5855577),st=new ke((n=t.alpha)!=null?n:1),nt=new kt("alpha / clamp(alpha + accumAlpha, 0.00001, 1.0 )","f");nt.keywords.alpha=st;let it=new vt((i=t.mode)!=null?i:0);return Qe.alpha=st,{layer:new Zt(t.id,t.uuid,{type:Xt,color:Qe,alpha:st,calpha:nt,mode:it}),color:Qe,alpha:nt,mode:it}}case"texture":{let Qe=(r=t.texture)!=null?r:new Vs,st=Qe.matrix;t.mat&&st.copy(t.mat),Qe.needsUpdate=!0;let nt=new ke((s=t.crop)!=null?s:0),it=new vt((a=t.projection)!=null?a:0),pt=new vt((o=t.axis)!=null?o:0),wt=new vt((l=t.side)!=null?l:0),Ct=new si(t.size?new j(t.size[0],t.size[1]):new j(100,100)),P=new ke((c=t.alpha)!=null?c:1),Y=new vt((h=t.mode)!=null?h:0),re=new Ki(Qe),te=new ai((d=t.textureSize)!=null?d:new T(Qe.image?Qe.image.width:0,Qe.image?Qe.image.height:0)),ue=new Gv(re,te,nt,it,pt,wt,Ct,P,Y),He=new kt(ue.calpha,"f");return{layer:new Zt(t.id,t.uuid,{type:Xt,texture:re,textureSize:te,crop:nt,projection:it,axis:pt,side:wt,size:Ct,mat:ue.mat,alpha:P,calpha:He,mode:Y}),color:ue,alpha:He,mode:Y}}case"matcap":{let Qe=(u=t.texture)!=null?u:new Vs;Qe.needsUpdate=!0;let st=new ke((p=t.alpha)!=null?p:1),nt=new Ki(Qe),it=new vt((m=t.mode)!=null?m:0),pt=new ry(nt,st,it),wt=new kt(pt.calpha,"f");return{layer:new Zt(t.id,t.uuid,{type:Xt,texture:nt,alpha:st,calpha:wt,mode:it}),color:pt,alpha:wt,mode:it}}case"fresnel":{let Qe=new nn((f=t.color)!=null?f:16777215),st=new ke((g=t.bias)!=null?g:.1),nt=new ke((v=t.scale)!=null?v:1),it=new ke((y=t.intensity)!=null?y:2),pt=new ke((w=t.factor)!=null?w:1),wt=new ke((b=t.alpha)!=null?b:1),Ct=new vt((S=t.mode)!=null?S:0),P=new jv(Qe,st,nt,it,pt,wt,Ct),Y=new kt(P.calpha,"f");return{layer:new Zt(t.id,t.uuid,{type:Xt,color:Qe,bias:st,scale:nt,intensity:it,factor:pt,alpha:wt,calpha:Y,mode:Ct}),color:P,alpha:Y,mode:Ct}}case"rainbow":{let Qe=new ke((_=t.filmThickness)!=null?_:30),st=new ke((E=t.movement)!=null?E:0),nt=new ai((x=t.wavelengths)!=null?x:new T(0,0,0)),it=new ke((A=t.noiseStrength)!=null?A:0),pt=new ke((M=t.noiseScale)!=null?M:1),wt=new ai((C=t.offset)!=null?C:new T(0,0,0)),Ct=new ke((F=t.alpha)!=null?F:1),P=new Xv(Qe,st,nt,it,pt,wt,Ct),Y=new kt(P.calpha,"f"),re=new vt(($=t.mode)!=null?$:0);return{layer:new Zt(t.id,t.uuid,{type:Xt,filmThickness:Qe,movement:st,wavelengths:nt,noiseStrength:it,noiseScale:pt,offset:wt,alpha:Ct,calpha:Y,mode:re}),color:P,alpha:Y,mode:re}}case"transmission":{let Qe=new ke((I=t.thickness)!=null?I:10),st=new ke((Z=t.ior)!=null?Z:1.5),nt=new ke((W=t.roughness)!=null?W:.5),it=new si((q=t.transmissionSamplerSize)!=null?q:new j(2048,2048)),pt=(k=t.transmissionSamplerMap)!=null?k:new Vs,wt=(N=t.transmissionDepthMap)!=null?N:new Vs,Ct=new Ki(pt),P=new Ki(wt),Y=window.innerWidth,re=window.innerHeight,te=Y>=re?new si(re/Y,1):new si(1,Y/re),ue=new ke((O=t.alpha)!=null?O:1),He=new $v(Qe,st,nt,it,Ct,P,te,ue),Ze=new kt(He.calpha,"f"),et=new vt((V=t.mode)!=null?V:0);return{layer:new Zt(t.id,t.uuid,{type:Xt,thickness:Qe,ior:st,roughness:nt,transmissionSamplerSize:it,transmissionSamplerMap:Ct,transmissionDepthMap:P,aspectRatio:te,alpha:ue,calpha:Ze,mode:et}),color:He,alpha:Ze,mode:et}}case"depth":{let Qe=new vt((z=t.gradientType)!=null?z:0),st=new Um((H=t.smooth)!=null?H:!1),nt=new ke((J=t.near)!=null?J:50),it=new ke((ne=t.far)!=null?ne:200),pt=new ke((B=t.isVector)!=null?B:1),wt=new ke((oe=t.isWorldSpace)!=null?oe:0),Ct=new ai((ie=t.origin)!=null?ie:new T),P=new ai((le=t.direction)!=null?le:new T),Y=new vt((K=t.num)!=null?K:0),re;t.colors?re=new wl(Y.value+1,t.colors):(re=new wl(Y.value+1,new ct(0,0,0,1)),re.value[1]=new ct(1,1,1,1));let te;t.steps?te=new Qi(Y.value+1,t.steps):(te=new Qi(Y.value+1,1),te.value[0]=0);let ue=new ke((pe=t.alpha)!=null?pe:1),He=new vt((G=t.mode)!=null?G:0),Ze=new ny(Qe,st,nt,it,pt,wt,Ct,P,re,te,Y,ue),et=new kt(Ze.calpha,"f");return{layer:new Zt(t.id,t.uuid,{type:Xt,gradientType:Qe,smooth:st,near:nt,far:it,isVector:pt,isWorldSpace:wt,origin:Ct,direction:P,colors:re,steps:te,num:Y,alpha:ue,calpha:et,mode:He}),color:Ze,alpha:et,mode:He}}case"noise":{let Qe=new ke((X=t.scale)!=null?X:1),st=new ai((ee=t.size)!=null?ee:new T(100,100,100)),nt=new ke((se=t.move)!=null?se:1),it=new si((he=t.fA)!=null?he:new j(1.7,9.2)),pt=new si((fe=t.fB)!=null?fe:new j(8.3,2.8)),wt=new si((ge=t.distortion)!=null?ge:new j(1,1)),Ct=new qa(t.colorA),P=new qa(t.colorB),Y=new qa(t.colorC),re=new qa(t.colorD),te=new ke((_e=t.alpha)!=null?_e:1),ue=new vt((Ne=t.mode)!=null?Ne:0),He=new vt((Be=t.noiseType)!=null?Be:0),Ze=new ty(Qe,st,nt,it,pt,wt,Ct,P,Y,re,te,He),et=new kt(Ze.calpha,"f");return{layer:new Zt(t.id,t.uuid,{type:Xt,scale:Qe,size:st,move:nt,fA:it,fB:pt,distortion:wt,colorA:Ct,colorB:P,colorC:Y,colorD:re,alpha:te,calpha:et,mode:ue,noiseType:He}),color:Ze,alpha:et,mode:ue}}case"normal":{let Qe=new ai((D=t.cnormal)!=null?D:new T(1,1,1)),st=new ke((L=t.alpha)!=null?L:1),nt=new vt((ce=t.mode)!=null?ce:0),it=new Zv(Qe,st),pt=new kt("alpha / clamp(alpha + accumAlpha, 0.00001, 1.0 )","f");return pt.keywords.alpha=st,{layer:new Zt(t.id,t.uuid,{type:Xt,cnormal:Qe,alpha:st,calpha:pt,mode:nt}),color:it,alpha:pt,mode:nt}}case"gradient":{let Qe=new vt((me=t.gradientType)!=null?me:0),st=new Um((Te=t.smooth)!=null?Te:!1),nt;t.colors?nt=new wl(t.colors.length,t.colors):(nt=new wl(10,new ct(0,0,0,1)),nt.value[1]=new ct(1,1,1,1));let it;t.steps?it=new Qi(t.steps.length,t.steps):(it=new Qi(10,1),it.value[0]=0);let pt=new si((Ce=t.offset)!=null?Ce:new j(0,0)),wt=new si((Ue=t.morph)!=null?Ue:new j(0,0)),Ct=new ke((R=t.angle)!=null?R:0),P=new ke((ye=t.alpha)!=null?ye:1),Y=new vt((Ee=t.mode)!=null?Ee:0),re=new Qv(Qe,st,nt,it,pt,wt,Ct,P),te=new kt(re.calpha,"f");return{layer:new Zt(t.id,t.uuid,{type:Xt,gradientType:Qe,smooth:st,colors:nt,steps:it,offset:pt,morph:wt,angle:Ct,alpha:P,calpha:te,mode:Y}),color:re,alpha:te,mode:Y}}case"displace":{let Qe=new vt((xe=t.displacementType)!=null?xe:0);if(Qe.value===0){let st=new ai((U=t.offset)!=null?U:new T(0,0,0)),nt=new ke((we=t.scale)!=null?we:10),it=new ke((be=t.intensity)!=null?be:8),pt=new ke((qe=t.movement)!=null?qe:1),wt=new ke((Le=t.alpha)!=null?Le:1),Ct=new vt((Fe=t.mode)!=null?Fe:0),P=new vt((Se=t.noiseType)!=null?Se:0),Y=new Cu(Qe,it,pt,st,nt,P);return{layer:new Zt(t.id,t.uuid,{displacementType:Qe,type:Xt,offset:st,scale:nt,intensity:it,movement:pt,alpha:wt,mode:Ct,noiseType:P}),position:Y}}else if(Qe.value===1){let st=(Ve=t.texture)!=null?Ve:new Vs,nt=st.matrix;t.mat&&nt.copy(t.mat),st.needsUpdate=!0;let it=new ke((dt=t.intensity)!=null?dt:8),pt=new Ki(st),wt=new ke((Xe=t.crop)!=null?Xe:0),Ct=new ke((cn=t.alpha)!=null?cn:1),P=new vt((vn=t.mode)!=null?vn:0),Y=new Cu(Qe,it,pt,wt);return{layer:new Zt(t.id,t.uuid,{displacementType:Qe,type:Xt,intensity:it,texture:pt,crop:wt,mat:Y.mat,alpha:Ct,mode:P}),position:Y}}return{}}}return{}}blendColors(){let t=this._layerNodes.findIndex(n=>n.type==="color"),e=this._layerNodes.findIndex(n=>n.type==="light");if(t!==-1&&t<e){let n=this._layerNodes[t].color;for(let i=t+1;i<e;++i){let r=this._layerNodes[i];r.type==="color"&&(n=new km(n,r.color,r.alpha,r.mode))}this._material.color=n}else this._material.color=void 0}blendAfterColors(){let t=new kt("outgoingLight","f"),e=this._layerNodes.findIndex(n=>n.type==="light");if(this._layerNodes.length>e+1){for(let n=e+1;n<this._layerNodes.length;++n){let i=this._layerNodes[n];i.type==="color"&&(t=new km(t,i.color,i.alpha,i.mode))}"afterColor"in this._material&&(this._material.afterColor=t)}else"afterColor"in this._material&&(this._material.afterColor=void 0)}blendPositions(){let t=this._layerNodes.filter(e=>e.type==="position");if(t.length>0){let e=t[0].position;for(let n=1;n<t.length;++n)t[n]&&(e=new Ii(e,t[n].position,Ii.ADD),e=new Ii(e,new ke(.5).setReadonly(!0),Ii.MUL));this._material.position=e}else this._material.position=void 0}cleanupChangedLayer(t){switch(this._layerNodes=this._layerNodes.filter(e=>e.id!==t.id),t.type){case"displace":{this.blendPositions();break}default:{this.blendColors(),this.blendAfterColors();break}}}},Ma=class extends Jn{constructor(t,e,n){super(n),this.isNodeMaterial=!0,this.type="NodeMaterial",this.wireframeLinecap="",this.wireframeLinejoin="",this.uniformsBackup={},this.userData={type:"",category:"",nodeType:""},this.fog=!0,this.vertex=t!=null?t:new Fm(new Fn(Fn.PROJECTION)),this.fragment=e!=null?e:new Fm(new nn(5855577)),this.updaters=[],this.isDetached=!0,this.dithering=!0,this.onBeforeCompile=this._onBeforeCompile}getDefines(){return this.defines}getUniforms(){return this.uniforms}getVertexShader(){return this.vertexShader}getFragmentShader(){return this.fragmentShader}_onBeforeCompile(t,e){this.build({renderer:e}),t.defines=this.defines,t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.extensionDerivatives=this.extensions.derivatives===!0,t.extensionFragDepth=this.extensions.fragDepth===!0,t.extensionDrawBuffers=this.extensions.drawBuffers===!0,t.extensionShaderTextureLOD=this.extensions.shaderTextureLOD===!0}_getLayerStack(t){let e=new hs(this);return t&&(async()=>{for(;t.image===void 0;)await new Promise(n=>requestAnimationFrame(n));e.addLayerAt(1,{type:"texture",texture:t}),this.dispose()})(),e}clampUniformsForPreview(t,e){let n=(i,r,s)=>Math.min(Math.max(i,r),s);if(this.userData.layers){for(let i of this.userData.layers.getLayers())if(i.type=="displace"){this.uniformsBackup[`f${i.id}_intensity`]=i.uniforms[`f${i.id}_intensity`].value;let r=n(i.uniforms[`f${i.id}_intensity`].value,t,e);i.uniforms[`f${i.id}_intensity`].value=r}}}restoreClampedUniforms(){if(this.userData.layers)for(let t of this.userData.layers.getLayers())t.type=="displace"&&(t.uniforms[`f${t.id}_intensity`].value=this.uniformsBackup[`f${t.id}_intensity`])}customProgramCacheKey(){return this.getHash()}updateFrame(t){for(let e=0;e<this.updaters.length;++e)t.updateNode(this.updaters[e])}build(t){var e;t=t!=null?t:{};let n=(e=t.builder)!=null?e:new hR;return n.setMaterial(this,t.renderer),n.build(this.vertex,this.fragment),this.vertexShader=n.getCode("vertex"),this.fragmentShader=n.getCode("fragment"),this.defines=n.defines,this.uniforms=n.uniforms,this.extensions=n.extensions,this.updaters=n.updaters,this.fog=n.requires.fog,this.lights=n.requires.lights,this.transparent=n.requires.transparent||this.blending>qr,this}getHash(){let t="{";return t+='"vertex":'+this.vertex.getHash()+",",t+='"fragment":'+this.fragment.getHash(),t+="}",t}copy(t){let e=this.uuid;for(let n in t)this[n]=t[n];return this.uuid=e,t.userData!==void 0&&(this.userData=JSON.parse(JSON.stringify(t.userData))),this}toJSON(t){let e=this.userData.layers;this.userData.layers=void 0;let n=super.toJSON(t);return n.type="ShaderMaterial",n.userData={type:this.userData.type,category:this.userData.category,nodeType:this.type,layers:e.toJSON(t)},n.vertex=this.vertex.toJSON(t).uuid,n.fragment=this.fragment.toJSON(t).uuid,delete n.vertexShader,delete n.fragmentShader,delete n.color,delete n.shininess,delete n.specular,delete n.roughness,delete n.metalness,delete n.uniforms,t&&!t.materials[this.uuid]&&(t.materials[this.uuid]=n),this.userData.layers=e,n}fromJSON(t,e){var n;this.defines=(n=t.defines)!=null?n:{},this.depthFunc=t.depthFunc,this.depthWrite=t.depthWrite,this.side=t.side!==void 0?t.side:Kr,this.transparent=t.transparent,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.wireframe=t.wireframe,this.userData.layers.fromJSON(t.userData.layers,e,this)}get penumbraSizeNode(){return this.fragment.penumbraSize}set penumbraSizeNode(t){this.fragment.penumbraSize=t}};Object.defineProperties(Ma.prototype,{properties:{get:function(){return this.fragment.properties}},needsUpdate:{set:function(t){t===!0&&this.version++,this.needsCompile=t},get:function(){return this.needsCompile}}});var dR=class extends ut{constructor(){super("basic"),this.nodeType="Basic",this.color=new nn(5855577)}generate(t){let e;if(t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ua.merge([Me.fog])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#if defined( USE_LAYER_DISPLACE )
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <begin_vertex>
				#endif /* !USE_LAYER_DISPLACE */
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","	vNormal = transformedNormal;","#endif"),i.push("#include <project_vertex>","#include <fog_vertex>","#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","#include <worldpos_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{this.color===void 0&&(this.color=new nn(5855577)),this.color.analyze(t,{slot:"color"}),this.alpha&&this.alpha.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"});let n=this.color.flow(t,"c",{slot:"color"}),i=this.alpha?this.alpha.flow(t,"f"):void 0,r=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0;t.requires.transparent=i!==void 0,t.addParsCode(["varying vec3 vWPosition;","#include <fog_pars_fragment>","#include <dithering_pars_fragment>","varying vec3 vViewPosition;","#include <normal_pars_fragment>"].join(`
`));let s=["#include <normal_fragment_begin>",n.code];i&&s.push(i.code,"#ifdef ALPHATEST"," if ( "+i.result+" <= ALPHATEST ) discard;","#endif"),r?s.push(r.code,`vec3 outgoingLight = ${n.result};`,`vec3 finalColor = spe_blend(outgoingLight, ${r.result}, 1.0, SPE_BLENDING_NORMAL);`):s.push(`vec3 finalColor = ${n.result};`),i?s.push(`gl_FragColor = vec4( finalColor, accumAlpha * ${i.result} );`):s.push("gl_FragColor = vec4("+n.result+", 1.0 );"),s.push("#include <fog_fragment>","#include <dithering_fragment>"),e=s.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),t.position&&(this.position=t.position.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},pR=class extends Ma{constructor(t=new dR,e){super(t,t,e),this.type="BasicNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}},ar=class extends pR{constructor(t,e,n){super(e,t),this.userData.type="BasicMaterial",this.userData.category="Basic",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof hs){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new ar(void 0,i);return r.fromJSON(e,n),r}static fromMaterial(t){let e=new ar(t.map?{map:t.map}:{}),n=e.fragment;return n.color.value.copy(t.color),n.alpha.value=t.opacity,e}dispose(){super.dispose()}},fR=class extends ut{constructor(){super("phong"),this.nodeType="Phong",this.color=new nn(5855577),this.specular=new nn(1118481),this.shininess=new ke(30),this.penumbraSize=new Qi(5,.5),this.shadingAlpha=new ke(1),this.shadingBlend=new vt(0)}build(t){let e;if(t.define("PHONG"),t.requires.lights=!0,t.extensions.derivatives=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ua.merge([Me.fog,Me.lights])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <defaultnormal_vertex>
				#endif


				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#ifdef USE_LAYER_DISPLACE
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <begin_vertex>
				#endif
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("	#include <project_vertex>","	#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","	#include <worldpos_vertex>","	#include <shadowmap_vertex>","	#include <fog_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize}),this.color===void 0&&(this.color=new nn(5855577)),this.color.analyze(t,{slot:"color"}),this.specular.analyze(t),this.shininess.analyze(t),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t);let n=this.color.flow(t,"c",{slot:"color"}),i=this.specular.flow(t,"c"),r=this.shininess.flow(t,"f"),s=this.shadingAlpha.flow(t,"f"),a=this.shadingBlend.flow(t,"i"),o=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,l=this.alpha?this.alpha.flow(t,"f"):void 0;t.requires.transparent=l!==void 0,t.addParsCode(["varying vec3 vWPosition;","uniform vec3 emissive;",`uniform float penumbraSize[${5}];`,"#include <normal_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <lights_phong_pars_fragment>","#include <shadowmap_pars_fragment>","#include <dithering_pars_fragment>"].join(`
`));let c=["#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx,viewdy));
				if (dot(normal, faceNormal) < 0.0) {
					normal *= -1.0;
				}
				`,"	BlinnPhongMaterial material;"];c.push(n.code,"	vec3 diffuseColor = "+n.result+";","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","	vec3 totalEmissiveRadiance = emissive;",i.code,"	vec3 specular = "+i.result+";",r.code,"	float shininess = max( 0.0001, "+r.result+" );","	float specularStrength = 1.0;"),l&&c.push(l.code,"#ifdef ALPHATEST","if ( "+l.result+" <= ALPHATEST ) discard;","#endif"),c.push("material.diffuseColor = diffuseColor;"),c.push("material.specularColor = specular;","material.specularShininess = shininess;","material.specularStrength = specularStrength;","#include <lights_fragment_begin>","#include <lights_fragment_end>"),c.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;"),c.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${s.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${s.result}, ${a.result} );
				}
				`),o&&c.push(o.code,`outgoingLight = spe_blend(outgoingLight, ${o.result}, 1.0, SPE_BLENDING_NORMAL);`),l?c.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${l.result} );`):c.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),c.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=c.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),this.specular=t.specular.clone(),this.shininess=t.shininess.clone(),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},mR=class extends Ma{constructor(t=new fR,e){super(t,t,e),this.type="PhongNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get specular(){return this.fragment.specular}set specular(t){this.fragment.specular=t}get shininess(){return this.fragment.shininess}set shininess(t){this.fragment.shininess=t}},is=class extends mR{constructor(t,e,n){super(e,t),this.userData.type="PhongMaterial",this.userData.category="Phong",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof hs){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new is(void 0,i);return r.fromJSON(e,n),r}static fromMaterial(t){let e=new is(t.map?{map:t.map}:{}),n=e.fragment;return n.color.value.copy(t.color),n.alpha.value=t.opacity,e}dispose(){super.dispose()}},gR=class extends ut{constructor(){super("lambert"),this.nodeType="Lambert",this.color=new nn(5855577),this.emissive=new nn(0),this.emissiveIntensity=new ke(1),this.penumbraSize=new Qi(5,.5),this.shadingAlpha=new ke(1),this.shadingBlend=new vt(0)}build(t){let e;if(t.define("LAMBERT"),t.requires.lights=!0,t.extensions.derivatives=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ua.merge([Me.fog,Me.lights])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","varying vec3 vLightFront;","varying vec3 vIndirectFront;","#ifndef DOUBLE_SIDED","   #define DOUBLE_SIDED","#endif","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","	varying vec3 vIndirectBack;","#endif","#include <bsdfs>","#include <lights_pars_begin>","#include <color_pars_vertex>","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#ifdef USE_LAYER_DISPLACE
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <begin_vertex>
				#endif
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("	#include <project_vertex>","	#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","	#include <worldpos_vertex>",`
					vec3 diffuse = vec3( 1.0 );
					GeometricContext geometry;
					geometry.position = mvPosition.xyz;
					geometry.normal = normalize( transformedNormal );
					geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
					GeometricContext backGeometry;
					backGeometry.position = geometry.position;
					backGeometry.normal = -geometry.normal;
					backGeometry.viewDir = geometry.viewDir;
					vLightFront = vec3( 0.0 );
					vIndirectFront = vec3( 0.0 );
					#ifdef DOUBLE_SIDED
						vLightBack = vec3( 0.0 );
						vIndirectBack = vec3( 0.0 );
					#endif
					IncidentLight directLight;
					float dotNL;
					vec3 directLightColor_Diffuse;
					vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
					vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
					#ifdef DOUBLE_SIDED
						vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
						vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
					#endif
					#if NUM_POINT_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
							getPointLightInfo( pointLights[ i ], geometry, directLight );
							dotNL = dot( geometry.normal, directLight.direction );
							directLightColor_Diffuse = directLight.color;
							vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
							#ifdef DOUBLE_SIDED
								vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
							#endif
						}
						#pragma unroll_loop_end
					#endif
					#if NUM_SPOT_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
							getSpotLightInfo( spotLights[ i ], geometry, directLight );
							dotNL = dot( geometry.normal, directLight.direction );
							directLightColor_Diffuse = directLight.color;
							vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
							#ifdef DOUBLE_SIDED
								vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
							#endif
						}
						#pragma unroll_loop_end
					#endif
					#if NUM_DIR_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
							getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
							dotNL = dot( geometry.normal, directLight.direction );
							directLightColor_Diffuse = directLight.color;
							vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
							#ifdef DOUBLE_SIDED
								vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
							#endif
						}
						#pragma unroll_loop_end
					#endif
					#if NUM_HEMI_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
							vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
							#ifdef DOUBLE_SIDED
								vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
							#endif
						}
						#pragma unroll_loop_end
					#endif
				`,"	#include <shadowmap_vertex>","	#include <fog_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize}),this.color===void 0&&(this.color=new nn(5855577)),this.color.analyze(t,{slot:"color"}),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t);let n=this.color.flow(t,"c",{slot:"color"}),i=this.emissive.flow(t,"c",{slot:"emissive"}),r=this.emissiveIntensity.flow(t,"f",{slot:"emissive"}),s=this.shadingAlpha.flow(t,"f"),a=this.shadingBlend.flow(t,"i"),o=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,l=this.alpha?this.alpha.flow(t,"f"):void 0;t.requires.transparent=l!==void 0,t.addParsCode([`uniform float penumbraSize[${5}];`,"varying vec3 vViewPosition;","varying vec3 vWPosition;","varying vec3 vLightFront;","varying vec3 vIndirectFront;","#ifndef DOUBLE_SIDED","   #define DOUBLE_SIDED","#endif","#include <normal_pars_fragment>","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","	varying vec3 vIndirectBack;","#endif","#include <bsdfs>","#include <lights_pars_begin>","#include <fog_pars_fragment>","#include <shadowmap_pars_fragment>","#include <shadowmask_pars_fragment>","#include <clipping_planes_pars_fragment>","#include <dithering_pars_fragment>"].join(`
`));let c=["#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx, viewdy));
				bool isFrontFacing = (dot(normal, faceNormal) >= 0.0);
				`,"#include <clipping_planes_fragment>"];c.push(n.code,"vec3 diffuseColor = "+n.result+";","ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );"),l&&c.push(l.code,"#ifdef ALPHATEST","if ( "+l.result+" <= ALPHATEST ) discard;","#endif"),c.push("#ifdef DOUBLE_SIDED","	reflectedLight.indirectDiffuse += ( isFrontFacing ) ? vIndirectFront : vIndirectBack;","#else","	reflectedLight.indirectDiffuse += vIndirectFront;","#endif","#include <lightmap_fragment>","reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );","#ifdef DOUBLE_SIDED","	reflectedLight.directDiffuse = ( isFrontFacing ) ? vLightFront : vLightBack;","#else","	reflectedLight.directDiffuse = vLightFront;","#endif","reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();"),i&&c.push(i.code,"reflectedLight.directDiffuse += "+i.result+" * "+r.result+";"),c.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;"),c.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${s.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${s.result}, ${a.result} );
				}
				`),o&&c.push(o.code,`outgoingLight = spe_blend(outgoingLight, ${o.result}, 1.0, SPE_BLENDING_NORMAL);`),l?c.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${l.result} );`):c.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),c.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=c.join(`
`)}return e}copy(t){return super.copy(t),this.emissiveIntensity=t.emissiveIntensity.clone(),t.color&&(this.color=t.color.clone()),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),t.emissive&&(this.emissive=t.emissive.clone()),this}},vR=class extends Ma{constructor(t=new gR,e){super(t,t,e),this.type="LambertNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get emissive(){return this.fragment.emissive}set emissive(t){this.fragment.emissive=t}get emissiveIntensity(){return this.fragment.emissiveIntensity}set emissiveIntensity(t){this.fragment.emissiveIntensity=t}},sy=class extends vR{constructor(t,e,n){super(e,t),this.userData.type="LambertMaterial",this.userData.category="Lambert",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof hs){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new sy(void 0,i);return r.fromJSON(e,n),r}dispose(){super.dispose()}},yR=class extends ut{constructor(){super("toon"),this.nodeType="Toon",this.color=new nn(5855577),this.specular=new nn(1118481),this.shininess=new ke(30),this.penumbraSize=new Qi(5,.5),this.shadingAlpha=new ke(1),this.shadingBlend=new vt(0)}build(t){let e;if(t.define("TOON"),t.requires.lights=!0,t.extensions.derivatives=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ua.merge([Me.fog,Me.lights])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#ifdef USE_LAYER_DISPLACE
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <begin_vertex>
				#endif
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("	#include <project_vertex>","	#include <fog_vertex>","	#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","	#include <worldpos_vertex>","	#include <shadowmap_vertex>","	#include <fog_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize}),this.color===void 0&&(this.color=new nn(5855577)),this.color.analyze(t,{slot:"color"}),this.specular.analyze(t),this.shininess.analyze(t),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t);let n=this.color.flow(t,"c",{slot:"color"}),i=this.specular.flow(t,"c"),r=this.shininess.flow(t,"f"),s=this.shadingAlpha.flow(t,"f"),a=this.shadingBlend.flow(t,"i"),o=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,l=this.alpha?this.alpha.flow(t,"f"):void 0;t.requires.transparent=l!==void 0,t.addParsCode([`uniform float penumbraSize[${5}];`,"varying vec3 vWPosition;","#include <normal_pars_fragment>","#include <gradientmap_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <dithering_pars_fragment>",`
					varying vec3 vViewPosition;
					struct ToonMaterial {
						vec3	diffuseColor;
						vec3	specularColor;
						float	specularShininess;
						float	specularStrength;
					};
					void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
						vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
			
						reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
						reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
					}
					void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
						reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
					}
					#define RE_Direct				RE_Direct_Toon
					#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
					#define Material_LightProbeLOD( material )	(0)
					`,"#include <shadowmap_pars_fragment>","#include <bumpmap_pars_fragment>","#include <normalmap_pars_fragment>"].join(`
`));let c=["#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx,viewdy));
				if (dot(normal, faceNormal) < 0.0) {
					normal *= -1.0;
				}
				`,"	ToonMaterial material;"];c.push(n.code,"	vec3 diffuseColor = "+n.result+";","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );",i.code,"	vec3 specular = "+i.result+";",r.code,"	float shininess = max( 0.0001, "+r.result+" );","	float specularStrength = 1.0;"),l&&c.push(l.code,"#ifdef ALPHATEST","if ( "+l.result+" <= ALPHATEST ) discard;","#endif"),c.push("material.diffuseColor = diffuseColor;"),c.push("material.specularColor = specular;","material.specularShininess = shininess;","material.specularStrength = specularStrength;","#include <lights_fragment_begin>","#include <lights_fragment_end>"),c.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular;"),c.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${s.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${s.result}, ${a.result} );
				}
				`),o&&c.push(o.code,`outgoingLight = spe_blend(outgoingLight, ${o.result}, 1.0, SPE_BLENDING_NORMAL);`),l?c.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${l.result} );`):c.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),c.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=c.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),this.specular=t.specular.clone(),this.shininess=t.shininess.clone(),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},xR=class extends Ma{constructor(t=new yR,e){super(t,t,e),this.type="ToonNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get specular(){return this.fragment.specular}set specular(t){this.fragment.specular=t}get shininess(){return this.fragment.shininess}set shininess(t){this.fragment.shininess=t}},ay=class extends xR{constructor(t,e,n){super(e,t),this.userData.type="ToonMaterial",this.userData.category="Toon",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof hs){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new ay(void 0,i);return r.fromJSON(e,n),r}dispose(){super.dispose()}},bR=class extends ut{constructor(){super("standard"),this.nodeType="Standard",this.color=new nn(5855577),this.roughness=new ke(.3),this.metalness=new ke(0),this.reflectivity=new ke(.5),this.penumbraSize=new Qi(5,.5),this.shadingAlpha=new ke(1),this.shadingBlend=new vt(0)}build(t){let e;if(t.define("STANDARD"),t.requires.lights=!0,t.extensions.derivatives=!0,t.extensions.shaderTextureLOD=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ua.merge([Me.fog,Me.lights])),Me.LTC_1&&(t.uniforms.ltc_1={value:void 0},t.uniforms.ltc_2={value:void 0}),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#if defined( USE_LAYER_DISPLACE )
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <begin_vertex>
				#endif /* !USE_LAYER_DISPLACE */
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("#include <project_vertex>","#include <fog_vertex>","#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","#include <worldpos_vertex>","#include <shadowmap_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize});let n={gamma:!0};this.color===void 0&&(this.color=new nn(5855577)),this.color.analyze(t,{slot:"color",context:n}),this.roughness.analyze(t),this.metalness.analyze(t),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t),this.reflectivity&&this.reflectivity.analyze(t);let i=this.color.flow(t,"c",{slot:"color",context:n}),r=this.roughness.flow(t,"f"),s=this.metalness.flow(t,"f"),a=this.shadingAlpha.flow(t,"f"),o=this.shadingBlend.flow(t,"i"),l=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,c=this.alpha?this.alpha.flow(t,"f"):void 0,h=this.reflectivity?this.reflectivity.flow(t,"f"):void 0;t.requires.transparent=c!==void 0,t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;",`uniform float penumbraSize[${5}];`,"#include <normal_pars_fragment>","#include <dithering_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <lights_physical_pars_fragment>","#include <shadowmap_pars_fragment>"].join(`
`));let d=["#include <clipping_planes_fragment>","	#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx,viewdy));
				if (dot(normal, faceNormal) < 0.0) {
					normal *= -1.0;
				}
				`,"	PhysicalMaterial material;","	material.diffuseColor = vec3( 1.0 );"];d.push(i.code,"	vec3 diffuseColor = "+i.result+";","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );",r.code,"	float roughnessFactor = "+r.result+";",s.code,"	float metalnessFactor = "+s.result+";"),c&&d.push(c.code,"#ifdef ALPHATEST","	if ( "+c.result+" <= ALPHATEST ) discard;","#endif"),d.push("vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );"),d.push("material.diffuseColor = diffuseColor * ( 1.0 - metalnessFactor );","material.roughness = max( roughnessFactor, 0.0525 );","material.roughness += geometryRoughness;","material.roughness = min( material.roughness, 1.0 );","material.roughness = clamp( roughnessFactor, 0.04, 1.0 );"),h?d.push(h.code,"material.specularColor = mix( vec3( 0.16 * pow2( "+h.result+" ) ), diffuseColor, metalnessFactor );"):d.push("material.specularColor = mix( vec3( 0.04 ), diffuseColor, metalnessFactor );"),d.push("#include <lights_fragment_begin>"),d.push("#include <lights_fragment_end>"),d.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular;"),d.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${a.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${a.result}, ${o.result} );
				}
				`),l&&d.push(l.code,`outgoingLight = spe_blend(outgoingLight, ${l.result}, 1.0, SPE_BLENDING_NORMAL);`),c?d.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${c.result} );`):d.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),d.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=d.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),this.roughness=t.roughness.clone(),this.metalness=t.metalness.clone(),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.reflectivity&&(this.reflectivity=t.reflectivity.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},_R=class extends Ma{constructor(t=new bR,e){super(t,t,e),this.type="StandardNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get roughness(){return this.fragment.roughness}set roughness(t){this.fragment.roughness=t}get metalness(){return this.fragment.metalness}set metalness(t){this.fragment.metalness=t}get reflectivity(){return this.fragment.reflectivity}set reflectivity(t){this.fragment.reflectivity=t}},oy=class extends _R{constructor(t,e,n){super(e,t),this.userData.type="PhysicalMaterial",this.userData.category="Physical",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof hs){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new oy(void 0,i);return r.fromJSON(e,n),r}dispose(){super.dispose()}};function wn(t,e){let n;if(typeof t=="string"){let i=e==null?void 0:e.getColor(t);i?n=i:(console.warn("Tried to create color layer params with a color key that does not exist in the assets manager"),n=new Ar(0,0,0,0))}else return"a"in t?new Ar(t.r,t.g,t.b,t.a):new Ar(t.r,t.g,t.b,1);return n}function wR(t,e){switch(t.data.type){case"light":return xi(t);case"fresnel":return MR(t,e);case"gradient":return TR(t);case"depth":return ER(t);case"normal":return AR(t);case"noise":return CR(t,e);case"texture":return LR(t,e);case"rainbow":return PR(t);case"transmission":return DR(t,e);case"matcap":return RR(t,e);case"displace":return OR(t);case"color":default:return SR(t,e)}}function ly(t){return{type:t.data.type}}function xi(t){let{alpha:e,mode:n}=t.data;return ze(ve({},ly(t)),{alpha:e,mode:n})}function SR(t,e){return ze(ve({},xi(t)),{color:wn(t.data.color,e)})}function MR(t,e){let{bias:n,scale:i,intensity:r,factor:s,color:a}=t.data;return ze(ve({},xi(t)),{color:wn(a,e),bias:n,scale:i,intensity:r,factor:s})}function TR(t){let{gradientType:e,smooth:n,colors:i,steps:r,angle:s,offset:a,morph:o}=t.data;return ze(ve({},xi(t)),{gradientType:e,smooth:n,colors:i.map(l=>new ct(l[0],l[1],l[2],l[3])),num:i.length,steps:r,offset:new j(...a),morph:new j(...o),angle:s})}function ER(t){let{gradientType:e,near:n,far:i,isVector:r,isWorldSpace:s,origin:a,direction:o,colors:l,steps:c,smooth:h,num:d}=t.data;return ze(ve({},xi(t)),{gradientType:e,near:n,far:i,isVector:r,isWorldSpace:s,origin:new T(...a),direction:o?new T(...o):new T(1,0,0),num:d,colors:l.map(u=>new ct(u[0],u[1],u[2],u[3])),steps:c,smooth:h})}function AR(t){let{cnormal:e}=t.data;return ze(ve({},xi(t)),{cnormal:new T(e[0],e[1],e[2])})}function CR(t,e){let{data:n}=t;return ze(ve({},xi(t)),{scale:n.scale,move:n.move,fA:new j(...n.fA),fB:new j(...n.fB),size:new T(...n.size),distortion:new j(...n.distortion),colorA:wn(n.colorA,e),colorB:wn(n.colorB,e),colorC:wn(n.colorC,e),colorD:wn(n.colorD,e),noiseType:n.noiseType})}function LR(t,e){let{projection:n,axis:i,side:r,crop:s,size:a}=t.data,{image:o,wrapping:l,repeat:c,offset:h}=t.data.texture,d=new Bt,u;if(typeof o=="string")u=e==null?void 0:e.getImage(o);else{let p=new Image;p.src=nc(o.data),p.onload=()=>{e!=null&&e.onImageLoad&&(e==null||e.onImageLoad())},u=p}return d.image=u,d.repeat.set(c[0],c[1]),d.offset.set(h[0],h[1]),d.wrapS=d.wrapT=l,ze(ve({},xi(t)),{texture:d,mat:new zt().setUvTransform(h[0],h[1],c[0],c[1],0,0,0),crop:s,projection:n,axis:["x","y","z"].indexOf(i),side:[2,0,1].indexOf(r),size:a})}function PR(t){let{data:e}=t;return ze(ve({},xi(t)),{filmThickness:e.filmThickness,movement:e.movement,wavelengths:new T(...e.wavelengths),noiseStrength:e.noiseStrength,noiseScale:e.noiseScale,offset:new T(...e.offset)})}function DR(t,e){let{data:n}=t;return ze(ve({},xi(t)),{thickness:n.thickness,ior:n.ior,roughness:n.roughness,transmissionSamplerMap:e.transmissionSamplerMap,transmissionDepthMap:e.transmissionDepthMap})}function RR(t,e){let n=new Bt,{image:i}=t.data.texture,r;if(typeof i=="string")r=e==null?void 0:e.getImage(i);else{let a=new Image;a.src=nc(i.data),a.onload=()=>{e!=null&&e.onImageLoad&&(e==null||e.onImageLoad())},r=a}n.image=r;let s=16777215;return ze(ve({},xi(t)),{color:s,texture:n})}function OR(t){let{data:e}=t,n=ze(ve({},ly(t)),{intensity:e.intensity});if(e.displacementType==="noise")return ze(ve({},n),{offset:new T(...e.offset),scale:e.scale,movement:e.movement,noiseType:e.noiseType});{let i=new Bt,r=new zt().setUvTransform(0,0,1,1,0,0,0);return ze(ve({},n),{texture:i,mat:r,crop:e.crop})}}function IR(t,e,n){if(n.type==="displace"&&(t==="intensity"||t==="visible")){let i=e.uniforms[`f${e.id}_intensity`];return i?(i.value=n.intensity*(n.visible?1:0),i):void 0}if(n.type!=="displace"&&(t==="alpha"||t==="visible")){let i=e.uniforms[`f${e.id}_alpha`];return i?(i.value=n.alpha*(n.visible?1:0),i):void 0}}var no;(t=>{function e(n){return new Ae(n.x,n.y,n.z).getHex()}t.getHex=e})(no||(no={}));var Vm;(t=>{function e(n){return new ct(n.r,n.g,n.b,n.a)}t.getThreeVector4=e})(Vm||(Vm={}));var Hm;(t=>{function e(i,r){i.setRGB(r.r,r.g,r.b)}t.setThreeColor=e;function n(i){return new Ae(i.r,i.g,i.b).getHex()}t.getHex=n})(Hm||(Hm={}));function Od(t,e){return typeof t=="string"?e.getMaterialOrDeletedPlaceholder(t):cy(t,e)}function NR(t,e){return t.map(n=>Od(n,e))}function cy(t,e){var n,i;let r=(n=t.layers)!=null?n:yo.defaultTwoLayerData("phong").layers,s=zR(r),a;switch(s.category){case"basic":a=new ar;break;case"lambert":{a=new sy;break}case"toon":{a=new ay;break}case"physical":a=new oy;break;case"phong":default:{a=new is;break}}a.name=(i=t.name)!=null?i:"Untitled Material";let o=a.userData.layers;BR(o);for(let l=r.length-1;l>=0;l--)FR(o,r[l],e);switch(s.category){case"basic":break;case"lambert":{let h=a,d=wn(s.emissive,e);d instanceof Ae?h.emissive.value=d:h.emissive.value.setHex(no.getHex(d));break}case"toon":{let h=a,d=s;h.shininess.value=d.shininess;let u=wn(d.specular,e);u instanceof Ae?h.specular.value=u:h.specular.value.setHex(no.getHex(u));break}case"physical":let l=a,c=s;l.metalness.value=c.metalness,l.roughness.value=c.roughness,l.reflectivity.value=c.reflectivity;break;case"phong":default:{let h=a,d=s;h.shininess.value=d.shininess;let u=wn(d.specular,e);u instanceof Ae?h.specular.value=u:h.specular.value.setHex(no.getHex(u));break}}return a.penumbraSizeNode=e.penumbraSizeNode,o.blendColors(),o.blendAfterColors(),o.blendPositions(),a}function zR(t){for(let e of t)if(e.data.type==="light")return e.data;return{type:"light",category:"basic",visible:!0,alpha:1,mode:0}}function BR(t){for(let e of t.getLayers())t.removeLayer(e.id)}function FR(t,e,n){let i=wR(e,n);i.type==="transmission"&&(i.transmissionSamplerMap=n==null?void 0:n.transmissionSamplerMap,i.transmissionDepthMap=n==null?void 0:n.transmissionDepthMap);let r=t.addLayer(i);r.uuid=e.id;for(let s in e.data)IR(s,r,e.data)}var Rh=t=>"isEntity"in t,ca=t=>"isAbstractMesh"in t,rs=t=>t!==null&&t.isBooleanMesh,UR=t=>t.objectType==="CombinedCamera",Lo=t=>"objectHelper"in t;function kR(t,e){var n;let i=!1;e.position&&(t.position.fromArray(e.position),i=!0),e.rotation&&(t.rotation.fromArray(e.rotation),i=!0),e.scale&&(i=!0,t.scale.fromArray(e.scale)),e.hiddenMatrix!==void 0&&"hiddenMatrix"in t&&(i=!0,t.hiddenMatrix.fromArray((n=e.hiddenMatrix)!=null?n:aa.identity)),i&&(t.updateMatrix(),rs(t.parent)&&ca(t)&&t.invalidateDownstreamBooleanData(!0).recomputeBoolean()),e.position&&e.rotation&&e.scale&&e.hiddenMatrix!==void 0&&t.updateWorldMatrix(!1,!0),t.objectType==="CombinedCamera"&&(e.isUpVectorFlipped!==void 0&&(t.isUpVectorFlipped=e.isUpVectorFlipped),t.updateUp())}function VR(t,e){kR(t,e),e.name!==void 0&&(t.name=e.name),e.visible!==void 0&&(t.isEntity?t.visibility=e.visible:t.visible=e.visible)}function HR(t,e,n){VR(t,e),e.color!==void 0&&(t.color=wn(e.color,n)),e.intensity!==void 0&&(t.intensity=e.intensity),e.shadows!==void 0&&!(t instanceof Wl)&&(t.castShadow=e.shadows),t.shadow&&!(t instanceof Wl)&&e.depth!==void 0&&(t.shadow.camera.far=e.depth,t.shadow.needsUpdate=!0),e.helper!==void 0&&Lo(t)&&(t.enableHelper=e.helper,t.gizmos.shadowmap.visible=e.helper)}function GR(t,e){t.shadow.camera.right=e/2,t.shadow.camera.left=-e/2,t.shadow.camera.top=e/2,t.shadow.camera.bottom=-e/2,t.shadow.needsUpdate=!0}var zs=new fn,un=new T,je=new T,Kt=new Re;function WR(t,e,n=0,i=e.count){let r=1/0,s=1/0,a=1/0,o=-1/0,l=-1/0,c=-1/0;for(let h=n;h<i;h++){let d=e.getX(h),u=e.getY(h),p=e.getZ(h);d<r&&(r=d),u<s&&(s=u),p<a&&(a=p),d>o&&(o=d),u>l&&(l=u),p>c&&(c=p)}return t.min.set(r,s,a),t.max.set(o,l,c),t}var Gm=(t,e,n,i)=>{var r;if(ca(t)){let s=t.geometry.userData.parameters,a=t.geometry.getAttribute("position");t.geometry.userData.type==="SubdivGeometry"?un.copy(t.originalGeometry.boundingSphere.center):a!==void 0&&(WR(zs,a,t.geometry.drawRange.start,t.geometry.drawRange.count<1/0?t.geometry.drawRange.count:a.count),zs.getCenter(un)),t.forceComputeSize?zs.getSize(je).multiplyScalar(.5):je.set(s.width,s.height,(r=s.depth)!=null?r:0).multiplyScalar(.5)}else if(Lo(t)&&i===!0){let s=t.geometryHelper.getAttribute("position");zs.setFromArray(s.array),zs.getCenter(un),zs.getSize(je).multiplyScalar(.5)}else un.setScalar(0),je.setScalar(0);Kt.copy(e).multiply(t.matrixWorld),je.x===0&&je.y===0&&je.z===0?n.push(new T(un.x,un.y,un.z).applyMatrix4(Kt)):n.push(new T(-je.x,je.y,je.z).add(un).applyMatrix4(Kt),new T(-je.x,-je.y,je.z).add(un).applyMatrix4(Kt),new T(je.x,-je.y,je.z).add(un).applyMatrix4(Kt),new T(je.x,je.y,je.z).add(un).applyMatrix4(Kt),new T(-je.x,je.y,-je.z).add(un).applyMatrix4(Kt),new T(-je.x,-je.y,-je.z).add(un).applyMatrix4(Kt),new T(je.x,-je.y,-je.z).add(un).applyMatrix4(Kt),new T(je.x,je.y,-je.z).add(un).applyMatrix4(Kt))},Wm=class extends fn{constructor(){super(...arguments),this.matrix=new Re,this.vertices=[],this.faces=[],this.edges=[],this.centerEdges=[]}copy(t){return super.copy(t),this.matrix.copy(t.matrix),this.vertices=t.vertices.map(e=>e.clone()),this.faces=t.faces.map(e=>e.clone()),this.edges=t.edges.map(e=>e.clone()),this.centerEdges=t.centerEdges.map(e=>e.clone()),this}setFromObjectSize(t,e=!1){t.updateWorldMatrix(!1,e),this.makeEmpty(),this.matrix.copy(t.matrixWorld);let n=new Re().copy(t.matrixWorld).invert();return this.expandByObjectSize(t,n,e)}expandByObjectSize(t,e,n=!1){let i=[];return n===!0?t.traverseEntity(r=>{r.visible&&Gm(r,e,i,t.enableHelper===!0)}):Gm(t,e,i,t.enableHelper===!0),this.setFromPoints(i)}getCenter(t){return t=super.getCenter(t),t.applyMatrix4(this.matrix),t}getPositionToCenter(t){return t=super.getCenter(t),t.applyMatrix4(Kt.copy(this.matrix).setPosition(0,0,0)),t}computeVertices(){this.getSize(je).multiplyScalar(.5),this.getCenter(un),Kt.copy(this.matrix).setPosition(un),this.vertices=[new T(-je.x,je.y,je.z).applyMatrix4(Kt),new T(-je.x,-je.y,je.z).applyMatrix4(Kt),new T(je.x,-je.y,je.z).applyMatrix4(Kt),new T(je.x,je.y,je.z).applyMatrix4(Kt),new T(-je.x,je.y,-je.z).applyMatrix4(Kt),new T(-je.x,-je.y,-je.z).applyMatrix4(Kt),new T(je.x,-je.y,-je.z).applyMatrix4(Kt),new T(je.x,je.y,-je.z).applyMatrix4(Kt)]}computeEdges(){this.vertices.length>0&&this.computeVertices(),this.edges=[new On(this.vertices[0],this.vertices[3]),new On(this.vertices[1],this.vertices[2]),new On(this.vertices[5],this.vertices[6]),new On(this.vertices[4],this.vertices[7]),new On(this.vertices[0],this.vertices[1]),new On(this.vertices[3],this.vertices[2]),new On(this.vertices[7],this.vertices[6]),new On(this.vertices[4],this.vertices[5]),new On(this.vertices[0],this.vertices[4]),new On(this.vertices[1],this.vertices[5]),new On(this.vertices[2],this.vertices[6]),new On(this.vertices[3],this.vertices[7])],this.centerEdges=this.edges.map(t=>t.getCenter(new T))}computeFaces(){this.vertices.length>0&&this.computeVertices(),this.faces=[new T().copy(this.vertices[0]).sub(this.vertices[2]).multiplyScalar(.5).add(this.vertices[2]),new T().copy(this.vertices[7]).sub(this.vertices[5]).multiplyScalar(.5).add(this.vertices[5]),new T().copy(this.vertices[4]).sub(this.vertices[1]).multiplyScalar(.5).add(this.vertices[1]),new T().copy(this.vertices[3]).sub(this.vertices[6]).multiplyScalar(.5).add(this.vertices[6]),new T().copy(this.vertices[4]).sub(this.vertices[3]).multiplyScalar(.5).add(this.vertices[3]),new T().copy(this.vertices[1]).sub(this.vertices[6]).multiplyScalar(.5).add(this.vertices[6])]}};function Va(t){let e=[];for(let n in t){let i=t[n];delete i.metadata,e.push(i)}return e}function jR(t){let e=[];for(let n in t)e.push(t[n]);return e}var hy=t=>class extends t{hasEntityChild(){return this.children.some(e=>Rh(e))}isDescendantOf(e){e instanceof ht&&(e=e.uuid);let n=this;for(;n.parent;){if(n.parent.uuid===e)return!0;n=n.parent}return!1}attach(e,n){this.updateWorldMatrix(!0,!1);let i=new Re().copy(this.matrixWorld).invert();return e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),i.multiply(e.parent.matrixWorld)),Rh(e)?e.hiddenMatrix.premultiply(i):e.applyMatrix4(i),e.updateWorldMatrix(!1,!1),this.add(e),n!==void 0&&(this.children.pop(),this.children.splice(n,0,e)),this}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){let r=e.children[i];this.add(r.clone())}return this}toJSON(e){let n=e===void 0,i={object:{uuid:"",objectType:""}};e===void 0&&(e={geometries:{},materials:{},textures:{},images:{},interactionStates:{},nodes:{}},i.metadata={version:1.5,type:"Object",generator:"Object3D.toJSON"});let r={uuid:this.uuid,objectType:this.type};if(this.name!==""&&(r.name=this.name),r.matrix=this.matrix.toArray(),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),r.layers=this.layers.mask,JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),this.children.length>0){r.children=[];for(let s of this.children)(Rh(s)||s instanceof vi)&&r.children.push(s.toJSON(e).object)}if(n){let s=Va(e.geometries),a=Va(e.materials),o=Va(e.textures),l=Va(e.images),c=Va(e.interactionStates),h=jR(e.nodes);s.length>0&&(i.geometries=s),a.length>0&&(i.materials=a),o.length>0&&(i.textures=o),l.length>0&&(i.images=l),c.length>0&&(i.interactionStates=c),h.length>0&&(i.nodes=h)}return i.object=r,i}fromJSON(e){return this.uuid=e.uuid,e.name!==void 0&&(this.name=e.name),e.matrix!==void 0?(this.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(this.matrixAutoUpdate=e.matrixAutoUpdate),this.matrixAutoUpdate&&this.matrix.decompose(this.position,this.quaternion,this.scale)):(e.position!==void 0&&this.position.fromArray(e.position),e.rotation!==void 0&&this.rotation.fromArray(e.rotation),e.quaternion!==void 0&&this.quaternion.fromArray(e.quaternion),e.scale!==void 0&&this.scale.fromArray(e.scale)),this.castShadow=e.castShadow!==void 0,this.receiveShadow=e.receiveShadow!==void 0,e.visible!==void 0&&(this.visible=e.visible),e.frustumCulled!==void 0&&(this.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(this.renderOrder=e.renderOrder),e.layers!==void 0&&(this.layers.mask=e.layers),e.userData!==void 0&&(this.userData=e.userData),this}},Di=t=>"isEntity"in t,qR=t=>"isAbstractMesh"in t,Ta=t=>class extends hy(t){constructor(){super(...arguments),this.objectType="",this.isEntity=!0,this.raycastLock=!1,this.scaleLock=!1,this.hiddenMatrix=new Re,this._singleBBox=new Wm,this._recursiveBBox=new Wm,this.singleBBoxNeedsUpdate=!0,this.recursiveBBoxNeedsUpdate=!0,this.forceComputeSize=!1}set visibility(e){this.visible=e;for(let n of this.children)Di(n)&&n.traverseEntity(i=>{Lo(i)&&i.visible&&(i.objectHelper.visible=e)})}get visibility(){return this.visible}get singleBBox(){return this.singleBBoxNeedsUpdate&&(this.singleBBoxNeedsUpdate=!1,this._singleBBox.setFromObjectSize(this,!1),this._singleBBox.computeVertices(),this._singleBBox.computeEdges(),this._singleBBox.computeFaces()),this._singleBBox}get recursiveBBox(){return this.recursiveBBoxNeedsUpdate&&(this.recursiveBBoxNeedsUpdate=!1,this._recursiveBBox.setFromObjectSize(this,!0),this._recursiveBBox.computeVertices(),this._recursiveBBox.computeEdges(),this._recursiveBBox.computeFaces()),this._recursiveBBox}resetBBoxNeedsUpdate(){this.singleBBoxNeedsUpdate=!0,this.recursiveBBoxNeedsUpdate=!0,this.traverseAncestors(e=>{Di(e)&&(e.singleBBoxNeedsUpdate=!0,e.recursiveBBoxNeedsUpdate=!0)}),this.traverseEntity(e=>{e.singleBBoxNeedsUpdate=!0,e.recursiveBBoxNeedsUpdate=!0})}traverseEntity(e){e(this);for(let n of this.children)Di(n)&&n.traverseEntity(e)}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.multiplyMatrices(this.hiddenMatrix,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.hiddenMatrix),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);for(let n of this.children)n.updateMatrixWorld(e)}updateWorldMatrix(e,n){let i=this.parent;if(e&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.multiplyMatrices(this.hiddenMatrix,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.hiddenMatrix),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),n)for(let r of this.children)r.updateWorldMatrix(!1,!0)}shallowClone(e){return new this.constructor().shallowCopy(this,e)}shallowCopy(e,n=!0){if(super.copy(e,!1),this.raycastLock=e.raycastLock,this.scaleLock=e.scaleLock,this.hiddenMatrix.copy(e.hiddenMatrix),n===!0)for(let i of e.children)Di(i)&&this.add(i.shallowClone());return this}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(super.copy(e,!1),this.raycastLock=e.raycastLock,this.scaleLock=e.scaleLock,this.hiddenMatrix.copy(e.hiddenMatrix),n===!0)for(let i of e.children)Di(i)&&this.add(i.clone());return this}keepChildrenMatrixWorld(){let e=new Re,n=this.matrixWorld.clone();this.updateWorldMatrix(!1,!1),e.copy(this.matrixWorld).invert(),e.multiply(n);for(let i of this.children)Di(i)&&i.hiddenMatrix.premultiply(e)}toJSON(e){let n=super.toJSON(e),i=n.object;return this.raycastLock===!0&&(i.raycastLock=!0),this.scaleLock===!0&&(i.scaleLock=!0),i.hiddenMatrix=this.hiddenMatrix.toArray(),n}fromJSON(e){return super.fromJSON(e),e.raycastLock!==void 0&&(this.raycastLock=e.raycastLock),e.scaleLock!==void 0&&(this.scaleLock=e.scaleLock),this.hiddenMatrix.fromArray(e.hiddenMatrix),this}fromObject3D(e){let n=e.children;return e.children=[],Object.assign(e,{raycastLock:!1,scaleLock:!1,hiddenMatrix:new Re}),this.copy(e),e.children=n,this}toObjectTransformState(e=[]){this.updateWorldMatrix(!0,!1);let n={position:this.position.toArray(),rotation:[this.rotation.x,this.rotation.y,this.rotation.z],scale:this.scale.toArray(),hiddenMatrix:this.hiddenMatrix.toArray()};return iu(n,e)}fromObjectTransformState(e){return e.position&&this.position.fromArray(e.position),e.rotation&&this.rotation.fromArray(e.rotation),e.scale&&this.scale.fromArray(e.scale),e.hiddenMatrix&&this.hiddenMatrix.fromArray(e.hiddenMatrix),this.updateMatrix(),this}toState(e=[]){let n=ve({name:this.name,visible:this.visible,raycastLock:this.raycastLock},this.toObjectTransformState(e));return iu(n,e)}fromState(e,n){return e.name&&(this.name=e.name),e.raycastLock!==void 0&&(this.raycastLock=e.raycastLock),e.type!=="OrthographicCamera"&&e.type!=="PerspectiveCamera"&&(this.matrixAutoUpdate=!1),e.visible!==void 0&&(this.visibility=e.visible),this.fromObjectTransformState(e),this}},Lu=class extends ht{constructor(t,e={}){super(),this.object=t;let n=t.recursiveBBox.getSize(new T),i=.1;this.parameters=su.defaultData(n.toArray(),i),Xl(this.parameters,e),this.update(),this.setHideBase(this.parameters.hideBase)}refreshMaterial(){if("material"in this.object)for(let t of this.children)t.material=this.object.material}setHideBase(t){if("material"in this.object){if(Array.isArray(this.object.material)){if(this.children.length>0){for(let e of this.object.material)e.visible=!0;if(t){let e=this.object.material.map(n=>n.clone());for(let n of this.children)n.material=e}else for(let e of this.children)e.material=this.object.material}for(let e of this.object.material)e.visible=!t}else{if(this.children.length>0)if(this.object.material.visible=!0,t){let e=this.object.material.clone();for(let n of this.children)n.material=e}else for(let e of this.children)e.material=this.object.material;this.object.material.visible=!t}this.parameters.hideBase=t}}update(){switch(this._updateCount(),this.parameters.type){case"radial":this._updateRadial(this.parameters);break;case"linear":this._updateLinear(this.parameters);break;case"grid":this._updateGrid(this.parameters)}this.children.forEach(t=>t.updateMatrix())}_updateCount(){let t=this.parameters.type==="grid"?this.parameters.grid.count[0]*this.parameters.grid.count[1]*this.parameters.grid.count[2]:this.parameters.count;if(this.children.length!==t)if(this.children.length<t)for(let e=0,n=t-this.children.length;e<n;++e){let i=this.object.shallowClone(!1);i.visible=!0,this.add(i),this.parameters.hideBase&&this.setHideBase(!0)}else for(let e=0,n=this.children.length-t;e<n;++e)this.remove(this.children[0])}_updateRadial(t){let e=t.radial,n=e.start*Lt.DEG2RAD,i=e.end*Lt.DEG2RAD,r=n-i,s=new zi(e.rotation[0]*Lt.DEG2RAD,e.rotation[1]*Lt.DEG2RAD,e.rotation[2]*Lt.DEG2RAD),a;switch(e.axis){case"z":a=new T(0,0,1);break;case"y":a=new T(0,1,0);break;default:case"x":a=new T(1,0,0);break}for(let[o,l]of this.children.entries()){l.hiddenMatrix.identity(),l.scale.x=e.scale[0],l.scale.y=e.scale[1],l.scale.z=e.scale[2],l.position.setScalar(0);let c=r/t.count*o-n;switch(e.axis){case"x":l.rotation.set(0,c,0);break;case"y":l.rotation.set(0,0,c);break;case"z":l.rotation.set(c,0,0);break}l.translateOnAxis(a,e.radius),l.position.x+=e.position[0],l.position.y+=e.position[1],l.position.z+=e.position[2],e.alignment===!0?(l.rotation.x+=s.x,l.rotation.y+=s.y,l.rotation.z+=s.z):l.rotation.copy(s)}}_updateLinear(t){if(t.type!=="linear")throw new Error;let e=t.linear,n=new zi(e.rotation[0]*Lt.DEG2RAD,e.rotation[1]*Lt.DEG2RAD,e.rotation[2]*Lt.DEG2RAD);for(let[i,r]of this.children.entries())r.hiddenMatrix.identity(),r.scale.x=1+(e.scale[0]-1)*i,r.scale.y=1+(e.scale[1]-1)*i,r.scale.z=1+(e.scale[2]-1)*i,r.rotation.x=n.x*i,r.rotation.y=n.y*i,r.rotation.z=n.z*i,r.position.x=e.position[0]*i,r.position.y=e.position[1]*i,r.position.z=e.position[2]*i}_updateGrid(t){let e=0,n=t.grid;if(n.useCenter===!0){let i={x:n.count[0]%2===0?2:1,y:n.count[1]%2===0?2:1,z:n.count[2]%2===0?2:1},r=new T(n.size[0]*(n.count[0]-i.x)*.5,n.size[1]*(n.count[1]-i.y)*.5,n.size[2]*(n.count[2]-i.z)*.5);for(let s=0;s<n.count[0];s++)for(let a=0;a<n.count[1];a++)for(let o=0;o<n.count[2];o++){let l=this.children[e++];l.hiddenMatrix.identity(),l.scale.setScalar(1),l.rotation.set(0,0,0),l.position.x=n.size[0]*s-r.x,l.position.y=n.size[1]*a-r.y,l.position.z=n.size[2]*o-r.z}}else for(let i=0;i<n.count[0];i++)for(let r=0;r<n.count[1];r++)for(let s=0;s<n.count[2];s++){let a=this.children[e++];a.hiddenMatrix.identity(),a.scale.setScalar(1),a.rotation.set(0,0,0),a.position.x=n.size[0]*i,a.position.y=-n.size[1]*r,a.position.z=-n.size[2]*s}}fromJSON(t){return this}toJSON(){return{}}fromClonerState(t){return t.hideBase!==void 0&&this.setHideBase(t.hideBase),Xl(this.parameters,t),this.update(),this}},Ui=class extends Ta(pn){constructor(t,e){super(t,e),this.isAbstractMesh=!0,this.isBooleanMesh=!1,this.booleanMeshSetAddress=-1,this.booleanWasTransformed=!1,this.booleanMatrixInvOld=new Re,this.booleanExclude=null,Array.isArray(e)&&(this.selectedMaterial=0,t.groups.length===0&&t.addGroup(0,t.getAttribute("position").count,0))}get cloner(){return this._cloner}set cloner(t){this._cloner&&this.remove(this._cloner),t&&this.add(t),this._cloner=t}getSelectedMaterial(t){return Array.isArray(this.material)?(this.selectedMaterial===void 0&&(this.selectedMaterial=t!=null?t:0),this.material[t!=null?t:this.selectedMaterial]):this.material}setSelectedMaterial(t,e){Array.isArray(this.material)?(this.selectedMaterial===void 0&&(this.selectedMaterial=e!=null?e:0),e=e!=null?e:this.selectedMaterial,this.material[e].dispose(),this.material[e]=t):(this.material.dispose(),this.material=t)}updateGeometry(t){let e=this.geometry,n=gy[e.userData.type],i=this.objectType==="NonParametric"?Object.assign({},e.userData,{geometry:e}):e.userData,r=n.build(n.normalizeInputs(t,i)),s=e.uuid;if(this.geometry.dispose(),this.geometry=r,this.geometry.uuid=s,this.geometry.computeBoundingSphere(),this.cloner)for(let a of this.cloner.children)a.geometry=this.geometry}resizeGeometry(t,e,n){Bv.resizeGeometry(this.geometry,{width:t,height:e,depth:n})}shallowClone(t){return new this.constructor(this.geometry,this.material).shallowCopy(this,t)}clone(t){let e=this.objectType==="NonParametric"?Object.assign({},this.geometry.userData,{geometry:this.geometry.clone()}):this.geometry.userData,n=Pu(e),i=Array.isArray(this.material)?this.material.map(r=>r.clone()):this.material.clone();return new this.constructor(n,i).copy(this,t)}copy(t,e=!0){return super.copy(t,e),t.cloner&&(this.cloner=new Lu(t,t.cloner.parameters),this.add(this.cloner)),this}setFromClonerState(t){t===null?this.cloner=void 0:(this.cloner===void 0&&(this.cloner=new Lu(this)),this.cloner.fromClonerState(t))}fromState(t,e){var n,i,r;return super.fromState(t),t.type==="Mesh"&&(this.setFromClonerState(t.cloner),this.castShadow=(n=t.castShadow)!=null?n:!0,this.receiveShadow=(i=t.receiveShadow)!=null?i:!0,this.booleanExclude=(r=t.booleanExclude)!=null?r:null),this}freeBooleanPointer(){this.booleanMeshSetAddress!==-1&&(xr.freeMeshSet(this.booleanMeshSetAddress),this.booleanMeshSetAddress=-1)}invalidateDownstreamBooleanData(t=!1){return t?this.booleanWasTransformed=!0:this.freeBooleanPointer(),rs(this.parent)?this.parent.invalidateDownstreamBooleanData():this}invalidateUpstreamBooleanData(){this.freeBooleanPointer();for(let t of this.children)ca(t)&&(t.freeBooleanPointer(),rs(t)&&t.invalidateUpstreamBooleanData())}},XR=new T(0,0,1),jm=new T,qm=new T,Xm=new zt,Id=class extends Ui{constructor(t=sr.create({}),e=new ar({side:Bn})){var n;super(t,e),this.recursiveSelection=!1,this.objectType="VectorObject",this.eventDispatcher=new yi,this._onShapeUpdate=()=>{this.updateGeometry({}),this.geometry.computeBoundingSphere(),this.geometry.computeBoundingBox()},this.castShadow=!0,this.receiveShadow=!0,this.forceComputeSize=!0,this.shape=t.userData.shape,(n=this.shape.eventDispatcher)==null||n.addEventListener("update",this._onShapeUpdate)}toJSON(t){let e=super.toJSON(t);return e.object.objectType="VectorObject",e}fromState(t){return super.fromState(t),this.shape.update(),this}setHelperVisibility(){}updateGeometry(t){if(super.updateGeometry(t),"userData"in this.geometry){let e=this.geometry.userData.parameters;this.eventDispatcher.dispatchEvent({type:"geometryUpdate",parameters:e})}}setShape(t){var e,n;this.shape&&((e=this.shape.eventDispatcher)==null||e.removeEventListener("update",this._onShapeUpdate)),this.shape=t,(n=this.shape.eventDispatcher)==null||n.addEventListener("update",this._onShapeUpdate)}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),Xm.getNormalMatrix(this.matrixWorld),jm.copy(XR).applyMatrix3(Xm).normalize(),qm.setFromMatrixPosition(this.matrixWorld),this.shape.plane.setFromNormalAndCoplanarPoint(jm,qm)}clone(t){let e=this.shape.clone(),n=this.material.clone(),i=this.geometry.userData,r=sr.create(Object.assign({},i,{shape:e})),s=new Id(r,n).copy(this,t);return s.shape=e,e.update(),s}raycast(t,e){Ui.prototype.raycast.call(this,t,e)}};function uy(t,e){return JR(t)}function JR(t){let e={parameters:t,type:t.type};if(t.type==="VectorGeometry"){let i=Ht.createFromState(t.shape,t.width,t.height);e.shape=i}else t.type==="NonParametricGeometry"&&(t.data.groups&&t.data.groups.forEach(i=>{var r;return i.materialIndex=Math.max((r=i.materialIndex)!=null?r:0,0)}),e.geometry=new id().parse(t));let n;try{n=Pu(e)}catch(i){console.error(i)}if(!n){let i=Ht.createFromState(Zl.defaultData(),100,100);e.shape=i,n=Pu(e)}return n}var $e;Fv.then(t=>{$e=t});var Jm=new Float32Array([10,10,0,-10,10,0,-10,-10,0,10,-10,0]),$m=new Uint32Array([0,1,2,3]),Ym=new Uint8Array([4]),li=class{static build(t,e,n,i,r){var s,a;let o,l,c,h=(a=(s=t==null?void 0:t.phongAngle)!=null?s:e==null?void 0:e.phongAngle)!=null?a:35;if(i===!1&&(h=-1),t.positionWASM!==void 0){n&&n!==0&&($e.free_bvh(n),$e.free_subdivision_surface(n));try{o=li.allocate(t,r)}catch(d){console.error(d,t),o=li.allocate({positionWASM:Jm,indexWASM:$m,verticesPerFaceWASM:Ym},r)}$e.set_destination_refinement_level(o,0),l=li.buildLevel(o,!0,h)}else o=n,t.phongAngle!==void 0&&(l=li.buildLevel(o,!0,h));return t.subdivisions!==void 0&&($e.set_destination_refinement_level(o,t.subdivisions),t.subdivisions>0?c=li.buildLevel(o,!1,h):c=null),{subdivPointer:o,originalGeometry:l,subdividedGeometry:c}}static primitiveToQuads(t,e){t.widthSegments>16&&(t.widthSegments=16),t.heightSegments>16&&(t.heightSegments=16),t.depthSegments>16&&(t.depthSegments=16),t.radialSegments>16&&(t.radialSegments=16),t.type==="DodecahedronGeometry"&&(t.detail=0);let n=t.shape!==void 0?e.geometry:uy(t),i,r,s,a;return{positions:i,triIndices:a}=dy(n.getAttribute("position"),n.getIndex()),{indices:r,verticesPerFace:s}=py(i,a,n),{positions:i,indices:r,verticesPerFace:s}}static allocate(t,e){var n;let i,r,s,a=[],o=[];t.positionWASM&&t.positionWASM.length>0?(i=t.positionWASM,r=t.indexWASM,s=t.verticesPerFaceWASM):(i=Jm,r=$m,s=Ym);let l=i.length,c=r.length,h=s.length,d=i.length+a.length+o.length,u=r.length+s.length,p=d*Float32Array.BYTES_PER_ELEMENT+u*Uint32Array.BYTES_PER_ELEMENT,m=d*Float32Array.BYTES_PER_ELEMENT,f=$e._malloc(p),g=new Float32Array($e.HEAPF32.buffer,f,d),v=new Uint32Array($e.HEAPU32.buffer,f+m,u);g.set(i,0),g.set(a,i.length),g.set(o,i.length+a.length),v.set(r,0),v.set(s,r.length);let y;(n=t==null?void 0:t.scaleBaked)!=null&&n.some(b=>b!==1)&&(y=new Re().makeScale(...t.scaleBaked)),e&&(y?y.premultiply(e):y=e);let w=y?$e.alloc_subdivision_surface2(f,l,f+m,c,f+m+r.length*Uint32Array.BYTES_PER_ELEMENT,h,y.elements):$e.alloc_subdivision_surface(f,l,f+m,c,f+m+r.length*Uint32Array.BYTES_PER_ELEMENT,h);return $e._free(f),w}static buildLevel(t,e,n,i,r){let s=r?$e.get_mesh_data2(t,e?$e.Level.CONTROL:$e.Level.REFINED,n,r.elements):$e.get_mesh_data(t,e?$e.Level.CONTROL:$e.Level.REFINED,n),a=8,o=$e.HEAPU32.subarray(s>>2,(s>>2)+a),l=o.subarray(4,4+4),c=0,h=$e.HEAPU32[o[c]>>2],d=$e.HEAPF32.subarray(h>>2,(h>>2)+l[c]);c++;let u=$e.HEAPU32[o[c]>>2],p=$e.HEAPF32.subarray(u>>2,(u>>2)+l[c]);c++;let m=$e.HEAPU32[o[c]>>2],f=$e.HEAPU32.subarray(m>>2,(m>>2)+l[c]);c++;let g=$e.HEAPU32[o[c]>>2],v=$e.HEAPU32.subarray(g>>2,(g>>2)+l[c]);if(c++,i===void 0){let y=new Ge;if(y.setIndex(new Za(v,1)),y.setAttribute("position",new Pe(d,3)),y.setAttribute("normal",new Pe(p,3)),e){y.setAttribute("faceMap",new Za(f,1));let w=new Float32Array(p.length/3*4).fill(0);y.setAttribute("color",new rt(w,4))}return $e.free_mesh_data(s),y.userData.type="SubdivGeometry",y}i.getAttribute("position").copyArray(d),i.getAttribute("normal").copyArray(p),i.attributes.position.needsUpdate=!0,i.attributes.normal.needsUpdate=!0,$e.free_mesh_data(s)}static buildControlCageWireframe(t,e,n){let i=$e.get_wireframe_data_for_base_level(t),r=4,s=$e.HEAPU32.subarray(i>>2,(i>>2)+r),a=s.subarray(2,2+2),o=0,l=$e.HEAPU32[s[o]>>2],c=$e.HEAPF32.subarray(l>>2,(l>>2)+a[o]);o++;let h=$e.HEAPU32[s[o]>>2],d=$e.HEAPU32.subarray(h>>2,(h>>2)+a[o]);if(e===void 0){let u=new Ge;u.setAttribute("position",new Pe(c,3));let p=new Float32Array(c.length);for(let m=0,f=c.length;m<f;)p[m++]=n.r,p[m++]=n.g,p[m++]=n.b;return u.setAttribute("color",new rt(p,3)),u.setIndex(new Za(d,1)),$e.free_wireframe_data_for_base_level(i),u}e.getAttribute("position").copyArray(c),e.attributes.position.needsUpdate=!0,$e.free_wireframe_data_for_base_level(i)}static updateCollabMesh(t,e,n){e||$e.set_destination_refinement_level(t,1);let i=n?$e.get_topological_data2(t,e?$e.Level.CONTROL:$e.Level.REFINED,n.elements):$e.get_topological_data(t,e?$e.Level.CONTROL:$e.Level.REFINED),r=6,s=$e.HEAPU32.subarray(i>>2,(i>>2)+r),a=s.subarray(3,3+3),o=0,l=$e.HEAPU32[s[o]>>2],c=new Float32Array($e.HEAPF32.subarray(l>>2,(l>>2)+a[o]));o++;let h=$e.HEAPU32[s[o]>>2],d=new Uint32Array($e.HEAPU32.subarray(h>>2,(h>>2)+a[o]));o++;let u=$e.HEAPU32[s[o]>>2],p=new Uint8Array($e.HEAPU32.subarray(u>>2,(u>>2)+a[o]));return $e.free_topological_data(i),{positions:c,indices:d,verticesPerFace:p}}},Zm=["getX","getY","getZ"];function dy(t,e){let n={},i=e?e.count:t.count,r=0,s=[],a=[],o=1e4;for(let c=0;c<i;c++){let h=e?e.getX(c):c,d="";for(let u=0;u<3;u++)d+=`${~~(t[Zm[u]](h)*o)},`;if(d in n)s.push(n[d]);else{for(let u=0;u<3;u++)a.push(t[Zm[u]](h));n[d]=r,s.push(r),r++}}let l=[];for(let c=0;c<s.length;c+=3)s[c]===s[c+1]||s[c]===s[c+2]||s[c+1]===s[c+2]||l.push(s[c],s[c+1],s[c+2]);return{positions:a,triIndices:l}}var Sl=new T,Oh=new T,Ih=new T,Nh=new T;function py(t,e,n){var i;let r=[],s=[];if(n.userData.shape!==void 0&&n.userData.parameters.depth===0){let a=n.userData.shape.extractShapePointsToFlatArray([]),o=0;for(let c=0;c<a.length;c+=2)o+=(a[c]-a[(c===0?a.length:c)-2])*(a[c+1]+a[(c===0?a.length:c)-1]);t.length=0;let l=0;if(o<0)for(let c=0;c<a.length;c+=2)t.push(a[c],a[c+1],0),r.push(l++);else for(let c=a.length-2;c>=0;c-=2)t.push(a[c],a[c+1],0),r.push(l++);return s.push(l),{indices:r,verticesPerFace:s}}for(let a=0,o=(i=n.capStartIndex)!=null?i:e.length;a<o;)if(e[a+1]===e[a+3]&&e[a+2]===e[a+5]||e[a+0]===e[a+3]&&e[a+2]===e[a+4]){Sl.set(t[e[a]*3],t[e[a]*3+1],t[e[a]*3+2]),Oh.set(t[e[a+1]*3],t[e[a+1]*3+1],t[e[a+1]*3+2]),Ih.set(t[e[a+4]*3],t[e[a+4]*3+1],t[e[a+4]*3+2]),Nh.set(t[e[a+5]*3],t[e[a+5]*3+1],t[e[a+5]*3+2]),Oh.sub(Sl).normalize(),Ih.sub(Sl).normalize(),Nh.sub(Sl).normalize();let l=Oh.cross(Ih).dot(Nh);Math.abs(l)>.005?(r.push(e[a],e[a+1],e[a+2]),s.push(3),a+=3):(r.push(e[a],e[a+1],e[a+4],e[a+5]),s.push(4),a+=6)}else r.push(e[a],e[a+1],e[a+2]),s.push(3),a+=3;if(n.capStartIndex!==void 0){let a=[],o=[],l=0;for(let c=0,h=0;c<t.length;c+=3,h++)t[c+2]===0&&(a.push(h),l++),t[c+2]===n.userData.parameters.depth&&o.push(h);if(n.userData.parameters.extrudeBevelSize===0){let c=o[0];o[0]=o[1],o[1]=c}a.reverse(),r.push(...a,...o),s.push(l,l)}return{indices:r,verticesPerFace:s}}var xr={};m0(xr,{calcBoolean:()=>KR,calcBooleanTopological:()=>ZR,freeMeshSet:()=>tO,getMeshSet:()=>QR,transformMeshSet:()=>eO});var $R=new Promise(t=>{}),ot,ea;$R.then(t=>ot=t);function YR(t,e){let n,{positions:i,triIndices:r}=dy(t.getAttribute("position"),t.getIndex()),s;if(e){let{indices:a,verticesPerFace:o}=py(i,r,t);s=o.length,n=[];for(let l=0,c=0;l<s;l++){n.push(o[l]);for(let h=0;h<o[l];h++)n.push(a[c++])}}else{let a=r.length;n=Array(a+a/3),s=0;for(let o=0,l=0;l<n.length;)n[l++]=3,s++,n[l++]=r[o++],n[l++]=r[o++],n[l++]=r[o++]}return{positions:i,faceIndices:n,nFaces:s}}function fy(t){let e=t.length,n=e*Uint32Array.BYTES_PER_ELEMENT,i=e*Float32Array.BYTES_PER_ELEMENT,r=Number.isInteger(t[0])?n:i,s=ot._malloc(r);return(Number.isInteger(t[0])?new Uint32Array(ot.HEAPU32.buffer,s,e):new Float32Array(ot.HEAPF32.buffer,s,e)).set(t,0),s}function my(t){switch(t){case 0:return ot.OP.UNION;case 1:return ot.OP.INTERSECTION;case 2:return ot.OP.A_MINUS_B;case 3:return ot.OP.B_MINUS_A;case 4:return ot.OP.SYMMETRIC_DIFFERENCE;case 5:return ot.OP.ALL;default:throw new Error("Unknown boolean operation "+t)}}function ZR(t,e){ea===void 0&&(ea=ot.init_csg());let n=fy(t),i=ot.csg_calc_topological(ea,n,t.length,my(e));ot._free(n);let r=6,s=ot.HEAPU32.subarray(i>>2,(i>>2)+r),a=s.subarray(3,3+3),o=0,l=ot.HEAPU32[s[o]>>2],c=new Float32Array(ot.HEAPF32.subarray(l>>2,(l>>2)+a[o]));o++;let h=ot.HEAPU32[s[o]>>2],d=new Uint32Array(ot.HEAPU32.subarray(h>>2,(h>>2)+a[o]));o++;let u=ot.HEAPU32[s[o]>>2],p=new Uint8Array(ot.HEAPU32.subarray(u>>2,(u>>2)+a[o]));return ot.free_mesh_data(i),{positions:c,indices:d,verticesPerFace:p}}function KR(t,e,n,i){ea===void 0&&(ea=ot.init_csg());let r=fy(t),s=ot.csg_calc(ea,r,t.length,i,my(e));ot._free(r);let a=5,o=ot.HEAPU32.subarray(s>>2,(s>>2)+a),l=o.subarray(2,2+3),c=0,h=ot.HEAPU32[o[c]>>2],d=ot.HEAPF32.subarray(h>>2,(h>>2)+l[c]);c++;let u=ot.HEAPU32[o[c]>>2],p=ot.HEAPF32.subarray(u>>2,(u>>2)+l[c]);c++;let m=l[c];n.setAttribute("position",new Pe(d,3)),n.setAttribute("normal",new Pe(p,3));let f=ot.HEAPF32.subarray((s>>2)+5,(s>>2)+5+6);return n.boundingSphere===null&&(n.boundingSphere=new Xn),n.boundingSphere.center.set(f[0],f[1],f[2]),n.boundingSphere.radius=(f[3]**2+f[4]**2+f[5]**2)**.5,n.userData.parameters={width:f[3]*2,height:f[4]*2,depth:f[5]*2},ot.free_mesh_data(s),m}function QR(t,e){if(ot===void 0)return-1;let n,i,r;if(e&&t.userData.positions!==void 0){let m=t.userData;r=m.verticesPerFace.length,n=m.positions,i=Array(m.verticesPerFace.reduce((f,g)=>f+g,0)+r);for(let f=0,g=0,v=0;f<m.verticesPerFace.length;f++){i[v++]=m.verticesPerFace[f];for(let y=0;y<m.verticesPerFace[f];y++)i[v++]=m.indices[g++]}}else({positions:n,faceIndices:i,nFaces:r}=YR(t,e));let s=n.length,a=i.length,o=n.length,l=i.length,c=o*Float32Array.BYTES_PER_ELEMENT+l*Uint32Array.BYTES_PER_ELEMENT,h=o*Float32Array.BYTES_PER_ELEMENT,d=ot._malloc(c),u=new Float32Array(ot.HEAPF32.buffer,d,o),p=new Uint32Array(ot.HEAPU32.buffer,d+h,l);return u.set(n,0),p.set(i,0),ot.get_csg_mesh(d,s,d+h,a,r)}function eO(t,e){ot.transform_csg_mesh(t,e.elements)}function tO(t){ot.free_csg_mesh(t)}var gy={ConeGeometry:qP,CubeGeometry:XP,CylinderGeometry:jP,DodecahedronGeometry:$P,EllipseGeometry:SD,HelixGeometry:AD,IcosahedronGeometry:CD,LatheGeometry:LD,NonParametricGeometry:ID,PolygonGeometry:ND,PyramidGeometry:zD,RectangleGeometry:Nv,SphereGeometry:UD,PlaneGeometry:kD,BackdropGeometry:VD,StarGeometry:GD,TextFrameGeometry:zv,TorusGeometry:WD,TorusKnotGeometry:qD,TriangleGeometry:XD,VectorGeometry:sr},Pu=t=>gy[t.type].create(t),Km=new Re,nO=class extends Ui{constructor(t=new Ge,e=new is){super(t,e),this.booleanOp=2,this.phongAngle=35,this.meshSetAddresses=[],this.needsTransformForDownstream=!1,this.isBooleanMesh=!0,this.castShadow=!0,this.receiveShadow=!0,this.geometry.userData.parameters={width:0,height:0,depth:0},this.onAfterRender=this.recomputeBoolean.bind(this)}reInit(){this.isBooleanMesh=!0,this.meshSetAddresses=[],this.needsTransformForDownstream=!1,this.geometry.userData.parameters={width:0,height:0,depth:0},this.onAfterRender=this.recomputeBoolean.bind(this)}recomputeBoolean(t){var e;if(this.booleanMeshSetAddress!==-1)return;for(let i=0;i<this.children.length;i++){let r=this.children[i];rs(r)&&r.recomputeBoolean(t===!0)}this.meshSetAddresses=[];for(let i=0;i<this.children.length;i++){let r=this.children[i];if(qR(r)&&r.booleanExclude===!1&&((e=r.geometry.attributes.position)==null?void 0:e.count)>0&&r.geometry.drawRange.count>0){if(r.booleanMeshSetAddress===-1){if(r.booleanMeshSetAddress=xr.getMeshSet(r.geometry,t===!0),r.booleanMeshSetAddress===-1)return;xr.transformMeshSet(r.booleanMeshSetAddress,r.matrix),r.booleanMatrixInvOld.copy(r.matrix).invert(),r.booleanWasTransformed=!1}else rs(r)&&r.needsTransformForDownstream===!0?(xr.transformMeshSet(r.booleanMeshSetAddress,r.matrix),r.needsTransformForDownstream=!1):r.booleanWasTransformed===!0&&(Km.multiplyMatrices(r.matrix,r.booleanMatrixInvOld),xr.transformMeshSet(r.booleanMeshSetAddress,Km),r.booleanMatrixInvOld.copy(r.matrix).invert(),r.booleanWasTransformed=!1);this.meshSetAddresses.push(r.booleanMeshSetAddress)}}if(this.meshSetAddresses.length===0){this.geometry.setDrawRange(0,0);return}if(t===!0)return xr.calcBooleanTopological(this.meshSetAddresses,this.booleanOp);let n=this.geometry;n.dispose(),this.geometry=new Ge,this.geometry.userData=n.userData,this.geometry.boundingSphere=n.boundingSphere;try{this.booleanMeshSetAddress=xr.calcBoolean(this.meshSetAddresses,this.booleanOp,this.geometry,this.phongAngle)}catch(i){this.booleanMeshSetAddress=0,console.error(i)}this.booleanMatrixInvOld.copy(this.matrix).invert(),this.needsTransformForDownstream=!0}toJSON(t){let e=super.toJSON(t);return e.object.objectType="Mesh3D",e}updateGeometry(t){let e=t.parameters;e.operation!==void 0&&(this.booleanOp=e.operation),e.phongAngle!==void 0&&(this.phongAngle=e.phongAngle),this.invalidateDownstreamBooleanData().recomputeBoolean()}},Po=t=>{var e;return e=class extends t{constructor(){super(...arguments),this.isObjectHelper=!0}},e.geometryHelper=new ir(30,30,30),e},Ml=new as,zh=new Xn,Qm=new Re,Do=(t,e,n,i,r=!1)=>{let s=e,a=t.matrixWorld;if(s.boundingSphere===null&&s.computeBoundingSphere(),zh.copy(s.boundingSphere),zh.applyMatrix4(a),n.ray.intersectsSphere(zh)===!1||(Qm.copy(a).invert(),Ml.copy(n.ray).applyMatrix4(Qm),s.boundingBox!==null&&Ml.intersectsBox(s.boundingBox)===!1))return;let o,l,c,h,d=s.index,u=s.attributes.position,p=s.drawRange,m,f;if(r===!1){let v=Math.max(0,p.start),y=Math.min(d.count,p.start+p.count);for(m=v,f=y;m<f;m+=3)if(l=d.getX(m),c=d.getX(m+1),h=d.getX(m+2),o=g(t,n,Ml,u,l,c,h),o){o.faceIndex=Math.floor(m/3),i.push(o);return}}else{let v=s.attributes.position,y=new T,w=new T,b=new T,S=new T,_=2,E=1/((t.scale.x+t.scale.y+t.scale.z)/3),x=E*E,A=Math.max(0,p.start),M=Math.min(v.count,p.start+p.count);for(let C=A,F=M-1;C<F;C+=_){if(y.fromBufferAttribute(v,C),w.fromBufferAttribute(v,C+1),Ml.distanceSqToSegment(y,w,S,b)>x)continue;S.applyMatrix4(t.matrixWorld);let $=n.ray.origin.distanceTo(S);$<n.near||$>n.far||i.push({distance:$,point:b.clone().applyMatrix4(t.matrixWorld),object:t})}}function g(v,y,w,b,S,_,E){let x=new T,A=new T,M=new T,C=new T,F=new T;if(x.fromBufferAttribute(b,S),A.fromBufferAttribute(b,_),M.fromBufferAttribute(b,E),w.intersectTriangle(x,A,M,!1,C)===null)return null;F.copy(C),F.applyMatrix4(v.matrixWorld);let $=y.ray.origin.distanceTo(F);return $<y.near||$>y.far?null:{faceIndex:1,distance:$,point:F.clone(),object:v}}},Tl=new T,Hn=new da,iO=class extends Rr{constructor(t){let e=new Ge,n=new Yn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={},a=new Ae(15711266),o=new Ae(15711266),l=new Ae(2857471);c("n1","n2",a),c("n2","n4",a),c("n4","n3",a),c("n3","n1",a),c("f1","f2",a),c("f2","f4",a),c("f4","f3",a),c("f3","f1",a),c("n1","f1",a),c("n2","f2",a),c("n3","f3",a),c("n4","f4",a),c("p","n1",o),c("p","n2",o),c("p","n3",o),c("p","n4",o),c("u1","u2",l),c("u2","u3",l),c("u3","u1",l);function c(d,u,p){h(d,p),h(u,p)}function h(d,u){i.push(0,0,0),r.push(u.r,u.g,u.b),s[d]===void 0&&(s[d]=[]),s[d].push(i.length/3-1)}e.setAttribute("position",new Pe(i,3)),e.setAttribute("color",new Pe(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){let t=this.geometry,e=this.pointMap;Hn.projectionMatrixInverse.elements=[.5112609807824982,-0,-0,-0,-0,.41421356237309503,-0,-0,-0,-0,-0,-.099999,-0,-0,-1.0000000000000002,.100001];let n=1,i=1,r=.8;ii("n1",e,t,Hn,-n,-i,r),ii("n2",e,t,Hn,n,-i,r),ii("n3",e,t,Hn,-n,i,r),ii("n4",e,t,Hn,n,i,r);let s=r;ii("f1",e,t,Hn,-n,-i,s),ii("f2",e,t,Hn,n,-i,s),ii("f3",e,t,Hn,-n,i,s),ii("f4",e,t,Hn,n,i,s);let a=s,o=.5;ii("u1",e,t,Hn,n*.7*o,i*1.1,a),ii("u2",e,t,Hn,-n*.7*o,i*1.1,a),ii("u3",e,t,Hn,0,i*(1.1+.9*o),a),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}};function ii(t,e,n,i,r,s,a){Tl.set(r,s,a).unproject(i);let o=e[t];if(o!==void 0){let l=n.getAttribute("position");for(let c=0,h=o.length;c<h;c++)l.setXYZ(o[c],Tl.x,Tl.y,Tl.z)}}var rO=class extends Po(iO){constructor(t){super(t),this.object=t,this.object=t,this.name=`CombinedCameraHelper: ${t.uuid}`}updateMatrixWorld(t){super.updateMatrixWorld(t),this.updateTarget()}updateTarget(){let t=this.object.getTarget();this.updateWorldMatrix(!0,!1),this.worldToLocal(t)}raycast(t,e){Do(this.object,this.geometry,t,e,!0)}},vy=class extends Po(lT){constructor(t,e=15,n=10066329){super(t,e,n),this.object=t,this.added=!1,this.name=`DirectionalLightHelper: ${t.uuid}`}raycast(t,e){Do(this.object,vy.geometryHelper,t,e)}},yy=class extends Po(cT){constructor(t,e=15){super(e),this.object=t,this.object.updateMatrixWorld(),this.name=`EmptyObjectHelper: ${t.uuid}`,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}raycast(t,e){Do(this.object,yy.geometryHelper,t,e)}update(){}},xy=class extends Po(aT){constructor(t,e=15,n=6710886){super(t,e,n),this.object=t,this.name=`PointLightHelper: ${t.uuid}`}raycast(t,e){Do(this.object,xy.geometryHelper,t,e)}},Du=class extends Po(rT){constructor(t,e=6710886){super(t,e),this.object=t,this.name=`SpotLightHelper: ${t.uuid}`}raycast(t,e){Do(this.object,Du.geometryHelper,t,e)}update(){if(this.object!==void 0){let t=Du._vector,e=this.object.distance?this.object.distance:1e3,n=e*Math.tan(this.object.angle);this.cone.scale.set(n,n,e),t.setFromMatrixPosition(this.object.target.matrixWorld),this.cone.lookAt(t);let i=this.color!==void 0?this.color:this.light.color;if(this.cone.material instanceof Array)for(let r=0,s=this.cone.material.length;r<s;r++)this.cone.material[r].color.set(i);else this.cone.material.color.set(i)}}},by=Du;by._vector=new T;var Ro=(t,e)=>class extends t{constructor(){super(...arguments),this.objectHelper=new e(this),this.enableHelper=!1}set visibility(n){this.visible=n,this.setHelperVisibility(n),this.setHelperChildrenVisibility(n)}get visibility(){return this.visible}get geometryHelper(){return e.geometryHelper}setHelperVisibility(n){this.objectHelper.visible=n}setHelperChildrenVisibility(n){for(let i of this.children)Di(i)&&i.traverseEntity(r=>{Lo(r)&&r.visible&&(r.objectHelper.visible=n)})}raycast(n,i){this.objectHelper.raycast(n,i)}copy(n,i=!0){return super.copy(n,i),n.enableHelper!==void 0&&(this.enableHelper=n.enableHelper),n.objectHelper!==void 0&&(this.objectHelper.visible=n.objectHelper.visible),this}toJSON(n){let i=super.toJSON(n),r=i.object;return r.enableHelper=this.enableHelper,i}fromJSON(n){return super.fromJSON(n),n.enableHelper!==void 0&&(this.enableHelper=!0),this}fromLightState(n,i){if(this.objectType==="LightDirectional"||this.objectType==="LightPoint"||this.objectType==="LightSpot"){let r=this;n.color!==void 0&&(r.color=wn(n.color,i)),n.intensity!==void 0&&(r.intensity=n.intensity),n.depth!==void 0&&(r.shadow.camera.far=n.depth,r.shadow.needsUpdate=!0),n.shadows!==void 0&&(this.castShadow=n.shadows),n.helper!==void 0&&(this.enableHelper=n.helper,r.gizmos.shadowmap.visible=n.helper)}return this}},Bs=new T,Bh=new T,ec=class extends Ro(Ta(da),rO){constructor(t=window.innerWidth,e=window.innerHeight,n=45,i,r=1e5){super(),this.objectType="CombinedCamera",this._cameraType="OrthographicCamera",this.targetOffset=vo.DefaultTargetOffset,this.isUpVectorFlipped=!1,this.angleOffsetFromUp=0,this.width=t,this.height=e,this.orthoCamera=new ac(t*-.5,t*.5,e*.5,e*-.5,i!=null?i:-5e4,r),this.perspCamera=new gn(n,t/e,i!=null?i:50,r),this.left=this.orthoCamera.left,this.right=this.orthoCamera.right,this.top=this.orthoCamera.top,this.bottom=this.orthoCamera.bottom,this.far=this.orthoCamera.far,this.view=this.orthoCamera.view,this.aspect=this.perspCamera.aspect,this.fov=this.perspCamera.fov,this.focus=this.perspCamera.focus,this.filmGauge=this.perspCamera.filmGauge,this.filmOffset=this.perspCamera.filmOffset,this.toOrthographic(!0)}static createFromState(t,e){let n=new ec().fromState(e);return n.enableHelper=!0,n.objectHelper.update(),n.uuid=t,n}get isPerspectiveCamera(){return this.cameraType==="PerspectiveCamera"}get isOrthographicCamera(){return!this.isPerspectiveCamera}get cameraType(){return this._cameraType}setNear(t,e){t==="PerspectiveCamera"?this.perspCamera.near=e:this.orthoCamera.near=e}setZoom(t,e){e>=0&&(t==="PerspectiveCamera"?this.perspCamera.zoom=e:this.orthoCamera.zoom=e)}set cameraType(t){t==="PerspectiveCamera"?this.toPerspective():t==="OrthographicCamera"&&this.toOrthographic()}get near(){return this._cameraType==="PerspectiveCamera"?this.perspCamera.near:this.orthoCamera.near}set near(t){this._cameraType==="PerspectiveCamera"?this.perspCamera.near=t:this.orthoCamera.near=t}get zoom(){return this._cameraType==="PerspectiveCamera"?this.perspCamera.zoom:this.orthoCamera.zoom}set zoom(t){t>=0&&(this._cameraType==="PerspectiveCamera"?this.perspCamera.zoom=t:this.orthoCamera.zoom=t)}lookAt(t){super.lookAt(t),this.getWorldPosition(Bs),this.targetOffset=Bs.distanceTo(t)}getTarget(t=new T){return this.getWorldDirection(Bh),this.getWorldPosition(Bs),Bh.multiplyScalar(this.targetOffset),t.copy(Bs).add(Bh),t}getDistanceToTarget(){let t=this.getTarget();return this.getWorldPosition(Bs),Bs.distanceTo(t)}updateUp(){let t=this.getWorldQuaternion(new ln),e=new T(0,0,1).applyQuaternion(t),n=new T().copy(ht.DefaultUp);this.isUpVectorFlipped&&n.negate(),n.applyQuaternion(t);let i=new T().copy(ht.DefaultUp).projectOnPlane(e),r=new T().crossVectors(i,n).dot(e)>=0?1:-1;this.angleOffsetFromUp=i.angleTo(n)*r}getViewFrontToObject(t){let e=t.getWorldPosition(new T),n=t.getWorldDirection(new T).multiplyScalar(this.targetOffset);return{position:e.clone().add(n),target:e}}getViewToObject(t){let e=t.getWorldPosition(new T),n=this.getWorldDirection(new T).multiplyScalar(this.targetOffset);return{position:e.clone().sub(n),target:e}}setViewplaneSize(t,e){this.left=-t*.5,this.right=t*.5,this.top=e*.5,this.bottom=-e*.5,this.aspect=t/e,this.updateProjectionMatrix()}toOrthographic(t){this.orthoCamera.left=this.left,this.orthoCamera.right=this.right,this.orthoCamera.top=this.top,this.orthoCamera.bottom=this.bottom,this.orthoCamera.view=this.view,this.orthoCamera.far=this.far,this.orthoCamera.updateProjectionMatrix(),this.projectionMatrix=this.orthoCamera.projectionMatrix,this.projectionMatrixInverse=this.orthoCamera.projectionMatrixInverse,this._cameraType="OrthographicCamera",(this.enableHelper===!0||t===!0)&&this.objectHelper.update()}toPerspective(t){this.perspCamera.aspect=this.aspect,this.perspCamera.fov=this.fov,this.perspCamera.view=this.view,this.perspCamera.far=this.far,this.perspCamera.updateProjectionMatrix(),this.projectionMatrix=this.perspCamera.projectionMatrix,this.projectionMatrixInverse=this.perspCamera.projectionMatrixInverse,this._cameraType="PerspectiveCamera",(this.enableHelper===!0||t===!0)&&this.objectHelper.update()}setFocalLength(t){this.perspCamera.setFocalLength(t),this.toPerspective()}getFocalLength(){return this.perspCamera.getFocalLength()}getEffectiveFOV(){return this.perspCamera.getEffectiveFOV()}getFilmWidth(){return this.perspCamera.getFilmWidth()}getFilmHeight(){return this.perspCamera.getFilmHeight()}setViewOffset(t,e,n,i,r,s){this._cameraType==="PerspectiveCamera"?this.perspCamera.setViewOffset(t,e,n,i,r,s):this.orthoCamera.setViewOffset(t,e,n,i,r,s)}clearViewOffset(){this._cameraType==="PerspectiveCamera"?(this.perspCamera.clearViewOffset(),this.toPerspective()):(this.orthoCamera.clearViewOffset(),this.toOrthographic())}updateProjectionMatrix(t){this._cameraType==="PerspectiveCamera"?this.toPerspective(t):this._cameraType==="OrthographicCamera"&&this.toOrthographic(t)}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}copy(t,e){return super.copy(t,e),this.orthoCamera.copy(t.orthoCamera),this.perspCamera.copy(t.perspCamera),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.far=t.far,this.view=t.view===null?null:Object.assign({},t.view),this._cameraType=t._cameraType,this.aspect=t.aspect,this.fov=t.fov,this.focus=t.focus,this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this.targetOffset=t.targetOffset,this.updateProjectionMatrix(),this}fromCameraRender(t){let e={near:this.orthoCamera.near,far:this.orthoCamera.far},n={near:this.perspCamera.near,far:this.perspCamera.far};return this.copy(t),this.name="",this.enableHelper=!0,this.objectHelper.visible=!0,this.orthoCamera.near=e.near,this.orthoCamera.far=e.far,this.perspCamera.near=n.near,this.perspCamera.far=n.far,this.updateProjectionMatrix(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="CombinedCamera",n.cameraType=this.cameraType,n.targetOffset=this.targetOffset,n.isUpVectorFlipped=this.isUpVectorFlipped,n.angleOffsetFromUp=this.angleOffsetFromUp,n.left=this.left,n.right=this.right,n.top=this.top,n.bottom=this.bottom,this.view!==null&&(n.view=Object.assign({},this.view)),n.zoomOrtho=this.orthoCamera.zoom,n.nearOrtho=this.orthoCamera.near,n.far=this.far,n.aspect=this.aspect,n.fov=this.fov,n.focus=this.focus,n.filmGauge=this.filmGauge,n.filmOffset=this.filmOffset,n.zoomPersp=this.perspCamera.zoom,n.nearPersp=this.perspCamera.near,e}fromJSON(t){var e;if(super.fromJSON(t),this.cameraType=t.cameraType,t.targetOffset!==void 0&&(this.targetOffset=t.targetOffset),t.orbitControlsTarget!==void 0){let n=this.getWorldPosition(new T),i=new T().fromArray(t.orbitControlsTarget);this.targetOffset=i.distanceTo(n)}else t.targetOffset!==void 0&&(this.targetOffset=t.targetOffset);return this.isUpVectorFlipped=!1,this.angleOffsetFromUp=(e=t.angleOffsetFromUp)!=null?e:0,t.left!==void 0&&(this.left=t.left),t.right!==void 0&&(this.right=t.right),t.top!==void 0&&(this.top=t.top),t.bottom!==void 0&&(this.bottom=t.bottom),t.view!==void 0&&(this.view=Object.assign({},t.view)),t.zoomOrtho!==void 0&&(this.orthoCamera.zoom=t.zoomOrtho),t.nearOrtho!==void 0&&(this.orthoCamera.near=t.nearOrtho),t.far!==void 0&&(this.far=t.far),t.aspect!==void 0&&(this.aspect=t.aspect),t.fov!==void 0&&(this.fov=t.fov),t.focus!==void 0&&(this.focus=t.focus),t.filmGauge!==void 0&&(this.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(this.filmOffset=t.filmOffset),t.zoomPersp!==void 0&&(this.perspCamera.zoom=t.zoomPersp),t.nearPersp!==void 0&&(this.perspCamera.near=t.nearPersp),this.updateProjectionMatrix(),this}toCameraState(t=[]){let e={type:this.cameraType,far:this.far,orthographic:{near:this.orthoCamera.near,zoom:this.orthoCamera.zoom},perspective:{near:this.perspCamera.near,fov:this.perspCamera.fov,zoom:this.perspCamera.zoom},up:this.up.toArray(),targetOffset:this.targetOffset,isUpVectorFlipped:this.isUpVectorFlipped};return iu(e,t)}fromCameraState(t){let{orthographic:e,perspective:n}=t;return t.type!==void 0&&(this.cameraType=t.type),t.far!==void 0&&(this.far=t.far),e!==void 0&&(e.near!==void 0&&(this.orthoCamera.near=e.near),e.zoom!==void 0&&(this.orthoCamera.zoom=e.zoom)),n!==void 0&&(n.near!==void 0&&(this.perspCamera.near=n.near),n.fov!==void 0&&(this.perspCamera.fov=n.fov),n.zoom!==void 0&&(this.perspCamera.zoom=n.zoom)),t.up!==void 0&&this.up.fromArray(t.up),t.targetOffset!==void 0&&(this.targetOffset=t.targetOffset),t.isUpVectorFlipped!==void 0&&(this.isUpVectorFlipped=t.isUpVectorFlipped),this.updateProjectionMatrix(),this}toState(t){return ze(ve(ve({},super.toState(t)),this.toCameraState(t)),{type:this.cameraType})}fromState(t){return super.fromState(t),this.fromCameraState(t),this}},tc=class extends Ro(Ta(qs),yy){constructor(){super(...arguments),this.objectType="EmptyObject"}static createFromState(t,e){let n=new tc().fromState(e);return n.uuid=t,n.enableHelper=!0,n.objectHelper.update(),n}toJSON(t){let e=super.toJSON(t);return e.object.objectType="EmptyObject",e}},_y=class extends Ro(Ta(l0),vy){constructor(...t){super(...t),this.objectType="LightDirectional",this._gizmos={},this.castShadow=!0,this.shadow.mapSize.width=2048,this.shadow.mapSize.height=2048,this.shadow.normalBias=1;let e=this.shadow.camera;e.top=1250,e.bottom=-1250,e.right=1250,e.left=-1250,e.near=-1e4,e.far=2500;let n=new br(this.shadow.camera);n.visible=!1,this._gizmos.shadowmap=n,this.update()}static createFromState(t,e,n){let i=new _y().fromState(e,n);return i.uuid=t,i}get gizmos(){return this._gizmos}showGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof br&&(e.visible=!0)}}hideGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof br&&(e.visible=!1)}}update(){this.shadow.camera.updateProjectionMatrix();for(let t in this._gizmos){let e=this._gizmos[t];e instanceof br&&e.update()}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.enableHelper===!0&&this.objectHelper.visible===!0&&this.objectHelper.update()}copy(t,e=!0){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="LightDirectional",n.color=this.color.getHex(),n.intensity=this.intensity,n.shadow=this.shadow.toJSON(),e}fromJSON(t){var e;super.fromJSON(t),this.color.set(t.color),this.intensity=t.intensity,this.shadow.normalBias=(e=t.shadow.normalBias)!=null?e:0,this.shadow.radius=t.shadow.radius,this.shadow.mapSize.fromArray(t.shadow.mapSize);let n=this.shadow.camera,i=t.shadow.camera;return n.near=i.near,n.far=i.far,n.zoom=i.zoom,n.left=i.left,n.right=i.right,n.top=i.top,n.bottom=i.bottom,i.view!==void 0&&(n.view=Object.assign({},i.view)),this}fromDirectionalLightState(t,e){let n=t.depth!==void 0&&t.depth!==this.shadow.camera.far||t.size!==void 0&&t.size/2!==this.shadow.camera.right;return super.fromLightState(t,e),t.size!==void 0&&GR(this,t.size),t.shadowRadius!==void 0&&(this.shadow.radius=t.shadowRadius),t.shadowResolution!==void 0&&(this.shadow.mapSize.set(t.shadowResolution,t.shadowResolution),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null)),n&&this.update(),this}fromState(t,e){return super.fromState(t),this.fromDirectionalLightState(t,e),this}},wy=class extends Ro(Ta(a0),xy){constructor(...t){super(...t),this.objectType="LightPoint",this._gizmos={},this.castShadow=!0,this.shadow.mapSize.width=1024,this.shadow.mapSize.height=1024,this.shadow.normalBias=1;let e=this.shadow.camera;e.fov=90,e.aspect=1,e.near=100,e.far=2500;let n=new T(-e.far+this.position.x,-e.far+this.position.y,-e.far+this.position.z),i=new T(e.far+this.position.x,e.far+this.position.y,e.far+this.position.z),r=new fn(n,i),s=new ml(r,new Ae(16755200));s.visible=!1,this._gizmos.shadowmap=s,this.update()}static createFromState(t,e,n){let i=new wy().fromState(e,n);return i.uuid=t,i}get gizmos(){return this._gizmos}showGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof ml&&(e.visible=!0)}}hideGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof ml&&(e.visible=!1)}}update(){if(this.shadow&&(this.shadow.camera.updateProjectionMatrix(),this._gizmos))for(let t in this._gizmos){let e=this._gizmos[t];if(e instanceof ml){let n=this.shadow.camera,i=new T(-n.far+this.position.x,-n.far+this.position.y,-n.far+this.position.z),r=new T(n.far+this.position.x,n.far+this.position.y,n.far+this.position.z);e.box.set(i,r),e.updateMatrixWorld(!0)}}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.enableHelper===!0&&this.objectHelper.visible===!0&&this.objectHelper.update()}copy(t,e=!0){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="LightPoint",n.color=this.color.getHex(),n.intensity=this.intensity,n.distance=this.distance,n.decay=this.decay,n.shadow=this.shadow.toJSON(),e}fromJSON(t){var e,n;super.fromJSON(t),this.color.set(t.color),this.intensity=t.intensity,this.distance=t.distance,this.decay=t.decay,this.shadow.normalBias=(e=t.shadow.normalBias)!=null?e:0,this.shadow.radius=t.shadow.radius,this.shadow.mapSize.fromArray((n=t.shadow.mapSize)!=null?n:[512,512]),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null);let i=this.shadow.camera,r=t.shadow.camera;return i.near=r.near,i.far=r.far,i.zoom=r.zoom,i.fov=r.fov,i.focus=r.focus,i.aspect=r.aspect,i.filmGauge=r.filmGauge,i.filmOffset=r.filmOffset,r.view!==void 0&&(i.view=Object.assign({},r.view)),this}fromPointLightState(t,e){return super.fromLightState(t,e),t.distance!==void 0&&(this.distance=t.distance),t.decay!==void 0&&(this.decay=t.decay),t.shadowRadius!==void 0&&(this.shadow.radius=t.shadowRadius),t.shadowResolution!==void 0&&(this.shadow.mapSize.set(t.shadowResolution,t.shadowResolution),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null)),this}fromState(t,e){return super.fromState(t),this.fromPointLightState(t,e),this}},eg=new T,tg=new T,ng=new ln,Sy=class extends Ro(Ta(r0),by){constructor(...t){super(...t),this.objectType="LightSpot",this._gizmos={},this.castShadow=!0,this.shadow.mapSize.width=1024,this.shadow.mapSize.height=1024,this.shadow.normalBias=1;let e=this.shadow.camera;e.fov=Lt.RAD2DEG*2*this.angle,e.aspect=1,e.near=100,e.far=2500;let n=new br(this.shadow.camera);n.visible=!1,this._gizmos.shadowmap=n,this.update()}static createFromState(t,e,n){let i=new Sy().fromState(e,n);return i.uuid=t,i}get gizmos(){return this._gizmos}showGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof br&&(e.visible=!0)}}hideGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof br&&(e.visible=!1)}}update(){this.shadow.camera.updateProjectionMatrix();for(let t in this._gizmos){let e=this._gizmos[t];e instanceof br&&e.update()}}updateMatrixWorld(t){super.updateMatrixWorld(t),tg.setFromMatrixPosition(this.matrixWorld),ng.setFromRotationMatrix(this.matrixWorld),eg.copy(this.up).applyQuaternion(ng).negate().multiplyScalar(this.distance),this.target.position.copy(tg).add(eg),this.target.updateMatrixWorld(),this.enableHelper===!0&&this.objectHelper.visible===!0&&this.objectHelper.update()}copy(t,e=!0){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="LightSpot",n.color=this.color.getHex(),n.intensity=this.intensity,n.distance=this.distance,n.angle=this.angle,n.decay=this.decay,n.penumbra=this.penumbra,n.shadow=this.shadow.toJSON(),e}fromJSON(t){var e;super.fromJSON(t),this.color.set(t.color),this.intensity=t.intensity,this.distance=t.distance,this.angle=t.angle,this.decay=t.decay,this.penumbra=t.penumbra,this.shadow.normalBias=(e=t.shadow.normalBias)!=null?e:0,this.shadow.radius=t.shadow.radius,this.shadow.mapSize.fromArray(t.shadow.mapSize);let n=this.shadow.camera,i=t.shadow.camera;return n.near=i.near,n.far=i.far,n.zoom=i.zoom,n.fov=i.fov,n.focus=i.focus,n.aspect=i.aspect,n.filmGauge=i.filmGauge,n.filmOffset=i.filmOffset,i.view!==void 0&&(n.view=Object.assign({},i.view)),this}fromSpotLightState(t,e){return super.fromLightState(t,e),t.distance!==void 0&&(this.distance=t.distance),t.decay!==void 0&&(this.decay=t.decay),t.angle!==void 0&&(this.angle=t.angle),t.penumbra!==void 0&&(this.penumbra=t.penumbra),t.shadowRadius!==void 0&&(this.shadow.radius=t.shadowRadius),t.shadowResolution!==void 0&&(this.shadow.mapSize.set(t.shadowResolution,t.shadowResolution),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null)),this}fromState(t,e){return super.fromState(t),this.fromSpotLightState(t,e),this}},ig=t=>t.tagName==="VIDEO",Ru=class{static resize(t,e,n){let i=t/e,r;if(!n.image)return;let s=n.image;ig(s)?r=s.videoWidth/s.videoHeight:r=s.width/s.height,i>r&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1*r/i):n.repeat.set(1,1*r/i)),i<r&&(n.imageType=="WEBCAM"?n.repeat.set(1*i/r*-1,1):n.repeat.set(1*i/r,1)),i==r&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1):n.repeat.set(1,1))}static resizeTextureLayer(t,e,n){let i=t/e,r=n.image!==void 0?n.image.width/n.image.height:1,s;i>r?s={x:1,y:r/i}:i<r?s={x:i/r,y:1}:s={x:1,y:1},n.repeat.set(s.x,s.y),n.updateMatrix()}static resizeTextureLayers(t,e,n){let i=n.userData.layers,r=i.getLayers();for(let s=0;s<r.length;s++){let a=r[s];uR(a)&&(Ru.resizeTextureLayer(t,e,a.uniforms[`f${a.id}_texture`].value),i.updateLayerUniform())}}static resizeComplex(t,e,n,i){let r=t/e,s,a=n.image;ig(a)?s=a.videoWidth/a.videoHeight:s=a.width/a.height,i.geometry.type.includes("Shape")?(r>s&&(n.imageType=="WEBCAM"?n.repeat.set(1/t*-1,1/e*s/r):n.repeat.set(1/t,1/e*s/r)),r<s&&(n.imageType=="WEBCAM"?n.repeat.set(1/t*r/s*-1,1/e):n.repeat.set(1/t*r/s,1/e)),r==s&&(n.imageType=="WEBCAM"?n.repeat.set(1/t*-1,1/e):n.repeat.set(1/t,1/e))):(r>s&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1*s/r):n.repeat.set(1,1*s/r)),r<s&&(n.imageType=="WEBCAM"?n.repeat.set(1*r/s*-1,1):n.repeat.set(1*r/s,1)),r==s&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1):n.repeat.set(1,1)))}},My=class extends Ui{constructor(t,e=new ar){super(t,e),this.objectType="Mesh2D",this.castShadow=!0,this.receiveShadow=!0}updateGeometry(t){super.updateGeometry(t),this.material.userData.layers&&Ru.resizeTextureLayers(this.geometry.userData.parameters.width,this.geometry.userData.parameters.height,this.material)}resizeGeometry(t,e){super.resizeGeometry(t,e,0),this.material.userData.layers&&Ru.resizeTextureLayers(this.geometry.userData.parameters.width,this.geometry.userData.parameters.height,this.material)}toJSON(t){let e=super.toJSON(t);return e.object.objectType="Mesh2D",e}clone(){let t=super.clone();return t.updateGeometry({}),t}static fromTexture(t){let e,n;if(t instanceof Ng){let s=t.image;e=s.videoWidth*.5,n=s.videoHeight*.5}else{let s=t.image;e=s.width*.5,n=s.height*.5}let i=Nv.create({parameters:{width:e,height:n}}),r=new ar;return r.layersList.changeLayer(0,{type:"texture",texture:t}),r.layersList.moveLayer(0,1),r.dispose(),new My(i,r)}},Ty=class extends Ui{constructor(t,e=new is){super(t,e),this.objectType="Mesh3D",this.castShadow=!0,this.receiveShadow=!0}toJSON(t){let e=super.toJSON(t);return e.object.objectType="Mesh3D",e}},Ey=class extends Ty{constructor(t,e=new is){super(t,e),this.objectType="NonParametric"}toJSON(t){let e=super.toJSON(t);return e.object.objectType="NonParametric",e}},Yt=class extends pn{constructor({char:t,originalChar:e,fontFamily:n,letterSpacing:i,fontSize:r,LOD:s=16},a=new Cr({color:0,opacity:1,visible:!0,transparent:!0,side:Bn})){let o=Yt.loadChar(t,n,s);super(o.geometry,a),this.char=t,this.originalChar=e!=null?e:t,this.fontFamily=n,this.letterSpacing=i,this.fontSize=r,this.LOD=s,this.resolution=o.resolution,this.glyphsHa=o.glyphsHa,this.localPosition=new j,this.charSize=0,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}static get FONTS_PATH(){return Yt._fontPath}static set FONTS_PATH(t){Yt._fontPath=t}updatePosition(t,e){this.localPosition.copy(t);let n=new T(this.localPosition.x,-this.localPosition.y,0);this.position.copy(n).add(e)}updateFontSize(t){let e=t/this.resolution;this.fontSize=t,this.scale.set(this.fontSize,this.fontSize,1),this.charSize=this.glyphsHa*e*this.letterSpacing}updateFontFamily(t){if(this.fontFamily===t)return;this.fontFamily=t;let e=Yt.loadChar(this.char,t,this.LOD);this.geometry=e.geometry,this.resolution=e.resolution,this.glyphsHa=e.glyphsHa,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}updateChar(t){if(this.char===t)return;this.char=t;let e=Yt.loadChar(t,this.fontFamily,this.LOD);this.geometry=e.geometry,this.resolution=e.resolution,this.glyphsHa=e.glyphsHa,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}updateLetterSpacing(t){this.letterSpacing!==t&&(this.letterSpacing=t,this.updateFontSize(this.fontSize))}updateLOD(t){if(this.LOD===t)return;this.LOD=t;let e=Yt.loadChar(this.char,this.fontFamily,this.LOD);this.geometry=e.geometry,this.resolution=e.resolution,this.glyphsHa=e.glyphsHa,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}clone(){let t={char:this.char,originalChar:this.originalChar,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,LOD:this.LOD};return new Yt(t).copy(this)}static loadFont(t){return new Promise(function(e,n){Yt.fontCache[t]?e(Yt.fontCache[t]):new fT().load(Yt.FONTS_PATH+t+".json",i=>{Yt.fontCache[t]=i,e(i)},void 0,n)})}static loadChar(t,e,n){if(Yt.charCache[t]){if(Yt.charCache[t][n]&&Yt.charCache[t][n].fontFamily===e)return Yt.charCache[t][n]}else Yt.charCache[t]={};let i=Yt.fontCache[e],r=i.generateShapes(t,1);return Yt.charCache[t][n]={geometry:new fc(r,n),fontFamily:e,resolution:i.data.resolution,glyphsHa:i.data.glyphs[t].ha},Yt.charCache[t][n]}},Gn=Yt;Gn.charCache={},Gn.fontCache={},Gn._fontPath="/_assets/_fonts/";var El=new j,Rl=class{constructor(t,e,n){this.message=[],this.endLine=!0,this.yLinePos=t,this.lineHeight=e,this.maxCharSize=n,this.nextChar3DPos=new j(0,this.yLinePos+this.maxCharSize*this.lineHeight),this.align=1}addChar3D(t,e,n=this.message.length){this.message.splice(n,0,t),t.fontSize>this.maxCharSize?(this.maxCharSize=t.fontSize,this.nextChar3DPos.y=this.yLinePos+this.maxCharSize*this.lineHeight,this.fullUpdate(e)):(t.updatePosition(this.nextChar3DPos,e),this.nextChar3DPos.x+=t.charSize)}deleteChar3D(t=this.message.length-1){let e=this.message[t];if(e)return this.message.splice(t,1),this.nextChar3DPos.x-=e.charSize,e}isEndLine(t){this.endLine=t}fullUpdate(t,e=0){this.nextChar3DPos.x=0;for(let n=e,i=this.message.length;n<i;n+=1)this.message[n].updatePosition(this.nextChar3DPos,t),this.nextChar3DPos.x+=this.message[n].charSize}checkOverFlow(t){let e,n=this.message.length-1;if(n<=0)return!1;for(;n>=0;){if(this.message[n].char!==" "){e=this.message[n];break}n-=1}return!!(n>=0&&e&&e.localPosition.x+e.charSize>t)}containSpaceOverFlow(t=this.message.length-1){for(let e=t;e>=0;e-=1)if(this.message[e].char===" ")return!0;return!1}containSpace(t=this.message.length-1){if(this.endLine)return!0;for(let e=t;e>=0;e-=1)if(this.message[e].char===" ")return!0;return!1}popWord(t=this.message.length-1){let e=[],n=!0,i;for(i=t;i>=0;i-=1)if(this.message[i].char===" "){n=!1,e.length===0&&(i-=1,e.splice(0,0,this.message[i]));break}else e.splice(0,0,this.message[i]);return n?e=[]:this.message.splice(i+1,e.length),e}getWord(t=0,e=1){let n=[],i=t;for(i=t;;i+=e){if(!this.message[i]||this.message[i].char===" "){n.length===0&&this.message[i]&&(n.push(this.message[i]),this.message.splice(i,1));break}e>0?(n.push(this.message[i]),this.message.splice(i,1),i-=e):(n.splice(0,0,this.message[i]),this.message.splice(i,1))}return n}getWordAtIndex(t){let e=[];for(let n=t;n<this.message.length&&this.message[n].char!==" ";n++)e.push(this.message[n]);for(let n=t-1;n>=0&&this.message[n].char!==" ";n--)e.splice(0,0,this.message[n]);return e}wordSize(t=0,e=-1){let n=0,i=t;for(;i>=0&&i<this.message.length;){if(this.message[i].char===" "){n===0&&(n=this.message[i].charSize);break}n+=this.message[i].charSize,i+=e}return(i<0||i>=this.message.length)&&!this.endLine?this.message[t]?this.message[t].charSize:999999999:n===0?999999999:n}spaceLeft(t){return t-this.nextChar3DPos.x}popChar(t=this.message.length-1){return this.nextChar3DPos.x-=this.message[t].charSize,this.message.splice(t,1)}isEmpty(){return!this.message.length}updateNextCharPosY(){this.nextChar3DPos.y=this.yLinePos+this.maxCharSize*this.lineHeight}updateYLinePos(t){this.yLinePos=t,this.updateNextCharPosY()}updatelineHeight(t){this.lineHeight=t,this.updateNextCharPosY()}updateFontSize(t,e=0,n=this.message.length-1){for(let i=e;i<=n;i+=1)this.message[i].updateFontSize(t);this.maxCharSize=t,this.nextChar3DPos.y=this.yLinePos+this.maxCharSize*this.lineHeight}countSpaces(){let t=0;for(let e=0;e<this.message.length;e++)this.message[e].char===" "&&(t+=1);return t}alignText(t,e,n,i,r){switch(n){case 1:this.leftAlign(t,r);break;case 3:this.centerAlign(this.spaceLeft(e),t,r);break;case 2:this.rightAlign(this.spaceLeft(e),t,r);break;case 4:this.justifyAlign(this.spaceLeft(e),t,r);break}}offsetCharacters(t,e,n){El.set(e,n);let i=this.message.length;for(let r=0;r<i;r++)this.message[r].updatePosition(this.message[r].localPosition.add(El),t)}leftAlign(t,e){this.align=1,this.offsetCharacters(t,0,e)}centerAlign(t,e,n){this.align=3,this.offsetCharacters(e,t/2,n)}rightAlign(t,e,n){this.align=2,this.offsetCharacters(e,t,n)}justifyAlign(t,e,n){if(this.align=4,this.endLine){this.offsetCharacters(e,0,n);return}let i=this.countSpaces();if(i===0){this.offsetCharacters(e,0,n);return}let r=t/i,s=0;for(let a=0;a<this.message.length;a++)this.message[a].char===" "&&(s+=r),El.set(s,n),this.message[a].updatePosition(this.message[a].localPosition.add(El),e)}clone(){let t=new Rl(this.yLinePos,this.lineHeight,this.maxCharSize);t.nextChar3DPos=this.nextChar3DPos.clone(),t.align=this.align,t.endLine=this.endLine;for(let e=0;e<this.message.length;e++)t.message.push(this.message[e].clone());return t}},Ay=class extends Ui{constructor(t,e=new ar({transparent:!0,opacity:1,visible:!1,side:Bn})){super(t,e),this.objectType="TextFrame",this.charContainer=new ht,this.add(this.charContainer),this.material.visible=!1,this._geometryUserData=t.userData,this.userData.textFrame={hexColor:null,opacity:1,visible:!0,text:"",fontSize:16,lineHeight:1.5,letterSpacing:1,fontFamily:"roboto_regular",textTransform:1,horizontalAlignment:1,verticalAlignment:1,LOD:16,maxLineSize:this._geometryUserData.parameters.width,textOrigin:new T(this._geometryUserData.parameters.width*-.5,this._geometryUserData.parameters.height*.5,0),textLines:[]},this.createTextLine()}static createFromState(t,e,n){let i=zv.create({parameters:{width:e.width,height:e.height}}),r=new Ay(i).fromState(e,n);return r.uuid=t,r}async updateText(t){this.clearText();let e=this.userData.textFrame,n=e.fontFamily;await Gn.loadFont(n),e.text=t;let i=e.textOrigin,r=new Cr({visible:e.visible,transparent:!0,side:Bn}),s=t.split(`
`),a=0;this.userData.textFrame.textLines=s.map((o,l)=>{let c=new Rl(a,e.lineHeight,e.fontSize);return c.message=o.split("").map(h=>{let d={char:h,fontFamily:n,letterSpacing:e.letterSpacing,fontSize:e.fontSize,LOD:16},u=r.clone();u.color=e.hexColor,u.opacity=e.opacity;let p=new Gn(d,u);return c.addChar3D(p,i),this.charContainer.add(p),p}),a+=c.maxCharSize*c.lineHeight,c}),this.textFullUpdate(),this.checkOverFlow()}clearText(){let t=this.userData.textFrame.textLines;for(;this.charContainer.children.length;){let e=this.charContainer.children[0];this.charContainer.remove(e)}for(;t.length;)t.pop()}raycast(t,e){let n=[];if(super.raycast(t,n),n.length>0){e.push(n[0]);return}let i=[];for(let r=0,s=this.charContainer.children.length;r<s;++r)if(this.charContainer.children[r]instanceof Gn&&(t.intersectObject(this.charContainer.children[r],!1,i),i.length>0)){i[0].object=this,e.push(i[0]);return}}updateGeometry(t){var e,n,i,r;let s=this.userData,a=this.geometry.userData,o=a.parameters.width,l=a.parameters.height,c=(n=(e=t.parameters)==null?void 0:e.width)!=null?n:o,h=(r=(i=t.parameters)==null?void 0:i.height)!=null?r:l,d=s.textFrame;super.updateGeometry(t),d.maxLineSize=c,d.textOrigin.set(-.5*c,.5*h,0),h!==l?(this.checkOverFlow(),this.checkCapacity()):c!==o&&(o<c?this.checkCapacity():o>c&&this.checkOverFlow())}checkOverFlow(t=0){let e=this.userData,n=e.textFrame.textOrigin,i=e.textFrame.textLines;for(let r=t;r<i.length;r++){i[r].updateYLinePos(this.getNewLinePosition(r)),i[r].fullUpdate(n);let s=[];for(;i[r].checkOverFlow(e.textFrame.maxLineSize);)i[r].containSpaceOverFlow()?s.unshift(i[r].getWord(i[r].message.length-1,-1)):s.unshift(i[r].popChar());if(s.length>0){i[r+1]===void 0?(i[r].isEndLine(!1),this.createTextLine()):i[r].endLine&&(this.createTextLine(r+1),i[r].isEndLine(!1),i[r+1].isEndLine(!0));let a=0;for(let o=0;o<s.length;o+=1)for(let l=0;l<s[o].length;l+=1)i[r+1].addChar3D(s[o][l],n,a),a+=1;i[r+1].fullUpdate(n)}i[r].fullUpdate(n)}this.textFullUpdate(t)}checkCapacity(t=0){let e=this.userData,n=e.textFrame.textOrigin,i=e.textFrame.maxLineSize,r=e.textFrame.textLines;for(let s=t;s<r.length;s+=1)if(r[s].updateYLinePos(this.getNewLinePosition(s)),r[s].fullUpdate(n),!!r[s-1])for(;!r[s-1].endLine;){let a,o=r[s-1].spaceLeft(i);if(r[s].wordSize(0,1)<=o){r[s].containSpace()?a=r[s].getWord(0,1):a=r[s].popChar(0);for(let l=0;l<a.length;l+=1)a[l]&&r[s-1].addChar3D(a[l],n)}else{r[s].isEmpty()?(r[s].endLine&&r[s-1].isEndLine(!0),r.splice(s,1),s-=1):(r[s].updateYLinePos(this.getNewLinePosition(s)),r[s].fullUpdate(n));break}}this.textFullUpdate(t)}createTextLine(t=this.userData.textFrame.textLines.length){let e=this.userData.textFrame;e.textLines.splice(t,0,new Rl(this.getNewLinePosition(t),e.lineHeight,e.fontSize))}textFullUpdate(t=0){let e=this.userData.textFrame,n=e.textLines,i=this.getVerticalAlignmentOffSet();for(let r=t;r<n.length;r++)n[r].updateYLinePos(this.getNewLinePosition(r)),n[r].fullUpdate(e.textOrigin),n[r].alignText(e.textOrigin,e.maxLineSize,e.horizontalAlignment,e.verticalAlignment,i)}getVerticalAlignmentOffSet(){switch(this.userData.textFrame.verticalAlignment){case 1:return 0;case 2:return this.getRemainingVerticalSpace()/2;case 3:return this.getRemainingVerticalSpace();default:return 0}}getRemainingVerticalSpace(){let t=this.userData.textFrame.textLines;return this.geometry.userData.parameters.height-this.getNewLinePosition(t.length)}getNewLinePosition(t){let e=this.userData.textFrame.textLines,n=0;for(let i=0;i<t;i+=1)n+=e[i].maxCharSize*e[i].lineHeight;return n}updateColor(t){var e;let n=this.userData;n.textFrame.hexColor=t;let i=n.textFrame.textLines;for(let r=0;r<i.length;r++){let s=i[r].message;for(let a=0;a<s.length;a++){let o=s[a].material;(e=o.color)!=null&&e.isColor&&(o.color=t)}}}updateOpacity(t){let e=this.userData;e.textFrame.opacity=t;let n=e.textFrame.textLines;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++){let a=r[s].material;a.opacity=t}}}updateVisible(t){let e=this.userData;e.textFrame.visible=t;let n=e.textFrame.textLines;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++){let a=r[s].material;a.visible=t}}}async updateFontFamily(t){await Gn.loadFont(t);let e=this.userData.textFrame,n=e.textLines;e.fontFamily=t;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)r[s].updateFontFamily(t)}this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateFontSize(t){let e=this.userData.textFrame,n=e.textLines,i=e.fontSize;e.fontSize=t;for(let r=0;r<n.length;r++)n[r].updateFontSize(t);this.textFullUpdate(),t>i?this.checkOverFlow():t<i&&this.checkCapacity()}async updateTextTransform(t){let e=this.userData.textFrame;await Gn.loadFont(e.fontFamily);let n=e.textLines;switch(e.textTransform=t,t){case 2:for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)n[i].message[s].updateChar(r[s].char.toUpperCase())}break;case 3:for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)n[i].message[s].updateChar(r[s].char.toLowerCase())}break;default:for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)n[i].message[s].updateChar(r[s].originalChar)}}this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateLetterSpacing(t){let e=this.userData,n=e.textFrame.textLines;e.textFrame.letterSpacing=t;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)r[s].updateLetterSpacing(t)}this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateLOD(t){let e=this.userData;e.textFrame.LOD=t;let n=e.textFrame.textLines;for(let i=0;i<n.length;i++);this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateLineHeight(t){let e=this.userData,n=e.textFrame.textLines;e.textFrame.lineHeight=t;for(let i=0;i<n.length;i++)n[i].updatelineHeight(t);this.textFullUpdate()}updateVerticalAlignment(t){let e=this.userData;e.textFrame.verticalAlignment=t,this.textFullUpdate()}updateHorizontalAlignment(t){let e=this.userData;e.textFrame.horizontalAlignment=t,this.textFullUpdate()}toJSON(t){let e=super.toJSON(t),n=e.object;n.objectType="TextFrame";let i=this.userData.textFrame.textLines.map(r=>{let s=r.message.map(a=>({char:a.char,originalChar:a.originalChar,fontFamily:a.fontFamily,letterSpacing:a.letterSpacing,fontSize:a.fontSize,LOD:a.LOD}));return{align:r.align,endLine:r.endLine,lineHeight:r.lineHeight,maxCharSize:r.maxCharSize,yLinePos:r.yLinePos,message:s}});return n.userData.textFrame.textLinesData=i,e}async fromJSONasync(t){if(super.fromJSON(t),t.userData!==void 0){let e=t.userData.textFrame;await Gn.loadFont(e.fontFamily),e.textOrigin=new T(e.textOrigin.x,e.textOrigin.y,e.textOrigin.z);let n=new Cr({color:e.hexColor,opacity:e.opacity,visible:e.visible,transparent:!0,side:Bn});e.textLinesData&&(e.textLines=e.textLinesData.map((i,r)=>{let s=new Rl(Number(i.yLinePos),Number(i.lineHeight),Number(i.maxCharSize)),a=i.message.map((o,l)=>{if(o.char===void 0){let d=e.textLines[r].message[l];if("geometries"in d){let u=d.geometries[0].userData.parameters;Object.assign(o,{LOD:u.lod,char:u.char,fontFamily:u.fontFamily,fontSize:u.fontSize,letterSpacing:u.letterSpacing,originalChar:u.char})}}let c={char:o.char,fontFamily:o.fontFamily,letterSpacing:Number(o.letterSpacing),fontSize:Number(o.fontSize),LOD:o.LOD},h=new Gn(c,n.clone());return s.addChar3D(h,e.textOrigin),this.charContainer.add(h),h});return s.message=a,s}),this.userData.textFrame=e),this.textFullUpdate()}return this}fromTextFrameData(t,e){if(t.color!==void 0){let n=wn(t.color,e);this.updateColor(n),this.updateOpacity(n.a)}t.alpha!==void 0&&this.updateOpacity(t.alpha),t.font!==void 0&&this.updateFontFamily(t.font),t.horizontalAlign!==void 0&&this.updateHorizontalAlignment(t.horizontalAlign),t.verticalAlign!==void 0&&this.updateVerticalAlignment(t.verticalAlign),t.textTransform!==void 0&&this.updateTextTransform(t.textTransform),t.fontSize!==void 0&&this.updateFontSize(t.fontSize),t.lineHeight!==void 0&&this.updateLineHeight(t.lineHeight),t.letterSpacing!==void 0&&this.updateLetterSpacing(t.letterSpacing),t.text!==void 0&&t.text!==""&&this.updateText(t.text),(t.width!==void 0||t.height!==void 0)&&this.updateGeometry({parameters:{width:t.width,height:t.height}})}fromState(t,e){return super.fromState(t),this.fromTextFrameData(t,e),this}convertToVector(){let{fontFamily:t,hexColor:e}=this.userData.textFrame,n=new tc;n.name="Text Shape";let i=Gn.fontCache[t];for(let r of this.charContainer.children)r instanceof Gn&&i.generateShapes(r.char,1).forEach(s=>{let a=new Ht().fromShape(s);a.applyScale(r.scale.x,r.scale.y);let o=sr.create({shape:a}),l=new ar({side:Bn});l.color=e;let c=new Id(o,l);c.name=r.char,c.position.copy(r.position),c.rotation.copy(r.rotation),n.attach(c)});return n}},Ol=Ay;Ol.VerticalAlign=xv,Ol.HorizontalAlign=yv,Ol.TextTransform=bv;var sO=LT(PT()),Ou;Fv.then(t=>{Ou=t});var Cy=new Re,aO=new Re,oO=new Re,ri=new fn,vr=new T,lO=new Re,cO=new Re,Ly=class extends Ui{constructor(t,e,n,i=new is){super(n!=null?n:e,i),this.subdivPointer=t,this.originalGeometry=e,this.subdividedGeometry=n,this.objectType="SubdivObject",this.hiddenMatrixOld=new Re,this.smoothShading=!0,this.phongAngle=35,this.matrixWorldRigid=new Re,this.castShadow=!0,this.receiveShadow=!0,this.forceComputeSize=!1}static createFromState(t,e,n){let{subdivPointer:i,originalGeometry:r,subdividedGeometry:s}=li.build(e.geometry,void 0,void 0,!e.flatShading),a=Od(e.material,n),o=new Ly(i,r,s||void 0,a);return e.geometry.phongAngle!==void 0&&(o.phongAngle=e.geometry.phongAngle),o.calcBoundingBox(),o.freeSubdivPointer(),o.uuid=t,o.fromState(e),o}shallowClone(t){return new Ey(this.geometry,this.material).shallowCopy(this,t)}toJSON(t){let e=super.toJSON(t);return e.object.objectType="SubdivObject",e}buildFromStore(t,e){var n,i,r;let{originalGeometry:s,subdividedGeometry:a,subdivPointer:o}=li.build(t,e,this.subdivPointer,this.smoothShading,this.shearScale);if(t.phongAngle!==void 0&&(this.phongAngle=t.phongAngle),this.subdivPointer=o,s!==void 0&&((n=this.originalGeometry)==null||n.dispose(),this.originalGeometry=s),a!==void 0&&((i=this.subdividedGeometry)==null||i.dispose(),this.subdividedGeometry=a!=null?a:void 0),this.geometry=(r=this.subdividedGeometry)!=null?r:this.originalGeometry,this.cloner)for(let l of this.cloner.children)l.geometry=this.geometry;t.width&&(this.geometry.userData.parameters={width:t.width,height:t.height,depth:t.depth})}updateMesh(t=!1){li.buildLevel(this.subdivPointer,!0,this.smoothShading?this.phongAngle:-1,this.originalGeometry,t?this.shearScaleInv:void 0),this.subdividedGeometry&&li.buildLevel(this.subdivPointer,!1,this.smoothShading?this.phongAngle:-1,this.subdividedGeometry,t?this.shearScaleInv:void 0)}updateTopology(){var t;this.originalGeometry.dispose(),this.originalGeometry=li.buildLevel(this.subdivPointer,!0,this.smoothShading?this.phongAngle:-1),this.subdividedGeometry&&(this.subdividedGeometry.dispose(),this.subdividedGeometry=li.buildLevel(this.subdivPointer,!1,this.smoothShading?this.phongAngle:-1)),this.geometry=(t=this.subdividedGeometry)!=null?t:this.originalGeometry}raycast(t,e){var n;this.geometry=this.originalGeometry,Ui.prototype.raycast.call(this,t,e),this.geometry=(n=this.subdividedGeometry)!=null?n:this.originalGeometry}updateMatrixWorldSVD(){let t=this.matrixWorld.elements,e=[[t[0],t[4],t[8]],[t[1],t[5],t[9]],[t[2],t[6],t[10]]],{u:n,v:i,q:r}=(0,sO.SVD)(e),s=Cy.set(n[0][0],n[0][1],n[0][2],0,n[1][0],n[1][1],n[1][2],0,n[2][0],n[2][1],n[2][2],0,0,0,0,1),a=aO.set(i[0][0],i[0][1],i[0][2],0,i[1][0],i[1][1],i[1][2],0,i[2][0],i[2][1],i[2][2],0,0,0,0,1),o=oO.copy(a).transpose();this.shearScale=lO.makeScale(r[0],r[1],r[2]).multiply(o).premultiply(a),this.shearScaleInv=cO.copy(this.shearScale).invert(),this.matrixWorldRigid.multiplyMatrices(s,o),r.every(l=>Math.abs(r[0]-l)<.01)&&(this.shearScale=void 0,this.shearScaleInv=void 0)}activateSVDCompensation(){this.shearScale!==void 0&&(this.matrixAutoUpdate=!1,this.matrix.copy(this.matrixWorldRigid).copyPosition(this.matrixWorld),this.hiddenMatrixOld.copy(this.hiddenMatrix),this.hiddenMatrix.copy(this.parent.matrixWorld).invert())}deactivateSVDCompensation(){this.shearScale!==void 0&&(this.shearScale=void 0,this.shearScaleInv=void 0,this.matrixAutoUpdate=!0,this.hiddenMatrix.copy(this.hiddenMatrixOld))}calcBoundingBox(){let t=this.originalGeometry;t.boundingSphere===null&&(t.boundingSphere=new Xn);let e=t.attributes.position,n=t.boundingSphere.center;ri.setFromBufferAttribute(e),ri.getCenter(n),t.boundingSphere.radius=n.distanceTo(ri.max),isNaN(t.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this),ri.getSize(vr);let i={width:vr.x,height:vr.y,depth:vr.z};return this.geometry.userData.parameters=i,i}updateBoundingBox(t){let e=this.originalGeometry;ri.min.set(t[0],t[2],t[4]),ri.max.set(t[1],t[3],t[5]),this.shearScaleInv&&(ri.min.applyMatrix4(this.shearScaleInv),ri.max.applyMatrix4(this.shearScaleInv)),e.boundingSphere===null&&(e.boundingSphere=new Xn);let n=e.boundingSphere.center;ri.getCenter(n),e.boundingSphere.radius=n.distanceTo(ri.max),isNaN(e.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this),ri.getSize(vr);let i={width:vr.x,height:vr.y,depth:vr.z};return this.geometry.userData.parameters=i,i}freeSubdivPointer(){this.subdivPointer&&(Ou.free_bvh(this.subdivPointer),Ou.free_subdivision_surface(this.subdivPointer),this.subdivPointer=0)}updateGeometry(t){this.geometry.userData.scale||(this.geometry.userData.scale=Array(3)),this.geometry.userData.scale[0]=this.geometry.userData.parameters.width===0?1:t.parameters.width/this.geometry.userData.parameters.width,this.geometry.userData.scale[1]=this.geometry.userData.parameters.height===0?1:t.parameters.height/this.geometry.userData.parameters.height,this.geometry.userData.scale[2]=this.geometry.userData.parameters.depth===0?1:t.parameters.depth/this.geometry.userData.parameters.depth,rg(this.originalGeometry.attributes,...this.geometry.userData.scale),this.originalGeometry.attributes.position.needsUpdate=!0,this.originalGeometry.attributes.normal.needsUpdate=!0,this.subdividedGeometry&&(rg(this.subdividedGeometry.attributes,...this.subdividedGeometry.userData.scale),this.subdividedGeometry.attributes.position.needsUpdate=!0,this.subdividedGeometry.attributes.normal.needsUpdate=!0),this.geometry.userData.parameters=ve({},t.parameters)}};function rg(t,e,n,i){let r=t.position.array,s=t.normal.array,a=Cy.makeScale(e,n,i).invert().elements,o,l,c;for(var h=0,d=r.length;h<d;h+=3)r[h]*=e,r[h+1]*=n,r[h+2]*=i,o=s[h],l=s[h+1],c=s[h+2],s[h]=a[0]*o+a[4]*l+a[8]*c,s[h+1]=a[1]*o+a[5]*l+a[9]*c,s[h+2]=a[2]*o+a[6]*l+a[10]*c}function sg(t,e){e.flatShading!==void 0&&(t.flatShading=e.flatShading,t.needsUpdate=!0),e.wireframe!==void 0&&(t.wireframe=e.wireframe),e.side!==void 0&&(e.side===0?t.side=Kr:e.side===1?t.side=qn:t.side=Bn)}function hO(t,e){if(Array.isArray(t.material))for(let n of t.material)sg(n,e);else{let n=t.material;sg(n,e)}t.objectType==="SubdivObject"&&e.flatShading!==void 0&&(t.material.flatShading=!1,t.smoothShading=!e.flatShading,t.updateMesh())}function uO(t,e,n){let i;if(e.geometry.type==="SubdivGeometry")i=Ly.createFromState(t,e,n);else{let r=e.geometry.type==="BooleanGeometry"?new Ge:uy(e.geometry),s="materials"in e?NR(e.materials,n):Od(e.material,n);bu.is2DParametricMesh(r.userData.type)?i=new My(r,s):(r==null?void 0:r.userData.type)==="VectorGeometry"?i=new Id(r,s):e.geometry.type==="NonParametricGeometry"?i=new Ey(r,s):e.geometry.type==="BooleanGeometry"?(i=new nO(void 0,s),i.booleanOp=e.geometry.operation,e.geometry.phongAngle!==void 0&&(i.phongAngle=e.geometry.phongAngle)):i=new Ty(r,s),i.uuid=t,i.fromState(e)}return hO(i,e),i}function dO(t,e,n){return e.type==="Mesh"?uO(t,e,n):e.type==="TextFrame"?Ol.createFromState(t,e,n):e.type==="Empty"?tc.createFromState(t,e):e.type==="PointLight"?wy.createFromState(t,e,n):e.type==="SpotLight"?Sy.createFromState(t,e,n):e.type==="DirectionalLight"?_y.createFromState(t,e,n):Jl.is(e.type)?ec.createFromState(t,e):(console.error(e),new tc)}function pO(t,e){e.uniforms[`f${e.id}_transmissionSamplerMap`].value=t.texture,e.uniforms[`f${e.id}_transmissionDepthMap`].value=t.depthTexture}function ag(t,e,n){if(!n.userData.layers)return!1;let i=!1,r=n.userData.layers.getLayersOfType("transmission");return r.length>0?(e.layers.set(3),i=!0,t!==void 0&&r.forEach(s=>pO(t,s))):e.layers.set(0),i}function fO(t,e){let n=!1;return e.traverseEntity(i=>{if(i instanceof Ui)if(Array.isArray(i.material))for(let r=0;r<i.material.length;r++)ag(t,i,i.material[r])&&(n=!0);else ag(t,i,i.material)&&(n=!0)}),n}function mO(t,e){"material"in t&&gO(t.material,e),"geometry"in t&&t.geometry.dispose()}function gO(t,e){DT(t).forEach(n=>{e.isSharedMaterial(n)||n.dispose()})}var og=new T,Py=class extends hy(cc){constructor(t,e){super(),this.objectType="Scene",this.alpha=1,this.backupFog=new lc(16777215,.1,2e3),this.fogUseBGColor=!1,this.wireframeState=!1,this.needsTransmissionDirty=!0,this._needsTransmission=!1,this._color=new Ae(1,0,0),this.bgColor=new Ae(1,1,1),this.entityByUuid={},this.ambientLight=new Wl(13882323,8553090,.75),this.ambientLight.name="Default Ambient Light",this.personalCamera=this.createPersonalCamera(),this.activeCamera=this.personalCamera,this.sharedAssetManager=e,this.init(t,e)}needsTransmission(t){return this.needsTransmissionDirty&&(this._needsTransmission=fO(t,this),t!==void 0&&(this.needsTransmissionDirty=!1)),this._needsTransmission}find(t){if(t===""||t===void 0)return;let e=this.entityByUuid[t];return e===void 0?this.getObjectByProperty("uuid",t):e}get color(){return this._color}set color(t){this.fogUseBGColor===!0&&this.backupFog.color.copy(t),this._color.copy(t)}get enableFog(){return this.fog!==null}set enableFog(t){this.fog=t===!0?this.backupFog:null}init(t,e){if(this.createChildrenObjects(t.objects,this,e),this.personalCamera.removeFromParent(),this.add(this.personalCamera),this.ambientLight.removeFromParent(),this.add(this.ambientLight),this.setBackgroundColor(wn(t.backgroundColor,e)),this.updateFog(t.fog,e),this.updateAmbientLight(t.environment.ambientLight,e),this.activeCamera=this.personalCamera,t.publish.playCamera!==null){let n=this.find(t.publish.playCamera);n instanceof ec&&this.switchActiveCamera(n)}this.traverse(n=>{rs(n)&&n.recomputeBoolean()})}clearScene(t){this.traverseEntity(e=>{mO(e,t)});for(let e of this.children)Di(e)&&e.removeFromParent()}resetAfterClear(t,e){this.init(t,e)}createPersonalCamera(){let t=ec.createFromState(Py.PERSONAL_CAMERA_ID,ze(ve({},_u.defaultData),{name:"Personal Camera"}));return t.enableHelper=!1,t.objectHelper.visible=!1,delete t.isEntity,this.registerObjectCreatedInLegacy(t),t}raycast(t){let e=[],n=i=>{for(let r of i.children)Di(r)&&!r.raycastLock&&r.visible&&((ca(r)||Lo(r)&&r.enableHelper&&r.objectHelper.parent)&&t.intersectObject(r,!1,e),n(r))};return n(this),e}traverseEntity(t){for(let e of this.children)Di(e)&&e.traverseEntity(t)}updateFog(t,e){this.enableFog=t.enabled,this.fogUseBGColor=t.useBackgroundColor,t.useBackgroundColor?this.backupFog.color.set(this.bgColor):this.backupFog.color=wn(t.color,e),this.backupFog.near=t.near,this.backupFog.far=t.far}toJSON(t){return{}}fromJSON(t){return this}dispose(){this.clearScene(this.sharedAssetManager),this.sharedAssetManager.dispose()}updateAmbientLight(t,e){HR(this.ambientLight,t,e),t.groundColor!==void 0&&(this.ambientLight.groundColor=wn(t.groundColor,e)),t.enabled!==void 0&&(this.ambientLight.visible=t.enabled)}switchActiveCamera(t){this.activeCamera!==this.personalCamera&&(this.activeCamera.enableHelper=!0),this.activeCamera=t,t.enableHelper=!1}setBackgroundColor(t){this.bgColor=t,this.alpha=t.a}createChildrenObjects(t,e,n){for(let i of t)this.createChildObject(i.id,i.data,i.children,e,n)}registerObjectCreatedInLegacy(t){this.entityByUuid[t.uuid]=t}unregisterObject(t){delete this.entityByUuid[t.uuid];for(let e of t.children)this.unregisterObject(e)}createChildObject(t,e,n,i,r){let s=dO(t,e,r);return s&&(this.entityByUuid[t]=s,i.add(s),rs(i)&&ca(s)&&(s.prevBooleanObjectParent=i),this.createChildrenObjects(n,s,r)),s}getCenter(t){let e=[];for(let i=0,r=t.length;i<r;++i){let{id:s,recursive:a}=t[i],o=this.find(s),l=a?o.recursiveBBox:o.singleBBox;e.push(...l.vertices)}let n=new fn;return n.setFromPoints(e),n.getCenter(og),og}copyMatrixWorld(t,e){if(t===null){e.identity();return}let n=this.find(t);n?e.copy(n.matrixWorld):e.identity()}copyParentMatrixWorld(t,e){var n;if(t===null){e.identity();return}let i=(n=this.find(t))==null?void 0:n.parent;i?e.copy(i.matrixWorld):e.identity()}traverseMaterial(t){this.traverseEntity(e=>{if(e instanceof Ui)if(Array.isArray(e.material))for(let n=0;n<e.material.length;n++)t(e.material[n]);else t(e.material)})}updateCanvasSize(t,e){this.activeCamera.setViewplaneSize(t,e);let n,i;t>=e?(n=e/t,i=1):(n=1,i=t/e),this.traverseMaterial(r=>{r.layersList.getLayersOfType("transmission").forEach(s=>{s.uniforms[`f${s.id}_aspectRatio`].value.x=n,s.uniforms[`f${s.id}_aspectRatio`].value.y=i})})}},Dy=Py;Dy.PERSONAL_CAMERA_ID="f23858d0-4a3b-4bd8-8173-66ed0af7f6fb-personalCamera";var Sr;function vO(){return Sr||(Sr=new vT,Sr.setDecoderPath("https://www.gstatic.com/draco/versioned/decoders/1.5.2/").preload()),Sr.decoderPending}async function yO(t){if(Sr){let e={attributeIDs:Sr.defaultAttributeIDs,attributeTypes:Sr.defaultAttributeTypes,useUniqueIDs:!1},n;try{n=await Sr.decodeGeometry(new Int8Array(t).buffer,e)}catch(i){console.error(i)}if(n)return{index:n.index?{array:n.index.array}:void 0,attributes:Object.entries(n.attributes).map(([i,r])=>({name:i,itemSize:r.itemSize,array:r.array}))}}return null}async function xO(t){let[e,n]=iv(pu.deserialize(new Uint8Array(t))),i=[];e.scene.objects.traverse((r,s)=>{s.type==="Mesh"&&s.geometry.type==="NonParametricGeometry"&&s.geometry.data.draco!==void 0&&i.push(s)}),i.length&&await vO();for(let r of i){let s=await yO(rv(r.geometry.data.draco));if(s){s.index&&(r.geometry.data.index={array:s.index.array,itemSize:1,normalized:!1,type:"Uint32Array"});let a={};s.attributes.forEach(({name:o,array:l,itemSize:c})=>{a[o]={array:l,itemSize:c,type:"Float32Array",normalized:!1}}),r.geometry.data.attributes=a,r.geometry.data.draco=void 0}}return n.result().data}var Fh=new Map,io={url:"head",time:0,data:null,next:null,prev:null},$s={url:"tail",time:1/0,data:null,next:null,prev:null};io.next=$s;$s.prev=io;var lg=0;function nc(t){if(typeof t=="string")return t;let e=Date.now(),n=Fh.get(t);return n===void 0?(n={url:URL.createObjectURL(new Blob([t])),data:t,time:e,next:null,prev:null},Fh.set(t,n)):(n.time=e,n.prev.next=n.next,n.next.prev=n.prev),n.prev=$s.prev,n.next=$s,$s.prev.next=n,$s.prev=n,e-lg>1e3*10&&(lg=e+1e3,setTimeout(()=>{let i=Date.now(),r=io.next;for(;r.time<i-1e3*10;)URL.revokeObjectURL(r.url),Fh.delete(r.data),r=r.next,r.prev=io,io.next=r},900)),n.url}var cg=new ar,hg=class extends Ar{},bO=class{constructor(t){this.materials={},this.images={},this.colors={},this.transmissionRenderTarget=new Ln(2048,2048,{generateMipmaps:!0,minFilter:_o,magFilter:_n,wrapS:zn,wrapT:zn}),this.transmissionRenderTarget.depthTexture=new ju(2048,2048),this.penumbraSizeNode=new Qi(5,t.penumbraSize),this.reset(t)}reset(t){for(let[e,n]of Object.entries(t.images))this.addImage(e,n.data);for(let[e,n]of Object.entries(t.colors))this.addColor(e,n);for(let[e,n]of Object.entries(t.materials))this.addMaterial(e,cy(n,this))}get transmissionSamplerMap(){return this.transmissionRenderTarget.texture}get transmissionDepthMap(){return this.transmissionRenderTarget.depthTexture}addMaterial(t,e){e.uuid=t,this.materials[t]=e}deleteMaterial(t){this.materials[t]&&(this.materials[t].dispose(),delete this.materials[t])}isSharedMaterial(t){return t.uuid in this.materials||t===cg}getMaterial(t){return this.materials[t]}getMaterialOrDeletedPlaceholder(t){var e;return(e=this.materials[t])!=null?e:cg}getMaterials(){return this.materials}addImage(t,e){if(this.images[t])return this.images[t].onload=()=>{this.onImageLoad&&this.onImageLoad()},this.images[t].src=nc(e),!0;{let n=new Image;return n.src=nc(e),n.onload=()=>{this.onImageLoad&&this.onImageLoad()},this.images[t]=n,!1}}deleteImage(t){this.images[t]&&delete this.images[t]}getDefaultImage(){return this.images.image_0}getImage(t){return this.images[t]}getImages(){return this.images}addColor(t,e){return this.colors[t]?("a"in e?this.colors[t].setRGBA(e.r,e.g,e.b,e.a):this.colors[t].setRGBA(e.r,e.g,e.b,1),!0):("a"in e?this.colors[t]=new hg(e.r,e.g,e.b,e.a):this.colors[t]=new hg(e.r,e.g,e.b,1),!1)}updateColor(t,e){var n,i,r,s;if(this.colors[t]){let a=this.colors[t];return this.colors[t].r=(n=e.r)!=null?n:a.r,this.colors[t].g=(i=e.g)!=null?i:a.g,this.colors[t].b=(r=e.b)!=null?r:a.b,this.colors[t].a=(s=e.a)!=null?s:a.a,!0}return!1}deleteColor(t){this.colors[t]&&delete this.colors[t]}getColor(t){return this.colors[t]}dispose(){Object.keys(this.materials).forEach(t=>this.deleteMaterial(t)),this.transmissionRenderTarget.depthTexture.dispose(),this.transmissionRenderTarget.dispose(),this.onImageLoad=void 0}};function _O(t){let e;if(t.index)for(let n=0;n<t.index.array.length;n+=3)e=t.index.array[n],t.index.array[n]=t.index.array[n+2],t.index.array[n+2]=e}function wO(t){let e=new Set;return t.traverse(n=>{if(ca(n))if(Fi(n.material))n.material.forEach(i=>{let r=i;e.has(r)||e.add(r)});else{let i=n.material;e.has(i)||e.add(i)}}),e.forEach(n=>{if(n instanceof Array)return;let i=n.onBeforeCompile.bind(n);SO(n)?(Object.assign(n,{isMeshStandardMaterial:!0,isMeshPhysicalMaterial:!0,transmission:1,attenuationColor:new Ae,specularColor:new Ae}),n.onBeforeCompile=(r,s)=>{i&&i(r,s),r.uniforms=Object.assign(oi.physical.uniforms,r.uniforms),n.userData.layers.getLayersOfType("transmission").forEach(a=>{r.uniforms.transmissionSamplerMap.value&&(a.uniforms["f"+a.id+"_transmissionSamplerMap"].value=r.uniforms.transmissionSamplerMap.value,a.uniforms["f"+a.id+"_transmissionSamplerSize"].value=r.uniforms.transmissionSamplerSize.value)})}):MO(n)||(n.onBeforeCompile=(r,s)=>{i&&i(r,s),n.transparent=!1})}),t}function SO(t){return t.userData.layers.getLayersOfType("transmission").length>0}function MO(t){let e=t.userData.layers.head,n=0;for(;e!==void 0;){if(e.type!=="light"&&e.type!=="fresnel"){let i=e.uniforms["f"+e.id+"_alpha"];i&&(n+=(1-n)*i.value)}e=e.next}return n<1}function TO(t){return t.traverse(e=>{if(e.type==="Camera"){let n=e;n.type=n.cameraType}}),t}function EO(t){let e=[],n=(i,r=0)=>{let s=r>0?i+r:i;return e.includes(s)?n(i,r+1):s};return t.traverse(i=>{if(e.includes(i.name)){let r=i.name,s=n(i.name);if(i.name=s,i.isMesh){let a=i;a.material instanceof Array?a.material.forEach(o=>{o.name=o.name.replace(r,s)}):a.material.isAsset||(a.material.name=a.material.name.replace(r,s))}}e.push(i.name)}),t}function AO(t){let e=[];return t.traverse(n=>{n instanceof Lu&&e.push(n)}),e.forEach(n=>{let i=n.object,r=n.children,s=r.map(o=>{o.updateMatrix();let l=o.geometry.clone().applyMatrix4(o.matrix);return o.matrix.determinant()<0&&_O(l),l}),a=xT(n.parameters.hideBase?s:[i.geometry,...s]);i.geometry=a,i.material=r[0].material,i.remove(n)}),t}function CO(t){return t.traverse(e=>{e.matrixAutoUpdate=!0}),t}var ug="The SplineLoader only accepts .splinecode files that are generated from Spline export panel.",LO=class extends Zn{load(t,e,n,i=console.error){let r=new ra(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),t.endsWith(".spline")?console.warn(ug+" The .spline files are only meant to be used by the Editor."):t.endsWith(".splinecode")||console.warn(ug),r.load(t,async s=>{try{if(typeof s=="string")throw new Error("The .spline file is not binary!");let a=await this.parse(s);e(a)}catch(a){i(a)}},n,i)}async parse(t){let e=await xO(t),n=new bO(e.shared);Object.values(n.getMaterials()).forEach(s=>Object.assign(s,{isAsset:!0}));let i=new Dy(e.scene,n);i.remove(i.personalCamera),e.scene.environment.ambientLight.enabled||i.remove(i.ambientLight);let r=e.scene.publish.playCamera;if(r){let s=i.find(r);s&&UR(s)&&Object.assign(s,{makeDefault:!0})}return i=AO(i),i=wO(i),i=TO(i),i=EO(i),i=CO(i),i}};class PO{constructor(e){var n=document.getElementById("reusables"),i=n.querySelector(".pallet-renderer-wrapper");e.appendChild(i),this.setup(i)}setup(e){const n=new gn(33,window.innerWidth/window.innerHeight,5,1e5);n.position.set(0,0,1360.37),n.quaternion.setFromEuler(new zi(0,0,0));const i=new cc;i.background=null,new LO().load("https://prod.spline.design/RUoE0eEXE7ZlMGFn/scene.splinecode",m=>{i.add(m)});var s=e.getBoundingClientRect();const a=new At({antialias:!0,alpha:!0});a.setSize(s.width,s.height),a.setAnimationLoop(p),e.appendChild(a.domElement),a.shadowMap.enabled=!0,a.shadowMap.type=zu,a.setClearColor(0,0);const o=new dT(n,e.parentNode);o.enableDamping=!0,o.enablePan=!1,o.enableZoom=!1,o.rotateSpeed=.12,o.dampingFactor=.04;function l(){var m=e.getBoundingClientRect();n.aspect=m.width/m.height,n.updateProjectionMatrix(),a.setSize(m.width,m.height)}var c;c=window.addEventListener("resize",()=>{c!=null&&clearTimeout(c),c=setTimeout(()=>{l()},400)});var h={x:0,y:0};function d(m){var f=e.getBoundingClientRect(),g=f.x+f.width/2,v=f.y+f.height/2,y=m.clientX-g,w=m.clientY-v,b=Math.min(.16,Math.max(w*7e-4,-.2)),S=Math.max(-.15,y*4e-4);return{x:b,y:S}}window.addEventListener("mousemove",m=>{console.log(m),h=d(m)});var u;function p(m){u==null&&(u=m);var f=m-u,g=h.x-i.rotation.x,v=h.y-i.rotation.y,y=g*f*3e-4,w=v*f*3e-4;i.rotation.x+=y,i.rotation.y+=w,o.update(),a.render(i,n),u=m}setTimeout(()=>{l()},400)}}class DO{constructor(e){var n=document.getElementById("reusables"),i=n.querySelector(".scanner-preview").cloneNode(!0);e.appendChild(i)}}const mt=class{constructor(e){this.name=e}static c(e){return new mt(e)}getTitleKey(){switch(this){case mt.Animation:return Ie.ProjectAnimation;case mt.PalletConfigurator:return Ie.ProjectPallet;case mt.Scanner:return Ie.ProjectScanner;case mt.BagConfigurator:return Ie.ProjectBag;case mt.CaravanController:return Ie.ProjectCaravan}}getBodyKey(){switch(this){case mt.Animation:return Ie.ProjectAnimationDescription;case mt.PalletConfigurator:return Ie.ProjectPalletDescription;case mt.Scanner:return Ie.ProjectScannerDescription;case mt.BagConfigurator:return Ie.ProjectBagDescription;case mt.CaravanController:return Ie.ProjectCaravanDescription}}getTag(){switch(this){case mt.Animation:return Zi.App;case mt.PalletConfigurator:return Zi.Web;case mt.Scanner:return Zi.App;case mt.BagConfigurator:return Zi.Web;case mt.CaravanController:return Zi.App}}getPreviewManager(e){switch(this){case mt.Animation:return new Fy(e);case mt.PalletConfigurator:return new PO(e);case mt.Scanner:return new DO(e);case mt.BagConfigurator:return new zy(e);case mt.CaravanController:return new By(e)}}static get allCases(){return[mt.Animation,mt.PalletConfigurator,mt.Scanner,mt.BagConfigurator,mt.CaravanController]}};let Li=mt;Ke(Li,"Animation",mt.c("animation")),Ke(Li,"PalletConfigurator",mt.c("pallet_configurator")),Ke(Li,"Scanner",mt.c("scanner")),Ke(Li,"BagConfigurator",mt.c("bag_configurator")),Ke(Li,"CaravanController",mt.c("caravan_controller"));class RO{constructor(e,n){this.div=e,this.contentDiv=n,this.projectsContainer=n.querySelector(":scope > div:first-child"),this.svgPrevious=n.querySelector("#previous"),this.svgNext=n.querySelector("#next"),this.svgPreviousClickListener=Ni.add({target:this.svgPrevious,eventType:"click",eventHandler:()=>{var r=this.animatingToScrollOffset==null?this.visibleProjectIndex():this.visibleProjectIndexForScroll(this.animatingToScrollOffset);this.setVisibleProjectIndex({index:r-1})}}),this.svgNextClickListener=Ni.add({target:this.svgNext,eventType:"click",eventHandler:()=>{var r=this.animatingToScrollOffset==null?this.visibleProjectIndex():this.visibleProjectIndexForScroll(this.animatingToScrollOffset);this.setVisibleProjectIndex({index:r+1})}});var i;this.projectsContainer.onscroll=()=>{i!=null&&(clearTimeout(i),i=null),i=setTimeout(()=>{this._navigationButtonsReload()},30)},this._projectsReload(),this._navigationButtonsReload()}setVisibleProjectIndex({index:n}){var n=Math.max(0,Math.min(n,Li.allCases.length-1));const i=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,r=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;var s=Math.min(i,r),a=Math.min(s*.8,r*.95),o=s*.05,l=a/2+o-this.projectsContainer.clientWidth/2,c=n*(a+o)+l;this.projectsContainer.scrollTo({left:c,behavior:"smooth"}),this.animatingToScrollOffset=c,this.animatingScrollTimoutId!=null&&clearTimeout(this.animatingScrollTimoutId),this.animatingScrollTimoutId=setTimeout(()=>[this.animatingToScrollOffset=null],400),this._navigationButtonsReload(n)}visibleProjectIndex(){return this.visibleProjectIndexForScroll(this.projectsContainer.scrollLeft)}visibleProjectIndexForScroll(e){const n=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;var r=Math.min(n,i),s=Math.min(r*.8,i*.95),a=r*.05,o=s/2+a-this.projectsContainer.clientWidth/2,l=(e-o)/(s+a);return Math.round(l)}_projectsReload(){var e=jn.current();this.previewManagers!=null&&this.previewManagers.forEach(g=>g.dispose()),this.previewManagers=[],this.projectsContainer.innerHTML="";var n=document.getElementById("reusables"),i=n.querySelector("#stage-home-projects-section-content-project").cloneNode(!0);i.removeAttribute("id");for(const g of Li.allCases){var r=i.cloneNode(!0),s=r.querySelector("#labels-container"),a=s.querySelector(":scope > label"),o=g.getTitleKey(),l=o.translated(e);a.innerHTML=l;var c=s.querySelector(":scope > span"),h=g.getBodyKey(),d=h.translated(e);c.innerHTML=d;var u=r.querySelector("#tag-label"),p=g.getTag();u.closest("div").style.backgroundColor=p.getColorHex(),u.innerHTML=p.getTitle().toUpperCase();var m=r.querySelector(":scope > div:last-child"),f=g.getPreviewManager(m);this.previewManagers.push(f),this.projectsContainer.appendChild(r)}}_navigationButtonsReload(e){var n=e!=null?e:this.visibleProjectIndex();n==0?this.svgPrevious.classList.add("hidden"):this.svgPrevious.classList.remove("hidden"),n==Li.allCases.length-1?this.svgNext.classList.add("hidden"):this.svgNext.classList.remove("hidden")}dispose(){this.svgNextClickListener.dispose(),this.svgPreviousClickListener.dispose(),this.svgNextClickListener=null,this.svgPreviousClickListener=null}}class dg{constructor(e,n,i){this.div=e,this.contentDiv=n,this.columnsScroller=this.contentDiv.querySelector(":scope > div:first-child"),this.columnsGrid=this.columnsScroller.querySelector(":scope > div"),this.arrowsDiv=n.querySelector(":scope > div:last-child").querySelector(":scope > div"),this.svgPrevious=this.arrowsDiv.querySelector("#previous"),this.svgNext=this.arrowsDiv.querySelector("#next"),this.svgPreviousClickListener=Ni.add({target:this.svgPrevious,eventType:"click",eventHandler:()=>{var r=this._getVisibleColumnIndex();this._setVisibleColumnIndex({index:r-1})}}),this.svgNextClickListener=Ni.add({target:this.svgNext,eventType:"click",eventHandler:()=>{var r=this._getVisibleColumnIndex();this._setVisibleColumnIndex({index:r+1})}}),this.columnsScrollerTimeoutId="",this.columnsScrollerScrollListener=Ni.add({target:this.columnsScroller,eventType:"scroll",eventHandler:()=>{this.columnsScrollerTimeoutId!=null&&clearTimeout(this.columnsScrollerTimeoutId),this.columnsScrollerTimeoutId=setTimeout(()=>{this.columnsScrollerTimeoutId=null,this._reloadArrowButtons({index:null})},400)}}),this.setColumns(i),this._reloadArrowButtons({index:0})}setColumns(e){if(e!=null){var n=jn.current(),i=document.getElementById("reusables"),r=Array.from(this.columnsGrid.querySelectorAll(":scope > div"));for(let d=0;d<e.length;d++){const u=e[d];if(r.length>d){var s=r[d],a=s.querySelector(":scope > div:first-child").querySelector(":scope > div");if(a.innerHTML="",u.svgId!=null&&u.svgId.length>0){var o=i.querySelector("#"+u.svgId);o!=null&&(o=o.cloneNode(!0),o.removeAttribute("id"),a.appendChild(o))}var l=s.querySelector(":scope > div:last-child").querySelector(":scope > div"),c=l.querySelector(":scope > label");c.innerHTML=u.titleKey.translated(n);var h=l.querySelector(":scope > p");h.innerHTML=u.bodyKey.translated(n)}}}}_getVisibleColumnIndex(){var n;const e=(window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth)*.95;return Math.round(((n=this.columnsScroller.scrollLeft)!=null?n:0)/e)}_setVisibleColumnIndex({index:i}){const n=(window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth)*.95;var i=Math.max(0,Math.min(i,2));this.columnsScroller.scrollTo({left:i*n,behavior:"smooth"}),this._reloadArrowButtons({index:i})}_reloadArrowButtons({index:e}){var n=e!=null?e:this._getVisibleColumnIndex();n==0?this.svgPrevious.classList.add("fully-hidden"):this.svgPrevious.classList.remove("fully-hidden"),n==2?this.svgNext.classList.add("fully-hidden"):this.svgNext.classList.remove("fully-hidden")}dispose(){this.svgNextClickListener.dispose(),this.svgNextClickListener=null,this.svgPreviousClickListener.dispose(),this.svgPreviousClickListener=null,this.columnsScrollerScrollListener.dispose(),this.columnsScrollerScrollListener=null}}class pg{constructor(e,n,{landscapeId:i,portraitId:r}){this.div=e,this.contentDiv=n,this.setSvgForId({landscapeId:i,portraitId:r})}setSvgForId({landscapeId:e,portraitId:n}){var i=document.getElementById("reusables");if(e!=null){var r=i.querySelector("#"+e);r.removeAttribute("id"),this.contentDiv.appendChild(r)}}}const gt=class{constructor(e){this.name=e}static c(e){return new gt(e)}getSection(e,n){switch(this){case gt.Projects:return new RO(e,n);case gt.Practice:return new dg(e,n,[{svgId:"process-design",titleKey:Ie.SectionPracticeLeftTitle,bodyKey:Ie.SectionPracticeLeftBody},{svgId:"process-map",titleKey:Ie.SectionPracticeCenterTitle,bodyKey:Ie.SectionPracticeCenterBody},{svgId:"process-code",titleKey:Ie.SectionPracticeRightTitle,bodyKey:Ie.SectionPracticeRightBody}]);case gt.Knowledge:return new pg(e,n,{landscapeId:"home-stage-knowledge"});case gt.Communication:return new dg(e,n,[{svgId:"stage-home-daily-report",titleKey:Ie.SectionCommunicationLeftTitle,bodyKey:Ie.SectionCommunicationLeftBody},{svgId:"stage-home-process-report",titleKey:Ie.SectionCommunicationCenterTitle,bodyKey:Ie.SectionCommunicationCenterBody},{svgId:"home-stage-launch-report",titleKey:Ie.SectionCommunicationRightTitle,bodyKey:Ie.SectionCommunicationRightBody}]);case gt.Background:return new pg(e,n,{landscapeId:"home-stage-background-landscape"})}}getReusableContentDivClassName(){var e="stage-home-triple-section",n="stage-home-vector-section";switch(this){case gt.Projects:return"stage-home-projects-section-content";case gt.Practice:return e;case gt.Knowledge:return n;case gt.Communication:return e;case gt.Background:return n}}getTitleKey(){switch(this){case gt.Projects:return Ie.SectionProjects;case gt.Practice:return Ie.SectionPractice;case gt.Knowledge:return Ie.SectionKnowledge;case gt.Communication:return Ie.SectionCommunication;case gt.Background:return Ie.SectionBackground}}getBodyKey(){switch(this){case gt.Projects:return Ie.SectionProjectsDescription;case gt.Practice:return Ie.SectionPracticeDescription;case gt.Knowledge:return Ie.SectionKnowledgeDescription;case gt.Communication:return Ie.SectionCommunicationDescription;case gt.Background:return Ie.SectionBackgroundDescription}}static get allCases(){return[gt.Projects,gt.Practice,gt.Knowledge,gt.Communication,gt.Background]}};let yr=gt;Ke(yr,"Projects",gt.c("projects")),Ke(yr,"Practice",gt.c("practice")),Ke(yr,"Knowledge",gt.c("knowledge")),Ke(yr,"Communication",gt.c("communication")),Ke(yr,"Background",gt.c("backgorund"));class OO{constructor(e){this.div=e,this.topDiv=e.querySelector("#section-top"),this.topDownArrows=this.topDiv.querySelector("#down-arrows"),this.topCenterContentWrapper=e.querySelector("#stage-home-center-wrapper"),this.topCenterContentInnerWrapper=this.topCenterContentWrapper.querySelector("#stage-home-center-inner-wrapper"),this.topCenterContent=this.topCenterContentWrapper.querySelector("#stage-home-center"),this.topCenterImage=this.topCenterContent.querySelector("#stage-home-image"),this.topCenterTitle=this.topCenterContent.querySelector("#stage-home-title"),this.topCenterBody=this.topCenterContent.querySelector("#stage-home-body"),this.sectionsContainer=this.div.querySelector("#stage-home-sections"),this.language=Il.getCookie("language"),this._resizeCenterContent();var n;this.windowResizeListener=Ni.add({target:window,eventType:"resize",eventHandler:()=>{n!=null&&clearTimeout(n),n=setTimeout(()=>{this._resizeCenterContent()},600)}});var i,r;window.onscroll=()=>{var s=window.scrollY;const a=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;this.topCenterContentInnerWrapper.style.opacity=1-s/(a/1.6);var o=(1-(1-s/(a/3)))*.03+1;this.topCenterContentInnerWrapper.style.transform="translateY("+s*.03+"px) scale("+o+")",i!=null&&(clearTimeout(i),i=null),s==0?i=setTimeout(()=>{this.topDownArrows.classList.remove("hidden")},800):setTimeout(()=>{s!=0&&this.topDownArrows.classList.add("hidden")},10),r!=null&&(clearTimeout(r),r=null),r=setTimeout(()=>{this._snapScroll()},400)},setTimeout(()=>{this.topDiv.style.opacity="1",this.topCenterImage.style.transform="scale(1)",this.topCenterTitle.style.transform="scale(1)",this.topCenterBody.style.transform="scale(1)"},800),setTimeout(()=>{window.onscroll()},160),this._sectionsReload()}_snapScroll(){var e=window.scrollY;const n=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;e<n/7.5&&e!=0&&window.scrollTo({top:0,behavior:"smooth"})}_resizeCenterContent(){var e=this.topCenterContent.querySelector("img"),n=Math.min(window.innerWidth/e.clientWidth*.55,window.innerHeight/e.clientHeight*.35);n=Math.max(.6,n),this.topCenterContent.style.transform="scale("+n+")"}_sectionsReload(){var e=jn.current();this.sectionsContainer.innerHTML="",this.sections!==void 0&&this.sections.forEach(f=>f.dispose()),this.sections=[];var n=document.getElementById("reusables"),i=n.querySelector("#stage-home-section").cloneNode(!0);i.removeAttribute("id");for(const f of yr.allCases){var r=i.cloneNode(!0),s=r.querySelector(":scope > div:last-child"),a=null,o=f.getReusableContentDivClassName();o!==void 0&&o!=null&&(a=n.querySelector("."+o).cloneNode(!0),s.appendChild(a));var l=r.querySelector(":scope > div:first-child"),c=l.querySelector(":scope > label"),h=f.getTitleKey(),d=h==null?"":h.translated(e);c.innerHTML=d;var u=l.querySelector(":scope > span"),p=f.getBodyKey(),m=p==null?"":p.translated(e);u.innerHTML=m,this.sectionsContainer.appendChild(r),this.sections.push(f.getSection(r,a))}}dispose(){this.windowResizeListener.dispose(),this.windowResizeListener=null}}class IO{constructor(e){this.div=e,this.swedenButton=e.querySelector("#language-sweden-button"),this.statesButton=e.querySelector("#language-states-button"),this.doneButtonWrapper=e.querySelector("#language-done-button-wrapper"),this.doneButtonLabel=e.querySelector("#language-done-button-label"),this.doneButton=e.querySelector("#done-button"),this.swedenClickedListener=Ni.add({target:this.swedenButton,eventType:"click",eventHandler:()=>{this.setLanguage(jn.Swedish)}}),this.statesClickedListener=Ni.add({target:this.statesButton,eventType:"click",eventHandler:()=>{this.setLanguage(jn.English)}}),this.doneButtonClickedListener=Ni.add({target:this.doneButton,eventType:"click",eventHandler:()=>{this.setStageForType({stageType:Nn.Home,animated:!0})}})}setLanguage(e){switch(this.swedenButton.classList.remove("selected"),this.statesButton.classList.remove("selected"),this.languageDidChange(e),e){case jn.Swedish:this.swedenButton.classList.add("selected"),this.doneButtonLabel.innerHTML="F\xE4rdig";break;case jn.English:this.statesButton.classList.add("selected"),this.doneButtonLabel.innerHTML="Done";break}e!=null&&this.doneButtonWrapper.classList.add("visible")}dispose(){this.swedenClickedListener.dispose(),this.statesClickedListener.dispose(),this.swedenClickedListener=null,this.statesClickedListener=null}}class NO{constructor(e){this.div=e,this.container=document.getElementById("welcome-stage-container");var n=e.querySelector("#welcome-label"),i=e.querySelector("#about-me-label");this.lookButton=e.querySelector("#look-button"),this.lookButtonWrapper=e.querySelector("#look-button-wrapper"),this.lookButtonWrapper.style.opacity="0",this.lookButtonWrapper.style.pointerEvents="none",this.lookButtonClickListener=Ni.add({target:this.lookButton,eventType:"click",eventHandler:()=>{this.setStageForType({stageType:Nn.Language,animated:!0})}}),setTimeout(()=>{this.container.style.transition="opacity 1.8s",this.container.style.opacity="1",setTimeout(()=>{n.style.transition="1.8s cubic-bezier(.2,.17,0,1.04)",n.style.transform="translateY(0px)",setTimeout(()=>{i.style.transition="2s cubic-bezier(.2,.17,0,1.04), opacity 3s cubic-bezier(.2,.17,0,1.04)",i.style.transform="translateY(-5%)",setTimeout(()=>{i.style.opacity="1"},400),setTimeout(()=>{this.lookButtonWrapper.style.pointerEvents="all",this.lookButtonWrapper.style.transition="3.3s cubic-bezier(.2,.17,0,1.04)",this.lookButtonWrapper.style.transform="scale(1, 1)",this.lookButtonWrapper.style.opacity="1"},2e3)},400)},0)},700)}dispose(){this.lookButtonClickListener.dispose(),this.lookButtonClickListener=null}}const bn=class{constructor(e){this.name=e}static c(e){return new bn(e)}getStage(e){switch(this){case bn.Welcome:return new NO(e);case bn.Language:return new IO(e);case bn.Home:return new OO(e)}}getStageDivId(){switch(this){case bn.Welcome:return"stage-welcome";case bn.Language:return"stage-language";case bn.Home:return"stage-home"}}static get allCases(){return[bn.Welcome,bn.Language,bn.Home]}};let Nn=bn;Ke(Nn,"Welcome",bn.c("welcome")),Ke(Nn,"Language",bn.c("language")),Ke(Nn,"Home",bn.c("home"));class zO{constructor(){this.mainDiv=document.getElementById("main");for(let r=0;r<Nn.allCases.length;r++){var e=Nn.allCases[r].getStageDivId(),n=document.getElementById(e);n.style.opacity="0",n.style.display="none"}var i=Il.getCookie("language");i!=null?this.setStageForType({stageType:Nn.Home,animated:!1}):this.setStageForType({stageType:Nn.Welcome,animated:!1})}setStageForType({stageType:e,animated:n}){this.stage!=null&&(this.stage.div.style.transition=n?"opacity 0.4s":"opacity 0s",this.stage.div.style.opacity="0",this.stage.setStageForType=null,this.stage.dispose(),this.stage=null);var i=e.getStageDivId(),r=document.getElementById(i);switch(r.style.display="block",this.mainDiv.appendChild(r),n?setTimeout(()=>{r.style.transition=n?"opacity 0.4s":"opacity 0s",r.style.opacity="1"},500):(r.style.transition=n?"opacity 0.4s":"opacity 0s",r.style.opacity="1"),this.stage=e.getStage(r),this.stage.setStageForType=({stageType:s,animated:a})=>this.setStageForType({stageType:s,animated:a}),e){case Nn.Welcome:break;case Nn.Language:this.stage.languageDidChange=s=>{s!=null&&Il.setCookie("language",jn.Swedish.name,14)};break}}}let Iu=0;window.onload=()=>{new zO,setTimeout(()=>{Iu=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight},400)};window.addEventListener("resize",()=>{const t=window.scrollY,e=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,n=e/Iu;window.scrollTo(0,t*n),Iu=e},!0)});export default BO();
