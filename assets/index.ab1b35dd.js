var Ty=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var _O=Ty((Rn,On)=>{const Ey=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerpolicy&&(s.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?s.credentials="include":r.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=n(r);fetch(r.href,s)}};Ey();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Cu="140",ns={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},is={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Ay=0,Cd=1,Cy=2,Lu=1,Ly=2,Ra=3,kr=0,Fn=1,Pn=2,ag=1,ur=0,Ir=1,Ld=2,Pd=3,Dd=4,Py=5,Es=100,Dy=101,Ry=102,Rd=103,Od=104,Oy=200,Iy=201,Ny=202,zy=203,og=204,lg=205,By=206,Fy=207,Uy=208,ky=209,Vy=210,Hy=0,Gy=1,Wy=2,Rc=3,jy=4,qy=5,Xy=6,Jy=7,Yl=0,$y=1,Yy=2,Hi=0,Zy=1,Ky=2,Qy=3,ex=4,tx=5,hg=300,Vr=301,Hr=302,Oc=303,Ic=304,ho=306,Nc=1e3,Ln=1001,zc=1002,tn=1003,Id=1004,Nd=1005,mn=1006,nx=1007,co=1008,Gr=1009,ix=1010,rx=1011,Ja=1012,sx=1013,bl=1014,Rr=1015,$a=1016,ax=1017,ox=1018,Fs=1020,lx=1021,hx=1022,ii=1023,cx=1024,ux=1025,Nr=1026,Gs=1027,dx=1028,px=1029,fx=1030,mx=1031,gx=1033,Mh=33776,Th=33777,Eh=33778,Ah=33779,zd=35840,Bd=35841,Fd=35842,Ud=35843,vx=36196,kd=37492,Vd=37496,Hd=37808,Gd=37809,Wd=37810,jd=37811,qd=37812,Xd=37813,Jd=37814,$d=37815,Yd=37816,Zd=37817,Kd=37818,Qd=37819,ep=37820,tp=37821,np=36492,yx=2200,xx=2201,bx=2202,Cl=2300,Ll=2301,Ch=2302,Ds=2400,Rs=2401,Pl=2402,Pu=2500,cg=2501,_x=0,li=3e3,Et=3001,wx=3200,Sx=3201,Qs=0,Mx=1,Ui="srgb",Or="srgb-linear",Lh=7680,Tx=519,Ya=35044,Dl=35048,ip="300 es",Bc=1035;class ci{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(n);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,e);e.target=null}}}const sn=[];for(let t=0;t<256;t++)sn[t]=(t<16?"0":"")+t.toString(16);let rp=1234567;const Ua=Math.PI/180,Za=180/Math.PI;function si(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(sn[t&255]+sn[t>>8&255]+sn[t>>16&255]+sn[t>>24&255]+"-"+sn[e&255]+sn[e>>8&255]+"-"+sn[e>>16&15|64]+sn[e>>24&255]+"-"+sn[n&63|128]+sn[n>>8&255]+"-"+sn[n>>16&255]+sn[n>>24&255]+sn[i&255]+sn[i>>8&255]+sn[i>>16&255]+sn[i>>24&255]).toLowerCase()}function Jt(t,e,n){return Math.max(e,Math.min(n,t))}function Du(t,e){return(t%e+e)%e}function Ex(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)}function Ax(t,e,n){return t!==e?(n-t)/(e-t):0}function ka(t,e,n){return(1-n)*t+n*e}function Cx(t,e,n,i){return ka(t,e,1-Math.exp(-n*i))}function Lx(t,e=1){return e-Math.abs(Du(t,e*2)-e)}function Px(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))}function Dx(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))}function Rx(t,e){return t+Math.floor(Math.random()*(e-t+1))}function Ox(t,e){return t+Math.random()*(e-t)}function Ix(t){return t*(.5-Math.random())}function Nx(t){t!==void 0&&(rp=t);let e=rp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function zx(t){return t*Ua}function Bx(t){return t*Za}function Fc(t){return(t&t-1)===0&&t!==0}function Fx(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Rl(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function Ux(t,e,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),h=s((e+i)/2),c=a((e+i)/2),d=s((e-i)/2),u=a((e-i)/2),p=s((i-e)/2),m=a((i-e)/2);switch(r){case"XYX":t.set(o*c,l*d,l*u,o*h);break;case"YZY":t.set(l*u,o*c,l*d,o*h);break;case"ZXZ":t.set(l*d,l*u,o*c,o*h);break;case"XZX":t.set(o*c,l*m,l*p,o*h);break;case"YXY":t.set(l*p,o*c,l*m,o*h);break;case"ZYZ":t.set(l*m,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function kx(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Vx(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(t*65535);case Uint8Array:return Math.round(t*255);case Int16Array:return Math.round(t*32767);case Int8Array:return Math.round(t*127);default:throw new Error("Invalid component type.")}}var Mt=Object.freeze({__proto__:null,DEG2RAD:Ua,RAD2DEG:Za,generateUUID:si,clamp:Jt,euclideanModulo:Du,mapLinear:Ex,inverseLerp:Ax,lerp:ka,damp:Cx,pingpong:Lx,smoothstep:Px,smootherstep:Dx,randInt:Rx,randFloat:Ox,randFloatSpread:Ix,seededRandom:Nx,degToRad:zx,radToDeg:Bx,isPowerOfTwo:Fc,ceilPowerOfTwo:Fx,floorPowerOfTwo:Rl,setQuaternionFromProperEuler:Ux,normalize:Vx,denormalize:kx});class q{constructor(e=0,n=0){this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*r+e.x,this.y=s*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}q.prototype.isVector2=!0;class Dt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,a,o,l,h){const c=this.elements;return c[0]=e,c[1]=r,c[2]=o,c[3]=n,c[4]=s,c[5]=l,c[6]=i,c[7]=a,c[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,a=i[0],o=i[3],l=i[6],h=i[1],c=i[4],d=i[7],u=i[2],p=i[5],m=i[8],f=r[0],g=r[3],v=r[6],y=r[1],w=r[4],S=r[7],b=r[2],_=r[5],E=r[8];return s[0]=a*f+o*y+l*b,s[3]=a*g+o*w+l*_,s[6]=a*v+o*S+l*E,s[1]=h*f+c*y+d*b,s[4]=h*g+c*w+d*_,s[7]=h*v+c*S+d*E,s[2]=u*f+p*y+m*b,s[5]=u*g+p*w+m*_,s[8]=u*v+p*S+m*E,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8];return n*a*c-n*o*h-i*s*c+i*o*l+r*s*h-r*a*l}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],d=c*a-o*h,u=o*l-c*s,p=h*s-a*l,m=n*d+i*u+r*p;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/m;return e[0]=d*f,e[1]=(r*h-c*i)*f,e[2]=(o*i-r*a)*f,e[3]=u*f,e[4]=(c*n-r*l)*f,e[5]=(r*s-o*n)*f,e[6]=p*f,e[7]=(i*l-h*n)*f,e[8]=(a*n-i*s)*f,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,s,a,o){const l=Math.cos(s),h=Math.sin(s);return this.set(i*l,i*h,-i*(l*a+h*o)+a+e,-r*h,r*l,-r*(-h*a+l*o)+o+n,0,0,1),this}scale(e,n){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(e){const n=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],a=r[3],o=r[6],l=r[1],h=r[4],c=r[7];return r[0]=n*s+i*l,r[3]=n*a+i*h,r[6]=n*o+i*c,r[1]=-i*s+n*l,r[4]=-i*a+n*h,r[7]=-i*o+n*c,this}translate(e,n){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Dt.prototype.isMatrix3=!0;function ug(t){for(let e=t.length-1;e>=0;--e)if(t[e]>65535)return!0;return!1}const Hx={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Mo(t,e){return new Hx[t](e)}function Ka(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function zr(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function _l(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}const Ph={[Ui]:{[Or]:zr},[Or]:{[Ui]:_l}},jn={legacyMode:!0,get workingColorSpace(){return Or},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.legacyMode||e===n||!e||!n)return t;if(Ph[e]&&Ph[e][n]!==void 0){const i=Ph[e][n];return t.r=i(t.r),t.g=i(t.g),t.b=i(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},dg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},$t={r:0,g:0,b:0},qn={h:0,s:0,l:0},To={h:0,s:0,l:0};function Dh(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function Eo(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class Ae{constructor(e,n,i){return n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=Ui){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,jn.toWorkingColorSpace(this,n),this}setRGB(e,n,i,r=Or){return this.r=e,this.g=n,this.b=i,jn.toWorkingColorSpace(this,r),this}setHSL(e,n,i,r=Or){if(e=Du(e,1),n=Jt(n,0,1),i=Jt(i,0,1),n===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+n):i+n-i*n,a=2*i-s;this.r=Dh(a,s,e+1/3),this.g=Dh(a,s,e),this.b=Dh(a,s,e-1/3)}return jn.toWorkingColorSpace(this,r),this}setStyle(e,n=Ui){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,jn.toWorkingColorSpace(this,n),i(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,jn.toWorkingColorSpace(this,n),i(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(s[1])/360,h=parseInt(s[2],10)/100,c=parseInt(s[3],10)/100;return i(s[4]),this.setHSL(l,h,c,n)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],a=s.length;if(a===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,jn.toWorkingColorSpace(this,n),this;if(a===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,jn.toWorkingColorSpace(this,n),this}return e&&e.length>0?this.setColorName(e,n):this}setColorName(e,n=Ui){const i=dg[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=zr(e.r),this.g=zr(e.g),this.b=zr(e.b),this}copyLinearToSRGB(e){return this.r=_l(e.r),this.g=_l(e.g),this.b=_l(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ui){return jn.fromWorkingColorSpace(Eo(this,$t),e),Jt($t.r*255,0,255)<<16^Jt($t.g*255,0,255)<<8^Jt($t.b*255,0,255)<<0}getHexString(e=Ui){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=Or){jn.fromWorkingColorSpace(Eo(this,$t),n);const i=$t.r,r=$t.g,s=$t.b,a=Math.max(i,r,s),o=Math.min(i,r,s);let l,h;const c=(o+a)/2;if(o===a)l=0,h=0;else{const d=a-o;switch(h=c<=.5?d/(a+o):d/(2-a-o),a){case i:l=(r-s)/d+(r<s?6:0);break;case r:l=(s-i)/d+2;break;case s:l=(i-r)/d+4;break}l/=6}return e.h=l,e.s=h,e.l=c,e}getRGB(e,n=Or){return jn.fromWorkingColorSpace(Eo(this,$t),n),e.r=$t.r,e.g=$t.g,e.b=$t.b,e}getStyle(e=Ui){return jn.fromWorkingColorSpace(Eo(this,$t),e),e!==Ui?`color(${e} ${$t.r} ${$t.g} ${$t.b})`:`rgb(${$t.r*255|0},${$t.g*255|0},${$t.b*255|0})`}offsetHSL(e,n,i){return this.getHSL(qn),qn.h+=e,qn.s+=n,qn.l+=i,this.setHSL(qn.h,qn.s,qn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(qn),e.getHSL(To);const i=ka(qn.h,To.h,n),r=ka(qn.s,To.s,n),s=ka(qn.l,To.l,n);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ae.NAMES=dg;Ae.prototype.isColor=!0;Ae.prototype.r=1;Ae.prototype.g=1;Ae.prototype.b=1;let rs;class Xr{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{rs===void 0&&(rs=Ka("canvas")),rs.width=e.width,rs.height=e.height;const i=rs.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=rs}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const n=Ka("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let a=0;a<s.length;a++)s[a]=zr(s[a]/255)*255;return i.putImageData(r,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(zr(n[i]/255)*255):n[i]=zr(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Ru{constructor(e=null){this.uuid=si(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let a=0,o=r.length;a<o;a++)r[a].isDataTexture?s.push(Rh(r[a].image)):s.push(Rh(r[a]))}else s=Rh(r);i.url=s}return n||(e.images[this.uuid]=i),i}}function Rh(t){return typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&t instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap?Xr.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Ru.prototype.isSource=!0;let Gx=0;class Rt extends ci{constructor(e=Rt.DEFAULT_IMAGE,n=Rt.DEFAULT_MAPPING,i=Ln,r=Ln,s=mn,a=co,o=ii,l=Gr,h=1,c=li){super(),Object.defineProperty(this,"id",{value:Gx++}),this.uuid=si(),this.name="",this.source=new Ru(e),this.mipmaps=[],this.mapping=n,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=l,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Dt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==hg)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Nc:e.x=e.x-Math.floor(e.x);break;case Ln:e.x=e.x<0?0:1;break;case zc:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Nc:e.y=e.y-Math.floor(e.y);break;case Ln:e.y=e.y<0?0:1;break;case zc:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Rt.DEFAULT_IMAGE=null;Rt.DEFAULT_MAPPING=hg;Rt.prototype.isTexture=!0;class at{constructor(e=0,n=0,i=0,r=1){this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*r+a[12]*s,this.y=a[1]*n+a[5]*i+a[9]*r+a[13]*s,this.z=a[2]*n+a[6]*i+a[10]*r+a[14]*s,this.w=a[3]*n+a[7]*i+a[11]*r+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,s;const l=e.elements,h=l[0],c=l[4],d=l[8],u=l[1],p=l[5],m=l[9],f=l[2],g=l[6],v=l[10];if(Math.abs(c-u)<.01&&Math.abs(d-f)<.01&&Math.abs(m-g)<.01){if(Math.abs(c+u)<.1&&Math.abs(d+f)<.1&&Math.abs(m+g)<.1&&Math.abs(h+p+v-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const w=(h+1)/2,S=(p+1)/2,b=(v+1)/2,_=(c+u)/4,E=(d+f)/4,x=(m+g)/4;return w>S&&w>b?w<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(w),r=_/i,s=E/i):S>b?S<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(S),i=_/r,s=x/r):b<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(b),i=E/s,r=x/s),this.set(i,r,s,n),this}let y=Math.sqrt((g-m)*(g-m)+(d-f)*(d-f)+(u-c)*(u-c));return Math.abs(y)<.001&&(y=1),this.x=(g-m)/y,this.y=(d-f)/y,this.z=(u-c)/y,this.w=Math.acos((h+p+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}at.prototype.isVector4=!0;class Sn extends ci{constructor(e,n,i={}){super(),this.width=e,this.height=n,this.depth=1,this.scissor=new at(0,0,e,n),this.scissorTest=!1,this.viewport=new at(0,0,e,n);const r={width:e,height:n,depth:1};this.texture=new Rt(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:mn,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,n,i=1){(this.width!==e||this.height!==n||this.depth!==i)&&(this.width=e,this.height=n,this.depth=i,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const n=Object.assign({},e.texture.image);return this.texture.source=new Ru(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Sn.prototype.isWebGLRenderTarget=!0;class Zl extends Rt{constructor(e=null,n=1,i=1,r=1){super(null),this.image={data:e,width:n,height:i,depth:r},this.magFilter=tn,this.minFilter=tn,this.wrapR=Ln,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Zl.prototype.isDataArrayTexture=!0;class Wx extends Sn{constructor(e,n,i){super(e,n),this.depth=i,this.texture=new Zl(null,e,n,i),this.texture.isRenderTargetTexture=!0}}Wx.prototype.isWebGLArrayRenderTarget=!0;class Ou extends Rt{constructor(e=null,n=1,i=1,r=1){super(null),this.image={data:e,width:n,height:i,depth:r},this.magFilter=tn,this.minFilter=tn,this.wrapR=Ln,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Ou.prototype.isData3DTexture=!0;class jx extends Sn{constructor(e,n,i){super(e,n),this.depth=i,this.texture=new Ou(null,e,n,i),this.texture.isRenderTargetTexture=!0}}jx.prototype.isWebGL3DRenderTarget=!0;class qx extends Sn{constructor(e,n,i,r={}){super(e,n,r);const s=this.texture;this.texture=[];for(let a=0;a<i;a++)this.texture[a]=s.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let r=0,s=this.texture.length;r<s;r++)this.texture[r].image.width=e,this.texture[r].image.height=n,this.texture[r].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let n=0,i=e.texture.length;n<i;n++)this.texture[n]=e.texture[n].clone(),this.texture[n].isRenderTargetTexture=!0;return this}}qx.prototype.isWebGLMultipleRenderTargets=!0;class nn{constructor(e=0,n=0,i=0,r=1){this._x=e,this._y=n,this._z=i,this._w=r}static slerp(e,n,i,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,n,r)}static slerpFlat(e,n,i,r,s,a,o){let l=i[r+0],h=i[r+1],c=i[r+2],d=i[r+3];const u=s[a+0],p=s[a+1],m=s[a+2],f=s[a+3];if(o===0){e[n+0]=l,e[n+1]=h,e[n+2]=c,e[n+3]=d;return}if(o===1){e[n+0]=u,e[n+1]=p,e[n+2]=m,e[n+3]=f;return}if(d!==f||l!==u||h!==p||c!==m){let g=1-o;const v=l*u+h*p+c*m+d*f,y=v>=0?1:-1,w=1-v*v;if(w>Number.EPSILON){const b=Math.sqrt(w),_=Math.atan2(b,v*y);g=Math.sin(g*_)/b,o=Math.sin(o*_)/b}const S=o*y;if(l=l*g+u*S,h=h*g+p*S,c=c*g+m*S,d=d*g+f*S,g===1-o){const b=1/Math.sqrt(l*l+h*h+c*c+d*d);l*=b,h*=b,c*=b,d*=b}}e[n]=l,e[n+1]=h,e[n+2]=c,e[n+3]=d}static multiplyQuaternionsFlat(e,n,i,r,s,a){const o=i[r],l=i[r+1],h=i[r+2],c=i[r+3],d=s[a],u=s[a+1],p=s[a+2],m=s[a+3];return e[n]=o*m+c*d+l*p-h*u,e[n+1]=l*m+c*u+h*d-o*p,e[n+2]=h*m+c*p+o*u-l*d,e[n+3]=c*m-o*d-l*u-h*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,h=o(i/2),c=o(r/2),d=o(s/2),u=l(i/2),p=l(r/2),m=l(s/2);switch(a){case"XYZ":this._x=u*c*d+h*p*m,this._y=h*p*d-u*c*m,this._z=h*c*m+u*p*d,this._w=h*c*d-u*p*m;break;case"YXZ":this._x=u*c*d+h*p*m,this._y=h*p*d-u*c*m,this._z=h*c*m-u*p*d,this._w=h*c*d+u*p*m;break;case"ZXY":this._x=u*c*d-h*p*m,this._y=h*p*d+u*c*m,this._z=h*c*m+u*p*d,this._w=h*c*d-u*p*m;break;case"ZYX":this._x=u*c*d-h*p*m,this._y=h*p*d+u*c*m,this._z=h*c*m-u*p*d,this._w=h*c*d+u*p*m;break;case"YZX":this._x=u*c*d+h*p*m,this._y=h*p*d+u*c*m,this._z=h*c*m-u*p*d,this._w=h*c*d-u*p*m;break;case"XZY":this._x=u*c*d-h*p*m,this._y=h*p*d-u*c*m,this._z=h*c*m+u*p*d,this._w=h*c*d+u*p*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],s=n[8],a=n[1],o=n[5],l=n[9],h=n[2],c=n[6],d=n[10],u=i+o+d;if(u>0){const p=.5/Math.sqrt(u+1);this._w=.25/p,this._x=(c-l)*p,this._y=(s-h)*p,this._z=(a-r)*p}else if(i>o&&i>d){const p=2*Math.sqrt(1+i-o-d);this._w=(c-l)/p,this._x=.25*p,this._y=(r+a)/p,this._z=(s+h)/p}else if(o>d){const p=2*Math.sqrt(1+o-i-d);this._w=(s-h)/p,this._x=(r+a)/p,this._y=.25*p,this._z=(l+c)/p}else{const p=2*Math.sqrt(1+d-i-o);this._w=(a-r)/p,this._x=(s+h)/p,this._y=(l+c)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Jt(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,n)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,s=e._z,a=e._w,o=n._x,l=n._y,h=n._z,c=n._w;return this._x=i*c+a*o+r*h-s*l,this._y=r*c+a*l+s*o-i*h,this._z=s*c+a*h+i*l-r*o,this._w=a*c-i*o-r*l-s*h,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+r*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const p=1-n;return this._w=p*a+n*this._w,this._x=p*i+n*this._x,this._y=p*r+n*this._y,this._z=p*s+n*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(l),c=Math.atan2(h,o),d=Math.sin((1-n)*c)/h,u=Math.sin(n*c)/h;return this._w=a*d+this._w*u,this._x=i*d+this._x*u,this._y=r*d+this._y*u,this._z=s*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=Math.random(),n=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(n*Math.cos(r),i*Math.sin(s),i*Math.cos(s),n*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}nn.prototype.isQuaternion=!0;class T{constructor(e=0,n=0,i=0){this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,n)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(sp.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(sp.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=e.elements,a=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*a,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*a,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*a,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,s=e.x,a=e.y,o=e.z,l=e.w,h=l*n+a*r-o*i,c=l*i+o*n-s*r,d=l*r+s*i-a*n,u=-s*n-a*i-o*r;return this.x=h*l+u*-s+c*-o-d*-a,this.y=c*l+u*-a+d*-s-h*-o,this.z=d*l+u*-o+h*-a-c*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,n)):this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,s=e.z,a=n.x,o=n.y,l=n.z;return this.x=r*l-s*o,this.y=s*a-i*l,this.z=i*o-r*a,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Oh.copy(this).projectOnVector(e),this.sub(Oh)}reflect(e){return this.sub(Oh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Jt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,n=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}T.prototype.isVector3=!0;const Oh=new T,sp=new nn;class hn{constructor(e=new T(1/0,1/0,1/0),n=new T(-1/0,-1/0,-1/0)){this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,h=e.length;l<h;l+=3){const c=e[l],d=e[l+1],u=e[l+2];c<n&&(n=c),d<i&&(i=d),u<r&&(r=u),c>s&&(s=c),d>a&&(a=d),u>o&&(o=u)}return this.min.set(n,i,r),this.max.set(s,a,o),this}setFromBufferAttribute(e){let n=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,h=e.count;l<h;l++){const c=e.getX(l),d=e.getY(l),u=e.getZ(l);c<n&&(n=c),d<i&&(i=d),u<r&&(r=u),c>s&&(s=c),d>a&&(a=d),u>o&&(o=u)}return this.min.set(n,i,r),this.max.set(s,a,o),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Mr.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(n&&i.attributes!=null&&i.attributes.position!==void 0){const s=i.attributes.position;for(let a=0,o=s.count;a<o;a++)Mr.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Mr)}else i.boundingBox===null&&i.computeBoundingBox(),Ih.copy(i.boundingBox),Ih.applyMatrix4(e.matrixWorld),this.union(Ih);const r=e.children;for(let s=0,a=r.length;s<a;s++)this.expandByObject(r[s],n);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Mr),Mr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ya),Ao.subVectors(this.max,ya),ss.subVectors(e.a,ya),as.subVectors(e.b,ya),os.subVectors(e.c,ya),Yi.subVectors(as,ss),Zi.subVectors(os,as),Tr.subVectors(ss,os);let n=[0,-Yi.z,Yi.y,0,-Zi.z,Zi.y,0,-Tr.z,Tr.y,Yi.z,0,-Yi.x,Zi.z,0,-Zi.x,Tr.z,0,-Tr.x,-Yi.y,Yi.x,0,-Zi.y,Zi.x,0,-Tr.y,Tr.x,0];return!Nh(n,ss,as,os,Ao)||(n=[1,0,0,0,1,0,0,0,1],!Nh(n,ss,as,os,Ao))?!1:(Co.crossVectors(Yi,Zi),n=[Co.x,Co.y,Co.z],Nh(n,ss,as,os,Ao))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Mr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Mr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ri[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ri[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ri[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ri[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ri[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ri[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ri[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ri[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ri),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}hn.prototype.isBox3=!0;const Ri=[new T,new T,new T,new T,new T,new T,new T,new T],Mr=new T,Ih=new hn,ss=new T,as=new T,os=new T,Yi=new T,Zi=new T,Tr=new T,ya=new T,Ao=new T,Co=new T,Er=new T;function Nh(t,e,n,i,r){for(let s=0,a=t.length-3;s<=a;s+=3){Er.fromArray(t,s);const o=r.x*Math.abs(Er.x)+r.y*Math.abs(Er.y)+r.z*Math.abs(Er.z),l=e.dot(Er),h=n.dot(Er),c=i.dot(Er);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}const Xx=new hn,ap=new T,Lo=new T,zh=new T;class Un{constructor(e=new T,n=-1){this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):Xx.setFromPoints(e).getCenter(i);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){zh.subVectors(e,this.center);const n=zh.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),r=(i-this.radius)*.5;this.center.add(zh.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Lo.set(0,0,1).multiplyScalar(e.radius):Lo.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(ap.copy(e.center).add(Lo)),this.expandByPoint(ap.copy(e.center).sub(Lo)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Oi=new T,Bh=new T,Po=new T,Ki=new T,Fh=new T,Do=new T,Uh=new T;class Jr{constructor(e=new T,n=new T(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Oi)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=Oi.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(Oi.copy(this.direction).multiplyScalar(n).add(this.origin),Oi.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){Bh.copy(e).add(n).multiplyScalar(.5),Po.copy(n).sub(e).normalize(),Ki.copy(this.origin).sub(Bh);const s=e.distanceTo(n)*.5,a=-this.direction.dot(Po),o=Ki.dot(this.direction),l=-Ki.dot(Po),h=Ki.lengthSq(),c=Math.abs(1-a*a);let d,u,p,m;if(c>0)if(d=a*l-o,u=a*o-l,m=s*c,d>=0)if(u>=-m)if(u<=m){const f=1/c;d*=f,u*=f,p=d*(d+a*u+2*o)+u*(a*d+u+2*l)+h}else u=s,d=Math.max(0,-(a*u+o)),p=-d*d+u*(u+2*l)+h;else u=-s,d=Math.max(0,-(a*u+o)),p=-d*d+u*(u+2*l)+h;else u<=-m?(d=Math.max(0,-(-a*s+o)),u=d>0?-s:Math.min(Math.max(-s,-l),s),p=-d*d+u*(u+2*l)+h):u<=m?(d=0,u=Math.min(Math.max(-s,-l),s),p=u*(u+2*l)+h):(d=Math.max(0,-(a*s+o)),u=d>0?s:Math.min(Math.max(-s,-l),s),p=-d*d+u*(u+2*l)+h);else u=a>0?-s:s,d=Math.max(0,-(a*u+o)),p=-d*d+u*(u+2*l)+h;return i&&i.copy(this.direction).multiplyScalar(d).add(this.origin),r&&r.copy(Po).multiplyScalar(u).add(Bh),p}intersectSphere(e,n){Oi.subVectors(e.center,this.origin);const i=Oi.dot(this.direction),r=Oi.dot(Oi)-i*i,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=i-a,l=i+a;return o<0&&l<0?null:o<0?this.at(l,n):this.at(o,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,s,a,o,l;const h=1/this.direction.x,c=1/this.direction.y,d=1/this.direction.z,u=this.origin;return h>=0?(i=(e.min.x-u.x)*h,r=(e.max.x-u.x)*h):(i=(e.max.x-u.x)*h,r=(e.min.x-u.x)*h),c>=0?(s=(e.min.y-u.y)*c,a=(e.max.y-u.y)*c):(s=(e.max.y-u.y)*c,a=(e.min.y-u.y)*c),i>a||s>r||((s>i||i!==i)&&(i=s),(a<r||r!==r)&&(r=a),d>=0?(o=(e.min.z-u.z)*d,l=(e.max.z-u.z)*d):(o=(e.max.z-u.z)*d,l=(e.min.z-u.z)*d),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,Oi)!==null}intersectTriangle(e,n,i,r,s){Fh.subVectors(n,e),Do.subVectors(i,e),Uh.crossVectors(Fh,Do);let a=this.direction.dot(Uh),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Ki.subVectors(this.origin,e);const l=o*this.direction.dot(Do.crossVectors(Ki,Do));if(l<0)return null;const h=o*this.direction.dot(Fh.cross(Ki));if(h<0||l+h>a)return null;const c=-o*Ki.dot(Uh);return c<0?null:this.at(c/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Re{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,a,o,l,h,c,d,u,p,m,f,g){const v=this.elements;return v[0]=e,v[4]=n,v[8]=i,v[12]=r,v[1]=s,v[5]=a,v[9]=o,v[13]=l,v[2]=h,v[6]=c,v[10]=d,v[14]=u,v[3]=p,v[7]=m,v[11]=f,v[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Re().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/ls.setFromMatrixColumn(e,0).length(),s=1/ls.setFromMatrixColumn(e,1).length(),a=1/ls.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*a,n[9]=i[9]*a,n[10]=i[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=e.x,r=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(r),h=Math.sin(r),c=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const u=a*c,p=a*d,m=o*c,f=o*d;n[0]=l*c,n[4]=-l*d,n[8]=h,n[1]=p+m*h,n[5]=u-f*h,n[9]=-o*l,n[2]=f-u*h,n[6]=m+p*h,n[10]=a*l}else if(e.order==="YXZ"){const u=l*c,p=l*d,m=h*c,f=h*d;n[0]=u+f*o,n[4]=m*o-p,n[8]=a*h,n[1]=a*d,n[5]=a*c,n[9]=-o,n[2]=p*o-m,n[6]=f+u*o,n[10]=a*l}else if(e.order==="ZXY"){const u=l*c,p=l*d,m=h*c,f=h*d;n[0]=u-f*o,n[4]=-a*d,n[8]=m+p*o,n[1]=p+m*o,n[5]=a*c,n[9]=f-u*o,n[2]=-a*h,n[6]=o,n[10]=a*l}else if(e.order==="ZYX"){const u=a*c,p=a*d,m=o*c,f=o*d;n[0]=l*c,n[4]=m*h-p,n[8]=u*h+f,n[1]=l*d,n[5]=f*h+u,n[9]=p*h-m,n[2]=-h,n[6]=o*l,n[10]=a*l}else if(e.order==="YZX"){const u=a*l,p=a*h,m=o*l,f=o*h;n[0]=l*c,n[4]=f-u*d,n[8]=m*d+p,n[1]=d,n[5]=a*c,n[9]=-o*c,n[2]=-h*c,n[6]=p*d+m,n[10]=u-f*d}else if(e.order==="XZY"){const u=a*l,p=a*h,m=o*l,f=o*h;n[0]=l*c,n[4]=-d,n[8]=h*c,n[1]=u*d+f,n[5]=a*c,n[9]=p*d-m,n[2]=m*d-p,n[6]=o*c,n[10]=f*d+u}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Jx,e,$x)}lookAt(e,n,i){const r=this.elements;return Tn.subVectors(e,n),Tn.lengthSq()===0&&(Tn.z=1),Tn.normalize(),Qi.crossVectors(i,Tn),Qi.lengthSq()===0&&(Math.abs(i.z)===1?Tn.x+=1e-4:Tn.z+=1e-4,Tn.normalize(),Qi.crossVectors(i,Tn)),Qi.normalize(),Ro.crossVectors(Tn,Qi),r[0]=Qi.x,r[4]=Ro.x,r[8]=Tn.x,r[1]=Qi.y,r[5]=Ro.y,r[9]=Tn.y,r[2]=Qi.z,r[6]=Ro.z,r[10]=Tn.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,n)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,a=i[0],o=i[4],l=i[8],h=i[12],c=i[1],d=i[5],u=i[9],p=i[13],m=i[2],f=i[6],g=i[10],v=i[14],y=i[3],w=i[7],S=i[11],b=i[15],_=r[0],E=r[4],x=r[8],A=r[12],M=r[1],C=r[5],F=r[9],W=r[13],O=r[2],Z=r[6],X=r[10],j=r[14],H=r[3],N=r[7],I=r[11],V=r[15];return s[0]=a*_+o*M+l*O+h*H,s[4]=a*E+o*C+l*Z+h*N,s[8]=a*x+o*F+l*X+h*I,s[12]=a*A+o*W+l*j+h*V,s[1]=c*_+d*M+u*O+p*H,s[5]=c*E+d*C+u*Z+p*N,s[9]=c*x+d*F+u*X+p*I,s[13]=c*A+d*W+u*j+p*V,s[2]=m*_+f*M+g*O+v*H,s[6]=m*E+f*C+g*Z+v*N,s[10]=m*x+f*F+g*X+v*I,s[14]=m*A+f*W+g*j+v*V,s[3]=y*_+w*M+S*O+b*H,s[7]=y*E+w*C+S*Z+b*N,s[11]=y*x+w*F+S*X+b*I,s[15]=y*A+w*W+S*j+b*V,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],s=e[12],a=e[1],o=e[5],l=e[9],h=e[13],c=e[2],d=e[6],u=e[10],p=e[14],m=e[3],f=e[7],g=e[11],v=e[15];return m*(+s*l*d-r*h*d-s*o*u+i*h*u+r*o*p-i*l*p)+f*(+n*l*p-n*h*u+s*a*u-r*a*p+r*h*c-s*l*c)+g*(+n*h*d-n*o*p-s*a*d+i*a*p+s*o*c-i*h*c)+v*(-r*o*c-n*l*d+n*o*u+r*a*d-i*a*u+i*l*c)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],d=e[9],u=e[10],p=e[11],m=e[12],f=e[13],g=e[14],v=e[15],y=d*g*h-f*u*h+f*l*p-o*g*p-d*l*v+o*u*v,w=m*u*h-c*g*h-m*l*p+a*g*p+c*l*v-a*u*v,S=c*f*h-m*d*h+m*o*p-a*f*p-c*o*v+a*d*v,b=m*d*l-c*f*l-m*o*u+a*f*u+c*o*g-a*d*g,_=n*y+i*w+r*S+s*b;if(_===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/_;return e[0]=y*E,e[1]=(f*u*s-d*g*s-f*r*p+i*g*p+d*r*v-i*u*v)*E,e[2]=(o*g*s-f*l*s+f*r*h-i*g*h-o*r*v+i*l*v)*E,e[3]=(d*l*s-o*u*s-d*r*h+i*u*h+o*r*p-i*l*p)*E,e[4]=w*E,e[5]=(c*g*s-m*u*s+m*r*p-n*g*p-c*r*v+n*u*v)*E,e[6]=(m*l*s-a*g*s-m*r*h+n*g*h+a*r*v-n*l*v)*E,e[7]=(a*u*s-c*l*s+c*r*h-n*u*h-a*r*p+n*l*p)*E,e[8]=S*E,e[9]=(m*d*s-c*f*s-m*i*p+n*f*p+c*i*v-n*d*v)*E,e[10]=(a*f*s-m*o*s+m*i*h-n*f*h-a*i*v+n*o*v)*E,e[11]=(c*o*s-a*d*s-c*i*h+n*d*h+a*i*p-n*o*p)*E,e[12]=b*E,e[13]=(c*f*r-m*d*r+m*i*u-n*f*u-c*i*g+n*d*g)*E,e[14]=(m*o*r-a*f*r-m*i*l+n*f*l+a*i*g-n*o*g)*E,e[15]=(a*d*r-c*o*r+c*i*l-n*d*l-a*i*u+n*o*u)*E,this}scale(e){const n=this.elements,i=e.x,r=e.y,s=e.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,a=e.x,o=e.y,l=e.z,h=s*a,c=s*o;return this.set(h*a+i,h*o-r*l,h*l+r*o,0,h*o+r*l,c*o+i,c*l-r*a,0,h*l-r*o,c*l+r*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,r,s,a){return this.set(1,i,s,0,e,1,a,0,n,r,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,s=n._x,a=n._y,o=n._z,l=n._w,h=s+s,c=a+a,d=o+o,u=s*h,p=s*c,m=s*d,f=a*c,g=a*d,v=o*d,y=l*h,w=l*c,S=l*d,b=i.x,_=i.y,E=i.z;return r[0]=(1-(f+v))*b,r[1]=(p+S)*b,r[2]=(m-w)*b,r[3]=0,r[4]=(p-S)*_,r[5]=(1-(u+v))*_,r[6]=(g+y)*_,r[7]=0,r[8]=(m+w)*E,r[9]=(g-y)*E,r[10]=(1-(u+f))*E,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let s=ls.set(r[0],r[1],r[2]).length();const a=ls.set(r[4],r[5],r[6]).length(),o=ls.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Xn.copy(this);const h=1/s,c=1/a,d=1/o;return Xn.elements[0]*=h,Xn.elements[1]*=h,Xn.elements[2]*=h,Xn.elements[4]*=c,Xn.elements[5]*=c,Xn.elements[6]*=c,Xn.elements[8]*=d,Xn.elements[9]*=d,Xn.elements[10]*=d,n.setFromRotationMatrix(Xn),i.x=s,i.y=a,i.z=o,this}makePerspective(e,n,i,r,s,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*s/(n-e),h=2*s/(i-r),c=(n+e)/(n-e),d=(i+r)/(i-r),u=-(a+s)/(a-s),p=-2*a*s/(a-s);return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=h,o[9]=d,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,n,i,r,s,a){const o=this.elements,l=1/(n-e),h=1/(i-r),c=1/(a-s),d=(n+e)*l,u=(i+r)*h,p=(a+s)*c;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-d,o[1]=0,o[5]=2*h,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}Re.prototype.isMatrix4=!0;const ls=new T,Xn=new Re,Jx=new T(0,0,0),$x=new T(1,1,1),Qi=new T,Ro=new T,Tn=new T,op=new Re,lp=new nn;class Ei{constructor(e=0,n=0,i=0,r=Ei.DefaultOrder){this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r=this._order){return this._x=e,this._y=n,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const r=e.elements,s=r[0],a=r[4],o=r[8],l=r[1],h=r[5],c=r[9],d=r[2],u=r[6],p=r[10];switch(n){case"XYZ":this._y=Math.asin(Jt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(u,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Jt(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(Jt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Jt(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(Jt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,h),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-Jt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,h),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-c,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return op.makeRotationFromQuaternion(e),this.setFromRotationMatrix(op,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return lp.setFromEuler(this),this.setFromQuaternion(lp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ei.prototype.isEuler=!0;Ei.DefaultOrder="XYZ";Ei.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class pg{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Yx=0;const hp=new T,hs=new nn,Ii=new Re,Oo=new T,xa=new T,Zx=new T,Kx=new nn,cp=new T(1,0,0),up=new T(0,1,0),dp=new T(0,0,1),Qx={type:"added"},pp={type:"removed"};class ot extends ci{constructor(){super(),Object.defineProperty(this,"id",{value:Yx++}),this.uuid=si(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ot.DefaultUp.clone();const e=new T,n=new Ei,i=new nn,r=new T(1,1,1);function s(){i.setFromEuler(n,!1)}function a(){n.setFromQuaternion(i,void 0,!1)}n._onChange(s),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Re},normalMatrix:{value:new Dt}}),this.matrix=new Re,this.matrixWorld=new Re,this.matrixAutoUpdate=ot.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new pg,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return hs.setFromAxisAngle(e,n),this.quaternion.multiply(hs),this}rotateOnWorldAxis(e,n){return hs.setFromAxisAngle(e,n),this.quaternion.premultiply(hs),this}rotateX(e){return this.rotateOnAxis(cp,e)}rotateY(e){return this.rotateOnAxis(up,e)}rotateZ(e){return this.rotateOnAxis(dp,e)}translateOnAxis(e,n){return hp.copy(e).applyQuaternion(this.quaternion),this.position.add(hp.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(cp,e)}translateY(e){return this.translateOnAxis(up,e)}translateZ(e){return this.translateOnAxis(dp,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Ii.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?Oo.copy(e):Oo.set(e,n,i);const r=this.parent;this.updateWorldMatrix(!0,!1),xa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ii.lookAt(xa,Oo,this.up):Ii.lookAt(Oo,xa,this.up),this.quaternion.setFromRotationMatrix(Ii),r&&(Ii.extractRotation(r.matrixWorld),hs.setFromRotationMatrix(Ii),this.quaternion.premultiply(hs.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Qx)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(pp)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const n=this.children[e];n.parent=null,n.dispatchEvent(pp)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Ii.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ii.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ii),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectByProperty(e,n);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xa,e,Zx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xa,Kx,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let h=0,c=l.length;h<c;h++){const d=l[h];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,h=this.material.length;l<h;l++)o.push(s(e.materials,this.material[l]));r.material=o}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(s(e.animations,l))}}if(n){const o=a(e.geometries),l=a(e.materials),h=a(e.textures),c=a(e.images),d=a(e.shapes),u=a(e.skeletons),p=a(e.animations),m=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),h.length>0&&(i.textures=h),c.length>0&&(i.images=c),d.length>0&&(i.shapes=d),u.length>0&&(i.skeletons=u),p.length>0&&(i.animations=p),m.length>0&&(i.nodes=m)}return i.object=r,i;function a(o){const l=[];for(const h in o){const c=o[h];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}ot.DefaultUp=new T(0,1,0);ot.DefaultMatrixAutoUpdate=!0;ot.prototype.isObject3D=!0;const Jn=new T,Ni=new T,kh=new T,zi=new T,cs=new T,us=new T,fp=new T,Vh=new T,Hh=new T,Gh=new T;class Vt{constructor(e=new T,n=new T,i=new T){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,r){r.subVectors(i,n),Jn.subVectors(e,n),r.cross(Jn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,n,i,r,s){Jn.subVectors(r,n),Ni.subVectors(i,n),kh.subVectors(e,n);const a=Jn.dot(Jn),o=Jn.dot(Ni),l=Jn.dot(kh),h=Ni.dot(Ni),c=Ni.dot(kh),d=a*h-o*o;if(d===0)return s.set(-2,-1,-1);const u=1/d,p=(h*l-o*c)*u,m=(a*c-o*l)*u;return s.set(1-p-m,m,p)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,zi),zi.x>=0&&zi.y>=0&&zi.x+zi.y<=1}static getUV(e,n,i,r,s,a,o,l){return this.getBarycoord(e,n,i,r,zi),l.set(0,0),l.addScaledVector(s,zi.x),l.addScaledVector(a,zi.y),l.addScaledVector(o,zi.z),l}static isFrontFacing(e,n,i,r){return Jn.subVectors(i,n),Ni.subVectors(e,n),Jn.cross(Ni).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,n,i,r){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Jn.subVectors(this.c,this.b),Ni.subVectors(this.a,this.b),Jn.cross(Ni).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Vt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return Vt.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,r,s){return Vt.getUV(e,this.a,this.b,this.c,n,i,r,s)}containsPoint(e){return Vt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Vt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,r=this.b,s=this.c;let a,o;cs.subVectors(r,i),us.subVectors(s,i),Vh.subVectors(e,i);const l=cs.dot(Vh),h=us.dot(Vh);if(l<=0&&h<=0)return n.copy(i);Hh.subVectors(e,r);const c=cs.dot(Hh),d=us.dot(Hh);if(c>=0&&d<=c)return n.copy(r);const u=l*d-c*h;if(u<=0&&l>=0&&c<=0)return a=l/(l-c),n.copy(i).addScaledVector(cs,a);Gh.subVectors(e,s);const p=cs.dot(Gh),m=us.dot(Gh);if(m>=0&&p<=m)return n.copy(s);const f=p*h-l*m;if(f<=0&&h>=0&&m<=0)return o=h/(h-m),n.copy(i).addScaledVector(us,o);const g=c*m-p*d;if(g<=0&&d-c>=0&&p-m>=0)return fp.subVectors(s,r),o=(d-c)/(d-c+(p-m)),n.copy(r).addScaledVector(fp,o);const v=1/(g+f+u);return a=f*v,o=u*v,n.copy(i).addScaledVector(cs,a).addScaledVector(us,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let eb=0;class Kt extends ci{constructor(){super(),Object.defineProperty(this,"id",{value:eb++}),this.uuid=si(),this.name="",this.type="Material",this.blending=Ir,this.side=kr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=og,this.blendDst=lg,this.blendEquation=Es,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Rc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Tx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Lh,this.stencilZFail=Lh,this.stencilZPass=Lh,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn("THREE.Material: '"+n+"' parameter is undefined.");continue}if(n==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===ag;continue}const r=this[n];if(r===void 0){console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ir&&(i.blending=this.blending),this.side!==kr&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(n){const s=r(e.textures),a=r(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const r=n.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=n[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}Kt.prototype.isMaterial=!0;Kt.fromType=function(){return null};class mr extends Kt{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}mr.prototype.isMeshBasicMaterial=!0;const Wt=new T,Io=new q;class tt{constructor(e,n,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i===!0,this.usage=Ya,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=n.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new Ae),n[i++]=a.r,n[i++]=a.g,n[i++]=a.b}return this}copyVector2sArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new q),n[i++]=a.x,n[i++]=a.y}return this}copyVector3sArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new T),n[i++]=a.x,n[i++]=a.y,n[i++]=a.z}return this}copyVector4sArray(e){const n=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new at),n[i++]=a.x,n[i++]=a.y,n[i++]=a.z,n[i++]=a.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Io.fromBufferAttribute(this,n),Io.applyMatrix3(e),this.setXY(n,Io.x,Io.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)Wt.fromBufferAttribute(this,n),Wt.applyMatrix3(e),this.setXYZ(n,Wt.x,Wt.y,Wt.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)Wt.fromBufferAttribute(this,n),Wt.applyMatrix4(e),this.setXYZ(n,Wt.x,Wt.y,Wt.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)Wt.fromBufferAttribute(this,n),Wt.applyNormalMatrix(e),this.setXYZ(n,Wt.x,Wt.y,Wt.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)Wt.fromBufferAttribute(this,n),Wt.transformDirection(e),this.setXYZ(n,Wt.x,Wt.y,Wt.z);return this}set(e,n=0){return this.array.set(e,n),this}getX(e){return this.array[e*this.itemSize]}setX(e,n){return this.array[e*this.itemSize]=n,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,n){return this.array[e*this.itemSize+1]=n,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,n){return this.array[e*this.itemSize+2]=n,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,n){return this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,r){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,n,i,r,s){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ya&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}tt.prototype.isBufferAttribute=!0;class fg extends tt{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class Va extends tt{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class tb extends tt{constructor(e,n,i){super(new Uint16Array(e),n,i)}}tb.prototype.isFloat16BufferAttribute=!0;class Pe extends tt{constructor(e,n,i){super(new Float32Array(e),n,i)}}let nb=0;const In=new Re,Wh=new ot,ds=new T,En=new hn,ba=new hn,Qt=new T;class Ve extends ci{constructor(){super(),Object.defineProperty(this,"id",{value:nb++}),this.uuid=si(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ug(e)?Va:fg)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Dt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return In.makeRotationFromQuaternion(e),this.applyMatrix4(In),this}rotateX(e){return In.makeRotationX(e),this.applyMatrix4(In),this}rotateY(e){return In.makeRotationY(e),this.applyMatrix4(In),this}rotateZ(e){return In.makeRotationZ(e),this.applyMatrix4(In),this}translate(e,n,i){return In.makeTranslation(e,n,i),this.applyMatrix4(In),this}scale(e,n,i){return In.makeScale(e,n,i),this.applyMatrix4(In),this}lookAt(e){return Wh.lookAt(e),Wh.updateMatrix(),this.applyMatrix4(Wh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ds).negate(),this.translate(ds.x,ds.y,ds.z),this}setFromPoints(e){const n=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];n.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Pe(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new hn);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new T(-1/0,-1/0,-1/0),new T(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,r=n.length;i<r;i++){const s=n[i];En.setFromBufferAttribute(s),this.morphTargetsRelative?(Qt.addVectors(this.boundingBox.min,En.min),this.boundingBox.expandByPoint(Qt),Qt.addVectors(this.boundingBox.max,En.max),this.boundingBox.expandByPoint(Qt)):(this.boundingBox.expandByPoint(En.min),this.boundingBox.expandByPoint(En.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Un);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new T,1/0);return}if(e){const i=this.boundingSphere.center;if(En.setFromBufferAttribute(e),n)for(let s=0,a=n.length;s<a;s++){const o=n[s];ba.setFromBufferAttribute(o),this.morphTargetsRelative?(Qt.addVectors(En.min,ba.min),En.expandByPoint(Qt),Qt.addVectors(En.max,ba.max),En.expandByPoint(Qt)):(En.expandByPoint(ba.min),En.expandByPoint(ba.max))}En.getCenter(i);let r=0;for(let s=0,a=e.count;s<a;s++)Qt.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Qt));if(n)for(let s=0,a=n.length;s<a;s++){const o=n[s],l=this.morphTargetsRelative;for(let h=0,c=o.count;h<c;h++)Qt.fromBufferAttribute(o,h),l&&(ds.fromBufferAttribute(e,h),Qt.add(ds)),r=Math.max(r,i.distanceToSquared(Qt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=n.position.array,s=n.normal.array,a=n.uv.array,o=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new tt(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,h=[],c=[];for(let M=0;M<o;M++)h[M]=new T,c[M]=new T;const d=new T,u=new T,p=new T,m=new q,f=new q,g=new q,v=new T,y=new T;function w(M,C,F){d.fromArray(r,M*3),u.fromArray(r,C*3),p.fromArray(r,F*3),m.fromArray(a,M*2),f.fromArray(a,C*2),g.fromArray(a,F*2),u.sub(d),p.sub(d),f.sub(m),g.sub(m);const W=1/(f.x*g.y-g.x*f.y);!isFinite(W)||(v.copy(u).multiplyScalar(g.y).addScaledVector(p,-f.y).multiplyScalar(W),y.copy(p).multiplyScalar(f.x).addScaledVector(u,-g.x).multiplyScalar(W),h[M].add(v),h[C].add(v),h[F].add(v),c[M].add(y),c[C].add(y),c[F].add(y))}let S=this.groups;S.length===0&&(S=[{start:0,count:i.length}]);for(let M=0,C=S.length;M<C;++M){const F=S[M],W=F.start,O=F.count;for(let Z=W,X=W+O;Z<X;Z+=3)w(i[Z+0],i[Z+1],i[Z+2])}const b=new T,_=new T,E=new T,x=new T;function A(M){E.fromArray(s,M*3),x.copy(E);const C=h[M];b.copy(C),b.sub(E.multiplyScalar(E.dot(C))).normalize(),_.crossVectors(x,C);const W=_.dot(c[M])<0?-1:1;l[M*4]=b.x,l[M*4+1]=b.y,l[M*4+2]=b.z,l[M*4+3]=W}for(let M=0,C=S.length;M<C;++M){const F=S[M],W=F.start,O=F.count;for(let Z=W,X=W+O;Z<X;Z+=3)A(i[Z+0]),A(i[Z+1]),A(i[Z+2])}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new tt(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let u=0,p=i.count;u<p;u++)i.setXYZ(u,0,0,0);const r=new T,s=new T,a=new T,o=new T,l=new T,h=new T,c=new T,d=new T;if(e)for(let u=0,p=e.count;u<p;u+=3){const m=e.getX(u+0),f=e.getX(u+1),g=e.getX(u+2);r.fromBufferAttribute(n,m),s.fromBufferAttribute(n,f),a.fromBufferAttribute(n,g),c.subVectors(a,s),d.subVectors(r,s),c.cross(d),o.fromBufferAttribute(i,m),l.fromBufferAttribute(i,f),h.fromBufferAttribute(i,g),o.add(c),l.add(c),h.add(c),i.setXYZ(m,o.x,o.y,o.z),i.setXYZ(f,l.x,l.y,l.z),i.setXYZ(g,h.x,h.y,h.z)}else for(let u=0,p=n.count;u<p;u+=3)r.fromBufferAttribute(n,u+0),s.fromBufferAttribute(n,u+1),a.fromBufferAttribute(n,u+2),c.subVectors(a,s),d.subVectors(r,s),c.cross(d),i.setXYZ(u+0,c.x,c.y,c.z),i.setXYZ(u+1,c.x,c.y,c.z),i.setXYZ(u+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,n){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}n===void 0&&(n=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const a=i[r].array,o=e.attributes[r],l=o.array,h=o.itemSize*n,c=Math.min(l.length,a.length-h);for(let d=0,u=h;d<c;d++,u++)a[u]=l[d]}return this}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)Qt.fromBufferAttribute(e,n),Qt.normalize(),e.setXYZ(n,Qt.x,Qt.y,Qt.z)}toNonIndexed(){function e(o,l){const h=o.array,c=o.itemSize,d=o.normalized,u=new h.constructor(l.length*c);let p=0,m=0;for(let f=0,g=l.length;f<g;f++){o.isInterleavedBufferAttribute?p=l[f]*o.data.stride+o.offset:p=l[f]*c;for(let v=0;v<c;v++)u[m++]=h[p++]}return new tt(u,c,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new Ve,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],h=e(l,i);n.setAttribute(o,h)}const s=this.morphAttributes;for(const o in s){const l=[],h=s[o];for(let c=0,d=h.length;c<d;c++){const u=h[c],p=e(u,i);l.push(p)}n.morphAttributes[o]=l}n.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const h=a[o];n.addGroup(h.start,h.count,h.materialIndex)}return n}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const h in l)l[h]!==void 0&&(e[h]=l[h]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const l in i){const h=i[l];e.data.attributes[l]=h.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const h=this.morphAttributes[l],c=[];for(let d=0,u=h.length;d<u;d++){const p=h[d];c.push(p.toJSON(e.data))}c.length>0&&(r[l]=c,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const r=e.attributes;for(const h in r){const c=r[h];this.setAttribute(h,c.clone(n))}const s=e.morphAttributes;for(const h in s){const c=[],d=s[h];for(let u=0,p=d.length;u<p;u++)c.push(d[u].clone(n));this.morphAttributes[h]=c}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,c=a.length;h<c;h++){const d=a[h];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ve.prototype.isBufferGeometry=!0;const mp=new Re,ps=new Jr,jh=new Un,er=new T,tr=new T,nr=new T,qh=new T,Xh=new T,Jh=new T,No=new T,zo=new T,Bo=new T,Fo=new q,Uo=new q,ko=new q,$h=new T,Vo=new T;class ln extends ot{constructor(e=new Ve,n=new mr){super(),this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,n){const i=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),jh.copy(i.boundingSphere),jh.applyMatrix4(s),e.ray.intersectsSphere(jh)===!1)||(mp.copy(s).invert(),ps.copy(e.ray).applyMatrix4(mp),i.boundingBox!==null&&ps.intersectsBox(i.boundingBox)===!1))return;let a;if(i.isBufferGeometry){const o=i.index,l=i.attributes.position,h=i.morphAttributes.position,c=i.morphTargetsRelative,d=i.attributes.uv,u=i.attributes.uv2,p=i.groups,m=i.drawRange;if(o!==null)if(Array.isArray(r))for(let f=0,g=p.length;f<g;f++){const v=p[f],y=r[v.materialIndex],w=Math.max(v.start,m.start),S=Math.min(o.count,Math.min(v.start+v.count,m.start+m.count));for(let b=w,_=S;b<_;b+=3){const E=o.getX(b),x=o.getX(b+1),A=o.getX(b+2);a=Ho(this,y,e,ps,l,h,c,d,u,E,x,A),a&&(a.faceIndex=Math.floor(b/3),a.face.materialIndex=v.materialIndex,n.push(a))}}else{const f=Math.max(0,m.start),g=Math.min(o.count,m.start+m.count);for(let v=f,y=g;v<y;v+=3){const w=o.getX(v),S=o.getX(v+1),b=o.getX(v+2);a=Ho(this,r,e,ps,l,h,c,d,u,w,S,b),a&&(a.faceIndex=Math.floor(v/3),n.push(a))}}else if(l!==void 0)if(Array.isArray(r))for(let f=0,g=p.length;f<g;f++){const v=p[f],y=r[v.materialIndex],w=Math.max(v.start,m.start),S=Math.min(l.count,Math.min(v.start+v.count,m.start+m.count));for(let b=w,_=S;b<_;b+=3){const E=b,x=b+1,A=b+2;a=Ho(this,y,e,ps,l,h,c,d,u,E,x,A),a&&(a.faceIndex=Math.floor(b/3),a.face.materialIndex=v.materialIndex,n.push(a))}}else{const f=Math.max(0,m.start),g=Math.min(l.count,m.start+m.count);for(let v=f,y=g;v<y;v+=3){const w=v,S=v+1,b=v+2;a=Ho(this,r,e,ps,l,h,c,d,u,w,S,b),a&&(a.faceIndex=Math.floor(v/3),n.push(a))}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}ln.prototype.isMesh=!0;function ib(t,e,n,i,r,s,a,o){let l;if(e.side===Fn?l=i.intersectTriangle(a,s,r,!0,o):l=i.intersectTriangle(r,s,a,e.side!==Pn,o),l===null)return null;Vo.copy(o),Vo.applyMatrix4(t.matrixWorld);const h=n.ray.origin.distanceTo(Vo);return h<n.near||h>n.far?null:{distance:h,point:Vo.clone(),object:t}}function Ho(t,e,n,i,r,s,a,o,l,h,c,d){er.fromBufferAttribute(r,h),tr.fromBufferAttribute(r,c),nr.fromBufferAttribute(r,d);const u=t.morphTargetInfluences;if(s&&u){No.set(0,0,0),zo.set(0,0,0),Bo.set(0,0,0);for(let m=0,f=s.length;m<f;m++){const g=u[m],v=s[m];g!==0&&(qh.fromBufferAttribute(v,h),Xh.fromBufferAttribute(v,c),Jh.fromBufferAttribute(v,d),a?(No.addScaledVector(qh,g),zo.addScaledVector(Xh,g),Bo.addScaledVector(Jh,g)):(No.addScaledVector(qh.sub(er),g),zo.addScaledVector(Xh.sub(tr),g),Bo.addScaledVector(Jh.sub(nr),g)))}er.add(No),tr.add(zo),nr.add(Bo)}t.isSkinnedMesh&&(t.boneTransform(h,er),t.boneTransform(c,tr),t.boneTransform(d,nr));const p=ib(t,e,n,i,er,tr,nr,$h);if(p){o&&(Fo.fromBufferAttribute(o,h),Uo.fromBufferAttribute(o,c),ko.fromBufferAttribute(o,d),p.uv=Vt.getUV($h,er,tr,nr,Fo,Uo,ko,new q)),l&&(Fo.fromBufferAttribute(l,h),Uo.fromBufferAttribute(l,c),ko.fromBufferAttribute(l,d),p.uv2=Vt.getUV($h,er,tr,nr,Fo,Uo,ko,new q));const m={a:h,b:c,c:d,normal:new T,materialIndex:0};Vt.getNormal(er,tr,nr,m.normal),p.face=m}return p}class ji extends Ve{constructor(e=1,n=1,i=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],h=[],c=[],d=[];let u=0,p=0;m("z","y","x",-1,-1,i,n,e,a,s,0),m("z","y","x",1,-1,i,n,-e,a,s,1),m("x","z","y",1,1,e,i,n,r,a,2),m("x","z","y",1,-1,e,i,-n,r,a,3),m("x","y","z",1,-1,e,n,i,r,s,4),m("x","y","z",-1,-1,e,n,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new Pe(h,3)),this.setAttribute("normal",new Pe(c,3)),this.setAttribute("uv",new Pe(d,2));function m(f,g,v,y,w,S,b,_,E,x,A){const M=S/E,C=b/x,F=S/2,W=b/2,O=_/2,Z=E+1,X=x+1;let j=0,H=0;const N=new T;for(let I=0;I<X;I++){const V=I*C-W;for(let B=0;B<Z;B++){const k=B*M-F;N[f]=k*y,N[g]=V*w,N[v]=O,h.push(N.x,N.y,N.z),N[f]=0,N[g]=0,N[v]=_>0?1:-1,c.push(N.x,N.y,N.z),d.push(B/E),d.push(1-I/x),j+=1}}for(let I=0;I<x;I++)for(let V=0;V<E;V++){const B=u+V+Z*I,k=u+V+Z*(I+1),$=u+(V+1)+Z*(I+1),ne=u+(V+1)+Z*I;l.push(B,k,ne),l.push(k,$,ne),H+=6}o.addGroup(p,H,A),p+=H,u+=j}}static fromJSON(e){return new ji(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ws(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function cn(t){const e={};for(let n=0;n<t.length;n++){const i=Ws(t[n]);for(const r in i)e[r]=i[r]}return e}const ea={clone:Ws,merge:cn};var rb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,sb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class kn extends Kt{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=rb,this.fragmentShader=sb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ws(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?n.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?n.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?n.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?n.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?n.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?n.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?n.uniforms[r]={type:"m4",value:a.toArray()}:n.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}kn.prototype.isShaderMaterial=!0;class ta extends ot{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Re,this.projectionMatrix=new Re,this.projectionMatrixInverse=new Re}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(-n[8],-n[9],-n[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}ta.prototype.isCamera=!0;class un extends ta{constructor(e=50,n=1,i=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=Za*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ua*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Za*2*Math.atan(Math.tan(Ua*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,n,i,r,s,a){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(Ua*.5*this.fov)/this.zoom,i=2*n,r=this.aspect*i,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,h=a.fullHeight;s+=a.offsetX*r/l,n-=a.offsetY*i/h,r*=a.width/l,i*=a.height/h}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,n,n-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}un.prototype.isPerspectiveCamera=!0;const fs=90,ms=1;class Iu extends ot{constructor(e,n,i){if(super(),this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new un(fs,ms,e,n);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new T(1,0,0)),this.add(r);const s=new un(fs,ms,e,n);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new T(-1,0,0)),this.add(s);const a=new un(fs,ms,e,n);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new T(0,1,0)),this.add(a);const o=new un(fs,ms,e,n);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new T(0,-1,0)),this.add(o);const l=new un(fs,ms,e,n);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new T(0,0,1)),this.add(l);const h=new un(fs,ms,e,n);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new T(0,0,-1)),this.add(h)}update(e,n){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,s,a,o,l,h]=this.children,c=e.getRenderTarget(),d=e.toneMapping,u=e.xr.enabled;e.toneMapping=Hi,e.xr.enabled=!1;const p=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(n,r),e.setRenderTarget(i,1),e.render(n,s),e.setRenderTarget(i,2),e.render(n,a),e.setRenderTarget(i,3),e.render(n,o),e.setRenderTarget(i,4),e.render(n,l),i.texture.generateMipmaps=p,e.setRenderTarget(i,5),e.render(n,h),e.setRenderTarget(c),e.toneMapping=d,e.xr.enabled=u,i.texture.needsPMREMUpdate=!0}}class uo extends Rt{constructor(e,n,i,r,s,a,o,l,h,c){e=e!==void 0?e:[],n=n!==void 0?n:Vr,super(e,n,i,r,s,a,o,l,h,c),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}uo.prototype.isCubeTexture=!0;class mg extends Sn{constructor(e,n={}){super(e,e,n);const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new uo(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:mn}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.encoding=n.encoding,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new ji(5,5,5),s=new kn({name:"CubemapFromEquirect",uniforms:Ws(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Fn,blending:ur});s.uniforms.tEquirect.value=n;const a=new ln(r,s),o=n.minFilter;return n.minFilter===co&&(n.minFilter=mn),new Iu(1,10,this).update(e,a),n.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,n,i,r){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(n,i,r);e.setRenderTarget(s)}}mg.prototype.isWebGLCubeRenderTarget=!0;const Yh=new T,ab=new T,ob=new Dt;class _i{constructor(e=new T(1,0,0),n=0){this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=Yh.subVectors(i,n).cross(ab.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){const i=e.delta(Yh),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:n.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||ob.getNormalMatrix(e),r=this.coplanarPoint(Yh).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}_i.prototype.isPlane=!0;const gs=new Un,Go=new T;class Kl{constructor(e=new _i,n=new _i,i=new _i,r=new _i,s=new _i,a=new _i){this.planes=[e,n,i,r,s,a]}set(e,n,i,r,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(i),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,r=i[0],s=i[1],a=i[2],o=i[3],l=i[4],h=i[5],c=i[6],d=i[7],u=i[8],p=i[9],m=i[10],f=i[11],g=i[12],v=i[13],y=i[14],w=i[15];return n[0].setComponents(o-r,d-l,f-u,w-g).normalize(),n[1].setComponents(o+r,d+l,f+u,w+g).normalize(),n[2].setComponents(o+s,d+h,f+p,w+v).normalize(),n[3].setComponents(o-s,d-h,f-p,w-v).normalize(),n[4].setComponents(o-a,d-c,f-m,w-y).normalize(),n[5].setComponents(o+a,d+c,f+m,w+y).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),gs.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(gs)}intersectsSprite(e){return gs.center.set(0,0,0),gs.radius=.7071067811865476,gs.applyMatrix4(e.matrixWorld),this.intersectsSphere(gs)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(Go.x=r.normal.x>0?e.max.x:e.min.x,Go.y=r.normal.y>0?e.max.y:e.min.y,Go.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Go)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function gg(){let t=null,e=!1,n=null,i=null;function r(s,a){n(s,a),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){n=s},setContext:function(s){t=s}}}function lb(t,e){const n=e.isWebGL2,i=new WeakMap;function r(h,c){const d=h.array,u=h.usage,p=t.createBuffer();t.bindBuffer(c,p),t.bufferData(c,d,u),h.onUploadCallback();let m;if(d instanceof Float32Array)m=5126;else if(d instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(n)m=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=5123;else if(d instanceof Int16Array)m=5122;else if(d instanceof Uint32Array)m=5125;else if(d instanceof Int32Array)m=5124;else if(d instanceof Int8Array)m=5120;else if(d instanceof Uint8Array)m=5121;else if(d instanceof Uint8ClampedArray)m=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:m,bytesPerElement:d.BYTES_PER_ELEMENT,version:h.version}}function s(h,c,d){const u=c.array,p=c.updateRange;t.bindBuffer(d,h),p.count===-1?t.bufferSubData(d,0,u):(n?t.bufferSubData(d,p.offset*u.BYTES_PER_ELEMENT,u,p.offset,p.count):t.bufferSubData(d,p.offset*u.BYTES_PER_ELEMENT,u.subarray(p.offset,p.offset+p.count)),p.count=-1)}function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),i.get(h)}function o(h){h.isInterleavedBufferAttribute&&(h=h.data);const c=i.get(h);c&&(t.deleteBuffer(c.buffer),i.delete(h))}function l(h,c){if(h.isGLBufferAttribute){const u=i.get(h);(!u||u.version<h.version)&&i.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const d=i.get(h);d===void 0?i.set(h,r(h,c)):d.version<h.version&&(s(d.buffer,h,c),d.version=h.version)}return{get:a,remove:o,update:l}}class po extends Ve{constructor(e=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r};const s=e/2,a=n/2,o=Math.floor(i),l=Math.floor(r),h=o+1,c=l+1,d=e/o,u=n/l,p=[],m=[],f=[],g=[];for(let v=0;v<c;v++){const y=v*u-a;for(let w=0;w<h;w++){const S=w*d-s;m.push(S,-y,0),f.push(0,0,1),g.push(w/o),g.push(1-v/l)}}for(let v=0;v<l;v++)for(let y=0;y<o;y++){const w=y+h*v,S=y+h*(v+1),b=y+1+h*(v+1),_=y+1+h*v;p.push(w,S,_),p.push(S,b,_)}this.setIndex(p),this.setAttribute("position",new Pe(m,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(g,2))}static fromJSON(e){return new po(e.width,e.height,e.widthSegments,e.heightSegments)}}var hb=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,cb=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ub=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,db=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,pb=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,fb=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,mb="vec3 transformed = vec3( position );",gb=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,vb=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,yb=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,xb=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,bb=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,_b=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,wb=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Sb=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Mb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Tb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Eb=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Ab=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Cb=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Lb=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Pb=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Db=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Rb=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Ob=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Ib="gl_FragColor = linearToOutputTexel( gl_FragColor );",Nb=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,zb=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Bb=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Fb=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ub=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,kb=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Vb=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Hb=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Gb=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Wb=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,jb=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,qb=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Xb=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Jb=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,$b=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Yb=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Zb=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Kb=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Qb=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,e_=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,t_=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,n_=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,i_=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,r_=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,s_=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,a_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,o_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,l_=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,h_=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,c_=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,u_=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,d_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,p_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,f_=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,m_=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,g_=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,v_=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,y_=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,x_=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,b_=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,__=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,w_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,S_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,M_=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,T_=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,E_=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,A_=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,C_=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,L_=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,P_=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,D_=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,R_=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,O_=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,I_=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,N_=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,z_=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,B_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,F_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,U_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,k_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,V_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,H_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,G_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,W_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,j_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,q_=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,X_=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,J_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,$_=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,Y_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Z_=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,K_=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Q_=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,ew=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,tw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,nw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,iw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const rw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,sw=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,aw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ow=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,lw=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,hw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,cw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,uw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,dw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,pw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,fw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,mw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,gw=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,vw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yw=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xw=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,_w=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ww=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Sw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Mw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Tw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ew=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Aw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Dw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Rw=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ow=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Iw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Nw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,st={alphamap_fragment:hb,alphamap_pars_fragment:cb,alphatest_fragment:ub,alphatest_pars_fragment:db,aomap_fragment:pb,aomap_pars_fragment:fb,begin_vertex:mb,beginnormal_vertex:gb,bsdfs:vb,bumpmap_pars_fragment:yb,clipping_planes_fragment:xb,clipping_planes_pars_fragment:bb,clipping_planes_pars_vertex:_b,clipping_planes_vertex:wb,color_fragment:Sb,color_pars_fragment:Mb,color_pars_vertex:Tb,color_vertex:Eb,common:Ab,cube_uv_reflection_fragment:Cb,defaultnormal_vertex:Lb,displacementmap_pars_vertex:Pb,displacementmap_vertex:Db,emissivemap_fragment:Rb,emissivemap_pars_fragment:Ob,encodings_fragment:Ib,encodings_pars_fragment:Nb,envmap_fragment:zb,envmap_common_pars_fragment:Bb,envmap_pars_fragment:Fb,envmap_pars_vertex:Ub,envmap_physical_pars_fragment:Yb,envmap_vertex:kb,fog_vertex:Vb,fog_pars_vertex:Hb,fog_fragment:Gb,fog_pars_fragment:Wb,gradientmap_pars_fragment:jb,lightmap_fragment:qb,lightmap_pars_fragment:Xb,lights_lambert_vertex:Jb,lights_pars_begin:$b,lights_toon_fragment:Zb,lights_toon_pars_fragment:Kb,lights_phong_fragment:Qb,lights_phong_pars_fragment:e_,lights_physical_fragment:t_,lights_physical_pars_fragment:n_,lights_fragment_begin:i_,lights_fragment_maps:r_,lights_fragment_end:s_,logdepthbuf_fragment:a_,logdepthbuf_pars_fragment:o_,logdepthbuf_pars_vertex:l_,logdepthbuf_vertex:h_,map_fragment:c_,map_pars_fragment:u_,map_particle_fragment:d_,map_particle_pars_fragment:p_,metalnessmap_fragment:f_,metalnessmap_pars_fragment:m_,morphcolor_vertex:g_,morphnormal_vertex:v_,morphtarget_pars_vertex:y_,morphtarget_vertex:x_,normal_fragment_begin:b_,normal_fragment_maps:__,normal_pars_fragment:w_,normal_pars_vertex:S_,normal_vertex:M_,normalmap_pars_fragment:T_,clearcoat_normal_fragment_begin:E_,clearcoat_normal_fragment_maps:A_,clearcoat_pars_fragment:C_,output_fragment:L_,packing:P_,premultiplied_alpha_fragment:D_,project_vertex:R_,dithering_fragment:O_,dithering_pars_fragment:I_,roughnessmap_fragment:N_,roughnessmap_pars_fragment:z_,shadowmap_pars_fragment:B_,shadowmap_pars_vertex:F_,shadowmap_vertex:U_,shadowmask_pars_fragment:k_,skinbase_vertex:V_,skinning_pars_vertex:H_,skinning_vertex:G_,skinnormal_vertex:W_,specularmap_fragment:j_,specularmap_pars_fragment:q_,tonemapping_fragment:X_,tonemapping_pars_fragment:J_,transmission_fragment:$_,transmission_pars_fragment:Y_,uv_pars_fragment:Z_,uv_pars_vertex:K_,uv_vertex:Q_,uv2_pars_fragment:ew,uv2_pars_vertex:tw,uv2_vertex:nw,worldpos_vertex:iw,background_vert:rw,background_frag:sw,cube_vert:aw,cube_frag:ow,depth_vert:lw,depth_frag:hw,distanceRGBA_vert:cw,distanceRGBA_frag:uw,equirect_vert:dw,equirect_frag:pw,linedashed_vert:fw,linedashed_frag:mw,meshbasic_vert:gw,meshbasic_frag:vw,meshlambert_vert:yw,meshlambert_frag:xw,meshmatcap_vert:bw,meshmatcap_frag:_w,meshnormal_vert:ww,meshnormal_frag:Sw,meshphong_vert:Mw,meshphong_frag:Tw,meshphysical_vert:Ew,meshphysical_frag:Aw,meshtoon_vert:Cw,meshtoon_frag:Lw,points_vert:Pw,points_frag:Dw,shadow_vert:Rw,shadow_frag:Ow,sprite_vert:Iw,sprite_frag:Nw},Me={common:{diffuse:{value:new Ae(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Dt},uv2Transform:{value:new Dt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Dt}},sprite:{diffuse:{value:new Ae(16777215)},opacity:{value:1},center:{value:new q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Dt}}},Qn={basic:{uniforms:cn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.fog]),vertexShader:st.meshbasic_vert,fragmentShader:st.meshbasic_frag},lambert:{uniforms:cn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.fog,Me.lights,{emissive:{value:new Ae(0)}}]),vertexShader:st.meshlambert_vert,fragmentShader:st.meshlambert_frag},phong:{uniforms:cn([Me.common,Me.specularmap,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,Me.lights,{emissive:{value:new Ae(0)},specular:{value:new Ae(1118481)},shininess:{value:30}}]),vertexShader:st.meshphong_vert,fragmentShader:st.meshphong_frag},standard:{uniforms:cn([Me.common,Me.envmap,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.roughnessmap,Me.metalnessmap,Me.fog,Me.lights,{emissive:{value:new Ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:st.meshphysical_vert,fragmentShader:st.meshphysical_frag},toon:{uniforms:cn([Me.common,Me.aomap,Me.lightmap,Me.emissivemap,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.gradientmap,Me.fog,Me.lights,{emissive:{value:new Ae(0)}}]),vertexShader:st.meshtoon_vert,fragmentShader:st.meshtoon_frag},matcap:{uniforms:cn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,Me.fog,{matcap:{value:null}}]),vertexShader:st.meshmatcap_vert,fragmentShader:st.meshmatcap_frag},points:{uniforms:cn([Me.points,Me.fog]),vertexShader:st.points_vert,fragmentShader:st.points_frag},dashed:{uniforms:cn([Me.common,Me.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:st.linedashed_vert,fragmentShader:st.linedashed_frag},depth:{uniforms:cn([Me.common,Me.displacementmap]),vertexShader:st.depth_vert,fragmentShader:st.depth_frag},normal:{uniforms:cn([Me.common,Me.bumpmap,Me.normalmap,Me.displacementmap,{opacity:{value:1}}]),vertexShader:st.meshnormal_vert,fragmentShader:st.meshnormal_frag},sprite:{uniforms:cn([Me.sprite,Me.fog]),vertexShader:st.sprite_vert,fragmentShader:st.sprite_frag},background:{uniforms:{uvTransform:{value:new Dt},t2D:{value:null}},vertexShader:st.background_vert,fragmentShader:st.background_frag},cube:{uniforms:cn([Me.envmap,{opacity:{value:1}}]),vertexShader:st.cube_vert,fragmentShader:st.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:st.equirect_vert,fragmentShader:st.equirect_frag},distanceRGBA:{uniforms:cn([Me.common,Me.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:st.distanceRGBA_vert,fragmentShader:st.distanceRGBA_frag},shadow:{uniforms:cn([Me.lights,Me.fog,{color:{value:new Ae(0)},opacity:{value:1}}]),vertexShader:st.shadow_vert,fragmentShader:st.shadow_frag}};Qn.physical={uniforms:cn([Qn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new q(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Ae(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ae(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ae(1,1,1)},specularColorMap:{value:null}}]),vertexShader:st.meshphysical_vert,fragmentShader:st.meshphysical_frag};function zw(t,e,n,i,r,s){const a=new Ae(0);let o=r===!0?0:1,l,h,c=null,d=0,u=null;function p(f,g){let v=!1,y=g.isScene===!0?g.background:null;y&&y.isTexture&&(y=e.get(y));const w=t.xr,S=w.getSession&&w.getSession();S&&S.environmentBlendMode==="additive"&&(y=null),y===null?m(a,o):y&&y.isColor&&(m(y,1),v=!0),(t.autoClear||v)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),y&&(y.isCubeTexture||y.mapping===ho)?(h===void 0&&(h=new ln(new ji(1,1,1),new kn({name:"BackgroundCubeMaterial",uniforms:Ws(Qn.cube.uniforms),vertexShader:Qn.cube.vertexShader,fragmentShader:Qn.cube.fragmentShader,side:Fn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(b,_,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),h.material.uniforms.envMap.value=y,h.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,(c!==y||d!==y.version||u!==t.toneMapping)&&(h.material.needsUpdate=!0,c=y,d=y.version,u=t.toneMapping),h.layers.enableAll(),f.unshift(h,h.geometry,h.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new ln(new po(2,2),new kn({name:"BackgroundMaterial",uniforms:Ws(Qn.background.uniforms),vertexShader:Qn.background.vertexShader,fragmentShader:Qn.background.fragmentShader,side:kr,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=y,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(c!==y||d!==y.version||u!==t.toneMapping)&&(l.material.needsUpdate=!0,c=y,d=y.version,u=t.toneMapping),l.layers.enableAll(),f.unshift(l,l.geometry,l.material,0,0,null))}function m(f,g){n.buffers.color.setClear(f.r,f.g,f.b,g,s)}return{getClearColor:function(){return a},setClearColor:function(f,g=1){a.set(f),o=g,m(a,o)},getClearAlpha:function(){return o},setClearAlpha:function(f){o=f,m(a,o)},render:p}}function Bw(t,e,n,i){const r=t.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||s!==null,o={},l=g(null);let h=l,c=!1;function d(O,Z,X,j,H){let N=!1;if(a){const I=f(j,X,Z);h!==I&&(h=I,p(h.object)),N=v(O,j,X,H),N&&y(O,j,X,H)}else{const I=Z.wireframe===!0;(h.geometry!==j.id||h.program!==X.id||h.wireframe!==I)&&(h.geometry=j.id,h.program=X.id,h.wireframe=I,N=!0)}H!==null&&n.update(H,34963),(N||c)&&(c=!1,x(O,Z,X,j),H!==null&&t.bindBuffer(34963,n.get(H).buffer))}function u(){return i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()}function p(O){return i.isWebGL2?t.bindVertexArray(O):s.bindVertexArrayOES(O)}function m(O){return i.isWebGL2?t.deleteVertexArray(O):s.deleteVertexArrayOES(O)}function f(O,Z,X){const j=X.wireframe===!0;let H=o[O.id];H===void 0&&(H={},o[O.id]=H);let N=H[Z.id];N===void 0&&(N={},H[Z.id]=N);let I=N[j];return I===void 0&&(I=g(u()),N[j]=I),I}function g(O){const Z=[],X=[],j=[];for(let H=0;H<r;H++)Z[H]=0,X[H]=0,j[H]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Z,enabledAttributes:X,attributeDivisors:j,object:O,attributes:{},index:null}}function v(O,Z,X,j){const H=h.attributes,N=Z.attributes;let I=0;const V=X.getAttributes();for(const B in V)if(V[B].location>=0){const $=H[B];let ne=N[B];if(ne===void 0&&(B==="instanceMatrix"&&O.instanceMatrix&&(ne=O.instanceMatrix),B==="instanceColor"&&O.instanceColor&&(ne=O.instanceColor)),$===void 0||$.attribute!==ne||ne&&$.data!==ne.data)return!0;I++}return h.attributesNum!==I||h.index!==j}function y(O,Z,X,j){const H={},N=Z.attributes;let I=0;const V=X.getAttributes();for(const B in V)if(V[B].location>=0){let $=N[B];$===void 0&&(B==="instanceMatrix"&&O.instanceMatrix&&($=O.instanceMatrix),B==="instanceColor"&&O.instanceColor&&($=O.instanceColor));const ne={};ne.attribute=$,$&&$.data&&(ne.data=$.data),H[B]=ne,I++}h.attributes=H,h.attributesNum=I,h.index=j}function w(){const O=h.newAttributes;for(let Z=0,X=O.length;Z<X;Z++)O[Z]=0}function S(O){b(O,0)}function b(O,Z){const X=h.newAttributes,j=h.enabledAttributes,H=h.attributeDivisors;X[O]=1,j[O]===0&&(t.enableVertexAttribArray(O),j[O]=1),H[O]!==Z&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,Z),H[O]=Z)}function _(){const O=h.newAttributes,Z=h.enabledAttributes;for(let X=0,j=Z.length;X<j;X++)Z[X]!==O[X]&&(t.disableVertexAttribArray(X),Z[X]=0)}function E(O,Z,X,j,H,N){i.isWebGL2===!0&&(X===5124||X===5125)?t.vertexAttribIPointer(O,Z,X,H,N):t.vertexAttribPointer(O,Z,X,j,H,N)}function x(O,Z,X,j){if(i.isWebGL2===!1&&(O.isInstancedMesh||j.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;w();const H=j.attributes,N=X.getAttributes(),I=Z.defaultAttributeValues;for(const V in N){const B=N[V];if(B.location>=0){let k=H[V];if(k===void 0&&(V==="instanceMatrix"&&O.instanceMatrix&&(k=O.instanceMatrix),V==="instanceColor"&&O.instanceColor&&(k=O.instanceColor)),k!==void 0){const $=k.normalized,ne=k.itemSize,z=n.get(k);if(z===void 0)continue;const oe=z.buffer,ie=z.type,le=z.bytesPerElement;if(k.isInterleavedBufferAttribute){const K=k.data,pe=K.stride,G=k.offset;if(K.isInstancedInterleavedBuffer){for(let J=0;J<B.locationSize;J++)b(B.location+J,K.meshPerAttribute);O.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=K.meshPerAttribute*K.count)}else for(let J=0;J<B.locationSize;J++)S(B.location+J);t.bindBuffer(34962,oe);for(let J=0;J<B.locationSize;J++)E(B.location+J,ne/B.locationSize,ie,$,pe*le,(G+ne/B.locationSize*J)*le)}else{if(k.isInstancedBufferAttribute){for(let K=0;K<B.locationSize;K++)b(B.location+K,k.meshPerAttribute);O.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=k.meshPerAttribute*k.count)}else for(let K=0;K<B.locationSize;K++)S(B.location+K);t.bindBuffer(34962,oe);for(let K=0;K<B.locationSize;K++)E(B.location+K,ne/B.locationSize,ie,$,ne*le,ne/B.locationSize*K*le)}}else if(I!==void 0){const $=I[V];if($!==void 0)switch($.length){case 2:t.vertexAttrib2fv(B.location,$);break;case 3:t.vertexAttrib3fv(B.location,$);break;case 4:t.vertexAttrib4fv(B.location,$);break;default:t.vertexAttrib1fv(B.location,$)}}}}_()}function A(){F();for(const O in o){const Z=o[O];for(const X in Z){const j=Z[X];for(const H in j)m(j[H].object),delete j[H];delete Z[X]}delete o[O]}}function M(O){if(o[O.id]===void 0)return;const Z=o[O.id];for(const X in Z){const j=Z[X];for(const H in j)m(j[H].object),delete j[H];delete Z[X]}delete o[O.id]}function C(O){for(const Z in o){const X=o[Z];if(X[O.id]===void 0)continue;const j=X[O.id];for(const H in j)m(j[H].object),delete j[H];delete X[O.id]}}function F(){W(),c=!0,h!==l&&(h=l,p(h.object))}function W(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:F,resetDefaultState:W,dispose:A,releaseStatesOfGeometry:M,releaseStatesOfProgram:C,initAttributes:w,enableAttribute:S,disableUnusedAttributes:_}}function Fw(t,e,n,i){const r=i.isWebGL2;let s;function a(h){s=h}function o(h,c){t.drawArrays(s,h,c),n.update(c,s,1)}function l(h,c,d){if(d===0)return;let u,p;if(r)u=t,p="drawArraysInstanced";else if(u=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",u===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[p](s,h,c,d),n.update(c,s,d)}this.setMode=a,this.render=o,this.renderInstances=l}function Uw(t,e,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(E){if(E==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";E="mediump"}return E==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&t instanceof WebGL2ComputeRenderingContext;let o=n.precision!==void 0?n.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const h=a||e.has("WEBGL_draw_buffers"),c=n.logarithmicDepthBuffer===!0,d=t.getParameter(34930),u=t.getParameter(35660),p=t.getParameter(3379),m=t.getParameter(34076),f=t.getParameter(34921),g=t.getParameter(36347),v=t.getParameter(36348),y=t.getParameter(36349),w=u>0,S=a||e.has("OES_texture_float"),b=w&&S,_=a?t.getParameter(36183):0;return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:c,maxTextures:d,maxVertexTextures:u,maxTextureSize:p,maxCubemapSize:m,maxAttributes:f,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:y,vertexTextures:w,floatFragmentTextures:S,floatVertexTextures:b,maxSamples:_}}function kw(t){const e=this;let n=null,i=0,r=!1,s=!1;const a=new _i,o=new Dt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,u,p){const m=d.length!==0||u||i!==0||r;return r=u,n=c(d,p,0),i=d.length,m},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1,h()},this.setState=function(d,u,p){const m=d.clippingPlanes,f=d.clipIntersection,g=d.clipShadows,v=t.get(d);if(!r||m===null||m.length===0||s&&!g)s?c(null):h();else{const y=s?0:i,w=y*4;let S=v.clippingState||null;l.value=S,S=c(m,u,w,p);for(let b=0;b!==w;++b)S[b]=n[b];v.clippingState=S,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=y}};function h(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function c(d,u,p,m){const f=d!==null?d.length:0;let g=null;if(f!==0){if(g=l.value,m!==!0||g===null){const v=p+f*4,y=u.matrixWorldInverse;o.getNormalMatrix(y),(g===null||g.length<v)&&(g=new Float32Array(v));for(let w=0,S=p;w!==f;++w,S+=4)a.copy(d[w]).applyMatrix4(y,o),a.normal.toArray(g,S),g[S+3]=a.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,g}}function Vw(t){let e=new WeakMap;function n(a,o){return o===Oc?a.mapping=Vr:o===Ic&&(a.mapping=Hr),a}function i(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===Oc||o===Ic)if(e.has(a)){const l=e.get(a).texture;return n(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const h=new mg(l.height/2);return h.fromEquirectangularTexture(t,a),e.set(a,h),a.addEventListener("dispose",r),n(h.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class Ql extends ta{constructor(e=-1,n=1,i=1,r=-1,s=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=r+n,l=r-n;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,a=s+h*this.view.width,o-=c*this.view.offsetY,l=o-c*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}Ql.prototype.isOrthographicCamera=!0;const Os=4,gp=[.125,.215,.35,.446,.526,.582],Pr=20,Zh=new Ql,vp=new Ae;let Kh=null;const Cr=(1+Math.sqrt(5))/2,vs=1/Cr,yp=[new T(1,1,1),new T(-1,1,1),new T(1,1,-1),new T(-1,1,-1),new T(0,Cr,vs),new T(0,Cr,-vs),new T(vs,0,Cr),new T(-vs,0,Cr),new T(Cr,vs,0),new T(-Cr,vs,0)];class xp{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,r=100){Kh=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),n>0&&this._blur(s,0,0,n),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=wp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=_p(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Kh),e.scissorTest=!1,Wo(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===Vr||e.mapping===Hr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Kh=this._renderer.getRenderTarget();const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:mn,minFilter:mn,generateMipmaps:!1,type:$a,format:ii,encoding:li,depthBuffer:!1},r=bp(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=bp(e,n,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Hw(s)),this._blurMaterial=Gw(s,e,n)}return r}_compileMaterial(e){const n=new ln(this._lodPlanes[0],e);this._renderer.compile(n,Zh)}_sceneToCubeUV(e,n,i,r){const o=new un(90,1,n,i),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],c=this._renderer,d=c.autoClear,u=c.toneMapping;c.getClearColor(vp),c.toneMapping=Hi,c.autoClear=!1;const p=new mr({name:"PMREM.Background",side:Fn,depthWrite:!1,depthTest:!1}),m=new ln(new ji,p);let f=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,f=!0):(p.color.copy(vp),f=!0);for(let v=0;v<6;v++){const y=v%3;y===0?(o.up.set(0,l[v],0),o.lookAt(h[v],0,0)):y===1?(o.up.set(0,0,l[v]),o.lookAt(0,h[v],0)):(o.up.set(0,l[v],0),o.lookAt(0,0,h[v]));const w=this._cubeSize;Wo(r,y*w,v>2?w:0,w,w),c.setRenderTarget(r),f&&c.render(m,o),c.render(e,o)}m.geometry.dispose(),m.material.dispose(),c.toneMapping=u,c.autoClear=d,e.background=g}_textureToCubeUV(e,n){const i=this._renderer,r=e.mapping===Vr||e.mapping===Hr;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=wp()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=_p());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new ln(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;Wo(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(a,Zh)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=yp[(r-1)%yp.length];this._blur(e,r-1,r,s,a)}n.autoClear=i}_blur(e,n,i,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,r,"latitudinal",s),this._halfBlur(a,e,i,i,r,"longitudinal",s)}_halfBlur(e,n,i,r,s,a,o){const l=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,d=new ln(this._lodPlanes[r],h),u=h.uniforms,p=this._sizeLods[i]-1,m=isFinite(s)?Math.PI/(2*p):2*Math.PI/(2*Pr-1),f=s/m,g=isFinite(s)?1+Math.floor(c*f):Pr;g>Pr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Pr}`);const v=[];let y=0;for(let E=0;E<Pr;++E){const x=E/f,A=Math.exp(-x*x/2);v.push(A),E===0?y+=A:E<g&&(y+=2*A)}for(let E=0;E<v.length;E++)v[E]=v[E]/y;u.envMap.value=e.texture,u.samples.value=g,u.weights.value=v,u.latitudinal.value=a==="latitudinal",o&&(u.poleAxis.value=o);const{_lodMax:w}=this;u.dTheta.value=m,u.mipInt.value=w-i;const S=this._sizeLods[r],b=3*S*(r>w-Os?r-w+Os:0),_=4*(this._cubeSize-S);Wo(n,b,_,3*S,2*S),l.setRenderTarget(n),l.render(d,Zh)}}function Hw(t){const e=[],n=[],i=[];let r=t;const s=t-Os+1+gp.length;for(let a=0;a<s;a++){const o=Math.pow(2,r);n.push(o);let l=1/o;a>t-Os?l=gp[a-t+Os-1]:a===0&&(l=0),i.push(l);const h=1/(o-2),c=-h,d=1+h,u=[c,c,d,c,d,d,c,c,d,d,c,d],p=6,m=6,f=3,g=2,v=1,y=new Float32Array(f*m*p),w=new Float32Array(g*m*p),S=new Float32Array(v*m*p);for(let _=0;_<p;_++){const E=_%3*2/3-1,x=_>2?0:-1,A=[E,x,0,E+2/3,x,0,E+2/3,x+1,0,E,x,0,E+2/3,x+1,0,E,x+1,0];y.set(A,f*m*_),w.set(u,g*m*_);const M=[_,_,_,_,_,_];S.set(M,v*m*_)}const b=new Ve;b.setAttribute("position",new tt(y,f)),b.setAttribute("uv",new tt(w,g)),b.setAttribute("faceIndex",new tt(S,v)),e.push(b),r>Os&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function bp(t,e,n){const i=new Sn(t,e,n);return i.texture.mapping=ho,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Wo(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function Gw(t,e,n){const i=new Float32Array(Pr),r=new T(0,1,0);return new kn({name:"SphericalGaussianBlur",defines:{n:Pr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Nu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ur,depthTest:!1,depthWrite:!1})}function _p(){return new kn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Nu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ur,depthTest:!1,depthWrite:!1})}function wp(){return new kn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Nu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ur,depthTest:!1,depthWrite:!1})}function Nu(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ww(t){let e=new WeakMap,n=null;function i(o){if(o&&o.isTexture){const l=o.mapping,h=l===Oc||l===Ic,c=l===Vr||l===Hr;if(h||c)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let d=e.get(o);return n===null&&(n=new xp(t)),d=h?n.fromEquirectangular(o,d):n.fromCubemap(o,d),e.set(o,d),d.texture}else{if(e.has(o))return e.get(o).texture;{const d=o.image;if(h&&d&&d.height>0||c&&d&&r(d)){n===null&&(n=new xp(t));const u=h?n.fromEquirectangular(o):n.fromCubemap(o);return e.set(o,u),o.addEventListener("dispose",s),u.texture}else return null}}}return o}function r(o){let l=0;const h=6;for(let c=0;c<h;c++)o[c]!==void 0&&l++;return l===h}function s(o){const l=o.target;l.removeEventListener("dispose",s);const h=e.get(l);h!==void 0&&(e.delete(l),h.dispose())}function a(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:a}}function jw(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r,r}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function qw(t,e,n,i){const r={},s=new WeakMap;function a(d){const u=d.target;u.index!==null&&e.remove(u.index);for(const m in u.attributes)e.remove(u.attributes[m]);u.removeEventListener("dispose",a),delete r[u.id];const p=s.get(u);p&&(e.remove(p),s.delete(u)),i.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,n.memory.geometries--}function o(d,u){return r[u.id]===!0||(u.addEventListener("dispose",a),r[u.id]=!0,n.memory.geometries++),u}function l(d){const u=d.attributes;for(const m in u)e.update(u[m],34962);const p=d.morphAttributes;for(const m in p){const f=p[m];for(let g=0,v=f.length;g<v;g++)e.update(f[g],34962)}}function h(d){const u=[],p=d.index,m=d.attributes.position;let f=0;if(p!==null){const y=p.array;f=p.version;for(let w=0,S=y.length;w<S;w+=3){const b=y[w+0],_=y[w+1],E=y[w+2];u.push(b,_,_,E,E,b)}}else{const y=m.array;f=m.version;for(let w=0,S=y.length/3-1;w<S;w+=3){const b=w+0,_=w+1,E=w+2;u.push(b,_,_,E,E,b)}}const g=new(ug(u)?Va:fg)(u,1);g.version=f;const v=s.get(d);v&&e.remove(v),s.set(d,g)}function c(d){const u=s.get(d);if(u){const p=d.index;p!==null&&u.version<p.version&&h(d)}else h(d);return s.get(d)}return{get:o,update:l,getWireframeAttribute:c}}function Xw(t,e,n,i){const r=i.isWebGL2;let s;function a(u){s=u}let o,l;function h(u){o=u.type,l=u.bytesPerElement}function c(u,p){t.drawElements(s,p,o,u*l),n.update(p,s,1)}function d(u,p,m){if(m===0)return;let f,g;if(r)f=t,g="drawElementsInstanced";else if(f=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",f===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[g](s,p,o,u*l,m),n.update(p,s,m)}this.setMode=a,this.setIndex=h,this.render=c,this.renderInstances=d}function Jw(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,o){switch(n.calls++,a){case 4:n.triangles+=o*(s/3);break;case 1:n.lines+=o*(s/2);break;case 3:n.lines+=o*(s-1);break;case 2:n.lines+=o*s;break;case 0:n.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function $w(t,e){return t[0]-e[0]}function Yw(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Qh(t,e){let n=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?n=127:i instanceof Int16Array?n=32767:i instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),t.divideScalar(n)}function Zw(t,e,n){const i={},r=new Float32Array(8),s=new WeakMap,a=new at,o=[];for(let h=0;h<8;h++)o[h]=[h,0];function l(h,c,d,u){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,g=f!==void 0?f.length:0;let v=s.get(c);if(v===void 0||v.count!==g){let X=function(){O.dispose(),s.delete(c),c.removeEventListener("dispose",X)};var m=X;v!==void 0&&v.texture.dispose();const S=c.morphAttributes.position!==void 0,b=c.morphAttributes.normal!==void 0,_=c.morphAttributes.color!==void 0,E=c.morphAttributes.position||[],x=c.morphAttributes.normal||[],A=c.morphAttributes.color||[];let M=0;S===!0&&(M=1),b===!0&&(M=2),_===!0&&(M=3);let C=c.attributes.position.count*M,F=1;C>e.maxTextureSize&&(F=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const W=new Float32Array(C*F*4*g),O=new Zl(W,C,F,g);O.type=Rr,O.needsUpdate=!0;const Z=M*4;for(let j=0;j<g;j++){const H=E[j],N=x[j],I=A[j],V=C*F*4*j;for(let B=0;B<H.count;B++){const k=B*Z;S===!0&&(a.fromBufferAttribute(H,B),H.normalized===!0&&Qh(a,H),W[V+k+0]=a.x,W[V+k+1]=a.y,W[V+k+2]=a.z,W[V+k+3]=0),b===!0&&(a.fromBufferAttribute(N,B),N.normalized===!0&&Qh(a,N),W[V+k+4]=a.x,W[V+k+5]=a.y,W[V+k+6]=a.z,W[V+k+7]=0),_===!0&&(a.fromBufferAttribute(I,B),I.normalized===!0&&Qh(a,I),W[V+k+8]=a.x,W[V+k+9]=a.y,W[V+k+10]=a.z,W[V+k+11]=I.itemSize===4?a.w:1)}}v={count:g,texture:O,size:new q(C,F)},s.set(c,v),c.addEventListener("dispose",X)}let y=0;for(let S=0;S<p.length;S++)y+=p[S];const w=c.morphTargetsRelative?1:1-y;u.getUniforms().setValue(t,"morphTargetBaseInfluence",w),u.getUniforms().setValue(t,"morphTargetInfluences",p),u.getUniforms().setValue(t,"morphTargetsTexture",v.texture,n),u.getUniforms().setValue(t,"morphTargetsTextureSize",v.size)}else{const f=p===void 0?0:p.length;let g=i[c.id];if(g===void 0||g.length!==f){g=[];for(let b=0;b<f;b++)g[b]=[b,0];i[c.id]=g}for(let b=0;b<f;b++){const _=g[b];_[0]=b,_[1]=p[b]}g.sort(Yw);for(let b=0;b<8;b++)b<f&&g[b][1]?(o[b][0]=g[b][0],o[b][1]=g[b][1]):(o[b][0]=Number.MAX_SAFE_INTEGER,o[b][1]=0);o.sort($w);const v=c.morphAttributes.position,y=c.morphAttributes.normal;let w=0;for(let b=0;b<8;b++){const _=o[b],E=_[0],x=_[1];E!==Number.MAX_SAFE_INTEGER&&x?(v&&c.getAttribute("morphTarget"+b)!==v[E]&&c.setAttribute("morphTarget"+b,v[E]),y&&c.getAttribute("morphNormal"+b)!==y[E]&&c.setAttribute("morphNormal"+b,y[E]),r[b]=x,w+=x):(v&&c.hasAttribute("morphTarget"+b)===!0&&c.deleteAttribute("morphTarget"+b),y&&c.hasAttribute("morphNormal"+b)===!0&&c.deleteAttribute("morphNormal"+b),r[b]=0)}const S=c.morphTargetsRelative?1:1-w;u.getUniforms().setValue(t,"morphTargetBaseInfluence",S),u.getUniforms().setValue(t,"morphTargetInfluences",r)}}return{update:l}}function Kw(t,e,n,i){let r=new WeakMap;function s(l){const h=i.render.frame,c=l.geometry,d=e.get(l,c);return r.get(d)!==h&&(e.update(d),r.set(d,h)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),n.update(l.instanceMatrix,34962),l.instanceColor!==null&&n.update(l.instanceColor,34962)),d}function a(){r=new WeakMap}function o(l){const h=l.target;h.removeEventListener("dispose",o),n.remove(h.instanceMatrix),h.instanceColor!==null&&n.remove(h.instanceColor)}return{update:s,dispose:a}}const vg=new Rt,yg=new Zl,xg=new Ou,bg=new uo,Sp=[],Mp=[],Tp=new Float32Array(16),Ep=new Float32Array(9),Ap=new Float32Array(4);function na(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=Sp[r];if(s===void 0&&(s=new Float32Array(r),Sp[r]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=n,t[a].toArray(s,o)}return s}function vn(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function yn(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function eh(t,e){let n=Mp[e];n===void 0&&(n=new Int32Array(e),Mp[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Qw(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function e1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(vn(n,e))return;t.uniform2fv(this.addr,e),yn(n,e)}}function t1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(vn(n,e))return;t.uniform3fv(this.addr,e),yn(n,e)}}function n1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(vn(n,e))return;t.uniform4fv(this.addr,e),yn(n,e)}}function i1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(vn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),yn(n,e)}else{if(vn(n,i))return;Ap.set(i),t.uniformMatrix2fv(this.addr,!1,Ap),yn(n,i)}}function r1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(vn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),yn(n,e)}else{if(vn(n,i))return;Ep.set(i),t.uniformMatrix3fv(this.addr,!1,Ep),yn(n,i)}}function s1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(vn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),yn(n,e)}else{if(vn(n,i))return;Tp.set(i),t.uniformMatrix4fv(this.addr,!1,Tp),yn(n,i)}}function a1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function o1(t,e){const n=this.cache;vn(n,e)||(t.uniform2iv(this.addr,e),yn(n,e))}function l1(t,e){const n=this.cache;vn(n,e)||(t.uniform3iv(this.addr,e),yn(n,e))}function h1(t,e){const n=this.cache;vn(n,e)||(t.uniform4iv(this.addr,e),yn(n,e))}function c1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function u1(t,e){const n=this.cache;vn(n,e)||(t.uniform2uiv(this.addr,e),yn(n,e))}function d1(t,e){const n=this.cache;vn(n,e)||(t.uniform3uiv(this.addr,e),yn(n,e))}function p1(t,e){const n=this.cache;vn(n,e)||(t.uniform4uiv(this.addr,e),yn(n,e))}function f1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(e||vg,r)}function m1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||xg,r)}function g1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||bg,r)}function v1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||yg,r)}function y1(t){switch(t){case 5126:return Qw;case 35664:return e1;case 35665:return t1;case 35666:return n1;case 35674:return i1;case 35675:return r1;case 35676:return s1;case 5124:case 35670:return a1;case 35667:case 35671:return o1;case 35668:case 35672:return l1;case 35669:case 35673:return h1;case 5125:return c1;case 36294:return u1;case 36295:return d1;case 36296:return p1;case 35678:case 36198:case 36298:case 36306:case 35682:return f1;case 35679:case 36299:case 36307:return m1;case 35680:case 36300:case 36308:case 36293:return g1;case 36289:case 36303:case 36311:case 36292:return v1}}function x1(t,e){t.uniform1fv(this.addr,e)}function b1(t,e){const n=na(e,this.size,2);t.uniform2fv(this.addr,n)}function _1(t,e){const n=na(e,this.size,3);t.uniform3fv(this.addr,n)}function w1(t,e){const n=na(e,this.size,4);t.uniform4fv(this.addr,n)}function S1(t,e){const n=na(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function M1(t,e){const n=na(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function T1(t,e){const n=na(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function E1(t,e){t.uniform1iv(this.addr,e)}function A1(t,e){t.uniform2iv(this.addr,e)}function C1(t,e){t.uniform3iv(this.addr,e)}function L1(t,e){t.uniform4iv(this.addr,e)}function P1(t,e){t.uniform1uiv(this.addr,e)}function D1(t,e){t.uniform2uiv(this.addr,e)}function R1(t,e){t.uniform3uiv(this.addr,e)}function O1(t,e){t.uniform4uiv(this.addr,e)}function I1(t,e,n){const i=e.length,r=eh(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTexture2D(e[s]||vg,r[s])}function N1(t,e,n){const i=e.length,r=eh(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTexture3D(e[s]||xg,r[s])}function z1(t,e,n){const i=e.length,r=eh(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTextureCube(e[s]||bg,r[s])}function B1(t,e,n){const i=e.length,r=eh(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.setTexture2DArray(e[s]||yg,r[s])}function F1(t){switch(t){case 5126:return x1;case 35664:return b1;case 35665:return _1;case 35666:return w1;case 35674:return S1;case 35675:return M1;case 35676:return T1;case 5124:case 35670:return E1;case 35667:case 35671:return A1;case 35668:case 35672:return C1;case 35669:case 35673:return L1;case 5125:return P1;case 36294:return D1;case 36295:return R1;case 36296:return O1;case 35678:case 36198:case 36298:case 36306:case 35682:return I1;case 35679:case 36299:case 36307:return N1;case 35680:case 36300:case 36308:case 36293:return z1;case 36289:case 36303:case 36311:case 36292:return B1}}function U1(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=y1(e.type)}function k1(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=F1(e.type)}function _g(t){this.id=t,this.seq=[],this.map={}}_g.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const a=i[r];a.setValue(t,e[a.id],n)}};const ec=/(\w+)(\])?(\[|\.)?/g;function Cp(t,e){t.seq.push(e),t.map[e.id]=e}function V1(t,e,n){const i=t.name,r=i.length;for(ec.lastIndex=0;;){const s=ec.exec(i),a=ec.lastIndex;let o=s[1];const l=s[2]==="]",h=s[3];if(l&&(o=o|0),h===void 0||h==="["&&a+2===r){Cp(n,h===void 0?new U1(o,t,e):new k1(o,t,e));break}else{let d=n.map[o];d===void 0&&(d=new _g(o),Cp(n,d)),n=d}}}function dr(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),s=t.getUniformLocation(e,r.name);V1(r,s,this)}}dr.prototype.setValue=function(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)};dr.prototype.setOptional=function(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)};dr.upload=function(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const a=e[r],o=n[a.id];o.needsUpdate!==!1&&a.setValue(t,o.value,i)}};dr.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const s=t[i];s.id in e&&n.push(s)}return n};function Lp(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let H1=0;function G1(t,e){const n=t.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let a=r;a<s;a++)i.push(a+1+": "+n[a]);return i.join(`
`)}function W1(t){switch(t){case li:return["Linear","( value )"];case Et:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Pp(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const a=parseInt(s[0]);return n.toUpperCase()+`

`+r+`

`+G1(t.getShaderSource(e),a)}else return r}function j1(t,e){const n=W1(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function q1(t,e){let n;switch(e){case Zy:n="Linear";break;case Ky:n="Reinhard";break;case Qy:n="OptimizedCineon";break;case ex:n="ACESFilmic";break;case tx:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function X1(t){return[t.extensionDerivatives||!!t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Oa).join(`
`)}function J1(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function $1(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const s=t.getActiveAttrib(e,r),a=s.name;let o=1;s.type===35674&&(o=2),s.type===35675&&(o=3),s.type===35676&&(o=4),n[a]={type:s.type,location:t.getAttribLocation(e,a),locationSize:o}}return n}function Oa(t){return t!==""}function Dp(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Rp(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Y1=/^[ \t]*#include +<([\w\d./]+)>/gm;function Uc(t){return t.replace(Y1,Z1)}function Z1(t,e){const n=st[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return Uc(n)}const K1=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Q1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Op(t){return t.replace(Q1,wg).replace(K1,eS)}function eS(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),wg(t,e,n,i)}function wg(t,e,n,i){let r="";for(let s=parseInt(e);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Ip(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function tS(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===Lu?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===Ly?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===Ra&&(e="SHADOWMAP_TYPE_VSM"),e}function nS(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Vr:case Hr:e="ENVMAP_TYPE_CUBE";break;case ho:e="ENVMAP_TYPE_CUBE_UV";break}return e}function iS(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Hr:e="ENVMAP_MODE_REFRACTION";break}return e}function rS(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Yl:e="ENVMAP_BLENDING_MULTIPLY";break;case $y:e="ENVMAP_BLENDING_MIX";break;case Yy:e="ENVMAP_BLENDING_ADD";break}return e}function sS(t){const e=t.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function aS(t,e,n,i){const r=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=tS(n),h=nS(n),c=iS(n),d=rS(n),u=sS(n),p=n.isWebGL2?"":X1(n),m=J1(s),f=r.createProgram();let g,v,y=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(g=[m].filter(Oa).join(`
`),g.length>0&&(g+=`
`),v=[p,m].filter(Oa).join(`
`),v.length>0&&(v+=`
`)):(g=[Ip(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Oa).join(`
`),v=[p,Ip(n),"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.envMap?"#define "+c:"",n.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Hi?"#define TONE_MAPPING":"",n.toneMapping!==Hi?st.tonemapping_pars_fragment:"",n.toneMapping!==Hi?q1("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",st.encodings_pars_fragment,j1("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Oa).join(`
`)),a=Uc(a),a=Dp(a,n),a=Rp(a,n),o=Uc(o),o=Dp(o,n),o=Rp(o,n),a=Op(a),o=Op(o),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,v=["#define varying in",n.glslVersion===ip?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===ip?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const w=y+g+a,S=y+v+o,b=Lp(r,35633,w),_=Lp(r,35632,S);if(r.attachShader(f,b),r.attachShader(f,_),n.index0AttributeName!==void 0?r.bindAttribLocation(f,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),t.debug.checkShaderErrors){const A=r.getProgramInfoLog(f).trim(),M=r.getShaderInfoLog(b).trim(),C=r.getShaderInfoLog(_).trim();let F=!0,W=!0;if(r.getProgramParameter(f,35714)===!1){F=!1;const O=Pp(r,b,"vertex"),Z=Pp(r,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(f,35715)+`

Program Info Log: `+A+`
`+O+`
`+Z)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(M===""||C==="")&&(W=!1);W&&(this.diagnostics={runnable:F,programLog:A,vertexShader:{log:M,prefix:g},fragmentShader:{log:C,prefix:v}})}r.deleteShader(b),r.deleteShader(_);let E;this.getUniforms=function(){return E===void 0&&(E=new dr(r,f)),E};let x;return this.getAttributes=function(){return x===void 0&&(x=$1(r,f)),x},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.name=n.shaderName,this.id=H1++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=b,this.fragmentShader=_,this}let oS=0;class lS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(n),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(r)===!1&&(a.add(r),r.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;return n.has(e)===!1&&n.set(e,new Set),n.get(e)}_getShaderStage(e){const n=this.shaderCache;if(n.has(e)===!1){const i=new hS(e);n.set(e,i)}return n.get(e)}}class hS{constructor(e){this.id=oS++,this.code=e,this.usedTimes=0}}function cS(t,e,n,i,r,s,a){const o=new pg,l=new lS,h=[],c=r.isWebGL2,d=r.logarithmicDepthBuffer,u=r.vertexTextures;let p=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(x,A,M,C,F){const W=C.fog,O=F.geometry,Z=x.isMeshStandardMaterial?C.environment:null,X=(x.isMeshStandardMaterial?n:e).get(x.envMap||Z),j=!!X&&X.mapping===ho?X.image.height:null,H=m[x.type];x.precision!==null&&(p=r.getMaxPrecision(x.precision),p!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",p,"instead."));const N=O.morphAttributes.position||O.morphAttributes.normal||O.morphAttributes.color,I=N!==void 0?N.length:0;let V=0;O.morphAttributes.position!==void 0&&(V=1),O.morphAttributes.normal!==void 0&&(V=2),O.morphAttributes.color!==void 0&&(V=3);let B,k,$,ne;if(H){const K=Qn[H];B=K.vertexShader,k=K.fragmentShader}else B=x.vertexShader,k=x.fragmentShader,l.update(x),$=l.getVertexShaderID(x),ne=l.getFragmentShaderID(x);const z=t.getRenderTarget(),oe=x.alphaTest>0,ie=x.clearcoat>0;return{isWebGL2:c,shaderID:H,shaderName:x.type,vertexShader:B,fragmentShader:k,defines:x.defines,customVertexShaderID:$,customFragmentShaderID:ne,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:p,instancing:F.isInstancedMesh===!0,instancingColor:F.isInstancedMesh===!0&&F.instanceColor!==null,supportsVertexTextures:u,outputEncoding:z===null?t.outputEncoding:z.isXRRenderTarget===!0?z.texture.encoding:li,map:!!x.map,matcap:!!x.matcap,envMap:!!X,envMapMode:X&&X.mapping,envMapCubeUVHeight:j,lightMap:!!x.lightMap,aoMap:!!x.aoMap,emissiveMap:!!x.emissiveMap,bumpMap:!!x.bumpMap,normalMap:!!x.normalMap,objectSpaceNormalMap:x.normalMapType===Mx,tangentSpaceNormalMap:x.normalMapType===Qs,decodeVideoTexture:!!x.map&&x.map.isVideoTexture===!0&&x.map.encoding===Et,clearcoat:ie,clearcoatMap:ie&&!!x.clearcoatMap,clearcoatRoughnessMap:ie&&!!x.clearcoatRoughnessMap,clearcoatNormalMap:ie&&!!x.clearcoatNormalMap,displacementMap:!!x.displacementMap,roughnessMap:!!x.roughnessMap,metalnessMap:!!x.metalnessMap,specularMap:!!x.specularMap,specularIntensityMap:!!x.specularIntensityMap,specularColorMap:!!x.specularColorMap,opaque:x.transparent===!1&&x.blending===Ir,alphaMap:!!x.alphaMap,alphaTest:oe,gradientMap:!!x.gradientMap,sheen:x.sheen>0,sheenColorMap:!!x.sheenColorMap,sheenRoughnessMap:!!x.sheenRoughnessMap,transmission:x.transmission>0,transmissionMap:!!x.transmissionMap,thicknessMap:!!x.thicknessMap,combine:x.combine,vertexTangents:!!x.normalMap&&!!O.attributes.tangent,vertexColors:x.vertexColors,vertexAlphas:x.vertexColors===!0&&!!O.attributes.color&&O.attributes.color.itemSize===4,vertexUvs:!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatMap||!!x.clearcoatRoughnessMap||!!x.clearcoatNormalMap||!!x.displacementMap||!!x.transmissionMap||!!x.thicknessMap||!!x.specularIntensityMap||!!x.specularColorMap||!!x.sheenColorMap||!!x.sheenRoughnessMap,uvsVertexOnly:!(!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatNormalMap||x.transmission>0||!!x.transmissionMap||!!x.thicknessMap||!!x.specularIntensityMap||!!x.specularColorMap||x.sheen>0||!!x.sheenColorMap||!!x.sheenRoughnessMap)&&!!x.displacementMap,fog:!!W,useFog:x.fog===!0,fogExp2:W&&W.isFogExp2,flatShading:!!x.flatShading,sizeAttenuation:x.sizeAttenuation,logarithmicDepthBuffer:d,skinning:F.isSkinnedMesh===!0,morphTargets:O.morphAttributes.position!==void 0,morphNormals:O.morphAttributes.normal!==void 0,morphColors:O.morphAttributes.color!==void 0,morphTargetsCount:I,morphTextureStride:V,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:x.dithering,shadowMapEnabled:t.shadowMap.enabled&&M.length>0,shadowMapType:t.shadowMap.type,toneMapping:x.toneMapped?t.toneMapping:Hi,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:x.premultipliedAlpha,doubleSided:x.side===Pn,flipSided:x.side===Fn,useDepthPacking:!!x.depthPacking,depthPacking:x.depthPacking||0,index0AttributeName:x.index0AttributeName,extensionDerivatives:x.extensions&&x.extensions.derivatives,extensionFragDepth:x.extensions&&x.extensions.fragDepth,extensionDrawBuffers:x.extensions&&x.extensions.drawBuffers,extensionShaderTextureLOD:x.extensions&&x.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||i.has("EXT_shader_texture_lod"),customProgramCacheKey:x.customProgramCacheKey()}}function g(x){const A=[];if(x.shaderID?A.push(x.shaderID):(A.push(x.customVertexShaderID),A.push(x.customFragmentShaderID)),x.defines!==void 0)for(const M in x.defines)A.push(M),A.push(x.defines[M]);return x.isRawShaderMaterial===!1&&(v(A,x),y(A,x),A.push(t.outputEncoding)),A.push(x.customProgramCacheKey),A.join()}function v(x,A){x.push(A.precision),x.push(A.outputEncoding),x.push(A.envMapMode),x.push(A.envMapCubeUVHeight),x.push(A.combine),x.push(A.vertexUvs),x.push(A.fogExp2),x.push(A.sizeAttenuation),x.push(A.morphTargetsCount),x.push(A.morphAttributeCount),x.push(A.numDirLights),x.push(A.numPointLights),x.push(A.numSpotLights),x.push(A.numHemiLights),x.push(A.numRectAreaLights),x.push(A.numDirLightShadows),x.push(A.numPointLightShadows),x.push(A.numSpotLightShadows),x.push(A.shadowMapType),x.push(A.toneMapping),x.push(A.numClippingPlanes),x.push(A.numClipIntersection),x.push(A.depthPacking)}function y(x,A){o.disableAll(),A.isWebGL2&&o.enable(0),A.supportsVertexTextures&&o.enable(1),A.instancing&&o.enable(2),A.instancingColor&&o.enable(3),A.map&&o.enable(4),A.matcap&&o.enable(5),A.envMap&&o.enable(6),A.lightMap&&o.enable(7),A.aoMap&&o.enable(8),A.emissiveMap&&o.enable(9),A.bumpMap&&o.enable(10),A.normalMap&&o.enable(11),A.objectSpaceNormalMap&&o.enable(12),A.tangentSpaceNormalMap&&o.enable(13),A.clearcoat&&o.enable(14),A.clearcoatMap&&o.enable(15),A.clearcoatRoughnessMap&&o.enable(16),A.clearcoatNormalMap&&o.enable(17),A.displacementMap&&o.enable(18),A.specularMap&&o.enable(19),A.roughnessMap&&o.enable(20),A.metalnessMap&&o.enable(21),A.gradientMap&&o.enable(22),A.alphaMap&&o.enable(23),A.alphaTest&&o.enable(24),A.vertexColors&&o.enable(25),A.vertexAlphas&&o.enable(26),A.vertexUvs&&o.enable(27),A.vertexTangents&&o.enable(28),A.uvsVertexOnly&&o.enable(29),A.fog&&o.enable(30),x.push(o.mask),o.disableAll(),A.useFog&&o.enable(0),A.flatShading&&o.enable(1),A.logarithmicDepthBuffer&&o.enable(2),A.skinning&&o.enable(3),A.morphTargets&&o.enable(4),A.morphNormals&&o.enable(5),A.morphColors&&o.enable(6),A.premultipliedAlpha&&o.enable(7),A.shadowMapEnabled&&o.enable(8),A.physicallyCorrectLights&&o.enable(9),A.doubleSided&&o.enable(10),A.flipSided&&o.enable(11),A.useDepthPacking&&o.enable(12),A.dithering&&o.enable(13),A.specularIntensityMap&&o.enable(14),A.specularColorMap&&o.enable(15),A.transmission&&o.enable(16),A.transmissionMap&&o.enable(17),A.thicknessMap&&o.enable(18),A.sheen&&o.enable(19),A.sheenColorMap&&o.enable(20),A.sheenRoughnessMap&&o.enable(21),A.decodeVideoTexture&&o.enable(22),A.opaque&&o.enable(23),x.push(o.mask)}function w(x){const A=m[x.type];let M;if(A){const C=Qn[A];M=ea.clone(C.uniforms)}else M=x.uniforms;return M}function S(x,A){let M;for(let C=0,F=h.length;C<F;C++){const W=h[C];if(W.cacheKey===A){M=W,++M.usedTimes;break}}return M===void 0&&(M=new aS(t,A,x,s),h.push(M)),M}function b(x){if(--x.usedTimes===0){const A=h.indexOf(x);h[A]=h[h.length-1],h.pop(),x.destroy()}}function _(x){l.remove(x)}function E(){l.dispose()}return{getParameters:f,getProgramCacheKey:g,getUniforms:w,acquireProgram:S,releaseProgram:b,releaseShaderCache:_,programs:h,dispose:E}}function uS(){let t=new WeakMap;function e(s){let a=t.get(s);return a===void 0&&(a={},t.set(s,a)),a}function n(s){t.delete(s)}function i(s,a,o){t.get(s)[a]=o}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function dS(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Np(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function zp(){const t=[];let e=0;const n=[],i=[],r=[];function s(){e=0,n.length=0,i.length=0,r.length=0}function a(d,u,p,m,f,g){let v=t[e];return v===void 0?(v={id:d.id,object:d,geometry:u,material:p,groupOrder:m,renderOrder:d.renderOrder,z:f,group:g},t[e]=v):(v.id=d.id,v.object=d,v.geometry=u,v.material=p,v.groupOrder=m,v.renderOrder=d.renderOrder,v.z=f,v.group=g),e++,v}function o(d,u,p,m,f,g){const v=a(d,u,p,m,f,g);p.transmission>0?i.push(v):p.transparent===!0?r.push(v):n.push(v)}function l(d,u,p,m,f,g){const v=a(d,u,p,m,f,g);p.transmission>0?i.unshift(v):p.transparent===!0?r.unshift(v):n.unshift(v)}function h(d,u){n.length>1&&n.sort(d||dS),i.length>1&&i.sort(u||Np),r.length>1&&r.sort(u||Np)}function c(){for(let d=e,u=t.length;d<u;d++){const p=t[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:n,transmissive:i,transparent:r,init:s,push:o,unshift:l,finish:c,sort:h}}function pS(){let t=new WeakMap;function e(i,r){let s;return t.has(i)===!1?(s=new zp,t.set(i,[s])):r>=t.get(i).length?(s=new zp,t.get(i).push(s)):s=t.get(i)[r],s}function n(){t=new WeakMap}return{get:e,dispose:n}}function fS(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new T,color:new Ae};break;case"SpotLight":n={position:new T,direction:new T,color:new Ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new T,color:new Ae,distance:0,decay:0};break;case"HemisphereLight":n={direction:new T,skyColor:new Ae,groundColor:new Ae};break;case"RectAreaLight":n={color:new Ae,position:new T,halfWidth:new T,halfHeight:new T};break}return t[e.id]=n,n}}}function mS(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let gS=0;function vS(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function yS(t,e){const n=new fS,i=mS(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let c=0;c<9;c++)r.probe.push(new T);const s=new T,a=new Re,o=new Re;function l(c,d){let u=0,p=0,m=0;for(let A=0;A<9;A++)r.probe[A].set(0,0,0);let f=0,g=0,v=0,y=0,w=0,S=0,b=0,_=0;c.sort(vS);const E=d!==!0?Math.PI:1;for(let A=0,M=c.length;A<M;A++){const C=c[A],F=C.color,W=C.intensity,O=C.distance,Z=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)u+=F.r*W*E,p+=F.g*W*E,m+=F.b*W*E;else if(C.isLightProbe)for(let X=0;X<9;X++)r.probe[X].addScaledVector(C.sh.coefficients[X],W);else if(C.isDirectionalLight){const X=n.get(C);if(X.color.copy(C.color).multiplyScalar(C.intensity*E),C.castShadow){const j=C.shadow,H=i.get(C);H.shadowBias=j.bias,H.shadowNormalBias=j.normalBias,H.shadowRadius=j.radius,H.shadowMapSize=j.mapSize,r.directionalShadow[f]=H,r.directionalShadowMap[f]=Z,r.directionalShadowMatrix[f]=C.shadow.matrix,S++}r.directional[f]=X,f++}else if(C.isSpotLight){const X=n.get(C);if(X.position.setFromMatrixPosition(C.matrixWorld),X.color.copy(F).multiplyScalar(W*E),X.distance=O,X.coneCos=Math.cos(C.angle),X.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),X.decay=C.decay,C.castShadow){const j=C.shadow,H=i.get(C);H.shadowBias=j.bias,H.shadowNormalBias=j.normalBias,H.shadowRadius=j.radius,H.shadowMapSize=j.mapSize,r.spotShadow[v]=H,r.spotShadowMap[v]=Z,r.spotShadowMatrix[v]=C.shadow.matrix,_++}r.spot[v]=X,v++}else if(C.isRectAreaLight){const X=n.get(C);X.color.copy(F).multiplyScalar(W),X.halfWidth.set(C.width*.5,0,0),X.halfHeight.set(0,C.height*.5,0),r.rectArea[y]=X,y++}else if(C.isPointLight){const X=n.get(C);if(X.color.copy(C.color).multiplyScalar(C.intensity*E),X.distance=C.distance,X.decay=C.decay,C.castShadow){const j=C.shadow,H=i.get(C);H.shadowBias=j.bias,H.shadowNormalBias=j.normalBias,H.shadowRadius=j.radius,H.shadowMapSize=j.mapSize,H.shadowCameraNear=j.camera.near,H.shadowCameraFar=j.camera.far,r.pointShadow[g]=H,r.pointShadowMap[g]=Z,r.pointShadowMatrix[g]=C.shadow.matrix,b++}r.point[g]=X,g++}else if(C.isHemisphereLight){const X=n.get(C);X.skyColor.copy(C.color).multiplyScalar(W*E),X.groundColor.copy(C.groundColor).multiplyScalar(W*E),r.hemi[w]=X,w++}}y>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Me.LTC_FLOAT_1,r.rectAreaLTC2=Me.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Me.LTC_HALF_1,r.rectAreaLTC2=Me.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=u,r.ambient[1]=p,r.ambient[2]=m;const x=r.hash;(x.directionalLength!==f||x.pointLength!==g||x.spotLength!==v||x.rectAreaLength!==y||x.hemiLength!==w||x.numDirectionalShadows!==S||x.numPointShadows!==b||x.numSpotShadows!==_)&&(r.directional.length=f,r.spot.length=v,r.rectArea.length=y,r.point.length=g,r.hemi.length=w,r.directionalShadow.length=S,r.directionalShadowMap.length=S,r.pointShadow.length=b,r.pointShadowMap.length=b,r.spotShadow.length=_,r.spotShadowMap.length=_,r.directionalShadowMatrix.length=S,r.pointShadowMatrix.length=b,r.spotShadowMatrix.length=_,x.directionalLength=f,x.pointLength=g,x.spotLength=v,x.rectAreaLength=y,x.hemiLength=w,x.numDirectionalShadows=S,x.numPointShadows=b,x.numSpotShadows=_,r.version=gS++)}function h(c,d){let u=0,p=0,m=0,f=0,g=0;const v=d.matrixWorldInverse;for(let y=0,w=c.length;y<w;y++){const S=c[y];if(S.isDirectionalLight){const b=r.directional[u];b.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(v),u++}else if(S.isSpotLight){const b=r.spot[m];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(v),b.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(v),m++}else if(S.isRectAreaLight){const b=r.rectArea[f];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(v),o.identity(),a.copy(S.matrixWorld),a.premultiply(v),o.extractRotation(a),b.halfWidth.set(S.width*.5,0,0),b.halfHeight.set(0,S.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),f++}else if(S.isPointLight){const b=r.point[p];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(v),p++}else if(S.isHemisphereLight){const b=r.hemi[g];b.direction.setFromMatrixPosition(S.matrixWorld),b.direction.transformDirection(v),g++}}}return{setup:l,setupView:h,state:r}}function Bp(t,e){const n=new yS(t,e),i=[],r=[];function s(){i.length=0,r.length=0}function a(d){i.push(d)}function o(d){r.push(d)}function l(d){n.setup(i,d)}function h(d){n.setupView(i,d)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:h,pushLight:a,pushShadow:o}}function xS(t,e){let n=new WeakMap;function i(s,a=0){let o;return n.has(s)===!1?(o=new Bp(t,e),n.set(s,[o])):a>=n.get(s).length?(o=new Bp(t,e),n.get(s).push(o)):o=n.get(s)[a],o}function r(){n=new WeakMap}return{get:i,dispose:r}}class zu extends Kt{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=wx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}zu.prototype.isMeshDepthMaterial=!0;class Bu extends Kt{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Bu.prototype.isMeshDistanceMaterial=!0;const bS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,_S=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Sg(t,e,n){let i=new Kl;const r=new q,s=new q,a=new at,o=new zu({depthPacking:Sx}),l=new Bu,h={},c=n.maxTextureSize,d={0:Fn,1:kr,2:Pn},u=new kn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new q},radius:{value:4}},vertexShader:bS,fragmentShader:_S}),p=u.clone();p.defines.HORIZONTAL_PASS=1;const m=new Ve;m.setAttribute("position",new tt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new ln(m,u),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Lu,this.render=function(S,b,_){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||S.length===0)return;const E=t.getRenderTarget(),x=t.getActiveCubeFace(),A=t.getActiveMipmapLevel(),M=t.state;M.setBlending(ur),M.buffers.color.setClear(1,1,1,1),M.buffers.depth.setTest(!0),M.setScissorTest(!1);for(let C=0,F=S.length;C<F;C++){const W=S[C],O=W.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",W,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;r.copy(O.mapSize);const Z=O.getFrameExtents();if(r.multiply(Z),s.copy(O.mapSize),(r.x>c||r.y>c)&&(r.x>c&&(s.x=Math.floor(c/Z.x),r.x=s.x*Z.x,O.mapSize.x=s.x),r.y>c&&(s.y=Math.floor(c/Z.y),r.y=s.y*Z.y,O.mapSize.y=s.y)),O.map===null&&!O.isPointLightShadow&&this.type===Ra&&(O.map=new Sn(r.x,r.y),O.map.texture.name=W.name+".shadowMap",O.mapPass=new Sn(r.x,r.y),O.camera.updateProjectionMatrix()),O.map===null){const j={minFilter:tn,magFilter:tn,format:ii};O.map=new Sn(r.x,r.y,j),O.map.texture.name=W.name+".shadowMap",O.camera.updateProjectionMatrix()}t.setRenderTarget(O.map),t.clear();const X=O.getViewportCount();for(let j=0;j<X;j++){const H=O.getViewport(j);a.set(s.x*H.x,s.y*H.y,s.x*H.z,s.y*H.w),M.viewport(a),O.updateMatrices(W,j),i=O.getFrustum(),w(b,_,O.camera,W,this.type)}!O.isPointLightShadow&&this.type===Ra&&v(O,_),O.needsUpdate=!1}g.needsUpdate=!1,t.setRenderTarget(E,x,A)};function v(S,b){const _=e.update(f);u.defines.VSM_SAMPLES!==S.blurSamples&&(u.defines.VSM_SAMPLES=S.blurSamples,p.defines.VSM_SAMPLES=S.blurSamples,u.needsUpdate=!0,p.needsUpdate=!0),u.uniforms.shadow_pass.value=S.map.texture,u.uniforms.resolution.value=S.mapSize,u.uniforms.radius.value=S.radius,t.setRenderTarget(S.mapPass),t.clear(),t.renderBufferDirect(b,null,_,u,f,null),p.uniforms.shadow_pass.value=S.mapPass.texture,p.uniforms.resolution.value=S.mapSize,p.uniforms.radius.value=S.radius,t.setRenderTarget(S.map),t.clear(),t.renderBufferDirect(b,null,_,p,f,null)}function y(S,b,_,E,x,A){let M=null;const C=_.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(C!==void 0?M=C:M=_.isPointLight===!0?l:o,t.localClippingEnabled&&b.clipShadows===!0&&b.clippingPlanes.length!==0||b.displacementMap&&b.displacementScale!==0||b.alphaMap&&b.alphaTest>0){const F=M.uuid,W=b.uuid;let O=h[F];O===void 0&&(O={},h[F]=O);let Z=O[W];Z===void 0&&(Z=M.clone(),O[W]=Z),M=Z}return M.visible=b.visible,M.wireframe=b.wireframe,A===Ra?M.side=b.shadowSide!==null?b.shadowSide:b.side:M.side=b.shadowSide!==null?b.shadowSide:d[b.side],M.alphaMap=b.alphaMap,M.alphaTest=b.alphaTest,M.clipShadows=b.clipShadows,M.clippingPlanes=b.clippingPlanes,M.clipIntersection=b.clipIntersection,M.displacementMap=b.displacementMap,M.displacementScale=b.displacementScale,M.displacementBias=b.displacementBias,M.wireframeLinewidth=b.wireframeLinewidth,M.linewidth=b.linewidth,_.isPointLight===!0&&M.isMeshDistanceMaterial===!0&&(M.referencePosition.setFromMatrixPosition(_.matrixWorld),M.nearDistance=E,M.farDistance=x),M}function w(S,b,_,E,x){if(S.visible===!1)return;if(S.layers.test(b.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&x===Ra)&&(!S.frustumCulled||i.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(_.matrixWorldInverse,S.matrixWorld);const C=e.update(S),F=S.material;if(Array.isArray(F)){const W=C.groups;for(let O=0,Z=W.length;O<Z;O++){const X=W[O],j=F[X.materialIndex];if(j&&j.visible){const H=y(S,j,E,_.near,_.far,x);t.renderBufferDirect(_,null,C,H,S,X)}}}else if(F.visible){const W=y(S,F,E,_.near,_.far,x);t.renderBufferDirect(_,null,C,W,S,null)}}const M=S.children;for(let C=0,F=M.length;C<F;C++)w(M[C],b,_,E,x)}}function wS(t,e,n){const i=n.isWebGL2;function r(){let U=!1;const we=new at;let be=null;const We=new at(0,0,0,0);return{setMask:function(Le){be!==Le&&!U&&(t.colorMask(Le,Le,Le,Le),be=Le)},setLocked:function(Le){U=Le},setClear:function(Le,ze,Se,Ue,ht){ht===!0&&(Le*=Ue,ze*=Ue,Se*=Ue),we.set(Le,ze,Se,Ue),We.equals(we)===!1&&(t.clearColor(Le,ze,Se,Ue),We.copy(we))},reset:function(){U=!1,be=null,We.set(-1,0,0,0)}}}function s(){let U=!1,we=null,be=null,We=null;return{setTest:function(Le){Le?ne(2929):z(2929)},setMask:function(Le){we!==Le&&!U&&(t.depthMask(Le),we=Le)},setFunc:function(Le){if(be!==Le){if(Le)switch(Le){case Hy:t.depthFunc(512);break;case Gy:t.depthFunc(519);break;case Wy:t.depthFunc(513);break;case Rc:t.depthFunc(515);break;case jy:t.depthFunc(514);break;case qy:t.depthFunc(518);break;case Xy:t.depthFunc(516);break;case Jy:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);be=Le}},setLocked:function(Le){U=Le},setClear:function(Le){We!==Le&&(t.clearDepth(Le),We=Le)},reset:function(){U=!1,we=null,be=null,We=null}}}function a(){let U=!1,we=null,be=null,We=null,Le=null,ze=null,Se=null,Ue=null,ht=null;return{setTest:function(je){U||(je?ne(2960):z(2960))},setMask:function(je){we!==je&&!U&&(t.stencilMask(je),we=je)},setFunc:function(je,rn,dn){(be!==je||We!==rn||Le!==dn)&&(t.stencilFunc(je,rn,dn),be=je,We=rn,Le=dn)},setOp:function(je,rn,dn){(ze!==je||Se!==rn||Ue!==dn)&&(t.stencilOp(je,rn,dn),ze=je,Se=rn,Ue=dn)},setLocked:function(je){U=je},setClear:function(je){ht!==je&&(t.clearStencil(je),ht=je)},reset:function(){U=!1,we=null,be=null,We=null,Le=null,ze=null,Se=null,Ue=null,ht=null}}}const o=new r,l=new s,h=new a;let c={},d={},u=new WeakMap,p=[],m=null,f=!1,g=null,v=null,y=null,w=null,S=null,b=null,_=null,E=!1,x=null,A=null,M=null,C=null,F=null;const W=t.getParameter(35661);let O=!1,Z=0;const X=t.getParameter(7938);X.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL (\d)/.exec(X)[1]),O=Z>=1):X.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),O=Z>=2);let j=null,H={};const N=t.getParameter(3088),I=t.getParameter(2978),V=new at().fromArray(N),B=new at().fromArray(I);function k(U,we,be){const We=new Uint8Array(4),Le=t.createTexture();t.bindTexture(U,Le),t.texParameteri(U,10241,9728),t.texParameteri(U,10240,9728);for(let ze=0;ze<be;ze++)t.texImage2D(we+ze,0,6408,1,1,0,6408,5121,We);return Le}const $={};$[3553]=k(3553,3553,1),$[34067]=k(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),h.setClear(0),ne(2929),l.setFunc(Rc),ee(!1),se(Cd),ne(2884),G(ur);function ne(U){c[U]!==!0&&(t.enable(U),c[U]=!0)}function z(U){c[U]!==!1&&(t.disable(U),c[U]=!1)}function oe(U,we){return d[U]!==we?(t.bindFramebuffer(U,we),d[U]=we,i&&(U===36009&&(d[36160]=we),U===36160&&(d[36009]=we)),!0):!1}function ie(U,we){let be=p,We=!1;if(U)if(be=u.get(we),be===void 0&&(be=[],u.set(we,be)),U.isWebGLMultipleRenderTargets){const Le=U.texture;if(be.length!==Le.length||be[0]!==36064){for(let ze=0,Se=Le.length;ze<Se;ze++)be[ze]=36064+ze;be.length=Le.length,We=!0}}else be[0]!==36064&&(be[0]=36064,We=!0);else be[0]!==1029&&(be[0]=1029,We=!0);We&&(n.isWebGL2?t.drawBuffers(be):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(be))}function le(U){return m!==U?(t.useProgram(U),m=U,!0):!1}const K={[Es]:32774,[Dy]:32778,[Ry]:32779};if(i)K[Rd]=32775,K[Od]=32776;else{const U=e.get("EXT_blend_minmax");U!==null&&(K[Rd]=U.MIN_EXT,K[Od]=U.MAX_EXT)}const pe={[Oy]:0,[Iy]:1,[Ny]:768,[og]:770,[Vy]:776,[Uy]:774,[By]:772,[zy]:769,[lg]:771,[ky]:775,[Fy]:773};function G(U,we,be,We,Le,ze,Se,Ue){if(U===ur){f===!0&&(z(3042),f=!1);return}if(f===!1&&(ne(3042),f=!0),U!==Py){if(U!==g||Ue!==E){if((v!==Es||S!==Es)&&(t.blendEquation(32774),v=Es,S=Es),Ue)switch(U){case Ir:t.blendFuncSeparate(1,771,1,771);break;case Ld:t.blendFunc(1,1);break;case Pd:t.blendFuncSeparate(0,769,0,1);break;case Dd:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case Ir:t.blendFuncSeparate(770,771,1,771);break;case Ld:t.blendFunc(770,1);break;case Pd:t.blendFuncSeparate(0,769,0,1);break;case Dd:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}y=null,w=null,b=null,_=null,g=U,E=Ue}return}Le=Le||we,ze=ze||be,Se=Se||We,(we!==v||Le!==S)&&(t.blendEquationSeparate(K[we],K[Le]),v=we,S=Le),(be!==y||We!==w||ze!==b||Se!==_)&&(t.blendFuncSeparate(pe[be],pe[We],pe[ze],pe[Se]),y=be,w=We,b=ze,_=Se),g=U,E=null}function J(U,we){U.side===Pn?z(2884):ne(2884);let be=U.side===Fn;we&&(be=!be),ee(be),U.blending===Ir&&U.transparent===!1?G(ur):G(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.premultipliedAlpha),l.setFunc(U.depthFunc),l.setTest(U.depthTest),l.setMask(U.depthWrite),o.setMask(U.colorWrite);const We=U.stencilWrite;h.setTest(We),We&&(h.setMask(U.stencilWriteMask),h.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),h.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),fe(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?ne(32926):z(32926)}function ee(U){x!==U&&(U?t.frontFace(2304):t.frontFace(2305),x=U)}function se(U){U!==Ay?(ne(2884),U!==A&&(U===Cd?t.cullFace(1029):U===Cy?t.cullFace(1028):t.cullFace(1032))):z(2884),A=U}function ce(U){U!==M&&(O&&t.lineWidth(U),M=U)}function fe(U,we,be){U?(ne(32823),(C!==we||F!==be)&&(t.polygonOffset(we,be),C=we,F=be)):z(32823)}function ge(U){U?ne(3089):z(3089)}function _e(U){U===void 0&&(U=33984+W-1),j!==U&&(t.activeTexture(U),j=U)}function Oe(U,we){j===null&&_e();let be=H[j];be===void 0&&(be={type:void 0,texture:void 0},H[j]=be),(be.type!==U||be.texture!==we)&&(t.bindTexture(U,we||$[U]),be.type=U,be.texture=we)}function Ne(){const U=H[j];U!==void 0&&U.type!==void 0&&(t.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function D(){try{t.compressedTexImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function L(){try{t.texSubImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function he(){try{t.texSubImage3D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function me(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Te(){try{t.texStorage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ce(){try{t.texStorage3D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Be(){try{t.texImage2D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function R(){try{t.texImage3D.apply(t,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ye(U){V.equals(U)===!1&&(t.scissor(U.x,U.y,U.z,U.w),V.copy(U))}function Ee(U){B.equals(U)===!1&&(t.viewport(U.x,U.y,U.z,U.w),B.copy(U))}function xe(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),i===!0&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),c={},j=null,H={},d={},u=new WeakMap,p=[],m=null,f=!1,g=null,v=null,y=null,w=null,S=null,b=null,_=null,E=!1,x=null,A=null,M=null,C=null,F=null,V.set(0,0,t.canvas.width,t.canvas.height),B.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),h.reset()}return{buffers:{color:o,depth:l,stencil:h},enable:ne,disable:z,bindFramebuffer:oe,drawBuffers:ie,useProgram:le,setBlending:G,setMaterial:J,setFlipSided:ee,setCullFace:se,setLineWidth:ce,setPolygonOffset:fe,setScissorTest:ge,activeTexture:_e,bindTexture:Oe,unbindTexture:Ne,compressedTexImage2D:D,texImage2D:Be,texImage3D:R,texStorage2D:Te,texStorage3D:Ce,texSubImage2D:L,texSubImage3D:he,compressedTexSubImage2D:me,scissor:ye,viewport:Ee,reset:xe}}function SS(t,e,n,i,r,s,a){const o=r.isWebGL2,l=r.maxTextures,h=r.maxCubemapSize,c=r.maxTextureSize,d=r.maxSamples,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let f;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(D,L){return v?new OffscreenCanvas(D,L):Ka("canvas")}function w(D,L,he,me){let Te=1;if((D.width>me||D.height>me)&&(Te=me/Math.max(D.width,D.height)),Te<1||L===!0)if(typeof HTMLImageElement!="undefined"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&D instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&D instanceof ImageBitmap){const Ce=L?Rl:Math.floor,Be=Ce(Te*D.width),R=Ce(Te*D.height);f===void 0&&(f=y(Be,R));const ye=he?y(Be,R):f;return ye.width=Be,ye.height=R,ye.getContext("2d").drawImage(D,0,0,Be,R),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+Be+"x"+R+")."),ye}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D;return D}function S(D){return Fc(D.width)&&Fc(D.height)}function b(D){return o?!1:D.wrapS!==Ln||D.wrapT!==Ln||D.minFilter!==tn&&D.minFilter!==mn}function _(D,L){return D.generateMipmaps&&L&&D.minFilter!==tn&&D.minFilter!==mn}function E(D){t.generateMipmap(D)}function x(D,L,he,me,Te=!1){if(o===!1)return L;if(D!==null){if(t[D]!==void 0)return t[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let Ce=L;return L===6403&&(he===5126&&(Ce=33326),he===5131&&(Ce=33325),he===5121&&(Ce=33321)),L===33319&&(he===5126&&(Ce=33328),he===5131&&(Ce=33327),he===5121&&(Ce=33323)),L===6408&&(he===5126&&(Ce=34836),he===5131&&(Ce=34842),he===5121&&(Ce=me===Et&&Te===!1?35907:32856),he===32819&&(Ce=32854),he===32820&&(Ce=32855)),(Ce===33325||Ce===33326||Ce===33327||Ce===33328||Ce===34842||Ce===34836)&&e.get("EXT_color_buffer_float"),Ce}function A(D,L,he){return _(D,he)===!0||D.isFramebufferTexture&&D.minFilter!==tn&&D.minFilter!==mn?Math.log2(Math.max(L.width,L.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?L.mipmaps.length:1}function M(D){return D===tn||D===Id||D===Nd?9728:9729}function C(D){const L=D.target;L.removeEventListener("dispose",C),W(L),L.isVideoTexture&&m.delete(L)}function F(D){const L=D.target;L.removeEventListener("dispose",F),Z(L)}function W(D){const L=i.get(D);if(L.__webglInit===void 0)return;const he=D.source,me=g.get(he);if(me){const Te=me[L.__cacheKey];Te.usedTimes--,Te.usedTimes===0&&O(D),Object.keys(me).length===0&&g.delete(he)}i.remove(D)}function O(D){const L=i.get(D);t.deleteTexture(L.__webglTexture);const he=D.source,me=g.get(he);delete me[L.__cacheKey],a.memory.textures--}function Z(D){const L=D.texture,he=i.get(D),me=i.get(L);if(me.__webglTexture!==void 0&&(t.deleteTexture(me.__webglTexture),a.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let Te=0;Te<6;Te++)t.deleteFramebuffer(he.__webglFramebuffer[Te]),he.__webglDepthbuffer&&t.deleteRenderbuffer(he.__webglDepthbuffer[Te]);else t.deleteFramebuffer(he.__webglFramebuffer),he.__webglDepthbuffer&&t.deleteRenderbuffer(he.__webglDepthbuffer),he.__webglMultisampledFramebuffer&&t.deleteFramebuffer(he.__webglMultisampledFramebuffer),he.__webglColorRenderbuffer&&t.deleteRenderbuffer(he.__webglColorRenderbuffer),he.__webglDepthRenderbuffer&&t.deleteRenderbuffer(he.__webglDepthRenderbuffer);if(D.isWebGLMultipleRenderTargets)for(let Te=0,Ce=L.length;Te<Ce;Te++){const Be=i.get(L[Te]);Be.__webglTexture&&(t.deleteTexture(Be.__webglTexture),a.memory.textures--),i.remove(L[Te])}i.remove(L),i.remove(D)}let X=0;function j(){X=0}function H(){const D=X;return D>=l&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+l),X+=1,D}function N(D){const L=[];return L.push(D.wrapS),L.push(D.wrapT),L.push(D.magFilter),L.push(D.minFilter),L.push(D.anisotropy),L.push(D.internalFormat),L.push(D.format),L.push(D.type),L.push(D.generateMipmaps),L.push(D.premultiplyAlpha),L.push(D.flipY),L.push(D.unpackAlignment),L.push(D.encoding),L.join()}function I(D,L){const he=i.get(D);if(D.isVideoTexture&&Oe(D),D.isRenderTargetTexture===!1&&D.version>0&&he.__version!==D.version){const me=D.image;if(me===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ie(he,D,L);return}}n.activeTexture(33984+L),n.bindTexture(3553,he.__webglTexture)}function V(D,L){const he=i.get(D);if(D.version>0&&he.__version!==D.version){ie(he,D,L);return}n.activeTexture(33984+L),n.bindTexture(35866,he.__webglTexture)}function B(D,L){const he=i.get(D);if(D.version>0&&he.__version!==D.version){ie(he,D,L);return}n.activeTexture(33984+L),n.bindTexture(32879,he.__webglTexture)}function k(D,L){const he=i.get(D);if(D.version>0&&he.__version!==D.version){le(he,D,L);return}n.activeTexture(33984+L),n.bindTexture(34067,he.__webglTexture)}const $={[Nc]:10497,[Ln]:33071,[zc]:33648},ne={[tn]:9728,[Id]:9984,[Nd]:9986,[mn]:9729,[nx]:9985,[co]:9987};function z(D,L,he){if(he?(t.texParameteri(D,10242,$[L.wrapS]),t.texParameteri(D,10243,$[L.wrapT]),(D===32879||D===35866)&&t.texParameteri(D,32882,$[L.wrapR]),t.texParameteri(D,10240,ne[L.magFilter]),t.texParameteri(D,10241,ne[L.minFilter])):(t.texParameteri(D,10242,33071),t.texParameteri(D,10243,33071),(D===32879||D===35866)&&t.texParameteri(D,32882,33071),(L.wrapS!==Ln||L.wrapT!==Ln)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(D,10240,M(L.magFilter)),t.texParameteri(D,10241,M(L.minFilter)),L.minFilter!==tn&&L.minFilter!==mn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const me=e.get("EXT_texture_filter_anisotropic");if(L.type===Rr&&e.has("OES_texture_float_linear")===!1||o===!1&&L.type===$a&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||i.get(L).__currentAnisotropy)&&(t.texParameterf(D,me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,r.getMaxAnisotropy())),i.get(L).__currentAnisotropy=L.anisotropy)}}function oe(D,L){let he=!1;D.__webglInit===void 0&&(D.__webglInit=!0,L.addEventListener("dispose",C));const me=L.source;let Te=g.get(me);Te===void 0&&(Te={},g.set(me,Te));const Ce=N(L);if(Ce!==D.__cacheKey){Te[Ce]===void 0&&(Te[Ce]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,he=!0),Te[Ce].usedTimes++;const Be=Te[D.__cacheKey];Be!==void 0&&(Te[D.__cacheKey].usedTimes--,Be.usedTimes===0&&O(L)),D.__cacheKey=Ce,D.__webglTexture=Te[Ce].texture}return he}function ie(D,L,he){let me=3553;L.isDataArrayTexture&&(me=35866),L.isData3DTexture&&(me=32879);const Te=oe(D,L),Ce=L.source;if(n.activeTexture(33984+he),n.bindTexture(me,D.__webglTexture),Ce.version!==Ce.__currentVersion||Te===!0){t.pixelStorei(37440,L.flipY),t.pixelStorei(37441,L.premultiplyAlpha),t.pixelStorei(3317,L.unpackAlignment),t.pixelStorei(37443,0);const Be=b(L)&&S(L.image)===!1;let R=w(L.image,Be,!1,c);R=Ne(L,R);const ye=S(R)||o,Ee=s.convert(L.format,L.encoding);let xe=s.convert(L.type),U=x(L.internalFormat,Ee,xe,L.encoding,L.isVideoTexture);z(me,L,ye);let we;const be=L.mipmaps,We=o&&L.isVideoTexture!==!0,Le=D.__version===void 0||Te===!0,ze=A(L,R,ye);if(L.isDepthTexture)U=6402,o?L.type===Rr?U=36012:L.type===bl?U=33190:L.type===Fs?U=35056:U=33189:L.type===Rr&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===Nr&&U===6402&&L.type!==Ja&&L.type!==bl&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=Ja,xe=s.convert(L.type)),L.format===Gs&&U===6402&&(U=34041,L.type!==Fs&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=Fs,xe=s.convert(L.type))),Le&&(We?n.texStorage2D(3553,1,U,R.width,R.height):n.texImage2D(3553,0,U,R.width,R.height,0,Ee,xe,null));else if(L.isDataTexture)if(be.length>0&&ye){We&&Le&&n.texStorage2D(3553,ze,U,be[0].width,be[0].height);for(let Se=0,Ue=be.length;Se<Ue;Se++)we=be[Se],We?n.texSubImage2D(3553,Se,0,0,we.width,we.height,Ee,xe,we.data):n.texImage2D(3553,Se,U,we.width,we.height,0,Ee,xe,we.data);L.generateMipmaps=!1}else We?(Le&&n.texStorage2D(3553,ze,U,R.width,R.height),n.texSubImage2D(3553,0,0,0,R.width,R.height,Ee,xe,R.data)):n.texImage2D(3553,0,U,R.width,R.height,0,Ee,xe,R.data);else if(L.isCompressedTexture){We&&Le&&n.texStorage2D(3553,ze,U,be[0].width,be[0].height);for(let Se=0,Ue=be.length;Se<Ue;Se++)we=be[Se],L.format!==ii?Ee!==null?We?n.compressedTexSubImage2D(3553,Se,0,0,we.width,we.height,Ee,we.data):n.compressedTexImage2D(3553,Se,U,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):We?n.texSubImage2D(3553,Se,0,0,we.width,we.height,Ee,xe,we.data):n.texImage2D(3553,Se,U,we.width,we.height,0,Ee,xe,we.data)}else if(L.isDataArrayTexture)We?(Le&&n.texStorage3D(35866,ze,U,R.width,R.height,R.depth),n.texSubImage3D(35866,0,0,0,0,R.width,R.height,R.depth,Ee,xe,R.data)):n.texImage3D(35866,0,U,R.width,R.height,R.depth,0,Ee,xe,R.data);else if(L.isData3DTexture)We?(Le&&n.texStorage3D(32879,ze,U,R.width,R.height,R.depth),n.texSubImage3D(32879,0,0,0,0,R.width,R.height,R.depth,Ee,xe,R.data)):n.texImage3D(32879,0,U,R.width,R.height,R.depth,0,Ee,xe,R.data);else if(L.isFramebufferTexture){if(Le)if(We)n.texStorage2D(3553,ze,U,R.width,R.height);else{let Se=R.width,Ue=R.height;for(let ht=0;ht<ze;ht++)n.texImage2D(3553,ht,U,Se,Ue,0,Ee,xe,null),Se>>=1,Ue>>=1}}else if(be.length>0&&ye){We&&Le&&n.texStorage2D(3553,ze,U,be[0].width,be[0].height);for(let Se=0,Ue=be.length;Se<Ue;Se++)we=be[Se],We?n.texSubImage2D(3553,Se,0,0,Ee,xe,we):n.texImage2D(3553,Se,U,Ee,xe,we);L.generateMipmaps=!1}else We?(Le&&n.texStorage2D(3553,ze,U,R.width,R.height),n.texSubImage2D(3553,0,0,0,Ee,xe,R)):n.texImage2D(3553,0,U,Ee,xe,R);_(L,ye)&&E(me),Ce.__currentVersion=Ce.version,L.onUpdate&&L.onUpdate(L)}D.__version=L.version}function le(D,L,he){if(L.image.length!==6)return;const me=oe(D,L),Te=L.source;if(n.activeTexture(33984+he),n.bindTexture(34067,D.__webglTexture),Te.version!==Te.__currentVersion||me===!0){t.pixelStorei(37440,L.flipY),t.pixelStorei(37441,L.premultiplyAlpha),t.pixelStorei(3317,L.unpackAlignment),t.pixelStorei(37443,0);const Ce=L.isCompressedTexture||L.image[0].isCompressedTexture,Be=L.image[0]&&L.image[0].isDataTexture,R=[];for(let Se=0;Se<6;Se++)!Ce&&!Be?R[Se]=w(L.image[Se],!1,!0,h):R[Se]=Be?L.image[Se].image:L.image[Se],R[Se]=Ne(L,R[Se]);const ye=R[0],Ee=S(ye)||o,xe=s.convert(L.format,L.encoding),U=s.convert(L.type),we=x(L.internalFormat,xe,U,L.encoding),be=o&&L.isVideoTexture!==!0,We=D.__version===void 0;let Le=A(L,ye,Ee);z(34067,L,Ee);let ze;if(Ce){be&&We&&n.texStorage2D(34067,Le,we,ye.width,ye.height);for(let Se=0;Se<6;Se++){ze=R[Se].mipmaps;for(let Ue=0;Ue<ze.length;Ue++){const ht=ze[Ue];L.format!==ii?xe!==null?be?n.compressedTexSubImage2D(34069+Se,Ue,0,0,ht.width,ht.height,xe,ht.data):n.compressedTexImage2D(34069+Se,Ue,we,ht.width,ht.height,0,ht.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):be?n.texSubImage2D(34069+Se,Ue,0,0,ht.width,ht.height,xe,U,ht.data):n.texImage2D(34069+Se,Ue,we,ht.width,ht.height,0,xe,U,ht.data)}}}else{ze=L.mipmaps,be&&We&&(ze.length>0&&Le++,n.texStorage2D(34067,Le,we,R[0].width,R[0].height));for(let Se=0;Se<6;Se++)if(Be){be?n.texSubImage2D(34069+Se,0,0,0,R[Se].width,R[Se].height,xe,U,R[Se].data):n.texImage2D(34069+Se,0,we,R[Se].width,R[Se].height,0,xe,U,R[Se].data);for(let Ue=0;Ue<ze.length;Ue++){const je=ze[Ue].image[Se].image;be?n.texSubImage2D(34069+Se,Ue+1,0,0,je.width,je.height,xe,U,je.data):n.texImage2D(34069+Se,Ue+1,we,je.width,je.height,0,xe,U,je.data)}}else{be?n.texSubImage2D(34069+Se,0,0,0,xe,U,R[Se]):n.texImage2D(34069+Se,0,we,xe,U,R[Se]);for(let Ue=0;Ue<ze.length;Ue++){const ht=ze[Ue];be?n.texSubImage2D(34069+Se,Ue+1,0,0,xe,U,ht.image[Se]):n.texImage2D(34069+Se,Ue+1,we,xe,U,ht.image[Se])}}}_(L,Ee)&&E(34067),Te.__currentVersion=Te.version,L.onUpdate&&L.onUpdate(L)}D.__version=L.version}function K(D,L,he,me,Te){const Ce=s.convert(he.format,he.encoding),Be=s.convert(he.type),R=x(he.internalFormat,Ce,Be,he.encoding);i.get(L).__hasExternalTextures||(Te===32879||Te===35866?n.texImage3D(Te,0,R,L.width,L.height,L.depth,0,Ce,Be,null):n.texImage2D(Te,0,R,L.width,L.height,0,Ce,Be,null)),n.bindFramebuffer(36160,D),_e(L)?u.framebufferTexture2DMultisampleEXT(36160,me,Te,i.get(he).__webglTexture,0,ge(L)):t.framebufferTexture2D(36160,me,Te,i.get(he).__webglTexture,0),n.bindFramebuffer(36160,null)}function pe(D,L,he){if(t.bindRenderbuffer(36161,D),L.depthBuffer&&!L.stencilBuffer){let me=33189;if(he||_e(L)){const Te=L.depthTexture;Te&&Te.isDepthTexture&&(Te.type===Rr?me=36012:Te.type===bl&&(me=33190));const Ce=ge(L);_e(L)?u.renderbufferStorageMultisampleEXT(36161,Ce,me,L.width,L.height):t.renderbufferStorageMultisample(36161,Ce,me,L.width,L.height)}else t.renderbufferStorage(36161,me,L.width,L.height);t.framebufferRenderbuffer(36160,36096,36161,D)}else if(L.depthBuffer&&L.stencilBuffer){const me=ge(L);he&&_e(L)===!1?t.renderbufferStorageMultisample(36161,me,35056,L.width,L.height):_e(L)?u.renderbufferStorageMultisampleEXT(36161,me,35056,L.width,L.height):t.renderbufferStorage(36161,34041,L.width,L.height),t.framebufferRenderbuffer(36160,33306,36161,D)}else{const me=L.isWebGLMultipleRenderTargets===!0?L.texture[0]:L.texture,Te=s.convert(me.format,me.encoding),Ce=s.convert(me.type),Be=x(me.internalFormat,Te,Ce,me.encoding),R=ge(L);he&&_e(L)===!1?t.renderbufferStorageMultisample(36161,R,Be,L.width,L.height):_e(L)?u.renderbufferStorageMultisampleEXT(36161,R,Be,L.width,L.height):t.renderbufferStorage(36161,Be,L.width,L.height)}t.bindRenderbuffer(36161,null)}function G(D,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,D),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),I(L.depthTexture,0);const me=i.get(L.depthTexture).__webglTexture,Te=ge(L);if(L.depthTexture.format===Nr)_e(L)?u.framebufferTexture2DMultisampleEXT(36160,36096,3553,me,0,Te):t.framebufferTexture2D(36160,36096,3553,me,0);else if(L.depthTexture.format===Gs)_e(L)?u.framebufferTexture2DMultisampleEXT(36160,33306,3553,me,0,Te):t.framebufferTexture2D(36160,33306,3553,me,0);else throw new Error("Unknown depthTexture format")}function J(D){const L=i.get(D),he=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!L.__autoAllocateDepthBuffer){if(he)throw new Error("target.depthTexture not supported in Cube render targets");G(L.__webglFramebuffer,D)}else if(he){L.__webglDepthbuffer=[];for(let me=0;me<6;me++)n.bindFramebuffer(36160,L.__webglFramebuffer[me]),L.__webglDepthbuffer[me]=t.createRenderbuffer(),pe(L.__webglDepthbuffer[me],D,!1)}else n.bindFramebuffer(36160,L.__webglFramebuffer),L.__webglDepthbuffer=t.createRenderbuffer(),pe(L.__webglDepthbuffer,D,!1);n.bindFramebuffer(36160,null)}function ee(D,L,he){const me=i.get(D);L!==void 0&&K(me.__webglFramebuffer,D,D.texture,36064,3553),he!==void 0&&J(D)}function se(D){const L=D.texture,he=i.get(D),me=i.get(L);D.addEventListener("dispose",F),D.isWebGLMultipleRenderTargets!==!0&&(me.__webglTexture===void 0&&(me.__webglTexture=t.createTexture()),me.__version=L.version,a.memory.textures++);const Te=D.isWebGLCubeRenderTarget===!0,Ce=D.isWebGLMultipleRenderTargets===!0,Be=S(D)||o;if(Te){he.__webglFramebuffer=[];for(let R=0;R<6;R++)he.__webglFramebuffer[R]=t.createFramebuffer()}else if(he.__webglFramebuffer=t.createFramebuffer(),Ce)if(r.drawBuffers){const R=D.texture;for(let ye=0,Ee=R.length;ye<Ee;ye++){const xe=i.get(R[ye]);xe.__webglTexture===void 0&&(xe.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(o&&D.samples>0&&_e(D)===!1){he.__webglMultisampledFramebuffer=t.createFramebuffer(),he.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,he.__webglColorRenderbuffer);const R=s.convert(L.format,L.encoding),ye=s.convert(L.type),Ee=x(L.internalFormat,R,ye,L.encoding),xe=ge(D);t.renderbufferStorageMultisample(36161,xe,Ee,D.width,D.height),n.bindFramebuffer(36160,he.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,he.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),D.depthBuffer&&(he.__webglDepthRenderbuffer=t.createRenderbuffer(),pe(he.__webglDepthRenderbuffer,D,!0)),n.bindFramebuffer(36160,null)}if(Te){n.bindTexture(34067,me.__webglTexture),z(34067,L,Be);for(let R=0;R<6;R++)K(he.__webglFramebuffer[R],D,L,36064,34069+R);_(L,Be)&&E(34067),n.unbindTexture()}else if(Ce){const R=D.texture;for(let ye=0,Ee=R.length;ye<Ee;ye++){const xe=R[ye],U=i.get(xe);n.bindTexture(3553,U.__webglTexture),z(3553,xe,Be),K(he.__webglFramebuffer,D,xe,36064+ye,3553),_(xe,Be)&&E(3553)}n.unbindTexture()}else{let R=3553;(D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(o?R=D.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(R,me.__webglTexture),z(R,L,Be),K(he.__webglFramebuffer,D,L,36064,R),_(L,Be)&&E(R),n.unbindTexture()}D.depthBuffer&&J(D)}function ce(D){const L=S(D)||o,he=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let me=0,Te=he.length;me<Te;me++){const Ce=he[me];if(_(Ce,L)){const Be=D.isWebGLCubeRenderTarget?34067:3553,R=i.get(Ce).__webglTexture;n.bindTexture(Be,R),E(Be),n.unbindTexture()}}}function fe(D){if(o&&D.samples>0&&_e(D)===!1){const L=D.width,he=D.height;let me=16384;const Te=[36064],Ce=D.stencilBuffer?33306:36096;D.depthBuffer&&Te.push(Ce);const Be=i.get(D),R=Be.__ignoreDepthValues!==void 0?Be.__ignoreDepthValues:!1;R===!1&&(D.depthBuffer&&(me|=256),D.stencilBuffer&&(me|=1024)),n.bindFramebuffer(36008,Be.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,Be.__webglFramebuffer),R===!0&&(t.invalidateFramebuffer(36008,[Ce]),t.invalidateFramebuffer(36009,[Ce])),t.blitFramebuffer(0,0,L,he,0,0,L,he,me,9728),p&&t.invalidateFramebuffer(36008,Te),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,Be.__webglMultisampledFramebuffer)}}function ge(D){return Math.min(d,D.samples)}function _e(D){const L=i.get(D);return o&&D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function Oe(D){const L=a.render.frame;m.get(D)!==L&&(m.set(D,L),D.update())}function Ne(D,L){const he=D.encoding,me=D.format,Te=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||D.format===Bc||he!==li&&(he===Et?o===!1?e.has("EXT_sRGB")===!0&&me===ii?(D.format=Bc,D.minFilter=mn,D.generateMipmaps=!1):L=Xr.sRGBToLinear(L):(me!==ii||Te!==Gr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",he)),L}this.allocateTextureUnit=H,this.resetTextureUnits=j,this.setTexture2D=I,this.setTexture2DArray=V,this.setTexture3D=B,this.setTextureCube=k,this.rebindTextures=ee,this.setupRenderTarget=se,this.updateRenderTargetMipmap=ce,this.updateMultisampleRenderTarget=fe,this.setupDepthRenderbuffer=J,this.setupFrameBufferTexture=K,this.useMultisampledRTT=_e}function MS(t,e,n){const i=n.isWebGL2;function r(s,a=null){let o;if(s===Gr)return 5121;if(s===ax)return 32819;if(s===ox)return 32820;if(s===ix)return 5120;if(s===rx)return 5122;if(s===Ja)return 5123;if(s===sx)return 5124;if(s===bl)return 5125;if(s===Rr)return 5126;if(s===$a)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===lx)return 6406;if(s===ii)return 6408;if(s===cx)return 6409;if(s===ux)return 6410;if(s===Nr)return 6402;if(s===Gs)return 34041;if(s===dx)return 6403;if(s===hx)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Bc)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(s===px)return 36244;if(s===fx)return 33319;if(s===mx)return 33320;if(s===gx)return 36249;if(s===Mh||s===Th||s===Eh||s===Ah)if(a===Et)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(s===Mh)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Th)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Eh)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Ah)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Mh)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Th)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Eh)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Ah)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===zd||s===Bd||s===Fd||s===Ud)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===zd)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Bd)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Fd)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Ud)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===vx)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===kd||s===Vd)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(s===kd)return a===Et?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===Vd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Hd||s===Gd||s===Wd||s===jd||s===qd||s===Xd||s===Jd||s===$d||s===Yd||s===Zd||s===Kd||s===Qd||s===ep||s===tp)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(s===Hd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Gd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Wd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===jd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===qd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Xd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Jd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===$d)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Yd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Zd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Kd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Qd)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===ep)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===tp)return a===Et?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===np)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(s===np)return a===Et?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===Fs?i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):t[s]!==void 0?t[s]:null}return{convert:r}}class Mg extends un{constructor(e=[]){super(),this.cameras=e}}Mg.prototype.isArrayCamera=!0;class Is extends ot{constructor(){super(),this.type="Group"}}Is.prototype.isGroup=!0;const TS={type:"move"};class tc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Is,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Is,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new T,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new T),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Is,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new T,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new T),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,h=this._hand;if(e&&n.session.visibilityState!=="visible-blurred")if(o!==null&&(r=n.getPose(e.targetRaySpace,i),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(TS))),h&&e.hand){a=!0;for(const f of e.hand.values()){const g=n.getJointPose(f,i);if(h.joints[f.jointName]===void 0){const y=new Is;y.matrixAutoUpdate=!1,y.visible=!1,h.joints[f.jointName]=y,h.add(y)}const v=h.joints[f.jointName];g!==null&&(v.matrix.fromArray(g.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=g.radius),v.visible=g!==null}const c=h.joints["index-finger-tip"],d=h.joints["thumb-tip"],u=c.position.distanceTo(d.position),p=.02,m=.005;h.inputState.pinching&&u>p+m?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&u<=p-m&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=n.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),h!==null&&(h.visible=a!==null),this}}class Fu extends Rt{constructor(e,n,i,r,s,a,o,l,h,c){if(c=c!==void 0?c:Nr,c!==Nr&&c!==Gs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&c===Nr&&(i=Ja),i===void 0&&c===Gs&&(i=Fs),super(null,r,s,a,o,l,c,i,h),this.image={width:e,height:n},this.magFilter=o!==void 0?o:tn,this.minFilter=l!==void 0?l:tn,this.flipY=!1,this.generateMipmaps=!1}}Fu.prototype.isDepthTexture=!0;class ES extends ci{constructor(e,n){super();const i=this;let r=null,s=1,a=null,o="local-floor",l=null,h=null,c=null,d=null,u=null,p=null;const m=n.getContextAttributes();let f=null,g=null;const v=[],y=new Map,w=new un;w.layers.enable(1),w.viewport=new at;const S=new un;S.layers.enable(2),S.viewport=new at;const b=[w,S],_=new Mg;_.layers.enable(1),_.layers.enable(2);let E=null,x=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(N){let I=v[N];return I===void 0&&(I=new tc,v[N]=I),I.getTargetRaySpace()},this.getControllerGrip=function(N){let I=v[N];return I===void 0&&(I=new tc,v[N]=I),I.getGripSpace()},this.getHand=function(N){let I=v[N];return I===void 0&&(I=new tc,v[N]=I),I.getHandSpace()};function A(N){const I=y.get(N.inputSource);I&&I.dispatchEvent({type:N.type,data:N.inputSource})}function M(){y.forEach(function(N,I){N.disconnect(I)}),y.clear(),E=null,x=null,e.setRenderTarget(f),u=null,d=null,c=null,r=null,g=null,H.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(N){s=N,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(N){o=N,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(N){l=N},this.getBaseLayer=function(){return d!==null?d:u},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(N){if(r=N,r!==null){if(f=e.getRenderTarget(),r.addEventListener("select",A),r.addEventListener("selectstart",A),r.addEventListener("selectend",A),r.addEventListener("squeeze",A),r.addEventListener("squeezestart",A),r.addEventListener("squeezeend",A),r.addEventListener("end",M),r.addEventListener("inputsourceschange",C),m.xrCompatible!==!0&&await n.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const I={antialias:r.renderState.layers===void 0?m.antialias:!0,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};u=new XRWebGLLayer(r,n,I),r.updateRenderState({baseLayer:u}),g=new Sn(u.framebufferWidth,u.framebufferHeight,{format:ii,type:Gr,encoding:e.outputEncoding})}else{let I=null,V=null,B=null;m.depth&&(B=m.stencil?35056:33190,I=m.stencil?Gs:Nr,V=m.stencil?Fs:Ja);const k={colorFormat:e.outputEncoding===Et?35907:32856,depthFormat:B,scaleFactor:s};c=new XRWebGLBinding(r,n),d=c.createProjectionLayer(k),r.updateRenderState({layers:[d]}),g=new Sn(d.textureWidth,d.textureHeight,{format:ii,type:Gr,depthTexture:new Fu(d.textureWidth,d.textureHeight,V,void 0,void 0,void 0,void 0,void 0,void 0,I),stencilBuffer:m.stencil,encoding:e.outputEncoding,samples:m.antialias?4:0});const $=e.properties.get(g);$.__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),a=await r.requestReferenceSpace(o),H.setContext(r),H.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function C(N){const I=r.inputSources;for(let V=0;V<I.length;V++){const B=I[V].handedness==="right"?1:0;y.set(I[V],v[B])}for(let V=0;V<N.removed.length;V++){const B=N.removed[V],k=y.get(B);k&&(k.dispatchEvent({type:"disconnected",data:B}),y.delete(B))}for(let V=0;V<N.added.length;V++){const B=N.added[V],k=y.get(B);k&&k.dispatchEvent({type:"connected",data:B})}}const F=new T,W=new T;function O(N,I,V){F.setFromMatrixPosition(I.matrixWorld),W.setFromMatrixPosition(V.matrixWorld);const B=F.distanceTo(W),k=I.projectionMatrix.elements,$=V.projectionMatrix.elements,ne=k[14]/(k[10]-1),z=k[14]/(k[10]+1),oe=(k[9]+1)/k[5],ie=(k[9]-1)/k[5],le=(k[8]-1)/k[0],K=($[8]+1)/$[0],pe=ne*le,G=ne*K,J=B/(-le+K),ee=J*-le;I.matrixWorld.decompose(N.position,N.quaternion,N.scale),N.translateX(ee),N.translateZ(J),N.matrixWorld.compose(N.position,N.quaternion,N.scale),N.matrixWorldInverse.copy(N.matrixWorld).invert();const se=ne+J,ce=z+J,fe=pe-ee,ge=G+(B-ee),_e=oe*z/ce*se,Oe=ie*z/ce*se;N.projectionMatrix.makePerspective(fe,ge,_e,Oe,se,ce)}function Z(N,I){I===null?N.matrixWorld.copy(N.matrix):N.matrixWorld.multiplyMatrices(I.matrixWorld,N.matrix),N.matrixWorldInverse.copy(N.matrixWorld).invert()}this.updateCamera=function(N){if(r===null)return;_.near=S.near=w.near=N.near,_.far=S.far=w.far=N.far,(E!==_.near||x!==_.far)&&(r.updateRenderState({depthNear:_.near,depthFar:_.far}),E=_.near,x=_.far);const I=N.parent,V=_.cameras;Z(_,I);for(let k=0;k<V.length;k++)Z(V[k],I);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),N.position.copy(_.position),N.quaternion.copy(_.quaternion),N.scale.copy(_.scale),N.matrix.copy(_.matrix),N.matrixWorld.copy(_.matrixWorld);const B=N.children;for(let k=0,$=B.length;k<$;k++)B[k].updateMatrixWorld(!0);V.length===2?O(_,w,S):_.projectionMatrix.copy(w.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(u!==null)return u.fixedFoveation},this.setFoveation=function(N){d!==null&&(d.fixedFoveation=N),u!==null&&u.fixedFoveation!==void 0&&(u.fixedFoveation=N)};let X=null;function j(N,I){if(h=I.getViewerPose(l||a),p=I,h!==null){const B=h.views;u!==null&&(e.setRenderTargetFramebuffer(g,u.framebuffer),e.setRenderTarget(g));let k=!1;B.length!==_.cameras.length&&(_.cameras.length=0,k=!0);for(let $=0;$<B.length;$++){const ne=B[$];let z=null;if(u!==null)z=u.getViewport(ne);else{const ie=c.getViewSubImage(d,ne);z=ie.viewport,$===0&&(e.setRenderTargetTextures(g,ie.colorTexture,d.ignoreDepthValues?void 0:ie.depthStencilTexture),e.setRenderTarget(g))}const oe=b[$];oe.matrix.fromArray(ne.transform.matrix),oe.projectionMatrix.fromArray(ne.projectionMatrix),oe.viewport.set(z.x,z.y,z.width,z.height),$===0&&_.matrix.copy(oe.matrix),k===!0&&_.cameras.push(oe)}}const V=r.inputSources;for(let B=0;B<v.length;B++){const k=V[B],$=y.get(k);$!==void 0&&$.update(k,I,l||a)}X&&X(N,I),p=null}const H=new gg;H.setAnimationLoop(j),this.setAnimationLoop=function(N){X=N},this.dispose=function(){}}}function AS(t,e){function n(f,g){f.fogColor.value.copy(g.color),g.isFog?(f.fogNear.value=g.near,f.fogFar.value=g.far):g.isFogExp2&&(f.fogDensity.value=g.density)}function i(f,g,v,y,w){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(f,g):g.isMeshToonMaterial?(r(f,g),c(f,g)):g.isMeshPhongMaterial?(r(f,g),h(f,g)):g.isMeshStandardMaterial?(r(f,g),d(f,g),g.isMeshPhysicalMaterial&&u(f,g,w)):g.isMeshMatcapMaterial?(r(f,g),p(f,g)):g.isMeshDepthMaterial?r(f,g):g.isMeshDistanceMaterial?(r(f,g),m(f,g)):g.isMeshNormalMaterial?r(f,g):g.isLineBasicMaterial?(s(f,g),g.isLineDashedMaterial&&a(f,g)):g.isPointsMaterial?o(f,g,v,y):g.isSpriteMaterial?l(f,g):g.isShadowMaterial?(f.color.value.copy(g.color),f.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(f,g){f.opacity.value=g.opacity,g.color&&f.diffuse.value.copy(g.color),g.emissive&&f.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(f.map.value=g.map),g.alphaMap&&(f.alphaMap.value=g.alphaMap),g.bumpMap&&(f.bumpMap.value=g.bumpMap,f.bumpScale.value=g.bumpScale,g.side===Fn&&(f.bumpScale.value*=-1)),g.displacementMap&&(f.displacementMap.value=g.displacementMap,f.displacementScale.value=g.displacementScale,f.displacementBias.value=g.displacementBias),g.emissiveMap&&(f.emissiveMap.value=g.emissiveMap),g.normalMap&&(f.normalMap.value=g.normalMap,f.normalScale.value.copy(g.normalScale),g.side===Fn&&f.normalScale.value.negate()),g.specularMap&&(f.specularMap.value=g.specularMap),g.alphaTest>0&&(f.alphaTest.value=g.alphaTest);const v=e.get(g).envMap;if(v&&(f.envMap.value=v,f.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=g.reflectivity,f.ior.value=g.ior,f.refractionRatio.value=g.refractionRatio),g.lightMap){f.lightMap.value=g.lightMap;const S=t.physicallyCorrectLights!==!0?Math.PI:1;f.lightMapIntensity.value=g.lightMapIntensity*S}g.aoMap&&(f.aoMap.value=g.aoMap,f.aoMapIntensity.value=g.aoMapIntensity);let y;g.map?y=g.map:g.specularMap?y=g.specularMap:g.displacementMap?y=g.displacementMap:g.normalMap?y=g.normalMap:g.bumpMap?y=g.bumpMap:g.roughnessMap?y=g.roughnessMap:g.metalnessMap?y=g.metalnessMap:g.alphaMap?y=g.alphaMap:g.emissiveMap?y=g.emissiveMap:g.clearcoatMap?y=g.clearcoatMap:g.clearcoatNormalMap?y=g.clearcoatNormalMap:g.clearcoatRoughnessMap?y=g.clearcoatRoughnessMap:g.specularIntensityMap?y=g.specularIntensityMap:g.specularColorMap?y=g.specularColorMap:g.transmissionMap?y=g.transmissionMap:g.thicknessMap?y=g.thicknessMap:g.sheenColorMap?y=g.sheenColorMap:g.sheenRoughnessMap&&(y=g.sheenRoughnessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),f.uvTransform.value.copy(y.matrix));let w;g.aoMap?w=g.aoMap:g.lightMap&&(w=g.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),f.uv2Transform.value.copy(w.matrix))}function s(f,g){f.diffuse.value.copy(g.color),f.opacity.value=g.opacity}function a(f,g){f.dashSize.value=g.dashSize,f.totalSize.value=g.dashSize+g.gapSize,f.scale.value=g.scale}function o(f,g,v,y){f.diffuse.value.copy(g.color),f.opacity.value=g.opacity,f.size.value=g.size*v,f.scale.value=y*.5,g.map&&(f.map.value=g.map),g.alphaMap&&(f.alphaMap.value=g.alphaMap),g.alphaTest>0&&(f.alphaTest.value=g.alphaTest);let w;g.map?w=g.map:g.alphaMap&&(w=g.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),f.uvTransform.value.copy(w.matrix))}function l(f,g){f.diffuse.value.copy(g.color),f.opacity.value=g.opacity,f.rotation.value=g.rotation,g.map&&(f.map.value=g.map),g.alphaMap&&(f.alphaMap.value=g.alphaMap),g.alphaTest>0&&(f.alphaTest.value=g.alphaTest);let v;g.map?v=g.map:g.alphaMap&&(v=g.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),f.uvTransform.value.copy(v.matrix))}function h(f,g){f.specular.value.copy(g.specular),f.shininess.value=Math.max(g.shininess,1e-4)}function c(f,g){g.gradientMap&&(f.gradientMap.value=g.gradientMap)}function d(f,g){f.roughness.value=g.roughness,f.metalness.value=g.metalness,g.roughnessMap&&(f.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(f.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(f.envMapIntensity.value=g.envMapIntensity)}function u(f,g,v){f.ior.value=g.ior,g.sheen>0&&(f.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),f.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(f.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(f.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(f.clearcoat.value=g.clearcoat,f.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(f.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),f.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===Fn&&f.clearcoatNormalScale.value.negate())),g.transmission>0&&(f.transmission.value=g.transmission,f.transmissionSamplerMap.value=v.texture,f.transmissionSamplerSize.value.set(v.width,v.height),g.transmissionMap&&(f.transmissionMap.value=g.transmissionMap),f.thickness.value=g.thickness,g.thicknessMap&&(f.thicknessMap.value=g.thicknessMap),f.attenuationDistance.value=g.attenuationDistance,f.attenuationColor.value.copy(g.attenuationColor)),f.specularIntensity.value=g.specularIntensity,f.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(f.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(f.specularColorMap.value=g.specularColorMap)}function p(f,g){g.matcap&&(f.matcap.value=g.matcap)}function m(f,g){f.referencePosition.value.copy(g.referencePosition),f.nearDistance.value=g.nearDistance,f.farDistance.value=g.farDistance}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function CS(){const t=Ka("canvas");return t.style.display="block",t}function wt(t={}){const e=t.canvas!==void 0?t.canvas:CS(),n=t.context!==void 0?t.context:null,i=t.depth!==void 0?t.depth:!0,r=t.stencil!==void 0?t.stencil:!0,s=t.antialias!==void 0?t.antialias:!1,a=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,o=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,l=t.powerPreference!==void 0?t.powerPreference:"default",h=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let c;n!==null?c=n.getContextAttributes().alpha:c=t.alpha!==void 0?t.alpha:!1;let d=null,u=null;const p=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=li,this.physicallyCorrectLights=!1,this.toneMapping=Hi,this.toneMappingExposure=1;const f=this;let g=!1,v=0,y=0,w=null,S=-1,b=null;const _=new at,E=new at;let x=null,A=e.width,M=e.height,C=1,F=null,W=null;const O=new at(0,0,A,M),Z=new at(0,0,A,M);let X=!1;const j=new Kl;let H=!1,N=!1,I=null;const V=new Re,B=new q,k=new T,$={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ne(){return w===null?C:1}let z=n;function oe(P,Y){for(let re=0;re<P.length;re++){const te=P[re],ue=e.getContext(te,Y);if(ue!==null)return ue}return null}try{const P={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Cu}`),e.addEventListener("webglcontextlost",U,!1),e.addEventListener("webglcontextrestored",we,!1),z===null){const Y=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&Y.shift(),z=oe(Y,P),z===null)throw oe(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let ie,le,K,pe,G,J,ee,se,ce,fe,ge,_e,Oe,Ne,D,L,he,me,Te,Ce,Be,R,ye;function Ee(){ie=new jw(z),le=new Uw(z,ie,t),ie.init(le),R=new MS(z,ie,le),K=new wS(z,ie,le),pe=new Jw,G=new uS,J=new SS(z,ie,K,G,le,R,pe),ee=new Vw(f),se=new Ww(f),ce=new lb(z,le),ye=new Bw(z,ie,ce,le),fe=new qw(z,ce,pe,ye),ge=new Kw(z,fe,ce,pe),Te=new Zw(z,le,J),L=new kw(G),_e=new cS(f,ee,se,ie,le,ye,L),Oe=new AS(f,G),Ne=new pS,D=new xS(ie,le),me=new zw(f,ee,K,ge,c,a),he=new Sg(f,ge,le),Ce=new Fw(z,ie,pe,le),Be=new Xw(z,ie,pe,le),pe.programs=_e.programs,f.capabilities=le,f.extensions=ie,f.properties=G,f.renderLists=Ne,f.shadowMap=he,f.state=K,f.info=pe}Ee();const xe=new ES(f,z);this.xr=xe,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const P=ie.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=ie.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(P){P!==void 0&&(C=P,this.setSize(A,M,!1))},this.getSize=function(P){return P.set(A,M)},this.setSize=function(P,Y,re){if(xe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=P,M=Y,e.width=Math.floor(P*C),e.height=Math.floor(Y*C),re!==!1&&(e.style.width=P+"px",e.style.height=Y+"px"),this.setViewport(0,0,P,Y)},this.getDrawingBufferSize=function(P){return P.set(A*C,M*C).floor()},this.setDrawingBufferSize=function(P,Y,re){A=P,M=Y,C=re,e.width=Math.floor(P*re),e.height=Math.floor(Y*re),this.setViewport(0,0,P,Y)},this.getCurrentViewport=function(P){return P.copy(_)},this.getViewport=function(P){return P.copy(O)},this.setViewport=function(P,Y,re,te){P.isVector4?O.set(P.x,P.y,P.z,P.w):O.set(P,Y,re,te),K.viewport(_.copy(O).multiplyScalar(C).floor())},this.getScissor=function(P){return P.copy(Z)},this.setScissor=function(P,Y,re,te){P.isVector4?Z.set(P.x,P.y,P.z,P.w):Z.set(P,Y,re,te),K.scissor(E.copy(Z).multiplyScalar(C).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(P){K.setScissorTest(X=P)},this.setOpaqueSort=function(P){F=P},this.setTransparentSort=function(P){W=P},this.getClearColor=function(P){return P.copy(me.getClearColor())},this.setClearColor=function(){me.setClearColor.apply(me,arguments)},this.getClearAlpha=function(){return me.getClearAlpha()},this.setClearAlpha=function(){me.setClearAlpha.apply(me,arguments)},this.clear=function(P=!0,Y=!0,re=!0){let te=0;P&&(te|=16384),Y&&(te|=256),re&&(te|=1024),z.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",U,!1),e.removeEventListener("webglcontextrestored",we,!1),Ne.dispose(),D.dispose(),G.dispose(),ee.dispose(),se.dispose(),ge.dispose(),ye.dispose(),_e.dispose(),xe.dispose(),xe.removeEventListener("sessionstart",Ue),xe.removeEventListener("sessionend",ht),I&&(I.dispose(),I=null),je.stop()};function U(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function we(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const P=pe.autoReset,Y=he.enabled,re=he.autoUpdate,te=he.needsUpdate,ue=he.type;Ee(),pe.autoReset=P,he.enabled=Y,he.autoUpdate=re,he.needsUpdate=te,he.type=ue}function be(P){const Y=P.target;Y.removeEventListener("dispose",be),We(Y)}function We(P){Le(P),G.remove(P)}function Le(P){const Y=G.get(P).programs;Y!==void 0&&(Y.forEach(function(re){_e.releaseProgram(re)}),P.isShaderMaterial&&_e.releaseShaderCache(P))}this.renderBufferDirect=function(P,Y,re,te,ue,ke){Y===null&&(Y=$);const $e=ue.isMesh&&ue.matrixWorld.determinant()<0,Ze=ct(P,Y,re,te,ue);K.setMaterial(te,$e);let it=re.index;const yt=re.attributes.position;if(it===null){if(yt===void 0||yt.count===0)return}else if(it.count===0)return;let ut=1;te.wireframe===!0&&(it=fe.getWireframeAttribute(re),ut=2),ye.setup(ue,te,Ze,re,it);let pt,Ot=Ce;it!==null&&(pt=ce.get(it),Ot=Be,Ot.setIndex(pt));const Sr=it!==null?it.count:yt.count,Qr=re.drawRange.start*ut,es=re.drawRange.count*ut,di=ke!==null?ke.start*ut:0,mt=ke!==null?ke.count*ut:1/0,ts=Math.max(Qr,di),Gt=Math.min(Sr,Qr+es,di+mt)-1,pi=Math.max(0,Gt-ts+1);if(pi!==0){if(ue.isMesh)te.wireframe===!0?(K.setLineWidth(te.wireframeLinewidth*ne()),Ot.setMode(1)):Ot.setMode(4);else if(ue.isLine){let $i=te.linewidth;$i===void 0&&($i=1),K.setLineWidth($i*ne()),ue.isLineSegments?Ot.setMode(1):ue.isLineLoop?Ot.setMode(2):Ot.setMode(3)}else ue.isPoints?Ot.setMode(0):ue.isSprite&&Ot.setMode(4);if(ue.isInstancedMesh)Ot.renderInstances(ts,pi,ue.count);else if(re.isInstancedBufferGeometry){const $i=Math.min(re.instanceCount,re._maxInstanceCount);Ot.renderInstances(ts,pi,$i)}else Ot.render(ts,pi)}},this.compile=function(P,Y){u=D.get(P),u.init(),m.push(u),P.traverseVisible(function(re){re.isLight&&re.layers.test(Y.layers)&&(u.pushLight(re),re.castShadow&&u.pushShadow(re))}),u.setupLights(f.physicallyCorrectLights),P.traverse(function(re){const te=re.material;if(te)if(Array.isArray(te))for(let ue=0;ue<te.length;ue++){const ke=te[ue];Qe(ke,P,re)}else Qe(te,P,re)}),m.pop(),u=null};let ze=null;function Se(P){ze&&ze(P)}function Ue(){je.stop()}function ht(){je.start()}const je=new gg;je.setAnimationLoop(Se),typeof self!="undefined"&&je.setContext(self),this.setAnimationLoop=function(P){ze=P,xe.setAnimationLoop(P),P===null?je.stop():je.start()},xe.addEventListener("sessionstart",Ue),xe.addEventListener("sessionend",ht),this.render=function(P,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;P.autoUpdate===!0&&P.updateMatrixWorld(),Y.parent===null&&Y.updateMatrixWorld(),xe.enabled===!0&&xe.isPresenting===!0&&(xe.cameraAutoUpdate===!0&&xe.updateCamera(Y),Y=xe.getCamera()),P.isScene===!0&&P.onBeforeRender(f,P,Y,w),u=D.get(P,m.length),u.init(),m.push(u),V.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),j.setFromProjectionMatrix(V),N=this.localClippingEnabled,H=L.init(this.clippingPlanes,N,Y),d=Ne.get(P,p.length),d.init(),p.push(d),rn(P,Y,0,f.sortObjects),d.finish(),f.sortObjects===!0&&d.sort(F,W),H===!0&&L.beginShadows();const re=u.state.shadowsArray;if(he.render(re,P,Y),H===!0&&L.endShadows(),this.info.autoReset===!0&&this.info.reset(),me.render(d,P),u.setupLights(f.physicallyCorrectLights),Y.isArrayCamera){const te=Y.cameras;for(let ue=0,ke=te.length;ue<ke;ue++){const $e=te[ue];dn(d,P,$e,$e.viewport)}}else dn(d,P,Y);w!==null&&(J.updateMultisampleRenderTarget(w),J.updateRenderTargetMipmap(w)),P.isScene===!0&&P.onAfterRender(f,P,Y),ye.resetDefaultState(),S=-1,b=null,m.pop(),m.length>0?u=m[m.length-1]:u=null,p.pop(),p.length>0?d=p[p.length-1]:d=null};function rn(P,Y,re,te){if(P.visible===!1)return;if(P.layers.test(Y.layers)){if(P.isGroup)re=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(Y);else if(P.isLight)u.pushLight(P),P.castShadow&&u.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||j.intersectsSprite(P)){te&&k.setFromMatrixPosition(P.matrixWorld).applyMatrix4(V);const $e=ge.update(P),Ze=P.material;Ze.visible&&d.push(P,$e,Ze,re,k.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==pe.render.frame&&(P.skeleton.update(),P.skeleton.frame=pe.render.frame),!P.frustumCulled||j.intersectsObject(P))){te&&k.setFromMatrixPosition(P.matrixWorld).applyMatrix4(V);const $e=ge.update(P),Ze=P.material;if(Array.isArray(Ze)){const it=$e.groups;for(let yt=0,ut=it.length;yt<ut;yt++){const pt=it[yt],Ot=Ze[pt.materialIndex];Ot&&Ot.visible&&d.push(P,$e,Ot,re,k.z,pt)}}else Ze.visible&&d.push(P,$e,Ze,re,k.z,null)}}const ke=P.children;for(let $e=0,Ze=ke.length;$e<Ze;$e++)rn(ke[$e],Y,re,te)}function dn(P,Y,re,te){const ue=P.opaque,ke=P.transmissive,$e=P.transparent;u.setupLightsView(re),ke.length>0&&Ht(ue,Y,re),te&&K.viewport(_.copy(te)),ue.length>0&&Ye(ue,Y,re),ke.length>0&&Ye(ke,Y,re),$e.length>0&&Ye($e,Y,re),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1)}function Ht(P,Y,re){const te=le.isWebGL2;I===null&&(I=new Sn(1,1,{generateMipmaps:!0,type:ie.has("EXT_color_buffer_half_float")?$a:Gr,minFilter:co,samples:te&&s===!0?4:0})),f.getDrawingBufferSize(B),te?I.setSize(B.x,B.y):I.setSize(Rl(B.x),Rl(B.y));const ue=f.getRenderTarget();f.setRenderTarget(I),f.clear();const ke=f.toneMapping;f.toneMapping=Hi,Ye(P,Y,re),f.toneMapping=ke,J.updateMultisampleRenderTarget(I),J.updateRenderTargetMipmap(I),f.setRenderTarget(ue)}function Ye(P,Y,re){const te=Y.isScene===!0?Y.overrideMaterial:null;for(let ue=0,ke=P.length;ue<ke;ue++){const $e=P[ue],Ze=$e.object,it=$e.geometry,yt=te===null?$e.material:te,ut=$e.group;Ze.layers.test(re.layers)&&nt(Ze,Y,re,it,yt,ut)}}function nt(P,Y,re,te,ue,ke){P.onBeforeRender(f,Y,re,te,ue,ke),P.modelViewMatrix.multiplyMatrices(re.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),ue.onBeforeRender(f,Y,re,te,P,ke),ue.transparent===!0&&ue.side===Pn?(ue.side=Fn,ue.needsUpdate=!0,f.renderBufferDirect(re,Y,te,ue,P,ke),ue.side=kr,ue.needsUpdate=!0,f.renderBufferDirect(re,Y,te,ue,P,ke),ue.side=Pn):f.renderBufferDirect(re,Y,te,ue,P,ke),P.onAfterRender(f,Y,re,te,ue,ke)}function Qe(P,Y,re){Y.isScene!==!0&&(Y=$);const te=G.get(P),ue=u.state.lights,ke=u.state.shadowsArray,$e=ue.state.version,Ze=_e.getParameters(P,ue.state,ke,Y,re),it=_e.getProgramCacheKey(Ze);let yt=te.programs;te.environment=P.isMeshStandardMaterial?Y.environment:null,te.fog=Y.fog,te.envMap=(P.isMeshStandardMaterial?se:ee).get(P.envMap||te.environment),yt===void 0&&(P.addEventListener("dispose",be),yt=new Map,te.programs=yt);let ut=yt.get(it);if(ut!==void 0){if(te.currentProgram===ut&&te.lightsStateVersion===$e)return et(P,Ze),ut}else Ze.uniforms=_e.getUniforms(P),P.onBuild(re,Ze,f),P.onBeforeCompile(Ze,f),ut=_e.acquireProgram(Ze,it),yt.set(it,ut),te.uniforms=Ze.uniforms;const pt=te.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(pt.clippingPlanes=L.uniform),et(P,Ze),te.needsLights=St(P),te.lightsStateVersion=$e,te.needsLights&&(pt.ambientLightColor.value=ue.state.ambient,pt.lightProbe.value=ue.state.probe,pt.directionalLights.value=ue.state.directional,pt.directionalLightShadows.value=ue.state.directionalShadow,pt.spotLights.value=ue.state.spot,pt.spotLightShadows.value=ue.state.spotShadow,pt.rectAreaLights.value=ue.state.rectArea,pt.ltc_1.value=ue.state.rectAreaLTC1,pt.ltc_2.value=ue.state.rectAreaLTC2,pt.pointLights.value=ue.state.point,pt.pointLightShadows.value=ue.state.pointShadow,pt.hemisphereLights.value=ue.state.hemi,pt.directionalShadowMap.value=ue.state.directionalShadowMap,pt.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,pt.spotShadowMap.value=ue.state.spotShadowMap,pt.spotShadowMatrix.value=ue.state.spotShadowMatrix,pt.pointShadowMap.value=ue.state.pointShadowMap,pt.pointShadowMatrix.value=ue.state.pointShadowMatrix);const Ot=ut.getUniforms(),Sr=dr.seqWithValue(Ot.seq,pt);return te.currentProgram=ut,te.uniformsList=Sr,ut}function et(P,Y){const re=G.get(P);re.outputEncoding=Y.outputEncoding,re.instancing=Y.instancing,re.skinning=Y.skinning,re.morphTargets=Y.morphTargets,re.morphNormals=Y.morphNormals,re.morphColors=Y.morphColors,re.morphTargetsCount=Y.morphTargetsCount,re.numClippingPlanes=Y.numClippingPlanes,re.numIntersection=Y.numClipIntersection,re.vertexAlphas=Y.vertexAlphas,re.vertexTangents=Y.vertexTangents,re.toneMapping=Y.toneMapping}function ct(P,Y,re,te,ue){Y.isScene!==!0&&(Y=$),J.resetTextureUnits();const ke=Y.fog,$e=te.isMeshStandardMaterial?Y.environment:null,Ze=w===null?f.outputEncoding:w.isXRRenderTarget===!0?w.texture.encoding:li,it=(te.isMeshStandardMaterial?se:ee).get(te.envMap||$e),yt=te.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,ut=!!te.normalMap&&!!re.attributes.tangent,pt=!!re.morphAttributes.position,Ot=!!re.morphAttributes.normal,Sr=!!re.morphAttributes.color,Qr=te.toneMapped?f.toneMapping:Hi,es=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,di=es!==void 0?es.length:0,mt=G.get(te),ts=u.state.lights;if(H===!0&&(N===!0||P!==b)){const fi=P===b&&te.id===S;L.setState(te,P,fi)}let Gt=!1;te.version===mt.__version?(mt.needsLights&&mt.lightsStateVersion!==ts.state.version||mt.outputEncoding!==Ze||ue.isInstancedMesh&&mt.instancing===!1||!ue.isInstancedMesh&&mt.instancing===!0||ue.isSkinnedMesh&&mt.skinning===!1||!ue.isSkinnedMesh&&mt.skinning===!0||mt.envMap!==it||te.fog===!0&&mt.fog!==ke||mt.numClippingPlanes!==void 0&&(mt.numClippingPlanes!==L.numPlanes||mt.numIntersection!==L.numIntersection)||mt.vertexAlphas!==yt||mt.vertexTangents!==ut||mt.morphTargets!==pt||mt.morphNormals!==Ot||mt.morphColors!==Sr||mt.toneMapping!==Qr||le.isWebGL2===!0&&mt.morphTargetsCount!==di)&&(Gt=!0):(Gt=!0,mt.__version=te.version);let pi=mt.currentProgram;Gt===!0&&(pi=Qe(te,Y,ue));let $i=!1,ga=!1,wh=!1;const pn=pi.getUniforms(),va=mt.uniforms;if(K.useProgram(pi.program)&&($i=!0,ga=!0,wh=!0),te.id!==S&&(S=te.id,ga=!0),$i||b!==P){if(pn.setValue(z,"projectionMatrix",P.projectionMatrix),le.logarithmicDepthBuffer&&pn.setValue(z,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),b!==P&&(b=P,ga=!0,wh=!0),te.isShaderMaterial||te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshStandardMaterial||te.envMap){const fi=pn.map.cameraPosition;fi!==void 0&&fi.setValue(z,k.setFromMatrixPosition(P.matrixWorld))}(te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshLambertMaterial||te.isMeshBasicMaterial||te.isMeshStandardMaterial||te.isShaderMaterial)&&pn.setValue(z,"isOrthographic",P.isOrthographicCamera===!0),(te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshLambertMaterial||te.isMeshBasicMaterial||te.isMeshStandardMaterial||te.isShaderMaterial||te.isShadowMaterial||ue.isSkinnedMesh)&&pn.setValue(z,"viewMatrix",P.matrixWorldInverse)}if(ue.isSkinnedMesh){pn.setOptional(z,ue,"bindMatrix"),pn.setOptional(z,ue,"bindMatrixInverse");const fi=ue.skeleton;fi&&(le.floatVertexTextures?(fi.boneTexture===null&&fi.computeBoneTexture(),pn.setValue(z,"boneTexture",fi.boneTexture,J),pn.setValue(z,"boneTextureSize",fi.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Sh=re.morphAttributes;return(Sh.position!==void 0||Sh.normal!==void 0||Sh.color!==void 0&&le.isWebGL2===!0)&&Te.update(ue,re,te,pi),(ga||mt.receiveShadow!==ue.receiveShadow)&&(mt.receiveShadow=ue.receiveShadow,pn.setValue(z,"receiveShadow",ue.receiveShadow)),ga&&(pn.setValue(z,"toneMappingExposure",f.toneMappingExposure),mt.needsLights&&vt(va,wh),ke&&te.fog===!0&&Oe.refreshFogUniforms(va,ke),Oe.refreshMaterialUniforms(va,te,C,M,I),dr.upload(z,mt.uniformsList,va,J)),te.isShaderMaterial&&te.uniformsNeedUpdate===!0&&(dr.upload(z,mt.uniformsList,va,J),te.uniformsNeedUpdate=!1),te.isSpriteMaterial&&pn.setValue(z,"center",ue.center),pn.setValue(z,"modelViewMatrix",ue.modelViewMatrix),pn.setValue(z,"normalMatrix",ue.normalMatrix),pn.setValue(z,"modelMatrix",ue.matrixWorld),pi}function vt(P,Y){P.ambientLightColor.needsUpdate=Y,P.lightProbe.needsUpdate=Y,P.directionalLights.needsUpdate=Y,P.directionalLightShadows.needsUpdate=Y,P.pointLights.needsUpdate=Y,P.pointLightShadows.needsUpdate=Y,P.spotLights.needsUpdate=Y,P.spotLightShadows.needsUpdate=Y,P.rectAreaLights.needsUpdate=Y,P.hemisphereLights.needsUpdate=Y}function St(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(P,Y,re){G.get(P.texture).__webglTexture=Y,G.get(P.depthTexture).__webglTexture=re;const te=G.get(P);te.__hasExternalTextures=!0,te.__hasExternalTextures&&(te.__autoAllocateDepthBuffer=re===void 0,te.__autoAllocateDepthBuffer||ie.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),te.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,Y){const re=G.get(P);re.__webglFramebuffer=Y,re.__useDefaultFramebuffer=Y===void 0},this.setRenderTarget=function(P,Y=0,re=0){w=P,v=Y,y=re;let te=!0;if(P){const it=G.get(P);it.__useDefaultFramebuffer!==void 0?(K.bindFramebuffer(36160,null),te=!1):it.__webglFramebuffer===void 0?J.setupRenderTarget(P):it.__hasExternalTextures&&J.rebindTextures(P,G.get(P.texture).__webglTexture,G.get(P.depthTexture).__webglTexture)}let ue=null,ke=!1,$e=!1;if(P){const it=P.texture;(it.isData3DTexture||it.isDataArrayTexture)&&($e=!0);const yt=G.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(ue=yt[Y],ke=!0):le.isWebGL2&&P.samples>0&&J.useMultisampledRTT(P)===!1?ue=G.get(P).__webglMultisampledFramebuffer:ue=yt,_.copy(P.viewport),E.copy(P.scissor),x=P.scissorTest}else _.copy(O).multiplyScalar(C).floor(),E.copy(Z).multiplyScalar(C).floor(),x=X;if(K.bindFramebuffer(36160,ue)&&le.drawBuffers&&te&&K.drawBuffers(P,ue),K.viewport(_),K.scissor(E),K.setScissorTest(x),ke){const it=G.get(P.texture);z.framebufferTexture2D(36160,36064,34069+Y,it.__webglTexture,re)}else if($e){const it=G.get(P.texture),yt=Y||0;z.framebufferTextureLayer(36160,36064,it.__webglTexture,re||0,yt)}S=-1},this.readRenderTargetPixels=function(P,Y,re,te,ue,ke,$e){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ze=G.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&$e!==void 0&&(Ze=Ze[$e]),Ze){K.bindFramebuffer(36160,Ze);try{const it=P.texture,yt=it.format,ut=it.type;if(yt!==ii&&R.convert(yt)!==z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const pt=ut===$a&&(ie.has("EXT_color_buffer_half_float")||le.isWebGL2&&ie.has("EXT_color_buffer_float"));if(ut!==Gr&&R.convert(ut)!==z.getParameter(35738)&&!(ut===Rr&&(le.isWebGL2||ie.has("OES_texture_float")||ie.has("WEBGL_color_buffer_float")))&&!pt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=P.width-te&&re>=0&&re<=P.height-ue&&z.readPixels(Y,re,te,ue,R.convert(yt),R.convert(ut),ke)}finally{const it=w!==null?G.get(w).__webglFramebuffer:null;K.bindFramebuffer(36160,it)}}},this.copyFramebufferToTexture=function(P,Y,re=0){if(Y.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const te=Math.pow(2,-re),ue=Math.floor(Y.image.width*te),ke=Math.floor(Y.image.height*te);J.setTexture2D(Y,0),z.copyTexSubImage2D(3553,re,0,0,P.x,P.y,ue,ke),K.unbindTexture()},this.copyTextureToTexture=function(P,Y,re,te=0){const ue=Y.image.width,ke=Y.image.height,$e=R.convert(re.format),Ze=R.convert(re.type);J.setTexture2D(re,0),z.pixelStorei(37440,re.flipY),z.pixelStorei(37441,re.premultiplyAlpha),z.pixelStorei(3317,re.unpackAlignment),Y.isDataTexture?z.texSubImage2D(3553,te,P.x,P.y,ue,ke,$e,Ze,Y.image.data):Y.isCompressedTexture?z.compressedTexSubImage2D(3553,te,P.x,P.y,Y.mipmaps[0].width,Y.mipmaps[0].height,$e,Y.mipmaps[0].data):z.texSubImage2D(3553,te,P.x,P.y,$e,Ze,Y.image),te===0&&re.generateMipmaps&&z.generateMipmap(3553),K.unbindTexture()},this.copyTextureToTexture3D=function(P,Y,re,te,ue=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ke=P.max.x-P.min.x+1,$e=P.max.y-P.min.y+1,Ze=P.max.z-P.min.z+1,it=R.convert(te.format),yt=R.convert(te.type);let ut;if(te.isData3DTexture)J.setTexture3D(te,0),ut=32879;else if(te.isDataArrayTexture)J.setTexture2DArray(te,0),ut=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(37440,te.flipY),z.pixelStorei(37441,te.premultiplyAlpha),z.pixelStorei(3317,te.unpackAlignment);const pt=z.getParameter(3314),Ot=z.getParameter(32878),Sr=z.getParameter(3316),Qr=z.getParameter(3315),es=z.getParameter(32877),di=re.isCompressedTexture?re.mipmaps[0]:re.image;z.pixelStorei(3314,di.width),z.pixelStorei(32878,di.height),z.pixelStorei(3316,P.min.x),z.pixelStorei(3315,P.min.y),z.pixelStorei(32877,P.min.z),re.isDataTexture||re.isData3DTexture?z.texSubImage3D(ut,ue,Y.x,Y.y,Y.z,ke,$e,Ze,it,yt,di.data):re.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),z.compressedTexSubImage3D(ut,ue,Y.x,Y.y,Y.z,ke,$e,Ze,it,di.data)):z.texSubImage3D(ut,ue,Y.x,Y.y,Y.z,ke,$e,Ze,it,yt,di),z.pixelStorei(3314,pt),z.pixelStorei(32878,Ot),z.pixelStorei(3316,Sr),z.pixelStorei(3315,Qr),z.pixelStorei(32877,es),ue===0&&te.generateMipmaps&&z.generateMipmap(ut),K.unbindTexture()},this.initTexture=function(P){J.setTexture2D(P,0),K.unbindTexture()},this.resetState=function(){v=0,y=0,w=null,K.reset(),ye.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}wt.prototype.isWebGLRenderer=!0;class LS extends wt{}LS.prototype.isWebGL1Renderer=!0;class th{constructor(e,n=1,i=1e3){this.name="",this.color=new Ae(e),this.near=n,this.far=i}clone(){return new th(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}th.prototype.isFog=!0;class nh extends ot{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}nh.prototype.isScene=!0;class ia{constructor(e,n){this.array=e,this.stride=n,this.count=e!==void 0?e.length/n:0,this.usage=Ya,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=si()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,n,i){e*=this.stride,i*=n.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=n.array[i+r];return this}set(e,n=0){return this.array.set(e,n),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(n,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ia.prototype.isInterleavedBuffer=!0;const fn=new T;class Wr{constructor(e,n,i,r=!1){this.name="",this.data=e,this.itemSize=n,this.offset=i,this.normalized=r===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let n=0,i=this.data.count;n<i;n++)fn.fromBufferAttribute(this,n),fn.applyMatrix4(e),this.setXYZ(n,fn.x,fn.y,fn.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)fn.fromBufferAttribute(this,n),fn.applyNormalMatrix(e),this.setXYZ(n,fn.x,fn.y,fn.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)fn.fromBufferAttribute(this,n),fn.transformDirection(e),this.setXYZ(n,fn.x,fn.y,fn.z);return this}setX(e,n){return this.data.array[e*this.data.stride+this.offset]=n,this}setY(e,n){return this.data.array[e*this.data.stride+this.offset+1]=n,this}setZ(e,n){return this.data.array[e*this.data.stride+this.offset+2]=n,this}setW(e,n){return this.data.array[e*this.data.stride+this.offset+3]=n,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this}setXYZ(e,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,n,i,r,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)n.push(this.data.array[r+s])}return new tt(new this.array.constructor(n),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Wr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)n.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Wr.prototype.isInterleavedBufferAttribute=!0;class Uu extends Kt{constructor(e){super(),this.type="SpriteMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}Uu.prototype.isSpriteMaterial=!0;let ys;const _a=new T,xs=new T,bs=new T,_s=new q,wa=new q,Tg=new Re,jo=new T,Sa=new T,qo=new T,Fp=new q,nc=new q,Up=new q;class PS extends ot{constructor(e){if(super(),this.type="Sprite",ys===void 0){ys=new Ve;const n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new ia(n,5);ys.setIndex([0,1,2,0,2,3]),ys.setAttribute("position",new Wr(i,3,0,!1)),ys.setAttribute("uv",new Wr(i,2,3,!1))}this.geometry=ys,this.material=e!==void 0?e:new Uu,this.center=new q(.5,.5)}raycast(e,n){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),xs.setFromMatrixScale(this.matrixWorld),Tg.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),bs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&xs.multiplyScalar(-bs.z);const i=this.material.rotation;let r,s;i!==0&&(s=Math.cos(i),r=Math.sin(i));const a=this.center;Xo(jo.set(-.5,-.5,0),bs,a,xs,r,s),Xo(Sa.set(.5,-.5,0),bs,a,xs,r,s),Xo(qo.set(.5,.5,0),bs,a,xs,r,s),Fp.set(0,0),nc.set(1,0),Up.set(1,1);let o=e.ray.intersectTriangle(jo,Sa,qo,!1,_a);if(o===null&&(Xo(Sa.set(-.5,.5,0),bs,a,xs,r,s),nc.set(0,1),o=e.ray.intersectTriangle(jo,qo,Sa,!1,_a),o===null))return;const l=e.ray.origin.distanceTo(_a);l<e.near||l>e.far||n.push({distance:l,point:_a.clone(),uv:Vt.getUV(_a,jo,Sa,qo,Fp,nc,Up,new q),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}PS.prototype.isSprite=!0;function Xo(t,e,n,i,r,s){_s.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?(wa.x=s*_s.x-r*_s.y,wa.y=r*_s.x+s*_s.y):wa.copy(_s),t.copy(e),t.x+=wa.x,t.y+=wa.y,t.applyMatrix4(Tg)}const kp=new T,Vp=new at,Hp=new at,DS=new T,Gp=new Re;class Eg extends ln{constructor(e,n){super(e,n),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Re,this.bindMatrixInverse=new Re}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,n){this.skeleton=e,n===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),n=this.matrixWorld),this.bindMatrix.copy(n),this.bindMatrixInverse.copy(n).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new at,n=this.geometry.attributes.skinWeight;for(let i=0,r=n.count;i<r;i++){e.fromBufferAttribute(n,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),n.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,n){const i=this.skeleton,r=this.geometry;Vp.fromBufferAttribute(r.attributes.skinIndex,e),Hp.fromBufferAttribute(r.attributes.skinWeight,e),kp.copy(n).applyMatrix4(this.bindMatrix),n.set(0,0,0);for(let s=0;s<4;s++){const a=Hp.getComponent(s);if(a!==0){const o=Vp.getComponent(s);Gp.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),n.addScaledVector(DS.copy(kp).applyMatrix4(Gp),a)}}return n.applyMatrix4(this.bindMatrixInverse)}}Eg.prototype.isSkinnedMesh=!0;class RS extends ot{constructor(){super(),this.type="Bone"}}RS.prototype.isBone=!0;class OS extends Rt{constructor(e=null,n=1,i=1,r,s,a,o,l,h=tn,c=tn,d,u){super(null,a,o,l,h,c,r,s,d,u),this.image={data:e,width:n,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}OS.prototype.isDataTexture=!0;class Ol extends tt{constructor(e,n,i,r=1){typeof i=="number"&&(r=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,n,i),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Ol.prototype.isInstancedBufferAttribute=!0;const Wp=new Re,jp=new Re,Jo=[],Ma=new ln;class IS extends ln{constructor(e,n,i){super(e,n),this.instanceMatrix=new Ol(new Float32Array(i*16),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,n){n.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,n){n.fromArray(this.instanceMatrix.array,e*16)}raycast(e,n){const i=this.matrixWorld,r=this.count;if(Ma.geometry=this.geometry,Ma.material=this.material,Ma.material!==void 0)for(let s=0;s<r;s++){this.getMatrixAt(s,Wp),jp.multiplyMatrices(i,Wp),Ma.matrixWorld=jp,Ma.raycast(e,Jo);for(let a=0,o=Jo.length;a<o;a++){const l=Jo[a];l.instanceId=s,l.object=this,n.push(l)}Jo.length=0}}setColorAt(e,n){this.instanceColor===null&&(this.instanceColor=new Ol(new Float32Array(this.instanceMatrix.count*3),3)),n.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,n){n.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}IS.prototype.isInstancedMesh=!0;class Hn extends Kt{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Ae(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}Hn.prototype.isLineBasicMaterial=!0;const qp=new T,Xp=new T,Jp=new Re,ic=new Jr,$o=new Un;class Qa extends ot{constructor(e=new Ve,n=new Hn){super(),this.type="Line",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const n=e.attributes.position,i=[0];for(let r=1,s=n.count;r<s;r++)qp.fromBufferAttribute(n,r-1),Xp.fromBufferAttribute(n,r),i[r]=i[r-1],i[r]+=qp.distanceTo(Xp);e.setAttribute("lineDistance",new Pe(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),$o.copy(i.boundingSphere),$o.applyMatrix4(r),$o.radius+=s,e.ray.intersectsSphere($o)===!1)return;Jp.copy(r).invert(),ic.copy(e.ray).applyMatrix4(Jp);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,h=new T,c=new T,d=new T,u=new T,p=this.isLineSegments?2:1;if(i.isBufferGeometry){const m=i.index,g=i.attributes.position;if(m!==null){const v=Math.max(0,a.start),y=Math.min(m.count,a.start+a.count);for(let w=v,S=y-1;w<S;w+=p){const b=m.getX(w),_=m.getX(w+1);if(h.fromBufferAttribute(g,b),c.fromBufferAttribute(g,_),ic.distanceSqToSegment(h,c,u,d)>l)continue;u.applyMatrix4(this.matrixWorld);const x=e.ray.origin.distanceTo(u);x<e.near||x>e.far||n.push({distance:x,point:d.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,a.start),y=Math.min(g.count,a.start+a.count);for(let w=v,S=y-1;w<S;w+=p){if(h.fromBufferAttribute(g,w),c.fromBufferAttribute(g,w+1),ic.distanceSqToSegment(h,c,u,d)>l)continue;u.applyMatrix4(this.matrixWorld);const _=e.ray.origin.distanceTo(u);_<e.near||_>e.far||n.push({distance:_,point:d.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Qa.prototype.isLine=!0;const $p=new T,Yp=new T;class xr extends Qa{constructor(e,n){super(e,n),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const n=e.attributes.position,i=[];for(let r=0,s=n.count;r<s;r+=2)$p.fromBufferAttribute(n,r),Yp.fromBufferAttribute(n,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+$p.distanceTo(Yp);e.setAttribute("lineDistance",new Pe(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}xr.prototype.isLineSegments=!0;class NS extends Qa{constructor(e,n){super(e,n),this.type="LineLoop"}}NS.prototype.isLineLoop=!0;class ku extends Kt{constructor(e){super(),this.type="PointsMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}ku.prototype.isPointsMaterial=!0;const Zp=new Re,kc=new Jr,Yo=new Un,Zo=new T;class zS extends ot{constructor(e=new Ve,n=new ku){super(),this.type="Points",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Yo.copy(i.boundingSphere),Yo.applyMatrix4(r),Yo.radius+=s,e.ray.intersectsSphere(Yo)===!1)return;Zp.copy(r).invert(),kc.copy(e.ray).applyMatrix4(Zp);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(i.isBufferGeometry){const h=i.index,d=i.attributes.position;if(h!==null){const u=Math.max(0,a.start),p=Math.min(h.count,a.start+a.count);for(let m=u,f=p;m<f;m++){const g=h.getX(m);Zo.fromBufferAttribute(d,g),Kp(Zo,g,l,r,e,n,this)}}else{const u=Math.max(0,a.start),p=Math.min(d.count,a.start+a.count);for(let m=u,f=p;m<f;m++)Zo.fromBufferAttribute(d,m),Kp(Zo,m,l,r,e,n,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}zS.prototype.isPoints=!0;function Kp(t,e,n,i,r,s,a){const o=kc.distanceSqToPoint(t);if(o<n){const l=new T;kc.closestPointToPoint(t,l),l.applyMatrix4(i);const h=r.ray.origin.distanceTo(l);if(h<r.near||h>r.far)return;s.push({distance:h,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class Ag extends Rt{constructor(e,n,i,r,s,a,o,l,h){super(e,n,i,r,s,a,o,l,h),this.minFilter=a!==void 0?a:mn,this.magFilter=s!==void 0?s:mn,this.generateMipmaps=!1;const c=this;function d(){c.needsUpdate=!0,e.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(d)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Ag.prototype.isVideoTexture=!0;class BS extends Rt{constructor(e,n,i){super({width:e,height:n}),this.format=i,this.magFilter=tn,this.minFilter=tn,this.generateMipmaps=!1,this.needsUpdate=!0}}BS.prototype.isFramebufferTexture=!0;class FS extends Rt{constructor(e,n,i,r,s,a,o,l,h,c,d,u){super(null,a,o,l,h,c,r,s,d,u),this.image={width:n,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}FS.prototype.isCompressedTexture=!0;class US extends Rt{constructor(e,n,i,r,s,a,o,l,h){super(e,n,i,r,s,a,o,l,h),this.needsUpdate=!0}}US.prototype.isCanvasTexture=!0;class Vn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,n){const i=this.getUtoTmapping(e);return this.getPoint(i,n)}getPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return n}getSpacedPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPointAt(i/e));return n}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,r=this.getPoint(0),s=0;n.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),s+=i.distanceTo(r),n.push(s),r=i;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,n){const i=this.getLengths();let r=0;const s=i.length;let a;n?a=n:a=e*i[s-1];let o=0,l=s-1,h;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),h=i[r]-a,h<0)o=r+1;else if(h>0)l=r-1;else{l=r;break}if(r=l,i[r]===a)return r/(s-1);const c=i[r],u=i[r+1]-c,p=(a-c)/u;return(r+p)/(s-1)}getTangent(e,n){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const a=this.getPoint(r),o=this.getPoint(s),l=n||(a.isVector2?new q:new T);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,n){const i=this.getUtoTmapping(e);return this.getTangent(i,n)}computeFrenetFrames(e,n){const i=new T,r=[],s=[],a=[],o=new T,l=new Re;for(let p=0;p<=e;p++){const m=p/e;r[p]=this.getTangentAt(m,new T)}s[0]=new T,a[0]=new T;let h=Number.MAX_VALUE;const c=Math.abs(r[0].x),d=Math.abs(r[0].y),u=Math.abs(r[0].z);c<=h&&(h=c,i.set(1,0,0)),d<=h&&(h=d,i.set(0,1,0)),u<=h&&i.set(0,0,1),o.crossVectors(r[0],i).normalize(),s[0].crossVectors(r[0],o),a[0].crossVectors(r[0],s[0]);for(let p=1;p<=e;p++){if(s[p]=s[p-1].clone(),a[p]=a[p-1].clone(),o.crossVectors(r[p-1],r[p]),o.length()>Number.EPSILON){o.normalize();const m=Math.acos(Jt(r[p-1].dot(r[p]),-1,1));s[p].applyMatrix4(l.makeRotationAxis(o,m))}a[p].crossVectors(r[p],s[p])}if(n===!0){let p=Math.acos(Jt(s[0].dot(s[e]),-1,1));p/=e,r[0].dot(o.crossVectors(s[0],s[e]))>0&&(p=-p);for(let m=1;m<=e;m++)s[m].applyMatrix4(l.makeRotationAxis(r[m],p*m)),a[m].crossVectors(r[m],s[m])}return{tangents:r,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class fo extends Vn{constructor(e=0,n=0,i=1,r=1,s=0,a=Math.PI*2,o=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=n,this.xRadius=i,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,n){const i=n||new q,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(a?s=0:s=r),this.aClockwise===!0&&!a&&(s===r?s=-r:s=s-r);const o=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(o),h=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),u=l-this.aX,p=h-this.aY;l=u*c-p*d+this.aX,h=u*d+p*c+this.aY}return i.set(l,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}fo.prototype.isEllipseCurve=!0;class Cg extends fo{constructor(e,n,i,r,s,a){super(e,n,i,i,r,s,a),this.type="ArcCurve"}}Cg.prototype.isArcCurve=!0;function Vu(){let t=0,e=0,n=0,i=0;function r(s,a,o,l){t=s,e=o,n=-3*s+3*a-2*o-l,i=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,h){r(a,o,h*(o-s),h*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,h,c,d){let u=(a-s)/h-(o-s)/(h+c)+(o-a)/c,p=(o-a)/c-(l-a)/(c+d)+(l-o)/d;u*=c,p*=c,r(a,o,u,p)},calc:function(s){const a=s*s,o=a*s;return t+e*s+n*a+i*o}}}const Ko=new T,rc=new Vu,sc=new Vu,ac=new Vu;class Lg extends Vn{constructor(e=[],n=!1,i="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=n,this.curveType=i,this.tension=r}getPoint(e,n=new T){const i=n,r=this.points,s=r.length,a=(s-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:l===0&&o===s-1&&(o=s-2,l=1);let h,c;this.closed||o>0?h=r[(o-1)%s]:(Ko.subVectors(r[0],r[1]).add(r[0]),h=Ko);const d=r[o%s],u=r[(o+1)%s];if(this.closed||o+2<s?c=r[(o+2)%s]:(Ko.subVectors(r[s-1],r[s-2]).add(r[s-1]),c=Ko),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let m=Math.pow(h.distanceToSquared(d),p),f=Math.pow(d.distanceToSquared(u),p),g=Math.pow(u.distanceToSquared(c),p);f<1e-4&&(f=1),m<1e-4&&(m=f),g<1e-4&&(g=f),rc.initNonuniformCatmullRom(h.x,d.x,u.x,c.x,m,f,g),sc.initNonuniformCatmullRom(h.y,d.y,u.y,c.y,m,f,g),ac.initNonuniformCatmullRom(h.z,d.z,u.z,c.z,m,f,g)}else this.curveType==="catmullrom"&&(rc.initCatmullRom(h.x,d.x,u.x,c.x,this.tension),sc.initCatmullRom(h.y,d.y,u.y,c.y,this.tension),ac.initCatmullRom(h.z,d.z,u.z,c.z,this.tension));return i.set(rc.calc(l),sc.calc(l),ac.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new T().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}Lg.prototype.isCatmullRomCurve3=!0;function Qp(t,e,n,i,r){const s=(i-e)*.5,a=(r-n)*.5,o=t*t,l=t*o;return(2*n-2*i+s+a)*l+(-3*n+3*i-2*s-a)*o+s*t+n}function kS(t,e){const n=1-t;return n*n*e}function VS(t,e){return 2*(1-t)*t*e}function HS(t,e){return t*t*e}function Ha(t,e,n,i){return kS(t,e)+VS(t,n)+HS(t,i)}function GS(t,e){const n=1-t;return n*n*n*e}function WS(t,e){const n=1-t;return 3*n*n*t*e}function jS(t,e){return 3*(1-t)*t*t*e}function qS(t,e){return t*t*t*e}function Ga(t,e,n,i,r){return GS(t,e)+WS(t,n)+jS(t,i)+qS(t,r)}class ri extends Vn{constructor(e=new q,n=new q,i=new q,r=new q){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new q){const i=n,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Ga(e,r.x,s.x,a.x,o.x),Ga(e,r.y,s.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ri.prototype.isCubicBezierCurve=!0;class Pg extends Vn{constructor(e=new T,n=new T,i=new T,r=new T){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new T){const i=n,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Ga(e,r.x,s.x,a.x,o.x),Ga(e,r.y,s.y,a.y,o.y),Ga(e,r.z,s.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Pg.prototype.isCubicBezierCurve3=!0;class ai extends Vn{constructor(e=new q,n=new q){super(),this.type="LineCurve",this.v1=e,this.v2=n}getPoint(e,n=new q){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n){const i=n||new q;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ai.prototype.isLineCurve=!0;class Dg extends Vn{constructor(e=new T,n=new T){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=n}getPoint(e,n=new T){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class gr extends Vn{constructor(e=new q,n=new q,i=new q){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new q){const i=n,r=this.v0,s=this.v1,a=this.v2;return i.set(Ha(e,r.x,s.x,a.x),Ha(e,r.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}gr.prototype.isQuadraticBezierCurve=!0;class Rg extends Vn{constructor(e=new T,n=new T,i=new T){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new T){const i=n,r=this.v0,s=this.v1,a=this.v2;return i.set(Ha(e,r.x,s.x,a.x),Ha(e,r.y,s.y,a.y),Ha(e,r.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Rg.prototype.isQuadraticBezierCurve3=!0;class ih extends Vn{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,n=new q){const i=n,r=this.points,s=(r.length-1)*e,a=Math.floor(s),o=s-a,l=r[a===0?a:a-1],h=r[a],c=r[a>r.length-2?r.length-1:a+1],d=r[a>r.length-3?r.length-1:a+2];return i.set(Qp(o,l.x,h.x,c.x,d.x),Qp(o,l.y,h.y,c.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new q().fromArray(r))}return this}}ih.prototype.isSplineCurve=!0;var Og=Object.freeze({__proto__:null,ArcCurve:Cg,CatmullRomCurve3:Lg,CubicBezierCurve:ri,CubicBezierCurve3:Pg,EllipseCurve:fo,LineCurve:ai,LineCurve3:Dg,QuadraticBezierCurve:gr,QuadraticBezierCurve3:Rg,SplineCurve:ih});class XS extends Vn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),n=this.curves[this.curves.length-1].getPoint(1);e.equals(n)||this.curves.push(new ai(n,e))}getPoint(e,n){const i=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=i){const a=r[s]-i,o=this.curves[s],l=o.getLength(),h=l===0?0:1-a/l;return o.getPointAt(h,n)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let n=0;for(let i=0,r=this.curves.length;i<r;i++)n+=this.curves[i].getLength(),e.push(n);return this.cacheLengths=e,e}getSpacedPoints(e=40){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return this.autoClose&&n.push(n[0]),n}getPoints(e=12){const n=[];let i;for(let r=0,s=this.curves;r<s.length;r++){const a=s[r],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let h=0;h<l.length;h++){const c=l[h];i&&i.equals(c)||(n.push(c),i=c)}}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(e){super.copy(e),this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let n=0,i=this.curves.length;n<i;n++){const r=this.curves[n];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(new Og[r.type]().fromJSON(r))}return this}}class Il extends XS{constructor(e){super(),this.type="Path",this.currentPoint=new q,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let n=1,i=e.length;n<i;n++)this.lineTo(e[n].x,e[n].y);return this}moveTo(e,n){return this.currentPoint.set(e,n),this}lineTo(e,n){const i=new ai(this.currentPoint.clone(),new q(e,n));return this.curves.push(i),this.currentPoint.set(e,n),this}quadraticCurveTo(e,n,i,r){const s=new gr(this.currentPoint.clone(),new q(e,n),new q(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}bezierCurveTo(e,n,i,r,s,a){const o=new ri(this.currentPoint.clone(),new q(e,n),new q(i,r),new q(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const n=[this.currentPoint.clone()].concat(e),i=new ih(n);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,n,i,r,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,n+l,i,r,s,a),this}absarc(e,n,i,r,s,a){return this.absellipse(e,n,i,i,r,s,a),this}ellipse(e,n,i,r,s,a,o,l){const h=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+h,n+c,i,r,s,a,o,l),this}absellipse(e,n,i,r,s,a,o,l){const h=new fo(e,n,i,r,s,a,o,l);if(this.curves.length>0){const d=h.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(h);const c=h.getPoint(1);return this.currentPoint.copy(c),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Hu extends Ve{constructor(e=[new q(0,.5),new q(.5,0),new q(0,-.5)],n=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:n,phiStart:i,phiLength:r},n=Math.floor(n),r=Jt(r,0,Math.PI*2);const s=[],a=[],o=[],l=[],h=[],c=1/n,d=new T,u=new q,p=new T,m=new T,f=new T;let g=0,v=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:g=e[y+1].x-e[y].x,v=e[y+1].y-e[y].y,p.x=v*1,p.y=-g,p.z=v*0,f.copy(p),p.normalize(),l.push(p.x,p.y,p.z);break;case e.length-1:l.push(f.x,f.y,f.z);break;default:g=e[y+1].x-e[y].x,v=e[y+1].y-e[y].y,p.x=v*1,p.y=-g,p.z=v*0,m.copy(p),p.x+=f.x,p.y+=f.y,p.z+=f.z,p.normalize(),l.push(p.x,p.y,p.z),f.copy(m)}for(let y=0;y<=n;y++){const w=i+y*c*r,S=Math.sin(w),b=Math.cos(w);for(let _=0;_<=e.length-1;_++){d.x=e[_].x*S,d.y=e[_].y,d.z=e[_].x*b,a.push(d.x,d.y,d.z),u.x=y/n,u.y=_/(e.length-1),o.push(u.x,u.y);const E=l[3*_+0]*S,x=l[3*_+1],A=l[3*_+0]*b;h.push(E,x,A)}}for(let y=0;y<n;y++)for(let w=0;w<e.length-1;w++){const S=w+y*e.length,b=S,_=S+e.length,E=S+e.length+1,x=S+1;s.push(b,_,x),s.push(E,x,_)}this.setIndex(s),this.setAttribute("position",new Pe(a,3)),this.setAttribute("uv",new Pe(o,2)),this.setAttribute("normal",new Pe(h,3))}static fromJSON(e){return new Hu(e.points,e.segments,e.phiStart,e.phiLength)}}class rh extends Ve{constructor(e=1,n=1,i=1,r=8,s=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const h=this;r=Math.floor(r),s=Math.floor(s);const c=[],d=[],u=[],p=[];let m=0;const f=[],g=i/2;let v=0;y(),a===!1&&(e>0&&w(!0),n>0&&w(!1)),this.setIndex(c),this.setAttribute("position",new Pe(d,3)),this.setAttribute("normal",new Pe(u,3)),this.setAttribute("uv",new Pe(p,2));function y(){const S=new T,b=new T;let _=0;const E=(n-e)/i;for(let x=0;x<=s;x++){const A=[],M=x/s,C=M*(n-e)+e;for(let F=0;F<=r;F++){const W=F/r,O=W*l+o,Z=Math.sin(O),X=Math.cos(O);b.x=C*Z,b.y=-M*i+g,b.z=C*X,d.push(b.x,b.y,b.z),S.set(Z,E,X).normalize(),u.push(S.x,S.y,S.z),p.push(W,1-M),A.push(m++)}f.push(A)}for(let x=0;x<r;x++)for(let A=0;A<s;A++){const M=f[A][x],C=f[A+1][x],F=f[A+1][x+1],W=f[A][x+1];c.push(M,C,W),c.push(C,F,W),_+=6}h.addGroup(v,_,0),v+=_}function w(S){const b=m,_=new q,E=new T;let x=0;const A=S===!0?e:n,M=S===!0?1:-1;for(let F=1;F<=r;F++)d.push(0,g*M,0),u.push(0,M,0),p.push(.5,.5),m++;const C=m;for(let F=0;F<=r;F++){const O=F/r*l+o,Z=Math.cos(O),X=Math.sin(O);E.x=A*X,E.y=g*M,E.z=A*Z,d.push(E.x,E.y,E.z),u.push(0,M,0),_.x=Z*.5+.5,_.y=X*.5*M+.5,p.push(_.x,_.y),m++}for(let F=0;F<r;F++){const W=b+F,O=C+F;S===!0?c.push(O,O+1,W):c.push(O+1,O,W),x+=3}h.addGroup(v,x,S===!0?1:2),v+=x}}static fromJSON(e){return new rh(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Gu extends rh{constructor(e=1,n=1,i=8,r=1,s=!1,a=0,o=Math.PI*2){super(0,e,n,i,r,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Gu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class sh extends Ve{constructor(e=[],n=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:n,radius:i,detail:r};const s=[],a=[];o(r),h(i),c(),this.setAttribute("position",new Pe(s,3)),this.setAttribute("normal",new Pe(s.slice(),3)),this.setAttribute("uv",new Pe(a,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const w=new T,S=new T,b=new T;for(let _=0;_<n.length;_+=3)p(n[_+0],w),p(n[_+1],S),p(n[_+2],b),l(w,S,b,y)}function l(y,w,S,b){const _=b+1,E=[];for(let x=0;x<=_;x++){E[x]=[];const A=y.clone().lerp(S,x/_),M=w.clone().lerp(S,x/_),C=_-x;for(let F=0;F<=C;F++)F===0&&x===_?E[x][F]=A:E[x][F]=A.clone().lerp(M,F/C)}for(let x=0;x<_;x++)for(let A=0;A<2*(_-x)-1;A++){const M=Math.floor(A/2);A%2===0?(u(E[x][M+1]),u(E[x+1][M]),u(E[x][M])):(u(E[x][M+1]),u(E[x+1][M+1]),u(E[x+1][M]))}}function h(y){const w=new T;for(let S=0;S<s.length;S+=3)w.x=s[S+0],w.y=s[S+1],w.z=s[S+2],w.normalize().multiplyScalar(y),s[S+0]=w.x,s[S+1]=w.y,s[S+2]=w.z}function c(){const y=new T;for(let w=0;w<s.length;w+=3){y.x=s[w+0],y.y=s[w+1],y.z=s[w+2];const S=g(y)/2/Math.PI+.5,b=v(y)/Math.PI+.5;a.push(S,1-b)}m(),d()}function d(){for(let y=0;y<a.length;y+=6){const w=a[y+0],S=a[y+2],b=a[y+4],_=Math.max(w,S,b),E=Math.min(w,S,b);_>.9&&E<.1&&(w<.2&&(a[y+0]+=1),S<.2&&(a[y+2]+=1),b<.2&&(a[y+4]+=1))}}function u(y){s.push(y.x,y.y,y.z)}function p(y,w){const S=y*3;w.x=e[S+0],w.y=e[S+1],w.z=e[S+2]}function m(){const y=new T,w=new T,S=new T,b=new T,_=new q,E=new q,x=new q;for(let A=0,M=0;A<s.length;A+=9,M+=6){y.set(s[A+0],s[A+1],s[A+2]),w.set(s[A+3],s[A+4],s[A+5]),S.set(s[A+6],s[A+7],s[A+8]),_.set(a[M+0],a[M+1]),E.set(a[M+2],a[M+3]),x.set(a[M+4],a[M+5]),b.copy(y).add(w).add(S).divideScalar(3);const C=g(b);f(_,M+0,y,C),f(E,M+2,w,C),f(x,M+4,S,C)}}function f(y,w,S,b){b<0&&y.x===1&&(a[w]=y.x-1),S.x===0&&S.z===0&&(a[w]=b/2/Math.PI+.5)}function g(y){return Math.atan2(y.z,-y.x)}function v(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}static fromJSON(e){return new sh(e.vertices,e.indices,e.radius,e.details)}}class Wu extends sh{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,n),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new Wu(e.radius,e.detail)}}new T;new T;new T;new Vt;class oi extends Il{constructor(e){super(e),this.uuid=si(),this.type="Shape",this.holes=[]}getPointsHoles(e){const n=[];for(let i=0,r=this.holes.length;i<r;i++)n[i]=this.holes[i].getPoints(e);return n}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let n=0,i=this.holes.length;n<i;n++){const r=this.holes[n];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(new Il().fromJSON(r))}return this}}const JS={triangulate:function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let s=Ig(t,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,h,c,d,u,p;if(i&&(s=QS(t,e,s,n)),t.length>80*n){o=h=t[0],l=c=t[1];for(let m=n;m<r;m+=n)d=t[m],u=t[m+1],d<o&&(o=d),u<l&&(l=u),d>h&&(h=d),u>c&&(c=u);p=Math.max(h-o,c-l),p=p!==0?1/p:0}return eo(s,a,n,o,l,p),a}};function Ig(t,e,n,i,r){let s,a;if(r===cM(t,e,n,i)>0)for(s=e;s<n;s+=i)a=ef(s,t[s],t[s+1],a);else for(s=n-i;s>=e;s-=i)a=ef(s,t[s],t[s+1],a);return a&&ah(a,a.next)&&(no(a),a=a.next),a}function vr(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(ah(n,n.next)||Pt(n.prev,n,n.next)===0)){if(no(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function eo(t,e,n,i,r,s,a){if(!t)return;!a&&s&&rM(t,i,r,s);let o=t,l,h;for(;t.prev!==t.next;){if(l=t.prev,h=t.next,s?YS(t,i,r,s):$S(t)){e.push(l.i/n),e.push(t.i/n),e.push(h.i/n),no(t),t=h.next,o=h.next;continue}if(t=h,t===o){a?a===1?(t=ZS(vr(t),e,n),eo(t,e,n,i,r,s,2)):a===2&&KS(t,e,n,i,r,s):eo(vr(t),e,n,i,r,s,1);break}}}function $S(t){const e=t.prev,n=t,i=t.next;if(Pt(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Ns(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Pt(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function YS(t,e,n,i){const r=t.prev,s=t,a=t.next;if(Pt(r,s,a)>=0)return!1;const o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,h=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,c=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,d=Vc(o,l,e,n,i),u=Vc(h,c,e,n,i);let p=t.prevZ,m=t.nextZ;for(;p&&p.z>=d&&m&&m.z<=u;){if(p!==t.prev&&p!==t.next&&Ns(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Pt(p.prev,p,p.next)>=0||(p=p.prevZ,m!==t.prev&&m!==t.next&&Ns(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&Pt(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;p&&p.z>=d;){if(p!==t.prev&&p!==t.next&&Ns(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&Pt(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=u;){if(m!==t.prev&&m!==t.next&&Ns(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&Pt(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function ZS(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!ah(r,s)&&Ng(r,i,i.next,s)&&to(r,s)&&to(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),no(i),no(i.next),i=t=s),i=i.next}while(i!==t);return vr(i)}function KS(t,e,n,i,r,s){let a=t;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&oM(a,o)){let l=zg(a,o);a=vr(a,a.next),l=vr(l,l.next),eo(a,e,n,i,r,s),eo(l,e,n,i,r,s);return}o=o.next}a=a.next}while(a!==t)}function QS(t,e,n,i){const r=[];let s,a,o,l,h;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:t.length,h=Ig(t,o,l,i,!1),h===h.next&&(h.steiner=!0),r.push(aM(h));for(r.sort(eM),s=0;s<r.length;s++)tM(r[s],n),n=vr(n,n.next);return n}function eM(t,e){return t.x-e.x}function tM(t,e){if(e=nM(t,e),e){const n=zg(e,t);vr(e,e.next),vr(n,n.next)}}function nM(t,e){let n=e;const i=t.x,r=t.y;let s=-1/0,a;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const u=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(u<=i&&u>s){if(s=u,u===i){if(r===n.y)return n;if(r===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(i===s)return a;const o=a,l=a.x,h=a.y;let c=1/0,d;n=a;do i>=n.x&&n.x>=l&&i!==n.x&&Ns(r<h?i:s,r,l,h,r<h?s:i,r,n.x,n.y)&&(d=Math.abs(r-n.y)/(i-n.x),to(n,t)&&(d<c||d===c&&(n.x>a.x||n.x===a.x&&iM(a,n)))&&(a=n,c=d)),n=n.next;while(n!==o);return a}function iM(t,e){return Pt(t.prev,t,e.prev)<0&&Pt(e.next,t,t.next)<0}function rM(t,e,n,i){let r=t;do r.z===null&&(r.z=Vc(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,sM(r)}function sM(t){let e,n,i,r,s,a,o,l,h=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,i=n,o=0,e=0;e<h&&(o++,i=i.nextZ,!!i);e++);for(l=h;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,h*=2}while(a>1);return t}function Vc(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function aM(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function Ns(t,e,n,i,r,s,a,o){return(r-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(i-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(r-a)*(i-o)>=0}function oM(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!lM(t,e)&&(to(t,e)&&to(e,t)&&hM(t,e)&&(Pt(t.prev,t,e.prev)||Pt(t,e.prev,e))||ah(t,e)&&Pt(t.prev,t,t.next)>0&&Pt(e.prev,e,e.next)>0)}function Pt(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function ah(t,e){return t.x===e.x&&t.y===e.y}function Ng(t,e,n,i){const r=el(Pt(t,e,n)),s=el(Pt(t,e,i)),a=el(Pt(n,i,t)),o=el(Pt(n,i,e));return!!(r!==s&&a!==o||r===0&&Qo(t,n,e)||s===0&&Qo(t,i,e)||a===0&&Qo(n,t,i)||o===0&&Qo(n,e,i))}function Qo(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function el(t){return t>0?1:t<0?-1:0}function lM(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ng(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function to(t,e){return Pt(t.prev,t,t.next)<0?Pt(t,e,t.next)>=0&&Pt(t,t.prev,e)>=0:Pt(t,e,t.prev)<0||Pt(t,t.next,e)<0}function hM(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function zg(t,e){const n=new Hc(t.i,t.x,t.y),i=new Hc(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function ef(t,e,n,i){const r=new Hc(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function no(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Hc(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function cM(t,e,n,i){let r=0;for(let s=e,a=n-i;s<n;s+=i)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}class Gi{static area(e){const n=e.length;let i=0;for(let r=n-1,s=0;s<n;r=s++)i+=e[r].x*e[s].y-e[s].x*e[r].y;return i*.5}static isClockWise(e){return Gi.area(e)<0}static triangulateShape(e,n){const i=[],r=[],s=[];tf(e),nf(i,e);let a=e.length;n.forEach(tf);for(let l=0;l<n.length;l++)r.push(a),a+=n[l].length,nf(i,n[l]);const o=JS.triangulate(i,r);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function tf(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function nf(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class ra extends Ve{constructor(e=new oi([new q(.5,.5),new q(-.5,.5),new q(-.5,-.5),new q(.5,-.5)]),n={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let o=0,l=e.length;o<l;o++){const h=e[o];a(h)}this.setAttribute("position",new Pe(r,3)),this.setAttribute("uv",new Pe(s,2)),this.computeVertexNormals();function a(o){const l=[],h=n.curveSegments!==void 0?n.curveSegments:12,c=n.steps!==void 0?n.steps:1;let d=n.depth!==void 0?n.depth:1,u=n.bevelEnabled!==void 0?n.bevelEnabled:!0,p=n.bevelThickness!==void 0?n.bevelThickness:.2,m=n.bevelSize!==void 0?n.bevelSize:p-.1,f=n.bevelOffset!==void 0?n.bevelOffset:0,g=n.bevelSegments!==void 0?n.bevelSegments:3;const v=n.extrudePath,y=n.UVGenerator!==void 0?n.UVGenerator:uM;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=n.amount);let w,S=!1,b,_,E,x;v&&(w=v.getSpacedPoints(c),S=!0,u=!1,b=v.computeFrenetFrames(c,!1),_=new T,E=new T,x=new T),u||(g=0,p=0,m=0,f=0);const A=o.extractPoints(h);let M=A.shape;const C=A.holes;if(!Gi.isClockWise(M)){M=M.reverse();for(let G=0,J=C.length;G<J;G++){const ee=C[G];Gi.isClockWise(ee)&&(C[G]=ee.reverse())}}const W=Gi.triangulateShape(M,C),O=M;for(let G=0,J=C.length;G<J;G++){const ee=C[G];M=M.concat(ee)}function Z(G,J,ee){return J||console.error("THREE.ExtrudeGeometry: vec does not exist"),J.clone().multiplyScalar(ee).add(G)}const X=M.length,j=W.length;function H(G,J,ee){let se,ce,fe;const ge=G.x-J.x,_e=G.y-J.y,Oe=ee.x-G.x,Ne=ee.y-G.y,D=ge*ge+_e*_e,L=ge*Ne-_e*Oe;if(Math.abs(L)>Number.EPSILON){const he=Math.sqrt(D),me=Math.sqrt(Oe*Oe+Ne*Ne),Te=J.x-_e/he,Ce=J.y+ge/he,Be=ee.x-Ne/me,R=ee.y+Oe/me,ye=((Be-Te)*Ne-(R-Ce)*Oe)/(ge*Ne-_e*Oe);se=Te+ge*ye-G.x,ce=Ce+_e*ye-G.y;const Ee=se*se+ce*ce;if(Ee<=2)return new q(se,ce);fe=Math.sqrt(Ee/2)}else{let he=!1;ge>Number.EPSILON?Oe>Number.EPSILON&&(he=!0):ge<-Number.EPSILON?Oe<-Number.EPSILON&&(he=!0):Math.sign(_e)===Math.sign(Ne)&&(he=!0),he?(se=-_e,ce=ge,fe=Math.sqrt(D)):(se=ge,ce=_e,fe=Math.sqrt(D/2))}return new q(se/fe,ce/fe)}const N=[];for(let G=0,J=O.length,ee=J-1,se=G+1;G<J;G++,ee++,se++)ee===J&&(ee=0),se===J&&(se=0),N[G]=H(O[G],O[ee],O[se]);const I=[];let V,B=N.concat();for(let G=0,J=C.length;G<J;G++){const ee=C[G];V=[];for(let se=0,ce=ee.length,fe=ce-1,ge=se+1;se<ce;se++,fe++,ge++)fe===ce&&(fe=0),ge===ce&&(ge=0),V[se]=H(ee[se],ee[fe],ee[ge]);I.push(V),B=B.concat(V)}for(let G=0;G<g;G++){const J=G/g,ee=p*Math.cos(J*Math.PI/2),se=m*Math.sin(J*Math.PI/2)+f;for(let ce=0,fe=O.length;ce<fe;ce++){const ge=Z(O[ce],N[ce],se);oe(ge.x,ge.y,-ee)}for(let ce=0,fe=C.length;ce<fe;ce++){const ge=C[ce];V=I[ce];for(let _e=0,Oe=ge.length;_e<Oe;_e++){const Ne=Z(ge[_e],V[_e],se);oe(Ne.x,Ne.y,-ee)}}}const k=m+f;for(let G=0;G<X;G++){const J=u?Z(M[G],B[G],k):M[G];S?(E.copy(b.normals[0]).multiplyScalar(J.x),_.copy(b.binormals[0]).multiplyScalar(J.y),x.copy(w[0]).add(E).add(_),oe(x.x,x.y,x.z)):oe(J.x,J.y,0)}for(let G=1;G<=c;G++)for(let J=0;J<X;J++){const ee=u?Z(M[J],B[J],k):M[J];S?(E.copy(b.normals[G]).multiplyScalar(ee.x),_.copy(b.binormals[G]).multiplyScalar(ee.y),x.copy(w[G]).add(E).add(_),oe(x.x,x.y,x.z)):oe(ee.x,ee.y,d/c*G)}for(let G=g-1;G>=0;G--){const J=G/g,ee=p*Math.cos(J*Math.PI/2),se=m*Math.sin(J*Math.PI/2)+f;for(let ce=0,fe=O.length;ce<fe;ce++){const ge=Z(O[ce],N[ce],se);oe(ge.x,ge.y,d+ee)}for(let ce=0,fe=C.length;ce<fe;ce++){const ge=C[ce];V=I[ce];for(let _e=0,Oe=ge.length;_e<Oe;_e++){const Ne=Z(ge[_e],V[_e],se);S?oe(Ne.x,Ne.y+w[c-1].y,w[c-1].x+ee):oe(Ne.x,Ne.y,d+ee)}}}$(),ne();function $(){const G=r.length/3;if(u){let J=0,ee=X*J;for(let se=0;se<j;se++){const ce=W[se];ie(ce[2]+ee,ce[1]+ee,ce[0]+ee)}J=c+g*2,ee=X*J;for(let se=0;se<j;se++){const ce=W[se];ie(ce[0]+ee,ce[1]+ee,ce[2]+ee)}}else{for(let J=0;J<j;J++){const ee=W[J];ie(ee[2],ee[1],ee[0])}for(let J=0;J<j;J++){const ee=W[J];ie(ee[0]+X*c,ee[1]+X*c,ee[2]+X*c)}}i.addGroup(G,r.length/3-G,0)}function ne(){const G=r.length/3;let J=0;z(O,J),J+=O.length;for(let ee=0,se=C.length;ee<se;ee++){const ce=C[ee];z(ce,J),J+=ce.length}i.addGroup(G,r.length/3-G,1)}function z(G,J){let ee=G.length;for(;--ee>=0;){const se=ee;let ce=ee-1;ce<0&&(ce=G.length-1);for(let fe=0,ge=c+g*2;fe<ge;fe++){const _e=X*fe,Oe=X*(fe+1),Ne=J+se+_e,D=J+ce+_e,L=J+ce+Oe,he=J+se+Oe;le(Ne,D,L,he)}}}function oe(G,J,ee){l.push(G),l.push(J),l.push(ee)}function ie(G,J,ee){K(G),K(J),K(ee);const se=r.length/3,ce=y.generateTopUV(i,r,se-3,se-2,se-1);pe(ce[0]),pe(ce[1]),pe(ce[2])}function le(G,J,ee,se){K(G),K(J),K(se),K(J),K(ee),K(se);const ce=r.length/3,fe=y.generateSideWallUV(i,r,ce-6,ce-3,ce-2,ce-1);pe(fe[0]),pe(fe[1]),pe(fe[3]),pe(fe[1]),pe(fe[2]),pe(fe[3])}function K(G){r.push(l[G*3+0]),r.push(l[G*3+1]),r.push(l[G*3+2])}function pe(G){s.push(G.x),s.push(G.y)}}}toJSON(){const e=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return dM(n,i,e)}static fromJSON(e,n){const i=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=n[e.shapes[s]];i.push(o)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new Og[r.type]().fromJSON(r)),new ra(i,e.options)}}const uM={generateTopUV:function(t,e,n,i,r){const s=e[n*3],a=e[n*3+1],o=e[i*3],l=e[i*3+1],h=e[r*3],c=e[r*3+1];return[new q(s,a),new q(o,l),new q(h,c)]},generateSideWallUV:function(t,e,n,i,r,s){const a=e[n*3],o=e[n*3+1],l=e[n*3+2],h=e[i*3],c=e[i*3+1],d=e[i*3+2],u=e[r*3],p=e[r*3+1],m=e[r*3+2],f=e[s*3],g=e[s*3+1],v=e[s*3+2];return Math.abs(o-c)<Math.abs(a-h)?[new q(a,1-l),new q(h,1-d),new q(u,1-m),new q(f,1-v)]:[new q(o,1-l),new q(c,1-d),new q(p,1-m),new q(g,1-v)]}};function dM(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const s=t[i];n.shapes.push(s.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class ju extends sh{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,n),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new ju(e.radius,e.detail)}}class oh extends Ve{constructor(e=new oi([new q(0,.5),new q(-.5,-.5),new q(.5,-.5)]),n=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:n};const i=[],r=[],s=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)h(e);else for(let c=0;c<e.length;c++)h(e[c]),this.addGroup(o,l,c),o+=l,l=0;this.setIndex(i),this.setAttribute("position",new Pe(r,3)),this.setAttribute("normal",new Pe(s,3)),this.setAttribute("uv",new Pe(a,2));function h(c){const d=r.length/3,u=c.extractPoints(n);let p=u.shape;const m=u.holes;Gi.isClockWise(p)===!1&&(p=p.reverse());for(let g=0,v=m.length;g<v;g++){const y=m[g];Gi.isClockWise(y)===!0&&(m[g]=y.reverse())}const f=Gi.triangulateShape(p,m);for(let g=0,v=m.length;g<v;g++){const y=m[g];p=p.concat(y)}for(let g=0,v=p.length;g<v;g++){const y=p[g];r.push(y.x,y.y,0),s.push(0,0,1),a.push(y.x,y.y)}for(let g=0,v=f.length;g<v;g++){const y=f[g],w=y[0]+d,S=y[1]+d,b=y[2]+d;i.push(w,S,b),l+=3}}}toJSON(){const e=super.toJSON(),n=this.parameters.shapes;return pM(n,e)}static fromJSON(e,n){const i=[];for(let r=0,s=e.shapes.length;r<s;r++){const a=n[e.shapes[r]];i.push(a)}return new oh(i,e.curveSegments)}}function pM(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class lh extends Ve{constructor(e=1,n=32,i=16,r=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:a,thetaLength:o},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const l=Math.min(a+o,Math.PI);let h=0;const c=[],d=new T,u=new T,p=[],m=[],f=[],g=[];for(let v=0;v<=i;v++){const y=[],w=v/i;let S=0;v==0&&a==0?S=.5/n:v==i&&l==Math.PI&&(S=-.5/n);for(let b=0;b<=n;b++){const _=b/n;d.x=-e*Math.cos(r+_*s)*Math.sin(a+w*o),d.y=e*Math.cos(a+w*o),d.z=e*Math.sin(r+_*s)*Math.sin(a+w*o),m.push(d.x,d.y,d.z),u.copy(d).normalize(),f.push(u.x,u.y,u.z),g.push(_+S,1-w),y.push(h++)}c.push(y)}for(let v=0;v<i;v++)for(let y=0;y<n;y++){const w=c[v][y+1],S=c[v][y],b=c[v+1][y],_=c[v+1][y+1];(v!==0||a>0)&&p.push(w,S,_),(v!==i-1||l<Math.PI)&&p.push(S,b,_)}this.setIndex(p),this.setAttribute("position",new Pe(m,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(g,2))}static fromJSON(e){return new lh(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class qu extends Ve{constructor(e=1,n=.4,i=64,r=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:a},i=Math.floor(i),r=Math.floor(r);const o=[],l=[],h=[],c=[],d=new T,u=new T,p=new T,m=new T,f=new T,g=new T,v=new T;for(let w=0;w<=i;++w){const S=w/i*s*Math.PI*2;y(S,s,a,e,p),y(S+.01,s,a,e,m),g.subVectors(m,p),v.addVectors(m,p),f.crossVectors(g,v),v.crossVectors(f,g),f.normalize(),v.normalize();for(let b=0;b<=r;++b){const _=b/r*Math.PI*2,E=-n*Math.cos(_),x=n*Math.sin(_);d.x=p.x+(E*v.x+x*f.x),d.y=p.y+(E*v.y+x*f.y),d.z=p.z+(E*v.z+x*f.z),l.push(d.x,d.y,d.z),u.subVectors(d,p).normalize(),h.push(u.x,u.y,u.z),c.push(w/i),c.push(b/r)}}for(let w=1;w<=i;w++)for(let S=1;S<=r;S++){const b=(r+1)*(w-1)+(S-1),_=(r+1)*w+(S-1),E=(r+1)*w+S,x=(r+1)*(w-1)+S;o.push(b,_,x),o.push(_,E,x)}this.setIndex(o),this.setAttribute("position",new Pe(l,3)),this.setAttribute("normal",new Pe(h,3)),this.setAttribute("uv",new Pe(c,2));function y(w,S,b,_,E){const x=Math.cos(w),A=Math.sin(w),M=b/S*w,C=Math.cos(M);E.x=_*(2+C)*.5*x,E.y=_*(2+C)*A*.5,E.z=_*Math.sin(M)*.5}}static fromJSON(e){return new qu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Bg extends Kt{constructor(e){super(),this.type="ShadowMaterial",this.color=new Ae(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}Bg.prototype.isShadowMaterial=!0;class Fg extends kn{constructor(e){super(e),this.type="RawShaderMaterial"}}Fg.prototype.isRawShaderMaterial=!0;class Xu extends Kt{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qs,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}Xu.prototype.isMeshStandardMaterial=!0;class Ug extends Xu{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(n){this.ior=(1+.4*n)/(1-.4*n)}}),this.sheenColor=new Ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ae(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Ug.prototype.isMeshPhysicalMaterial=!0;class kg extends Kt{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Ae(16777215),this.specular=new Ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qs,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}kg.prototype.isMeshPhongMaterial=!0;class Vg extends Kt{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qs,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Vg.prototype.isMeshToonMaterial=!0;class Hg extends Kt{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qs,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Hg.prototype.isMeshNormalMaterial=!0;class Gg extends Kt{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Gg.prototype.isMeshLambertMaterial=!0;class Wg extends Kt{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qs,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}Wg.prototype.isMeshMatcapMaterial=!0;class jg extends Hn{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}jg.prototype.isLineDashedMaterial=!0;const fM={ShadowMaterial:Bg,SpriteMaterial:Uu,RawShaderMaterial:Fg,ShaderMaterial:kn,PointsMaterial:ku,MeshPhysicalMaterial:Ug,MeshStandardMaterial:Xu,MeshPhongMaterial:kg,MeshToonMaterial:Vg,MeshNormalMaterial:Hg,MeshLambertMaterial:Gg,MeshDepthMaterial:zu,MeshDistanceMaterial:Bu,MeshBasicMaterial:mr,MeshMatcapMaterial:Wg,LineDashedMaterial:jg,LineBasicMaterial:Hn,Material:Kt};Kt.fromType=function(t){return new fM[t]};const Lt={arraySlice:function(t,e,n){return Lt.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(r,s){return t[r]-t[s]}const n=t.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,a=0;a!==i;++s){const o=n[s]*e;for(let l=0;l!==e;++l)r[a++]=t[o+l]}return r},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;s!==void 0&&s[i]===void 0;)s=t[r++];if(s===void 0)return;let a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),n.push.apply(n,a)),s=t[r++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),n.push(a)),s=t[r++];while(s!==void 0)},subclip:function(t,e,n,i,r=30){const s=t.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const h=s.tracks[l],c=h.getValueSize(),d=[],u=[];for(let p=0;p<h.times.length;++p){const m=h.times[p]*r;if(!(m<n||m>=i)){d.push(h.times[p]);for(let f=0;f<c;++f)u.push(h.values[p*c+f])}}d.length!==0&&(h.times=Lt.convertArray(d,h.times.constructor),h.values=Lt.convertArray(u,h.values.constructor),a.push(h))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let a=0;a<r;++a){const o=n.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const h=t.tracks.find(function(v){return v.name===o.name&&v.ValueTypeName===l});if(h===void 0)continue;let c=0;const d=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=d/3);let u=0;const p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=p/3);const m=o.times.length-1;let f;if(s<=o.times[0]){const v=c,y=d-c;f=Lt.arraySlice(o.values,v,y)}else if(s>=o.times[m]){const v=m*d+c,y=v+d-c;f=Lt.arraySlice(o.values,v,y)}else{const v=o.createInterpolant(),y=c,w=d-c;v.evaluate(s),f=Lt.arraySlice(v.resultBuffer,y,w)}l==="quaternion"&&new nn().fromArray(f).normalize().conjugate().toArray(f);const g=h.times.length;for(let v=0;v<g;++v){const y=v*p+u;if(l==="quaternion")nn.multiplyQuaternionsFlat(h.values,y,f,0,h.values,y);else{const w=p-u*2;for(let S=0;S<w;++S)h.values[y+S]-=f[S]}}}return t.blendMode=cg,t}};class yr{constructor(e,n,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new n.constructor(i),this.sampleValues=n,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const n=this.parameterPositions;let i=this._cachedIndex,r=n[i],s=n[i-1];e:{t:{let a;n:{i:if(!(e<r)){for(let o=i+2;;){if(r===void 0){if(e<s)break i;return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,e,s)}if(i===o)break;if(s=r,r=n[++i],e<r)break t}a=n.length;break n}if(!(e>=s)){const o=n[1];e<o&&(i=2,s=o);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(i===l)break;if(r=s,s=n[--i-1],e>=s)break t}a=i,i=0;break n}break e}for(;i<a;){const o=i+a>>>1;e<n[o]?a=o:i=o+1}if(r=n[i],s=n[i-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===void 0)return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,s,e)}this._cachedIndex=i,this.intervalChanged_(i,s,r)}return this.interpolate_(i,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const n=this.resultBuffer,i=this.sampleValues,r=this.valueSize,s=e*r;for(let a=0;a!==r;++a)n[a]=i[s+a];return n}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}yr.prototype.beforeStart_=yr.prototype.copySampleValue_;yr.prototype.afterEnd_=yr.prototype.copySampleValue_;class mM extends yr{constructor(e,n,i,r){super(e,n,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ds,endingEnd:Ds}}intervalChanged_(e,n,i){const r=this.parameterPositions;let s=e-2,a=e+1,o=r[s],l=r[a];if(o===void 0)switch(this.getSettings_().endingStart){case Rs:s=e,o=2*n-i;break;case Pl:s=r.length-2,o=n+r[s]-r[s+1];break;default:s=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Rs:a=e,l=2*i-n;break;case Pl:a=1,l=i+r[1]-r[0];break;default:a=e-1,l=n}const h=(i-n)*.5,c=this.valueSize;this._weightPrev=h/(n-o),this._weightNext=h/(l-i),this._offsetPrev=s*c,this._offsetNext=a*c}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,c=this._offsetPrev,d=this._offsetNext,u=this._weightPrev,p=this._weightNext,m=(i-n)/(r-n),f=m*m,g=f*m,v=-u*g+2*u*f-u*m,y=(1+u)*g+(-1.5-2*u)*f+(-.5+u)*m+1,w=(-1-p)*g+(1.5+p)*f+.5*m,S=p*g-p*f;for(let b=0;b!==o;++b)s[b]=v*a[c+b]+y*a[h+b]+w*a[l+b]+S*a[d+b];return s}}class qg extends yr{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,c=(i-n)/(r-n),d=1-c;for(let u=0;u!==o;++u)s[u]=a[h+u]*d+a[l+u]*c;return s}}class gM extends yr{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Pi{constructor(e,n,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(n===void 0||n.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Lt.convertArray(n,this.TimeBufferType),this.values=Lt.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const n=e.constructor;let i;if(n.toJSON!==this.toJSON)i=n.toJSON(e);else{i={name:e.name,times:Lt.convertArray(e.times,Array),values:Lt.convertArray(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new gM(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new qg(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new mM(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let n;switch(e){case Cl:n=this.InterpolantFactoryMethodDiscrete;break;case Ll:n=this.InterpolantFactoryMethodLinear;break;case Ch:n=this.InterpolantFactoryMethodSmooth;break}if(n===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=n,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Cl;case this.InterpolantFactoryMethodLinear:return Ll;case this.InterpolantFactoryMethodSmooth:return Ch}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]+=e}return this}scale(e){if(e!==1){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]*=e}return this}trim(e,n){const i=this.times,r=i.length;let s=0,a=r-1;for(;s!==r&&i[s]<e;)++s;for(;a!==-1&&i[a]>n;)--a;if(++a,s!==0||a!==r){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=Lt.arraySlice(i,s,a),this.values=Lt.arraySlice(this.values,s*o,a*o)}return this}validate(){let e=!0;const n=this.getValueSize();n-Math.floor(n)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(r!==void 0&&Lt.isTypedArray(r))for(let o=0,l=r.length;o!==l;++o){const h=r[o];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,h),e=!1;break}}return e}optimize(){const e=Lt.arraySlice(this.times),n=Lt.arraySlice(this.values),i=this.getValueSize(),r=this.getInterpolation()===Ch,s=e.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const h=e[o],c=e[o+1];if(h!==c&&(o!==1||h!==e[0]))if(r)l=!0;else{const d=o*i,u=d-i,p=d+i;for(let m=0;m!==i;++m){const f=n[d+m];if(f!==n[u+m]||f!==n[p+m]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const d=o*i,u=a*i;for(let p=0;p!==i;++p)n[u+p]=n[d+p]}++a}}if(s>0){e[a]=e[s];for(let o=s*i,l=a*i,h=0;h!==i;++h)n[l+h]=n[o+h];++a}return a!==e.length?(this.times=Lt.arraySlice(e,0,a),this.values=Lt.arraySlice(n,0,a*i)):(this.times=e,this.values=n),this}clone(){const e=Lt.arraySlice(this.times,0),n=Lt.arraySlice(this.values,0),i=this.constructor,r=new i(this.name,e,n);return r.createInterpolant=this.createInterpolant,r}}Pi.prototype.TimeBufferType=Float32Array;Pi.prototype.ValueBufferType=Float32Array;Pi.prototype.DefaultInterpolation=Ll;class sa extends Pi{}sa.prototype.ValueTypeName="bool";sa.prototype.ValueBufferType=Array;sa.prototype.DefaultInterpolation=Cl;sa.prototype.InterpolantFactoryMethodLinear=void 0;sa.prototype.InterpolantFactoryMethodSmooth=void 0;class Xg extends Pi{}Xg.prototype.ValueTypeName="color";class Nl extends Pi{}Nl.prototype.ValueTypeName="number";class vM extends yr{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(i-n)/(r-n);let h=e*o;for(let c=h+o;h!==c;h+=4)nn.slerpFlat(s,0,a,h-o,a,h,l);return s}}class mo extends Pi{InterpolantFactoryMethodLinear(e){return new vM(this.times,this.values,this.getValueSize(),e)}}mo.prototype.ValueTypeName="quaternion";mo.prototype.DefaultInterpolation=Ll;mo.prototype.InterpolantFactoryMethodSmooth=void 0;class aa extends Pi{}aa.prototype.ValueTypeName="string";aa.prototype.ValueBufferType=Array;aa.prototype.DefaultInterpolation=Cl;aa.prototype.InterpolantFactoryMethodLinear=void 0;aa.prototype.InterpolantFactoryMethodSmooth=void 0;class zl extends Pi{}zl.prototype.ValueTypeName="vector";class rf{constructor(e,n=-1,i,r=Pu){this.name=e,this.tracks=i,this.duration=n,this.blendMode=r,this.uuid=si(),this.duration<0&&this.resetDuration()}static parse(e){const n=[],i=e.tracks,r=1/(e.fps||1);for(let a=0,o=i.length;a!==o;++a)n.push(xM(i[a]).scale(r));const s=new this(e.name,e.duration,n,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const n=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=i.length;s!==a;++s)n.push(Pi.toJSON(i[s]));return r}static CreateFromMorphTargetSequence(e,n,i,r){const s=n.length,a=[];for(let o=0;o<s;o++){let l=[],h=[];l.push((o+s-1)%s,o,(o+1)%s),h.push(0,1,0);const c=Lt.getKeyframeOrder(l);l=Lt.sortedArray(l,1,c),h=Lt.sortedArray(h,1,c),!r&&l[0]===0&&(l.push(s),h.push(h[0])),a.push(new Nl(".morphTargetInfluences["+n[o].name+"]",l,h).scale(1/i))}return new this(e,-1,a)}static findByName(e,n){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===n)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,n,i){const r={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const h=e[o],c=h.name.match(s);if(c&&c.length>1){const d=c[1];let u=r[d];u||(r[d]=u=[]),u.push(h)}}const a=[];for(const o in r)a.push(this.CreateFromMorphTargetSequence(o,r[o],n,i));return a}static parseAnimation(e,n){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(d,u,p,m,f){if(p.length!==0){const g=[],v=[];Lt.flattenJSON(p,g,v,m),g.length!==0&&f.push(new d(u,g,v))}},r=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const h=e.hierarchy||[];for(let d=0;d<h.length;d++){const u=h[d].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const p={};let m;for(m=0;m<u.length;m++)if(u[m].morphTargets)for(let f=0;f<u[m].morphTargets.length;f++)p[u[m].morphTargets[f]]=-1;for(const f in p){const g=[],v=[];for(let y=0;y!==u[m].morphTargets.length;++y){const w=u[m];g.push(w.time),v.push(w.morphTarget===f?1:0)}r.push(new Nl(".morphTargetInfluence["+f+"]",g,v))}l=p.length*a}else{const p=".bones["+n[d].name+"]";i(zl,p+".position",u,"pos",r),i(mo,p+".quaternion",u,"rot",r),i(zl,p+".scale",u,"scl",r)}}return r.length===0?null:new this(s,l,r,o)}resetDuration(){const e=this.tracks;let n=0;for(let i=0,r=e.length;i!==r;++i){const s=this.tracks[i];n=Math.max(n,s.times[s.times.length-1])}return this.duration=n,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let n=0;n<this.tracks.length;n++)e=e&&this.tracks[n].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function yM(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Nl;case"vector":case"vector2":case"vector3":case"vector4":return zl;case"color":return Xg;case"quaternion":return mo;case"bool":case"boolean":return sa;case"string":return aa}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function xM(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=yM(t.type);if(t.times===void 0){const n=[],i=[];Lt.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const js={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class bM{constructor(e,n,i){const r=this;let s=!1,a=0,o=0,l;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.itemStart=function(c){o++,s===!1&&r.onStart!==void 0&&r.onStart(c,a,o),s=!0},this.itemEnd=function(c){a++,r.onProgress!==void 0&&r.onProgress(c,a,o),a===o&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(c){r.onError!==void 0&&r.onError(c)},this.resolveURL=function(c){return l?l(c):c},this.setURLModifier=function(c){return l=c,this},this.addHandler=function(c,d){return h.push(c,d),this},this.removeHandler=function(c){const d=h.indexOf(c);return d!==-1&&h.splice(d,2),this},this.getHandler=function(c){for(let d=0,u=h.length;d<u;d+=2){const p=h[d],m=h[d+1];if(p.global&&(p.lastIndex=0),p.test(c))return m}return null}}}const _M=new bM;class Gn{constructor(e){this.manager=e!==void 0?e:_M,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(r,s){i.load(e,r,n,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Bi={};class qs extends Gn{constructor(e){super(e)}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=js.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{n&&n(s),this.manager.itemEnd(e)},0),s;if(Bi[e]!==void 0){Bi[e].push({onLoad:n,onProgress:i,onError:r});return}Bi[e]=[],Bi[e].push({onLoad:n,onProgress:i,onError:r});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||h.body===void 0||h.body.getReader===void 0)return h;const c=Bi[e],d=h.body.getReader(),u=h.headers.get("Content-Length"),p=u?parseInt(u):0,m=p!==0;let f=0;const g=new ReadableStream({start(v){y();function y(){d.read().then(({done:w,value:S})=>{if(w)v.close();else{f+=S.byteLength;const b=new ProgressEvent("progress",{lengthComputable:m,loaded:f,total:p});for(let _=0,E=c.length;_<E;_++){const x=c[_];x.onProgress&&x.onProgress(b)}v.enqueue(S),y()}})}}});return new Response(g)}else throw Error(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`)}).then(h=>{switch(l){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(c=>new DOMParser().parseFromString(c,o));case"json":return h.json();default:if(o===void 0)return h.text();{const d=/charset="?([^;"\s]*)"?/i.exec(o),u=d&&d[1]?d[1].toLowerCase():void 0,p=new TextDecoder(u);return h.arrayBuffer().then(m=>p.decode(m))}}}).then(h=>{js.add(e,h);const c=Bi[e];delete Bi[e];for(let d=0,u=c.length;d<u;d++){const p=c[d];p.onLoad&&p.onLoad(h)}}).catch(h=>{const c=Bi[e];if(c===void 0)throw this.manager.itemError(e),h;delete Bi[e];for(let d=0,u=c.length;d<u;d++){const p=c[d];p.onError&&p.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Jg extends Gn{constructor(e){super(e)}load(e,n,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=js.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){n&&n(a),s.manager.itemEnd(e)},0),a;const o=Ka("img");function l(){c(),js.add(e,this),n&&n(this),s.manager.itemEnd(e)}function h(d){c(),r&&r(d),s.manager.itemError(e),s.manager.itemEnd(e)}function c(){o.removeEventListener("load",l,!1),o.removeEventListener("error",h,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class wM extends Gn{constructor(e){super(e)}load(e,n,i,r){const s=new uo,a=new Jg(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(h){a.load(e[h],function(c){s.images[h]=c,o++,o===6&&(s.needsUpdate=!0,n&&n(s))},void 0,r)}for(let h=0;h<e.length;++h)l(h);return s}}class SM extends Gn{constructor(e){super(e)}load(e,n,i,r){const s=new Rt,a=new Jg(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,n!==void 0&&n(s)},i,r),s}}class hi extends ot{constructor(e,n=1){super(),this.type="Light",this.color=new Ae(e),this.intensity=n}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}}hi.prototype.isLight=!0;class Bl extends hi{constructor(e,n,i){super(e,i),this.type="HemisphereLight",this.position.copy(ot.DefaultUp),this.updateMatrix(),this.groundColor=new Ae(n)}copy(e){return hi.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Bl.prototype.isHemisphereLight=!0;const sf=new Re,af=new T,of=new T;class Ju{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new q(512,512),this.map=null,this.mapPass=null,this.matrix=new Re,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Kl,this._frameExtents=new q(1,1),this._viewportCount=1,this._viewports=[new at(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;af.setFromMatrixPosition(e.matrixWorld),n.position.copy(af),of.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(of),n.updateMatrixWorld(),sf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sf),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(n.projectionMatrix),i.multiply(n.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class $g extends Ju{constructor(){super(new un(50,1,.5,500)),this.focus=1}updateMatrices(e){const n=this.camera,i=Za*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||n.far;(i!==n.fov||r!==n.aspect||s!==n.far)&&(n.fov=i,n.aspect=r,n.far=s,n.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}$g.prototype.isSpotLightShadow=!0;class Yg extends hi{constructor(e,n,i=0,r=Math.PI/3,s=0,a=1){super(e,n),this.type="SpotLight",this.position.copy(ot.DefaultUp),this.updateMatrix(),this.target=new ot,this.distance=i,this.angle=r,this.penumbra=s,this.decay=a,this.shadow=new $g}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Yg.prototype.isSpotLight=!0;const lf=new Re,Ta=new T,oc=new T;class Zg extends Ju{constructor(){super(new un(90,1,.5,500)),this._frameExtents=new q(4,2),this._viewportCount=6,this._viewports=[new at(2,1,1,1),new at(0,1,1,1),new at(3,1,1,1),new at(1,1,1,1),new at(3,0,1,1),new at(1,0,1,1)],this._cubeDirections=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],this._cubeUps=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)]}updateMatrices(e,n=0){const i=this.camera,r=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Ta.setFromMatrixPosition(e.matrixWorld),i.position.copy(Ta),oc.copy(i.position),oc.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(oc),i.updateMatrixWorld(),r.makeTranslation(-Ta.x,-Ta.y,-Ta.z),lf.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(lf)}}Zg.prototype.isPointLightShadow=!0;class Kg extends hi{constructor(e,n,i=0,r=1){super(e,n),this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new Zg}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Kg.prototype.isPointLight=!0;class Qg extends Ju{constructor(){super(new Ql(-5,5,5,-5,.5,500))}}Qg.prototype.isDirectionalLightShadow=!0;class e0 extends hi{constructor(e,n){super(e,n),this.type="DirectionalLight",this.position.copy(ot.DefaultUp),this.updateMatrix(),this.target=new ot,this.shadow=new Qg}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}e0.prototype.isDirectionalLight=!0;class MM extends hi{constructor(e,n){super(e,n),this.type="AmbientLight"}}MM.prototype.isAmbientLight=!0;class TM extends hi{constructor(e,n,i=10,r=10){super(e,n),this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const n=super.toJSON(e);return n.object.width=this.width,n.object.height=this.height,n}}TM.prototype.isRectAreaLight=!0;class t0{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new T)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.282095),n.addScaledVector(a[1],.488603*r),n.addScaledVector(a[2],.488603*s),n.addScaledVector(a[3],.488603*i),n.addScaledVector(a[4],1.092548*(i*r)),n.addScaledVector(a[5],1.092548*(r*s)),n.addScaledVector(a[6],.315392*(3*s*s-1)),n.addScaledVector(a[7],1.092548*(i*s)),n.addScaledVector(a[8],.546274*(i*i-r*r)),n}getIrradianceAt(e,n){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.886227),n.addScaledVector(a[1],2*.511664*r),n.addScaledVector(a[2],2*.511664*s),n.addScaledVector(a[3],2*.511664*i),n.addScaledVector(a[4],2*.429043*i*r),n.addScaledVector(a[5],2*.429043*r*s),n.addScaledVector(a[6],.743125*s*s-.247708),n.addScaledVector(a[7],2*.429043*i*s),n.addScaledVector(a[8],.429043*(i*i-r*r)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,n+r*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,n+r*3);return e}static getBasisAt(e,n){const i=e.x,r=e.y,s=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}t0.prototype.isSphericalHarmonics3=!0;class $u extends hi{constructor(e=new t0,n=1){super(void 0,n),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const n=super.toJSON(e);return n.object.sh=this.sh.toArray(),n}}$u.prototype.isLightProbe=!0;class EM{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let n="";for(let i=0,r=e.length;i<r;i++)n+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(n))}catch{return n}}static extractUrlBase(e){const n=e.lastIndexOf("/");return n===-1?"./":e.slice(0,n+1)}static resolveURL(e,n){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(n)&&/^\//.test(e)&&(n=n.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:n+e)}}class n0 extends Ve{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}n0.prototype.isInstancedBufferGeometry=!0;class Yu extends Gn{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new qs(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{n(s.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const n={},i={};function r(p,m){if(n[m]!==void 0)return n[m];const g=p.interleavedBuffers[m],v=s(p,g.buffer),y=Mo(g.type,v),w=new ia(y,g.stride);return w.uuid=g.uuid,n[m]=w,w}function s(p,m){if(i[m]!==void 0)return i[m];const g=p.arrayBuffers[m],v=new Uint32Array(g).buffer;return i[m]=v,v}const a=e.isInstancedBufferGeometry?new n0:new Ve,o=e.data.index;if(o!==void 0){const p=Mo(o.type,o.array);a.setIndex(new tt(p,1))}const l=e.data.attributes;for(const p in l){const m=l[p];let f;if(m.isInterleavedBufferAttribute){const g=r(e.data,m.data);f=new Wr(g,m.itemSize,m.offset,m.normalized)}else{const g=Mo(m.type,m.array),v=m.isInstancedBufferAttribute?Ol:tt;f=new v(g,m.itemSize,m.normalized)}m.name!==void 0&&(f.name=m.name),m.usage!==void 0&&f.setUsage(m.usage),m.updateRange!==void 0&&(f.updateRange.offset=m.updateRange.offset,f.updateRange.count=m.updateRange.count),a.setAttribute(p,f)}const h=e.data.morphAttributes;if(h)for(const p in h){const m=h[p],f=[];for(let g=0,v=m.length;g<v;g++){const y=m[g];let w;if(y.isInterleavedBufferAttribute){const S=r(e.data,y.data);w=new Wr(S,y.itemSize,y.offset,y.normalized)}else{const S=Mo(y.type,y.array);w=new tt(S,y.itemSize,y.normalized)}y.name!==void 0&&(w.name=y.name),f.push(w)}a.morphAttributes[p]=f}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const d=e.data.groups||e.data.drawcalls||e.data.offsets;if(d!==void 0)for(let p=0,m=d.length;p!==m;++p){const f=d[p];a.addGroup(f.start,f.count,f.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const p=new T;u.center!==void 0&&p.fromArray(u.center),a.boundingSphere=new Un(p,u.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class AM extends Gn{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=js.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){n&&n(a),s.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){js.add(e,l),n&&n(l),s.manager.itemEnd(e)}).catch(function(l){r&&r(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}AM.prototype.isImageBitmapLoader=!0;let tl;const CM={getContext:function(){return tl===void 0&&(tl=new(window.AudioContext||window.webkitAudioContext)),tl},setContext:function(t){tl=t}};class LM extends Gn{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new qs(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{const l=o.slice(0);CM.getContext().decodeAudioData(l,function(c){n(c)})}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}}class PM extends $u{constructor(e,n,i=1){super(void 0,i);const r=new Ae().set(e),s=new Ae().set(n),a=new T(r.r,r.g,r.b),o=new T(s.r,s.g,s.b),l=Math.sqrt(Math.PI),h=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(h)}}PM.prototype.isHemisphereLightProbe=!0;class DM extends $u{constructor(e,n=1){super(void 0,n);const i=new Ae().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}DM.prototype.isAmbientLightProbe=!0;class RM extends ot{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class OM{constructor(e,n,i){this.binding=e,this.valueSize=i;let r,s,a;switch(n){case"quaternion":r=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:r=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,n){const i=this.buffer,r=this.valueSize,s=e*r+r;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==r;++o)i[s+o]=i[o];a=n}else{a+=n;const o=n/a;this._mixBufferRegion(i,s,0,o,r)}this.cumulativeWeight=a}accumulateAdditive(e){const n=this.buffer,i=this.valueSize,r=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(n,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,i=this.buffer,r=e*n+n,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=n*this._origIndex;this._mixBufferRegion(i,r,l,1-s,n)}a>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*n,1,n);for(let l=n,h=n+n;l!==h;++l)if(i[l]!==i[l+n]){o.setValue(i,r);break}}saveOriginalState(){const e=this.binding,n=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(n,r);for(let s=i,a=r;s!==a;++s)n[s]=n[r+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,n=e+this.valueSize;for(let i=e;i<n;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[n+i]=this.buffer[e+i]}_select(e,n,i,r,s){if(r>=.5)for(let a=0;a!==s;++a)e[n+a]=e[i+a]}_slerp(e,n,i,r){nn.slerpFlat(e,n,e,n,e,i,r)}_slerpAdditive(e,n,i,r,s){const a=this._workIndex*s;nn.multiplyQuaternionsFlat(e,a,e,n,e,i),nn.slerpFlat(e,n,e,n,e,a,r)}_lerp(e,n,i,r,s){const a=1-r;for(let o=0;o!==s;++o){const l=n+o;e[l]=e[l]*a+e[i+o]*r}}_lerpAdditive(e,n,i,r,s){for(let a=0;a!==s;++a){const o=n+a;e[o]=e[o]+e[i+a]*r}}}const Zu="\\[\\]\\.:\\/",IM=new RegExp("["+Zu+"]","g"),Ku="[^"+Zu+"]",NM="[^"+Zu.replace("\\.","")+"]",zM=/((?:WC+[\/:])*)/.source.replace("WC",Ku),BM=/(WCOD+)?/.source.replace("WCOD",NM),FM=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ku),UM=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ku),kM=new RegExp("^"+zM+BM+FM+UM+"$"),VM=["material","materials","bones"];class HM{constructor(e,n,i){const r=i||_t.parseTrackName(n);this._targetGroup=e,this._bindings=e.subscribe_(n,r)}getValue(e,n){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,n)}setValue(e,n){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=i.length;r!==s;++r)i[r].setValue(e,n)}bind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].bind()}unbind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].unbind()}}class _t{constructor(e,n,i){this.path=n,this.parsedPath=i||_t.parseTrackName(n),this.node=_t.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,n,i){return e&&e.isAnimationObjectGroup?new _t.Composite(e,n,i):new _t(e,n,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(IM,"")}static parseTrackName(e){const n=kM.exec(e);if(n===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=i.nodeName.substring(r+1);VM.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,n){if(n===void 0||n===""||n==="."||n===-1||n===e.name||n===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(n);if(i!==void 0)return i}if(e.children){const i=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===n||o.uuid===n)return o;const l=i(o.children);if(l)return l}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,n){e[n]=this.targetObject[this.propertyName]}_getValue_array(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[n++]=i[r]}_getValue_arrayElement(e,n){e[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,n){this.resolvedProperty.toArray(e,n)}_setValue_direct(e,n){this.targetObject[this.propertyName]=e[n]}_setValue_direct_setNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++]}_setValue_array_setNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,n){this.resolvedProperty[this.propertyIndex]=e[n]}_setValue_arrayElement_setNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,n){this.resolvedProperty.fromArray(e,n)}_setValue_fromArray_setNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,n){this.bind(),this.getValue(e,n)}_setValue_unbound(e,n){this.bind(),this.setValue(e,n)}bind(){let e=this.node;const n=this.parsedPath,i=n.objectName,r=n.propertyName;let s=n.propertyIndex;if(e||(e=_t.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let h=n.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let c=0;c<e.length;c++)if(e[c].name===h){h=c;break}break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[r];if(a===void 0){const h=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+r+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}_t.Composite=HM;_t.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};_t.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};_t.prototype.GetterByBindingType=[_t.prototype._getValue_direct,_t.prototype._getValue_array,_t.prototype._getValue_arrayElement,_t.prototype._getValue_toArray];_t.prototype.SetterByBindingTypeAndVersioning=[[_t.prototype._setValue_direct,_t.prototype._setValue_direct_setNeedsUpdate,_t.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[_t.prototype._setValue_array,_t.prototype._setValue_array_setNeedsUpdate,_t.prototype._setValue_array_setMatrixWorldNeedsUpdate],[_t.prototype._setValue_arrayElement,_t.prototype._setValue_arrayElement_setNeedsUpdate,_t.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[_t.prototype._setValue_fromArray,_t.prototype._setValue_fromArray_setNeedsUpdate,_t.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class GM{constructor(e,n,i=null,r=n.blendMode){this._mixer=e,this._clip=n,this._localRoot=i,this.blendMode=r;const s=n.tracks,a=s.length,o=new Array(a),l={endingStart:Ds,endingEnd:Ds};for(let h=0;h!==a;++h){const c=s[h].createInterpolant(null);o[h]=c,c.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=xx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=e._clip.duration,a=s/r,o=r/s;e.warp(1,a,n),this.warp(o,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const r=this._mixer,s=r.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,h=o.sampleValues;return l[0]=s,l[1]=s+i,h[0]=e/a,h[1]=n/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;if(l<0||i===0)return;this._startTime=null,n=i*l}n*=this._updateTimeScale(e);const a=this._updateTime(n),o=this._updateWeight(e);if(o>0){const l=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case cg:for(let c=0,d=l.length;c!==d;++c)l[c].evaluate(a),h[c].accumulateAdditive(o);break;case Pu:default:for(let c=0,d=l.length;c!==d;++c)l[c].evaluate(a),h[c].accumulate(r,o)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(n*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n))}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const a=i===bx;if(e===0)return s===-1?r:a&&(s&1)===1?n-r:r;if(i===yx){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),r>=n||r<0){const o=Math.floor(r/n);r-=n*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(a&&(s&1)===1)return n-r}return r}_setEndings(e,n,i){const r=this._interpolantSettings;i?(r.endingStart=Rs,r.endingEnd=Rs):(e?r.endingStart=this.zeroSlopeAtStart?Rs:Ds:r.endingStart=Pl,n?r.endingEnd=this.zeroSlopeAtEnd?Rs:Ds:r.endingEnd=Pl)}_scheduleFading(e,n,i){const r=this._mixer,s=r.time;let a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=n,o[1]=s+e,l[1]=i,this}}class WM extends ci{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const i=e._localRoot||this._root,r=e._clip.tracks,s=r.length,a=e._propertyBindings,o=e._interpolants,l=i.uuid,h=this._bindingsByRootAndName;let c=h[l];c===void 0&&(c={},h[l]=c);for(let d=0;d!==s;++d){const u=r[d],p=u.name;let m=c[p];if(m!==void 0)++m.referenceCount,a[d]=m;else{if(m=a[d],m!==void 0){m._cacheIndex===null&&(++m.referenceCount,this._addInactiveBinding(m,l,p));continue}const f=n&&n._propertyBindings[d].binding.parsedPath;m=new OM(_t.create(i,p,f),u.ValueTypeName,u.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,l,p),a[d]=m}o[d].resultBuffer=m.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,i)}const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const n=e._cacheIndex;return n!==null&&n<this._nActiveActions}_addInactiveAction(e,n,i){const r=this._actions,s=this._actionsByClip;let a=s[n];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[n]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){const n=this._actions,i=n[n.length-1],r=e._cacheIndex;i._cacheIndex=r,n[r]=i,n.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,o=a[s],l=o.knownActions,h=l[l.length-1],c=e._byClipCacheIndex;h._byClipCacheIndex=c,l[c]=h,l.pop(),e._byClipCacheIndex=null;const d=o.actionByRoot,u=(e._localRoot||this._root).uuid;delete d[u],l.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const n=this._actions,i=e._cacheIndex,r=this._nActiveActions++,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_takeBackAction(e){const n=this._actions,i=e._cacheIndex,r=--this._nActiveActions,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_addInactiveBinding(e,n,i){const r=this._bindingsByRootAndName,s=this._bindings;let a=r[n];a===void 0&&(a={},r[n]=a),a[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const n=this._bindings,i=e.binding,r=i.rootNode.uuid,s=i.path,a=this._bindingsByRootAndName,o=a[r],l=n[n.length-1],h=e._cacheIndex;l._cacheIndex=h,n[h]=l,n.pop(),delete o[s],Object.keys(o).length===0&&delete a[r]}_lendBinding(e){const n=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_takeBackBinding(e){const n=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,n=this._nActiveControlInterpolants++;let i=e[n];return i===void 0&&(i=new qg(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=n,e[n]=i),i}_takeBackControlInterpolant(e){const n=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=n[r];e.__cacheIndex=r,n[r]=e,s.__cacheIndex=i,n[i]=s}clipAction(e,n,i){const r=n||this._root,s=r.uuid;let a=typeof e=="string"?rf.findByName(r,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let h=null;if(i===void 0&&(a!==null?i=a.blendMode:i=Pu),l!==void 0){const d=l.actionByRoot[s];if(d!==void 0&&d.blendMode===i)return d;h=l.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const c=new GM(this,a,n,i);return this._bindAction(c,h),this._addInactiveAction(c,o,s),c}existingAction(e,n){const i=n||this._root,r=i.uuid,s=typeof e=="string"?rf.findByName(i,e):e,a=s?s.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[r]||null}stopAllAction(){const e=this._actions,n=this._nActiveActions;for(let i=n-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const n=this._actions,i=this._nActiveActions,r=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==i;++h)n[h]._update(r,e,s,a);const o=this._bindings,l=this._nActiveBindings;for(let h=0;h!==l;++h)o[h].apply(a);return this}setTime(e){this.time=0;for(let n=0;n<this._actions.length;n++)this._actions[n].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,i=e.uuid,r=this._actionsByClip,s=r[i];if(s!==void 0){const a=s.knownActions;for(let o=0,l=a.length;o!==l;++o){const h=a[o];this._deactivateAction(h);const c=h._cacheIndex,d=n[n.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,d._cacheIndex=c,n[c]=d,n.pop(),this._removeInactiveBindingsForAction(h)}delete r[i]}}uncacheRoot(e){const n=e.uuid,i=this._actionsByClip;for(const a in i){const o=i[a].actionByRoot,l=o[n];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[n];if(s!==void 0)for(const a in s){const o=s[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,n){const i=this.existingAction(e,n);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}WM.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class jM extends ia{constructor(e,n,i=1){super(e,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const n=super.clone(e);return n.meshPerAttribute=this.meshPerAttribute,n}toJSON(e){const n=super.toJSON(e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}}jM.prototype.isInstancedInterleavedBuffer=!0;class hf{constructor(e=1,n=0,i=0){return this.radius=e,this.phi=n,this.theta=i,this}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Jt(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const cf=new T,nl=new T;class An{constructor(e=new T,n=new T){this.start=e,this.end=n}set(e,n){return this.start.copy(e),this.end.copy(n),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,n){return this.delta(n).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,n){cf.subVectors(e,this.start),nl.subVectors(this.end,this.start);const i=nl.dot(nl);let s=nl.dot(cf)/i;return n&&(s=Jt(s,0,1)),s}closestPointToPoint(e,n,i){const r=this.closestPointToPointParameter(e,n);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const uf=new T;class qM extends ot{constructor(e,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Ve,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const h=a/l*Math.PI*2,c=o/l*Math.PI*2;r.push(Math.cos(h),Math.sin(h),1,Math.cos(c),Math.sin(c),1)}i.setAttribute("position",new Pe(r,3));const s=new Hn({fog:!1,toneMapped:!1});this.cone=new xr(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,n=e*Math.tan(this.light.angle);this.cone.scale.set(n,n,e),uf.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(uf),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ir=new T,il=new Re,lc=new Re;class XM extends xr{constructor(e){const n=i0(e),i=new Ve,r=[],s=[],a=new Ae(0,0,1),o=new Ae(0,1,0);for(let h=0;h<n.length;h++){const c=n[h];c.parent&&c.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}i.setAttribute("position",new Pe(r,3)),i.setAttribute("color",new Pe(s,3));const l=new Hn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,r=i.getAttribute("position");lc.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<n.length;s++){const o=n[s];o.parent&&o.parent.isBone&&(il.multiplyMatrices(lc,o.matrixWorld),ir.setFromMatrixPosition(il),r.setXYZ(a,ir.x,ir.y,ir.z),il.multiplyMatrices(lc,o.parent.matrixWorld),ir.setFromMatrixPosition(il),r.setXYZ(a+1,ir.x,ir.y,ir.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function i0(t){const e=[];t.isBone===!0&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,i0(t.children[n]));return e}class JM extends ln{constructor(e,n,i){const r=new lh(n,4,2),s=new mr({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}class $M extends xr{constructor(e=10,n=10,i=4473924,r=8947848){i=new Ae(i),r=new Ae(r);const s=n/2,a=e/n,o=e/2,l=[],h=[];for(let u=0,p=0,m=-o;u<=n;u++,m+=a){l.push(-o,0,m,o,0,m),l.push(m,0,-o,m,0,o);const f=u===s?i:r;f.toArray(h,p),p+=3,f.toArray(h,p),p+=3,f.toArray(h,p),p+=3,f.toArray(h,p),p+=3}const c=new Ve;c.setAttribute("position",new Pe(l,3)),c.setAttribute("color",new Pe(h,3));const d=new Hn({vertexColors:!0,toneMapped:!1});super(c,d),this.type="GridHelper"}}const df=new T,rl=new T,pf=new T;class YM extends ot{constructor(e,n,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,n===void 0&&(n=1);let r=new Ve;r.setAttribute("position",new Pe([-n,n,0,n,n,0,n,-n,0,-n,-n,0,-n,n,0],3));const s=new Hn({fog:!1,toneMapped:!1});this.lightPlane=new Qa(r,s),this.add(this.lightPlane),r=new Ve,r.setAttribute("position",new Pe([0,0,0,0,0,1],3)),this.targetLine=new Qa(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){df.setFromMatrixPosition(this.light.matrixWorld),rl.setFromMatrixPosition(this.light.target.matrixWorld),pf.subVectors(rl,df),this.lightPlane.lookAt(rl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(rl),this.targetLine.scale.z=pf.length()}}const sl=new T,It=new ta;class or extends xr{constructor(e){const n=new Ve,i=new Hn({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],a={},o=new Ae(16755200),l=new Ae(16711680),h=new Ae(43775),c=new Ae(16777215),d=new Ae(3355443);u("n1","n2",o),u("n2","n4",o),u("n4","n3",o),u("n3","n1",o),u("f1","f2",o),u("f2","f4",o),u("f4","f3",o),u("f3","f1",o),u("n1","f1",o),u("n2","f2",o),u("n3","f3",o),u("n4","f4",o),u("p","n1",l),u("p","n2",l),u("p","n3",l),u("p","n4",l),u("u1","u2",h),u("u2","u3",h),u("u3","u1",h),u("c","t",c),u("p","c",d),u("cn1","cn2",d),u("cn3","cn4",d),u("cf1","cf2",d),u("cf3","cf4",d);function u(m,f,g){p(m,g),p(f,g)}function p(m,f){r.push(0,0,0),s.push(f.r,f.g,f.b),a[m]===void 0&&(a[m]=[]),a[m].push(r.length/3-1)}n.setAttribute("position",new Pe(r,3)),n.setAttribute("color",new Pe(s,3)),super(n,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const e=this.geometry,n=this.pointMap,i=1,r=1;It.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ut("c",n,e,It,0,0,-1),Ut("t",n,e,It,0,0,1),Ut("n1",n,e,It,-i,-r,-1),Ut("n2",n,e,It,i,-r,-1),Ut("n3",n,e,It,-i,r,-1),Ut("n4",n,e,It,i,r,-1),Ut("f1",n,e,It,-i,-r,1),Ut("f2",n,e,It,i,-r,1),Ut("f3",n,e,It,-i,r,1),Ut("f4",n,e,It,i,r,1),Ut("u1",n,e,It,i*.7,r*1.1,-1),Ut("u2",n,e,It,-i*.7,r*1.1,-1),Ut("u3",n,e,It,0,r*2,-1),Ut("cf1",n,e,It,-i,0,1),Ut("cf2",n,e,It,i,0,1),Ut("cf3",n,e,It,0,-r,1),Ut("cf4",n,e,It,0,r,1),Ut("cn1",n,e,It,-i,0,-1),Ut("cn2",n,e,It,i,0,-1),Ut("cn3",n,e,It,0,-r,-1),Ut("cn4",n,e,It,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ut(t,e,n,i,r,s,a){sl.set(r,s,a).unproject(i);const o=e[t];if(o!==void 0){const l=n.getAttribute("position");for(let h=0,c=o.length;h<c;h++)l.setXYZ(o[h],sl.x,sl.y,sl.z)}}class al extends xr{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Ve;s.setIndex(new tt(i,1)),s.setAttribute("position",new Pe(r,3)),super(s,new Hn({color:n,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class ZM extends xr{constructor(e=1){const n=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Ve;r.setAttribute("position",new Pe(n,3)),r.setAttribute("color",new Pe(i,3));const s=new Hn({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,n,i){const r=new Ae,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(n),r.toArray(s,6),r.toArray(s,9),r.set(i),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class KM{constructor(){this.type="ShapePath",this.color=new Ae,this.subPaths=[],this.currentPath=null}moveTo(e,n){return this.currentPath=new Il,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,n),this}lineTo(e,n){return this.currentPath.lineTo(e,n),this}quadraticCurveTo(e,n,i,r){return this.currentPath.quadraticCurveTo(e,n,i,r),this}bezierCurveTo(e,n,i,r,s,a){return this.currentPath.bezierCurveTo(e,n,i,r,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,n){function i(y){const w=[];for(let S=0,b=y.length;S<b;S++){const _=y[S],E=new oi;E.curves=_.curves,w.push(E)}return w}function r(y,w){const S=w.length;let b=!1;for(let _=S-1,E=0;E<S;_=E++){let x=w[_],A=w[E],M=A.x-x.x,C=A.y-x.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(x=w[E],M=-M,A=w[_],C=-C),y.y<x.y||y.y>A.y)continue;if(y.y===x.y){if(y.x===x.x)return!0}else{const F=C*(y.x-x.x)-M*(y.y-x.y);if(F===0)return!0;if(F<0)continue;b=!b}}else{if(y.y!==x.y)continue;if(A.x<=y.x&&y.x<=x.x||x.x<=y.x&&y.x<=A.x)return!0}}return b}const s=Gi.isClockWise,a=this.subPaths;if(a.length===0)return[];if(n===!0)return i(a);let o,l,h;const c=[];if(a.length===1)return l=a[0],h=new oi,h.curves=l.curves,c.push(h),c;let d=!s(a[0].getPoints());d=e?!d:d;const u=[],p=[];let m=[],f=0,g;p[f]=void 0,m[f]=[];for(let y=0,w=a.length;y<w;y++)l=a[y],g=l.getPoints(),o=s(g),o=e?!o:o,o?(!d&&p[f]&&f++,p[f]={s:new oi,p:g},p[f].s.curves=l.curves,d&&f++,m[f]=[]):m[f].push({h:l,p:g[0]});if(!p[0])return i(a);if(p.length>1){let y=!1,w=0;for(let S=0,b=p.length;S<b;S++)u[S]=[];for(let S=0,b=p.length;S<b;S++){const _=m[S];for(let E=0;E<_.length;E++){const x=_[E];let A=!0;for(let M=0;M<p.length;M++)r(x.p,p[M].p)&&(S!==M&&w++,A?(A=!1,u[M].push(x)):y=!0);A&&u[S].push(x)}}w>0&&y===!1&&(m=u)}let v;for(let y=0,w=p.length;y<w;y++){h=p[y].s,c.push(h),v=m[y];for(let S=0,b=v.length;S<b;S++)h.holes.push(v[S].h)}return c}}const mi=new Uint32Array(512),gi=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(mi[t]=0,mi[t|256]=32768,gi[t]=24,gi[t|256]=24):e<-14?(mi[t]=1024>>-e-14,mi[t|256]=1024>>-e-14|32768,gi[t]=-e-1,gi[t|256]=-e-1):e<=15?(mi[t]=e+15<<10,mi[t|256]=e+15<<10|32768,gi[t]=13,gi[t|256]=13):e<128?(mi[t]=31744,mi[t|256]=64512,gi[t]=24,gi[t|256]=24):(mi[t]=31744,mi[t|256]=64512,gi[t]=13,gi[t|256]=13)}const r0=new Uint32Array(2048),go=new Uint32Array(64),QM=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,n=0;for(;(e&8388608)===0;)e<<=1,n-=8388608;e&=-8388609,n+=947912704,r0[t]=e|n}for(let t=1024;t<2048;++t)r0[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)go[t]=t<<23;go[31]=1199570944;go[32]=2147483648;for(let t=33;t<63;++t)go[t]=2147483648+(t-32<<23);go[63]=3347054592;for(let t=1;t<64;++t)t!==32&&(QM[t]=1024);Vn.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Vn.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Il.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)};$M.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};XM.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Gn.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),EM.extractUrlBase(t)};Gn.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};hn.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)};hn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};hn.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)};hn.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)};hn.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)};Ei.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};Un.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Kl.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)};An.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)};Dt.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)};Dt.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)};Dt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Dt.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)};Dt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Dt.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()};Re.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)};Re.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)};Re.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new T().setFromMatrixColumn(this,3)};Re.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)};Re.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Re.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Re.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)};Re.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Re.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Re.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Re.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Re.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Re.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Re.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Re.prototype.makeFrustum=function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)};Re.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()};_i.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};nn.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)};nn.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Jr.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)};Jr.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)};Jr.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)};Vt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};Vt.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)};Vt.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)};Vt.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)};Vt.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)};Vt.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Vt.getBarycoord(t,e,n,i,r)};Vt.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Vt.getNormal(t,e,n,i)};oi.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)};oi.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ra(this,t)};oi.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new oh(this,t)};q.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};q.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)};q.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};T.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};T.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};T.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)};T.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)};T.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)};T.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)};T.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};T.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)};T.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};at.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};at.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};ot.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)};ot.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};ot.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)};ot.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};ot.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)};Object.defineProperties(ot.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});ln.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(ln.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),_x},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Eg.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};un.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(hi.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(tt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Dl},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Dl)}}});tt.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Dl:Ya),this};tt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},tt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Ve.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)};Ve.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new tt(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)};Ve.prototype.addDrawCall=function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)};Ve.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Ve.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Ve.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)};Ve.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)};Object.defineProperties(Ve.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});ia.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Dl:Ya),this};ia.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};ra.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};ra.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};ra.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};nh.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(Kt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ae}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===ag}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(kn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});wt.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)};wt.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)};wt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};wt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};wt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};wt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};wt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};wt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};wt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};wt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};wt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};wt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};wt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};wt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};wt.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)};wt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};wt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};wt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};wt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};wt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};wt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};wt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};wt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};wt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};wt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(wt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?Et:li}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Sg.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Sn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});RM.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new LM().load(t,function(i){e.setBuffer(i)}),this};Iu.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};Iu.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)};Xr.crossOrigin=void 0;Xr.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new SM;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};Xr.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new wM;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s};Xr.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Xr.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Cu}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Cu);const ff={type:"change"},hc={type:"start"},mf={type:"end"};class eT extends ci{constructor(e,n){super(),n===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),n===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new T,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ns.ROTATE,MIDDLE:ns.DOLLY,RIGHT:ns.PAN},this.touches={ONE:is.ROTATE,TWO:is.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(R){R.addEventListener("keydown",Ne),this._domElementKeyEvents=R},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(ff),i.update(),s=r.NONE},this.update=function(){const R=new T,ye=new nn().setFromUnitVectors(e.up,new T(0,1,0)),Ee=ye.clone().invert(),xe=new T,U=new nn,we=2*Math.PI;return function(){const We=i.object.position;R.copy(We).sub(i.target),R.applyQuaternion(ye),o.setFromVector3(R),i.autoRotate&&s===r.NONE&&A(E()),i.enableDamping?(o.theta+=l.theta*i.dampingFactor,o.phi+=l.phi*i.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let Le=i.minAzimuthAngle,ze=i.maxAzimuthAngle;return isFinite(Le)&&isFinite(ze)&&(Le<-Math.PI?Le+=we:Le>Math.PI&&(Le-=we),ze<-Math.PI?ze+=we:ze>Math.PI&&(ze-=we),Le<=ze?o.theta=Math.max(Le,Math.min(ze,o.theta)):o.theta=o.theta>(Le+ze)/2?Math.max(Le,o.theta):Math.min(ze,o.theta)),o.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,o.phi)),o.makeSafe(),o.radius*=h,o.radius=Math.max(i.minDistance,Math.min(i.maxDistance,o.radius)),i.enableDamping===!0?i.target.addScaledVector(c,i.dampingFactor):i.target.add(c),R.setFromSpherical(o),R.applyQuaternion(Ee),We.copy(i.target).add(R),i.object.lookAt(i.target),i.enableDamping===!0?(l.theta*=1-i.dampingFactor,l.phi*=1-i.dampingFactor,c.multiplyScalar(1-i.dampingFactor)):(l.set(0,0,0),c.set(0,0,0)),h=1,d||xe.distanceToSquared(i.object.position)>a||8*(1-U.dot(i.object.quaternion))>a?(i.dispatchEvent(ff),xe.copy(i.object.position),U.copy(i.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",he),i.domElement.removeEventListener("pointerdown",ee),i.domElement.removeEventListener("pointercancel",fe),i.domElement.removeEventListener("wheel",Oe),i.domElement.removeEventListener("pointermove",se),i.domElement.removeEventListener("pointerup",ce),i._domElementKeyEvents!==null&&i._domElementKeyEvents.removeEventListener("keydown",Ne)};const i=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const a=1e-6,o=new hf,l=new hf;let h=1;const c=new T;let d=!1;const u=new q,p=new q,m=new q,f=new q,g=new q,v=new q,y=new q,w=new q,S=new q,b=[],_={};function E(){return 2*Math.PI/60/60*i.autoRotateSpeed}function x(){return Math.pow(.95,i.zoomSpeed)}function A(R){l.theta-=R}function M(R){l.phi-=R}const C=function(){const R=new T;return function(Ee,xe){R.setFromMatrixColumn(xe,0),R.multiplyScalar(-Ee),c.add(R)}}(),F=function(){const R=new T;return function(Ee,xe){i.screenSpacePanning===!0?R.setFromMatrixColumn(xe,1):(R.setFromMatrixColumn(xe,0),R.crossVectors(i.object.up,R)),R.multiplyScalar(Ee),c.add(R)}}(),W=function(){const R=new T;return function(Ee,xe){const U=i.domElement;if(i.object.isPerspectiveCamera){const we=i.object.position;R.copy(we).sub(i.target);let be=R.length();be*=Math.tan(i.object.fov/2*Math.PI/180),C(2*Ee*be/U.clientHeight,i.object.matrix),F(2*xe*be/U.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(C(Ee*(i.object.right-i.object.left)/i.object.zoom/U.clientWidth,i.object.matrix),F(xe*(i.object.top-i.object.bottom)/i.object.zoom/U.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function O(R){i.object.isPerspectiveCamera?h/=R:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*R)),i.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function Z(R){i.object.isPerspectiveCamera?h*=R:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/R)),i.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function X(R){u.set(R.clientX,R.clientY)}function j(R){y.set(R.clientX,R.clientY)}function H(R){f.set(R.clientX,R.clientY)}function N(R){p.set(R.clientX,R.clientY),m.subVectors(p,u).multiplyScalar(i.rotateSpeed);const ye=i.domElement;A(2*Math.PI*m.x/ye.clientHeight),M(2*Math.PI*m.y/ye.clientHeight),u.copy(p),i.update()}function I(R){w.set(R.clientX,R.clientY),S.subVectors(w,y),S.y>0?O(x()):S.y<0&&Z(x()),y.copy(w),i.update()}function V(R){g.set(R.clientX,R.clientY),v.subVectors(g,f).multiplyScalar(i.panSpeed),W(v.x,v.y),f.copy(g),i.update()}function B(R){R.deltaY<0?Z(x()):R.deltaY>0&&O(x()),i.update()}function k(R){let ye=!1;switch(R.code){case i.keys.UP:W(0,i.keyPanSpeed),ye=!0;break;case i.keys.BOTTOM:W(0,-i.keyPanSpeed),ye=!0;break;case i.keys.LEFT:W(i.keyPanSpeed,0),ye=!0;break;case i.keys.RIGHT:W(-i.keyPanSpeed,0),ye=!0;break}ye&&(R.preventDefault(),i.update())}function $(){if(b.length===1)u.set(b[0].pageX,b[0].pageY);else{const R=.5*(b[0].pageX+b[1].pageX),ye=.5*(b[0].pageY+b[1].pageY);u.set(R,ye)}}function ne(){if(b.length===1)f.set(b[0].pageX,b[0].pageY);else{const R=.5*(b[0].pageX+b[1].pageX),ye=.5*(b[0].pageY+b[1].pageY);f.set(R,ye)}}function z(){const R=b[0].pageX-b[1].pageX,ye=b[0].pageY-b[1].pageY,Ee=Math.sqrt(R*R+ye*ye);y.set(0,Ee)}function oe(){i.enableZoom&&z(),i.enablePan&&ne()}function ie(){i.enableZoom&&z(),i.enableRotate&&$()}function le(R){if(b.length==1)p.set(R.pageX,R.pageY);else{const Ee=Be(R),xe=.5*(R.pageX+Ee.x),U=.5*(R.pageY+Ee.y);p.set(xe,U)}m.subVectors(p,u).multiplyScalar(i.rotateSpeed);const ye=i.domElement;A(2*Math.PI*m.x/ye.clientHeight),M(2*Math.PI*m.y/ye.clientHeight),u.copy(p)}function K(R){if(b.length===1)g.set(R.pageX,R.pageY);else{const ye=Be(R),Ee=.5*(R.pageX+ye.x),xe=.5*(R.pageY+ye.y);g.set(Ee,xe)}v.subVectors(g,f).multiplyScalar(i.panSpeed),W(v.x,v.y),f.copy(g)}function pe(R){const ye=Be(R),Ee=R.pageX-ye.x,xe=R.pageY-ye.y,U=Math.sqrt(Ee*Ee+xe*xe);w.set(0,U),S.set(0,Math.pow(w.y/y.y,i.zoomSpeed)),O(S.y),y.copy(w)}function G(R){i.enableZoom&&pe(R),i.enablePan&&K(R)}function J(R){i.enableZoom&&pe(R),i.enableRotate&&le(R)}function ee(R){i.enabled!==!1&&(b.length===0&&(i.domElement.setPointerCapture(R.pointerId),i.domElement.addEventListener("pointermove",se),i.domElement.addEventListener("pointerup",ce)),me(R),R.pointerType==="touch"?D(R):ge(R))}function se(R){i.enabled!==!1&&(R.pointerType==="touch"?L(R):_e(R))}function ce(R){Te(R),b.length===0&&(i.domElement.releasePointerCapture(R.pointerId),i.domElement.removeEventListener("pointermove",se),i.domElement.removeEventListener("pointerup",ce)),i.dispatchEvent(mf),s=r.NONE}function fe(R){Te(R)}function ge(R){let ye;switch(R.button){case 0:ye=i.mouseButtons.LEFT;break;case 1:ye=i.mouseButtons.MIDDLE;break;case 2:ye=i.mouseButtons.RIGHT;break;default:ye=-1}switch(ye){case ns.DOLLY:if(i.enableZoom===!1)return;j(R),s=r.DOLLY;break;case ns.ROTATE:if(R.ctrlKey||R.metaKey||R.shiftKey){if(i.enablePan===!1)return;H(R),s=r.PAN}else{if(i.enableRotate===!1)return;X(R),s=r.ROTATE}break;case ns.PAN:if(R.ctrlKey||R.metaKey||R.shiftKey){if(i.enableRotate===!1)return;X(R),s=r.ROTATE}else{if(i.enablePan===!1)return;H(R),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(hc)}function _e(R){if(i.enabled!==!1)switch(s){case r.ROTATE:if(i.enableRotate===!1)return;N(R);break;case r.DOLLY:if(i.enableZoom===!1)return;I(R);break;case r.PAN:if(i.enablePan===!1)return;V(R);break}}function Oe(R){i.enabled===!1||i.enableZoom===!1||s!==r.NONE||(R.preventDefault(),i.dispatchEvent(hc),B(R),i.dispatchEvent(mf))}function Ne(R){i.enabled===!1||i.enablePan===!1||k(R)}function D(R){switch(Ce(R),b.length){case 1:switch(i.touches.ONE){case is.ROTATE:if(i.enableRotate===!1)return;$(),s=r.TOUCH_ROTATE;break;case is.PAN:if(i.enablePan===!1)return;ne(),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(i.touches.TWO){case is.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;oe(),s=r.TOUCH_DOLLY_PAN;break;case is.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;ie(),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(hc)}function L(R){switch(Ce(R),s){case r.TOUCH_ROTATE:if(i.enableRotate===!1)return;le(R),i.update();break;case r.TOUCH_PAN:if(i.enablePan===!1)return;K(R),i.update();break;case r.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;G(R),i.update();break;case r.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;J(R),i.update();break;default:s=r.NONE}}function he(R){i.enabled!==!1&&R.preventDefault()}function me(R){b.push(R)}function Te(R){delete _[R.pointerId];for(let ye=0;ye<b.length;ye++)if(b[ye].pointerId==R.pointerId){b.splice(ye,1);return}}function Ce(R){let ye=_[R.pointerId];ye===void 0&&(ye=new q,_[R.pointerId]=ye),ye.set(R.pageX,R.pageY)}function Be(R){const ye=R.pointerId===b[0].pointerId?b[1]:b[0];return _[ye.pointerId]}i.domElement.addEventListener("contextmenu",he),i.domElement.addEventListener("pointerdown",ee),i.domElement.addEventListener("pointercancel",fe),i.domElement.addEventListener("wheel",Oe,{passive:!1}),this.update()}}const vi=new Re,cc=new ot,ol=new T;class io extends ci{constructor(){super(),this.uuid=Mt.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}applyMatrix4(e){const n=new Dt().getNormalMatrix(e);for(let i=0,r=this.vertices.length;i<r;i++)this.vertices[i].applyMatrix4(e);for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i];s.normal.applyMatrix3(n).normalize();for(let a=0,o=s.vertexNormals.length;a<o;a++)s.vertexNormals[a].applyMatrix3(n).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this}rotateX(e){return vi.makeRotationX(e),this.applyMatrix4(vi),this}rotateY(e){return vi.makeRotationY(e),this.applyMatrix4(vi),this}rotateZ(e){return vi.makeRotationZ(e),this.applyMatrix4(vi),this}translate(e,n,i){return vi.makeTranslation(e,n,i),this.applyMatrix4(vi),this}scale(e,n,i){return vi.makeScale(e,n,i),this.applyMatrix4(vi),this}lookAt(e){return cc.lookAt(e),cc.updateMatrix(),this.applyMatrix4(cc.matrix),this}fromBufferGeometry(e){const n=this,i=e.index!==null?e.index:void 0,r=e.attributes;if(r.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const s=r.position,a=r.normal,o=r.color,l=r.uv,h=r.uv2;h!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<s.count;u++)n.vertices.push(new T().fromBufferAttribute(s,u)),o!==void 0&&n.colors.push(new Ae().fromBufferAttribute(o,u));function c(u,p,m,f){const g=o===void 0?[]:[n.colors[u].clone(),n.colors[p].clone(),n.colors[m].clone()],v=a===void 0?[]:[new T().fromBufferAttribute(a,u),new T().fromBufferAttribute(a,p),new T().fromBufferAttribute(a,m)],y=new Gc(u,p,m,v,g,f);n.faces.push(y),l!==void 0&&n.faceVertexUvs[0].push([new q().fromBufferAttribute(l,u),new q().fromBufferAttribute(l,p),new q().fromBufferAttribute(l,m)]),h!==void 0&&n.faceVertexUvs[1].push([new q().fromBufferAttribute(h,u),new q().fromBufferAttribute(h,p),new q().fromBufferAttribute(h,m)])}const d=e.groups;if(d.length>0)for(let u=0;u<d.length;u++){const p=d[u],m=p.start,f=p.count;for(let g=m,v=m+f;g<v;g+=3)i!==void 0?c(i.getX(g),i.getX(g+1),i.getX(g+2),p.materialIndex):c(g,g+1,g+2,p.materialIndex)}else if(i!==void 0)for(let u=0;u<i.count;u+=3)c(i.getX(u),i.getX(u+1),i.getX(u+2));else for(let u=0;u<s.count;u+=3)c(u,u+1,u+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ol).negate(),this.translate(ol.x,ol.y,ol.z),this}normalize(){this.computeBoundingSphere();const e=this.boundingSphere.center,n=this.boundingSphere.radius,i=n===0?1:1/n,r=new Re;return r.set(i,0,0,-i*e.x,0,i,0,-i*e.y,0,0,i,-i*e.z,0,0,0,1),this.applyMatrix4(r),this}computeFaceNormals(){const e=new T,n=new T;for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i],a=this.vertices[s.a],o=this.vertices[s.b],l=this.vertices[s.c];e.subVectors(l,o),n.subVectors(a,o),e.cross(n),e.normalize(),s.normal.copy(e)}}computeVertexNormals(e=!0){const n=new Array(this.vertices.length);for(let i=0,r=this.vertices.length;i<r;i++)n[i]=new T;if(e){const i=new T,r=new T;for(let s=0,a=this.faces.length;s<a;s++){const o=this.faces[s],l=this.vertices[o.a],h=this.vertices[o.b],c=this.vertices[o.c];i.subVectors(c,h),r.subVectors(l,h),i.cross(r),n[o.a].add(i),n[o.b].add(i),n[o.c].add(i)}}else{this.computeFaceNormals();for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i];n[s.a].add(s.normal),n[s.b].add(s.normal),n[s.c].add(s.normal)}}for(let i=0,r=this.vertices.length;i<r;i++)n[i].normalize();for(let i=0,r=this.faces.length;i<r;i++){const s=this.faces[i],a=s.vertexNormals;a.length===3?(a[0].copy(n[s.a]),a[1].copy(n[s.b]),a[2].copy(n[s.c])):(a[0]=n[s.a].clone(),a[1]=n[s.b].clone(),a[2]=n[s.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)}computeFlatVertexNormals(){this.computeFaceNormals();for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e],r=i.vertexNormals;r.length===3?(r[0].copy(i.normal),r[1].copy(i.normal),r[2].copy(i.normal)):(r[0]=i.normal.clone(),r[1]=i.normal.clone(),r[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)}computeMorphNormals(){for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]);for(let s=0,a=r.vertexNormals.length;s<a;s++)r.__originalVertexNormals[s]?r.__originalVertexNormals[s].copy(r.vertexNormals[s]):r.__originalVertexNormals[s]=r.vertexNormals[s].clone()}const e=new io;e.faces=this.faces;for(let n=0,i=this.morphTargets.length;n<i;n++){if(!this.morphNormals[n]){this.morphNormals[n]={},this.morphNormals[n].faceNormals=[],this.morphNormals[n].vertexNormals=[];const s=this.morphNormals[n].faceNormals,a=this.morphNormals[n].vertexNormals;for(let o=0,l=this.faces.length;o<l;o++){const h=new T,c={a:new T,b:new T,c:new T};s.push(h),a.push(c)}}const r=this.morphNormals[n];e.vertices=this.morphTargets[n].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let s=0,a=this.faces.length;s<a;s++){const o=this.faces[s],l=r.faceNormals[s],h=r.vertexNormals[s];l.copy(o.normal),h.a.copy(o.vertexNormals[0]),h.b.copy(o.vertexNormals[1]),h.c.copy(o.vertexNormals[2])}}for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals}}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new hn),this.boundingBox.setFromPoints(this.vertices)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Un),this.boundingSphere.setFromPoints(this.vertices)}merge(e,n,i=0){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}let r;const s=this.vertices.length,a=this.vertices,o=e.vertices,l=this.faces,h=e.faces,c=this.colors,d=e.colors;n!==void 0&&(r=new Dt().getNormalMatrix(n));for(let u=0,p=o.length;u<p;u++){const f=o[u].clone();n!==void 0&&f.applyMatrix4(n),a.push(f)}for(let u=0,p=d.length;u<p;u++)c.push(d[u].clone());for(let u=0,p=h.length;u<p;u++){const m=h[u];let f,g;const v=m.vertexNormals,y=m.vertexColors,w=new Gc(m.a+s,m.b+s,m.c+s);w.normal.copy(m.normal),r!==void 0&&w.normal.applyMatrix3(r).normalize();for(let S=0,b=v.length;S<b;S++)f=v[S].clone(),r!==void 0&&f.applyMatrix3(r).normalize(),w.vertexNormals.push(f);w.color.copy(m.color);for(let S=0,b=y.length;S<b;S++)g=y[S],w.vertexColors.push(g.clone());w.materialIndex=m.materialIndex+i,l.push(w)}for(let u=0,p=e.faceVertexUvs.length;u<p;u++){const m=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let f=0,g=m.length;f<g;f++){const v=m[f],y=[];for(let w=0,S=v.length;w<S;w++)y.push(v[w].clone());this.faceVertexUvs[u].push(y)}}}mergeMesh(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)}mergeVertices(e=4){const n={},i=[],r=[],s=Math.pow(10,e);for(let l=0,h=this.vertices.length;l<h;l++){const c=this.vertices[l],d=Math.round(c.x*s)+"_"+Math.round(c.y*s)+"_"+Math.round(c.z*s);n[d]===void 0?(n[d]=l,i.push(this.vertices[l]),r[l]=i.length-1):r[l]=r[n[d]]}const a=[];for(let l=0,h=this.faces.length;l<h;l++){const c=this.faces[l];c.a=r[c.a],c.b=r[c.b],c.c=r[c.c];const d=[c.a,c.b,c.c];for(let u=0;u<3;u++)if(d[u]===d[(u+1)%3]){a.push(l);break}}for(let l=a.length-1;l>=0;l--){const h=a[l];this.faces.splice(h,1);for(let c=0,d=this.faceVertexUvs.length;c<d;c++)this.faceVertexUvs[c].splice(h,1)}const o=this.vertices.length-i.length;return this.vertices=i,o}setFromPoints(e){this.vertices=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];this.vertices.push(new T(r.x,r.y,r.z||0))}return this}sortFacesByMaterialIndex(){const e=this.faces,n=e.length;for(let l=0;l<n;l++)e[l]._id=l;function i(l,h){return l.materialIndex-h.materialIndex}e.sort(i);const r=this.faceVertexUvs[0],s=this.faceVertexUvs[1];let a,o;r&&r.length===n&&(a=[]),s&&s.length===n&&(o=[]);for(let l=0;l<n;l++){const h=e[l]._id;a&&a.push(r[h]),o&&o.push(s[h])}a&&(this.faceVertexUvs[0]=a),o&&(this.faceVertexUvs[1]=o)}toJSON(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){const m=this.parameters;for(const f in m)m[f]!==void 0&&(e[f]=m[f]);return e}const n=[];for(let m=0;m<this.vertices.length;m++){const f=this.vertices[m];n.push(f.x,f.y,f.z)}const i=[],r=[],s={},a=[],o={},l=[],h={};for(let m=0;m<this.faces.length;m++){const f=this.faces[m],g=!0,v=!1,y=this.faceVertexUvs[0][m]!==void 0,w=f.normal.length()>0,S=f.vertexNormals.length>0,b=f.color.r!==1||f.color.g!==1||f.color.b!==1,_=f.vertexColors.length>0;let E=0;if(E=c(E,0,0),E=c(E,1,g),E=c(E,2,v),E=c(E,3,y),E=c(E,4,w),E=c(E,5,S),E=c(E,6,b),E=c(E,7,_),i.push(E),i.push(f.a,f.b,f.c),i.push(f.materialIndex),y){const x=this.faceVertexUvs[0][m];i.push(p(x[0]),p(x[1]),p(x[2]))}if(w&&i.push(d(f.normal)),S){const x=f.vertexNormals;i.push(d(x[0]),d(x[1]),d(x[2]))}if(b&&i.push(u(f.color)),_){const x=f.vertexColors;i.push(u(x[0]),u(x[1]),u(x[2]))}}function c(m,f,g){return g?m|1<<f:m&~(1<<f)}function d(m){const f=m.x.toString()+m.y.toString()+m.z.toString();return s[f]!==void 0||(s[f]=r.length/3,r.push(m.x,m.y,m.z)),s[f]}function u(m){const f=m.r.toString()+m.g.toString()+m.b.toString();return o[f]!==void 0||(o[f]=a.length,a.push(m.getHex())),o[f]}function p(m){const f=m.x.toString()+m.y.toString();return h[f]!==void 0||(h[f]=l.length/2,l.push(m.x,m.y)),h[f]}return e.data={},e.data.vertices=n,e.data.normals=r,a.length>0&&(e.data.colors=a),l.length>0&&(e.data.uvs=[l]),e.data.faces=i,e}clone(){return new io().copy(this)}copy(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const n=e.vertices;for(let u=0,p=n.length;u<p;u++)this.vertices.push(n[u].clone());const i=e.colors;for(let u=0,p=i.length;u<p;u++)this.colors.push(i[u].clone());const r=e.faces;for(let u=0,p=r.length;u<p;u++)this.faces.push(r[u].clone());for(let u=0,p=e.faceVertexUvs.length;u<p;u++){const m=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let f=0,g=m.length;f<g;f++){const v=m[f],y=[];for(let w=0,S=v.length;w<S;w++){const b=v[w];y.push(b.clone())}this.faceVertexUvs[u].push(y)}}const s=e.morphTargets;for(let u=0,p=s.length;u<p;u++){const m={};if(m.name=s[u].name,s[u].vertices!==void 0){m.vertices=[];for(let f=0,g=s[u].vertices.length;f<g;f++)m.vertices.push(s[u].vertices[f].clone())}if(s[u].normals!==void 0){m.normals=[];for(let f=0,g=s[u].normals.length;f<g;f++)m.normals.push(s[u].normals[f].clone())}this.morphTargets.push(m)}const a=e.morphNormals;for(let u=0,p=a.length;u<p;u++){const m={};if(a[u].vertexNormals!==void 0){m.vertexNormals=[];for(let f=0,g=a[u].vertexNormals.length;f<g;f++){const v=a[u].vertexNormals[f],y={};y.a=v.a.clone(),y.b=v.b.clone(),y.c=v.c.clone(),m.vertexNormals.push(y)}}if(a[u].faceNormals!==void 0){m.faceNormals=[];for(let f=0,g=a[u].faceNormals.length;f<g;f++)m.faceNormals.push(a[u].faceNormals[f].clone())}this.morphNormals.push(m)}const o=e.skinWeights;for(let u=0,p=o.length;u<p;u++)this.skinWeights.push(o[u].clone());const l=e.skinIndices;for(let u=0,p=l.length;u<p;u++)this.skinIndices.push(l[u].clone());const h=e.lineDistances;for(let u=0,p=h.length;u<p;u++)this.lineDistances.push(h[u]);const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const d=e.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}toBufferGeometry(){const e=new tT().fromGeometry(this),n=new Ve,i=new Float32Array(e.vertices.length*3);if(n.setAttribute("position",new tt(i,3).copyVector3sArray(e.vertices)),e.normals.length>0){const r=new Float32Array(e.normals.length*3);n.setAttribute("normal",new tt(r,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const r=new Float32Array(e.colors.length*3);n.setAttribute("color",new tt(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const r=new Float32Array(e.uvs.length*2);n.setAttribute("uv",new tt(r,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const r=new Float32Array(e.uvs2.length*2);n.setAttribute("uv2",new tt(r,2).copyVector2sArray(e.uvs2))}n.groups=e.groups;for(const r in e.morphTargets){const s=[],a=e.morphTargets[r];for(let o=0,l=a.length;o<l;o++){const h=a[o],c=new Pe(h.data.length*3,3);c.name=h.name,s.push(c.copyVector3sArray(h.data))}n.morphAttributes[r]=s}if(e.skinIndices.length>0){const r=new Pe(e.skinIndices.length*4,4);n.setAttribute("skinIndex",r.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const r=new Pe(e.skinWeights.length*4,4);n.setAttribute("skinWeight",r.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(n.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(n.boundingBox=e.boundingBox.clone()),n}computeTangents(){console.error("THREE.Geometry: .computeTangents() has been removed.")}computeLineDistances(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}applyMatrix(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}dispose(){this.dispatchEvent({type:"dispose"})}static createBufferGeometryFromObject(e){let n=new Ve;const i=e.geometry;if(e.isPoints||e.isLine){const r=new Pe(i.vertices.length*3,3),s=new Pe(i.colors.length*3,3);if(n.setAttribute("position",r.copyVector3sArray(i.vertices)),n.setAttribute("color",s.copyColorsArray(i.colors)),i.lineDistances&&i.lineDistances.length===i.vertices.length){const a=new Pe(i.lineDistances.length,1);n.setAttribute("lineDistance",a.copyArray(i.lineDistances))}i.boundingSphere!==null&&(n.boundingSphere=i.boundingSphere.clone()),i.boundingBox!==null&&(n.boundingBox=i.boundingBox.clone())}else e.isMesh&&(n=i.toBufferGeometry());return n}}io.prototype.isGeometry=!0;class tT{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const n=[];let i,r,s;const a=e.faces;for(r=0;r<a.length;r++){const o=a[r];o.materialIndex!==s&&(s=o.materialIndex,i!==void 0&&(i.count=r*3-i.start,n.push(i)),i={start:r*3,materialIndex:s})}i!==void 0&&(i.count=r*3-i.start,n.push(i)),this.groups=n}fromGeometry(e){const n=e.faces,i=e.vertices,r=e.faceVertexUvs,s=r[0]&&r[0].length>0,a=r[1]&&r[1].length>0,o=e.morphTargets,l=o.length;let h;if(l>0){h=[];for(let v=0;v<l;v++)h[v]={name:o[v].name,data:[]};this.morphTargets.position=h}const c=e.morphNormals,d=c.length;let u;if(d>0){u=[];for(let v=0;v<d;v++)u[v]={name:c[v].name,data:[]};this.morphTargets.normal=u}const p=e.skinIndices,m=e.skinWeights,f=p.length===i.length,g=m.length===i.length;i.length>0&&n.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<n.length;v++){const y=n[v];this.vertices.push(i[y.a],i[y.b],i[y.c]);const w=y.vertexNormals;if(w.length===3)this.normals.push(w[0],w[1],w[2]);else{const b=y.normal;this.normals.push(b,b,b)}const S=y.vertexColors;if(S.length===3)this.colors.push(S[0],S[1],S[2]);else{const b=y.color;this.colors.push(b,b,b)}if(s===!0){const b=r[0][v];b!==void 0?this.uvs.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new q,new q,new q))}if(a===!0){const b=r[1][v];b!==void 0?this.uvs2.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new q,new q,new q))}for(let b=0;b<l;b++){const _=o[b].vertices;h[b].data.push(_[y.a],_[y.b],_[y.c])}for(let b=0;b<d;b++){const _=c[b].vertexNormals[v];u[b].data.push(_.a,_.b,_.c)}f&&this.skinIndices.push(p[y.a],p[y.b],p[y.c]),g&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}}class Gc{constructor(e,n,i,r,s,a=0){this.a=e,this.b=n,this.c=i,this.normal=r&&r.isVector3?r:new T,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new Ae,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=a}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let n=0,i=e.vertexNormals.length;n<i;n++)this.vertexNormals[n]=e.vertexNormals[n].clone();for(let n=0,i=e.vertexColors.length;n<i;n++)this.vertexColors[n]=e.vertexColors[n].clone();return this}}class nT extends Gn{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new qs(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){let l;try{l=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),l=JSON.parse(o.substring(65,o.length-2))}const h=s.parse(l);n&&n(h)},i,r)}parse(e){return new s0(e)}}class s0{constructor(e){this.type="Font",this.data=e}generateShapes(e,n=100){const i=[],r=iT(e,n,this.data);for(let s=0,a=r.length;s<a;s++)Array.prototype.push.apply(i,r[s].toShapes());return i}}function iT(t,e,n){const i=Array.from(t),r=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,a=[];let o=0,l=0;for(let h=0;h<i.length;h++){const c=i[h];if(c===`
`)o=0,l-=s;else{const d=rT(c,r,o,l,n);o+=d.offsetX,a.push(d.path)}}return a}function rT(t,e,n,i,r){const s=r.glyphs[t]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");return}const a=new KM;let o,l,h,c,d,u,p,m;if(s.o){const f=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let g=0,v=f.length;g<v;)switch(f[g++]){case"m":o=f[g++]*e+n,l=f[g++]*e+i,a.moveTo(o,l);break;case"l":o=f[g++]*e+n,l=f[g++]*e+i,a.lineTo(o,l);break;case"q":h=f[g++]*e+n,c=f[g++]*e+i,d=f[g++]*e+n,u=f[g++]*e+i,a.quadraticCurveTo(d,u,h,c);break;case"b":h=f[g++]*e+n,c=f[g++]*e+i,d=f[g++]*e+n,u=f[g++]*e+i,p=f[g++]*e+n,m=f[g++]*e+i,a.bezierCurveTo(d,u,p,m,h,c);break}}return{offsetX:s.ha*e,path:a}}s0.prototype.isFont=!0;const uc=new WeakMap;class sT extends Gn{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,n,i,r){const s=new qs(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,a=>{const o={attributeIDs:this.defaultAttributeIDs,attributeTypes:this.defaultAttributeTypes,useUniqueIDs:!1};this.decodeGeometry(a,o).then(n).catch(r)},i,r)}decodeDracoFile(e,n,i,r){const s={attributeIDs:i||this.defaultAttributeIDs,attributeTypes:r||this.defaultAttributeTypes,useUniqueIDs:!!i};this.decodeGeometry(e,s).then(n)}decodeGeometry(e,n){for(const l in n.attributeTypes){const h=n.attributeTypes[l];h.BYTES_PER_ELEMENT!==void 0&&(n.attributeTypes[l]=h.name)}const i=JSON.stringify(n);if(uc.has(e)){const l=uc.get(e);if(l.key===i)return l.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let r;const s=this.workerNextTaskID++,a=e.byteLength,o=this._getWorker(s,a).then(l=>(r=l,new Promise((h,c)=>{r._callbacks[s]={resolve:h,reject:c},r.postMessage({type:"decode",id:s,taskConfig:n,buffer:e},[e])}))).then(l=>this._createGeometry(l.geometry));return o.catch(()=>!0).then(()=>{r&&s&&this._releaseTask(r,s)}),uc.set(e,{key:i,promise:o}),o}_createGeometry(e){const n=new Ve;e.index&&n.setIndex(new tt(e.index.array,1));for(let i=0;i<e.attributes.length;i++){const r=e.attributes[i],s=r.name,a=r.array,o=r.itemSize;n.setAttribute(s,new tt(a,o))}return n}_loadLibrary(e,n){const i=new qs(this.manager);return i.setPath(this.decoderPath),i.setResponseType(n),i.setWithCredentials(this.withCredentials),new Promise((r,s)=>{i.load(e,r,void 0,s)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",n=[];return e?n.push(this._loadLibrary("draco_decoder.js","text")):(n.push(this._loadLibrary("draco_wasm_wrapper.js","text")),n.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(n).then(i=>{const r=i[0];e||(this.decoderConfig.wasmBinary=i[1]);const s=aT.toString(),a=["/* draco decoder */",r,"","/* worker */",s.substring(s.indexOf("{")+1,s.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([a]))}),this.decoderPending}_getWorker(e,n){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const r=new Worker(this.workerSourceURL);r._callbacks={},r._taskCosts={},r._taskLoad=0,r.postMessage({type:"init",decoderConfig:this.decoderConfig}),r.onmessage=function(s){const a=s.data;switch(a.type){case"decode":r._callbacks[a.id].resolve(a);break;case"error":r._callbacks[a.id].reject(a);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+a.type+'"')}},this.workerPool.push(r)}else this.workerPool.sort(function(r,s){return r._taskLoad>s._taskLoad?-1:1});const i=this.workerPool[this.workerPool.length-1];return i._taskCosts[e]=n,i._taskLoad+=n,i})}_releaseTask(e,n){e._taskLoad-=e._taskCosts[n],delete e._callbacks[n],delete e._taskCosts[n]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this}}function aT(){let t,e;onmessage=function(a){const o=a.data;switch(o.type){case"init":t=o.decoderConfig,e=new Promise(function(c){t.onModuleLoaded=function(d){c({draco:d})},DracoDecoderModule(t)});break;case"decode":const l=o.buffer,h=o.taskConfig;e.then(c=>{const d=c.draco,u=new d.Decoder,p=new d.DecoderBuffer;p.Init(new Int8Array(l),l.byteLength);try{const m=n(d,u,p,h),f=m.attributes.map(g=>g.array.buffer);m.index&&f.push(m.index.array.buffer),self.postMessage({type:"decode",id:o.id,geometry:m},f)}catch(m){console.error(m),self.postMessage({type:"error",id:o.id,error:m.message})}finally{d.destroy(p),d.destroy(u)}});break}};function n(a,o,l,h){const c=h.attributeIDs,d=h.attributeTypes;let u,p;const m=o.GetEncodedGeometryType(l);if(m===a.TRIANGULAR_MESH)u=new a.Mesh,p=o.DecodeBufferToMesh(l,u);else if(m===a.POINT_CLOUD)u=new a.PointCloud,p=o.DecodeBufferToPointCloud(l,u);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!p.ok()||u.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+p.error_msg());const f={index:null,attributes:[]};for(const g in c){const v=self[d[g]];let y,w;if(h.useUniqueIDs)w=c[g],y=o.GetAttributeByUniqueId(u,w);else{if(w=o.GetAttributeId(u,a[c[g]]),w===-1)continue;y=o.GetAttribute(u,w)}f.attributes.push(r(a,o,u,g,v,y))}return m===a.TRIANGULAR_MESH&&(f.index=i(a,o,u)),a.destroy(u),f}function i(a,o,l){const c=l.num_faces()*3,d=c*4,u=a._malloc(d);o.GetTrianglesUInt32Array(l,d,u);const p=new Uint32Array(a.HEAPF32.buffer,u,c).slice();return a._free(u),{array:p,itemSize:1}}function r(a,o,l,h,c,d){const u=d.num_components(),m=l.num_points()*u,f=m*c.BYTES_PER_ELEMENT,g=s(a,c),v=a._malloc(f);o.GetAttributeDataArrayForAllPoints(l,d,g,f,v);const y=new c(a.HEAPF32.buffer,v,m).slice();return a._free(v),{name:h,array:y,itemSize:u}}function s(a,o){switch(o){case Float32Array:return a.DT_FLOAT32;case Int8Array:return a.DT_INT8;case Int16Array:return a.DT_INT16;case Int32Array:return a.DT_INT32;case Uint8Array:return a.DT_UINT8;case Uint16Array:return a.DT_UINT16;case Uint32Array:return a.DT_UINT32}}}function oT(t,e=!1){const n=t[0].index!==null,i=new Set(Object.keys(t[0].attributes)),r=new Set(Object.keys(t[0].morphAttributes)),s={},a={},o=t[0].morphTargetsRelative,l=new Ve;let h=0;for(let c=0;c<t.length;++c){const d=t[c];let u=0;if(n!==(d.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const p in d.attributes){if(!i.has(p))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+'. All geometries must have compatible attributes; make sure "'+p+'" attribute exists among all geometries, or in none of them.'),null;s[p]===void 0&&(s[p]=[]),s[p].push(d.attributes[p]),u++}if(u!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". Make sure all geometries have the same number of attributes."),null;if(o!==d.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const p in d.morphAttributes){if(!r.has(p))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+".  .morphAttributes must be consistent throughout all geometries."),null;a[p]===void 0&&(a[p]=[]),a[p].push(d.morphAttributes[p])}if(l.userData.mergedUserData=l.userData.mergedUserData||[],l.userData.mergedUserData.push(d.userData),e){let p;if(n)p=d.index.count;else if(d.attributes.position!==void 0)p=d.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". The geometry must have either an index or a position attribute"),null;l.addGroup(h,p,c),h+=p}}if(n){let c=0;const d=[];for(let u=0;u<t.length;++u){const p=t[u].index;for(let m=0;m<p.count;++m)d.push(p.getX(m)+c);c+=t[u].attributes.position.count}l.setIndex(d)}for(const c in s){const d=gf(s[c]);if(!d)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+c+" attribute."),null;l.setAttribute(c,d)}for(const c in a){const d=a[c][0].length;if(d===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[c]=[];for(let u=0;u<d;++u){const p=[];for(let f=0;f<a[c].length;++f)p.push(a[c][f][u]);const m=gf(p);if(!m)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+c+" morphAttribute."),null;l.morphAttributes[c].push(m)}}return l}function gf(t){let e,n,i,r=0;for(let o=0;o<t.length;++o){const l=t[o];if(l.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(e===void 0&&(e=l.array.constructor),e!==l.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(n===void 0&&(n=l.itemSize),n!==l.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=l.normalized),i!==l.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;r+=l.array.length}const s=new e(r);let a=0;for(let o=0;o<t.length;++o)s.set(t[o].array,a),a+=t[o].array.length;return new tt(s,n,i)}var lT=Object.create,hh=Object.defineProperty,hT=Object.defineProperties,cT=Object.getOwnPropertyDescriptor,uT=Object.getOwnPropertyDescriptors,dT=Object.getOwnPropertyNames,vf=Object.getOwnPropertySymbols,pT=Object.getPrototypeOf,a0=Object.prototype.hasOwnProperty,fT=Object.prototype.propertyIsEnumerable,yf=(t,e,n)=>e in t?hh(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ve=(t,e)=>{for(var n in e||(e={}))a0.call(e,n)&&yf(t,n,e[n]);if(vf)for(var n of vf(e))fT.call(e,n)&&yf(t,n,e[n]);return t},Ie=(t,e)=>hT(t,uT(e)),mT=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),o0=(t,e)=>{for(var n in e)hh(t,n,{get:e[n],enumerable:!0})},gT=(t,e,n,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of dT(e))!a0.call(t,r)&&r!==n&&hh(t,r,{get:()=>e[r],enumerable:!(i=cT(e,r))||i.enumerable});return t},vT=(t,e,n)=>(n=t!=null?lT(pT(t)):{},gT(e||!t||!t.__esModule?hh(n,"default",{value:t,enumerable:!0}):n,t)),yT=mT((t,e)=>{(function(n,i){typeof t=="object"&&typeof e<"u"?i(t):typeof define=="function"&&define.amd?define(["exports"],i):i((n=typeof globalThis<"u"?globalThis:n||self).SVDJS={})})(t,function(n){n.SVD=function(i,r,s,a,o){if(r=r===void 0||r,s=s===void 0||s,o=1e-64/(a=a||Math.pow(2,-52)),!i)throw new TypeError("Matrix a is not defined");var l,h,c,d,u,p,m,f,g,v,y,w,S=i[0].length,b=i.length;if(b<S)throw new TypeError("Invalid matrix: m < n");for(var _=[],E=[],x=[],A=r==="f"?b:S,M=v=m=0;M<b;M++)E[M]=new Array(A).fill(0);for(M=0;M<S;M++)x[M]=new Array(S).fill(0);var C,F=new Array(S).fill(0);for(M=0;M<b;M++)for(l=0;l<S;l++)E[M][l]=i[M][l];for(M=0;M<S;M++){for(_[M]=m,g=0,c=M+1,l=M;l<b;l++)g+=Math.pow(E[l][M],2);if(g<o)m=0;else for(f=(p=E[M][M])*(m=p<0?Math.sqrt(g):-Math.sqrt(g))-g,E[M][M]=p-m,l=c;l<S;l++){for(g=0,h=M;h<b;h++)g+=E[h][M]*E[h][l];for(p=g/f,h=M;h<b;h++)E[h][l]=E[h][l]+p*E[h][M]}for(F[M]=m,g=0,l=c;l<S;l++)g+=Math.pow(E[M][l],2);if(g<o)m=0;else{for(f=(p=E[M][M+1])*(m=p<0?Math.sqrt(g):-Math.sqrt(g))-g,E[M][M+1]=p-m,l=c;l<S;l++)_[l]=E[M][l]/f;for(l=c;l<b;l++){for(g=0,h=c;h<S;h++)g+=E[l][h]*E[M][h];for(h=c;h<S;h++)E[l][h]=E[l][h]+g*_[h]}}v<(y=Math.abs(F[M])+Math.abs(_[M]))&&(v=y)}if(s)for(M=S-1;0<=M;M--){if(m!==0){for(f=E[M][M+1]*m,l=c;l<S;l++)x[l][M]=E[M][l]/f;for(l=c;l<S;l++){for(g=0,h=c;h<S;h++)g+=E[M][h]*x[h][l];for(h=c;h<S;h++)x[h][l]=x[h][l]+g*x[h][M]}}for(l=c;l<S;l++)x[M][l]=0,x[l][M]=0;x[M][M]=1,m=_[M],c=M}if(r){if(r==="f")for(M=S;M<b;M++){for(l=S;l<b;l++)E[M][l]=0;E[M][M]=1}for(M=S-1;0<=M;M--){for(c=M+1,m=F[M],l=c;l<A;l++)E[M][l]=0;if(m!==0){for(f=E[M][M]*m,l=c;l<A;l++){for(g=0,h=c;h<b;h++)g+=E[h][M]*E[h][l];for(p=g/f,h=M;h<b;h++)E[h][l]=E[h][l]+p*E[h][M]}for(l=M;l<b;l++)E[l][M]=E[l][M]/m}else for(l=M;l<b;l++)E[l][M]=0;E[M][M]=E[M][M]+1}}for(a*=v,h=S-1;0<=h;h--)for(var W=0;W<50;W++){for(C=!1,c=h;0<=c;c--){if(Math.abs(_[c])<=a){C=!0;break}if(Math.abs(F[c-1])<=a)break}if(!C){for(u=0,d=c-(g=1),M=c;M<h+1&&(p=g*_[M],_[M]=u*_[M],!(Math.abs(p)<=a));M++)if(m=F[M],F[M]=Math.sqrt(p*p+m*m),u=m/(f=F[M]),g=-p/f,r)for(l=0;l<b;l++)y=E[l][d],w=E[l][M],E[l][d]=y*u+w*g,E[l][M]=-y*g+w*u}if(w=F[h],c===h){if(w<0&&(F[h]=-w,s))for(l=0;l<S;l++)x[l][h]=-x[l][h];break}for(v=F[c],p=(((y=F[h-1])-w)*(y+w)+((m=_[h-1])-(f=_[h]))*(m+f))/(2*f*y),m=Math.sqrt(p*p+1),p=((v-w)*(v+w)+f*(y/(p<0?p-m:p+m)-f))/v,M=c+(g=u=1);M<h+1;M++){if(m=_[M],y=F[M],f=g*m,m*=u,w=Math.sqrt(p*p+f*f),p=v*(u=p/(_[M-1]=w))+m*(g=f/w),m=-v*g+m*u,f=y*g,y*=u,s)for(l=0;l<S;l++)v=x[l][M-1],w=x[l][M],x[l][M-1]=v*u+w*g,x[l][M]=-v*g+w*u;if(w=Math.sqrt(p*p+f*f),p=(u=p/(F[M-1]=w))*m+(g=f/w)*y,v=-g*m+u*y,r)for(l=0;l<b;l++)y=E[l][M-1],w=E[l][M],E[l][M-1]=y*u+w*g,E[l][M]=-y*g+w*u}_[c]=0,_[h]=p,F[h]=v}for(M=0;M<S;M++)F[M]<a&&(F[M]=0);return{u:E,q:F,v:x}},n.VERSION="1.1.1",Object.defineProperty(n,"__esModule",{value:!0})})});function xT(t){return Array.isArray(t)?t:[t]}var bT=typeof global=="object"&&global&&global.Object===Object&&global,l0=bT,_T=typeof self=="object"&&self&&self.Object===Object&&self,wT=l0||_T||Function("return this")(),Di=wT,ST=Di.Symbol,Ai=ST,h0=Object.prototype,MT=h0.hasOwnProperty,TT=h0.toString,Ea=Ai?Ai.toStringTag:void 0;function ET(t){var e=MT.call(t,Ea),n=t[Ea];try{t[Ea]=void 0;var i=!0}catch{}var r=TT.call(t);return i&&(e?t[Ea]=n:delete t[Ea]),r}var AT=ET,CT=Object.prototype,LT=CT.toString;function PT(t){return LT.call(t)}var DT=PT,RT="[object Null]",OT="[object Undefined]",xf=Ai?Ai.toStringTag:void 0;function IT(t){return t==null?t===void 0?OT:RT:xf&&xf in Object(t)?AT(t):DT(t)}var $r=IT;function NT(t){return t!=null&&typeof t=="object"}var br=NT,zT="[object Symbol]";function BT(t){return typeof t=="symbol"||br(t)&&$r(t)==zT}var Qu=BT;function FT(t,e){for(var n=-1,i=t==null?0:t.length,r=Array(i);++n<i;)r[n]=e(t[n],n,t);return r}var c0=FT,UT=Array.isArray,Ci=UT,kT=1/0,bf=Ai?Ai.prototype:void 0,_f=bf?bf.toString:void 0;function u0(t){if(typeof t=="string")return t;if(Ci(t))return c0(t,u0)+"";if(Qu(t))return _f?_f.call(t):"";var e=t+"";return e=="0"&&1/t==-kT?"-0":e}var VT=u0;function HT(t){var e=typeof t;return t!=null&&(e=="object"||e=="function")}var _r=HT;function GT(t){return t}var d0=GT,WT="[object AsyncFunction]",jT="[object Function]",qT="[object GeneratorFunction]",XT="[object Proxy]";function JT(t){if(!_r(t))return!1;var e=$r(t);return e==jT||e==qT||e==WT||e==XT}var ed=JT,$T=Di["__core-js_shared__"],dc=$T,wf=function(){var t=/[^.]+$/.exec(dc&&dc.keys&&dc.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}();function YT(t){return!!wf&&wf in t}var ZT=YT,KT=Function.prototype,QT=KT.toString;function eE(t){if(t!=null){try{return QT.call(t)}catch{}try{return t+""}catch{}}return""}var Yr=eE,tE=/[\\^$.*+?()[\]{}|]/g,nE=/^\[object .+?Constructor\]$/,iE=Function.prototype,rE=Object.prototype,sE=iE.toString,aE=rE.hasOwnProperty,oE=RegExp("^"+sE.call(aE).replace(tE,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function lE(t){if(!_r(t)||ZT(t))return!1;var e=ed(t)?oE:nE;return e.test(Yr(t))}var hE=lE;function cE(t,e){return t==null?void 0:t[e]}var uE=cE;function dE(t,e){var n=uE(t,e);return hE(n)?n:void 0}var Zr=dE,pE=Zr(Di,"WeakMap"),Wc=pE,Sf=Object.create,fE=function(){function t(){}return function(e){if(!_r(e))return{};if(Sf)return Sf(e);t.prototype=e;var n=new t;return t.prototype=void 0,n}}(),mE=fE;function gE(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}var vE=gE;function yE(t,e){var n=-1,i=t.length;for(e||(e=Array(i));++n<i;)e[n]=t[n];return e}var p0=yE,xE=800,bE=16,_E=Date.now;function wE(t){var e=0,n=0;return function(){var i=_E(),r=bE-(i-n);if(n=i,r>0){if(++e>=xE)return arguments[0]}else e=0;return t.apply(void 0,arguments)}}var SE=wE;function ME(t){return function(){return t}}var TE=ME,EE=function(){try{var t=Zr(Object,"defineProperty");return t({},"",{}),t}catch{}}(),Fl=EE,AE=Fl?function(t,e){return Fl(t,"toString",{configurable:!0,enumerable:!1,value:TE(e),writable:!0})}:d0,CE=AE,LE=SE(CE),f0=LE;function PE(t,e){for(var n=-1,i=t==null?0:t.length;++n<i&&e(t[n],n,t)!==!1;);return t}var DE=PE,RE=9007199254740991,OE=/^(?:0|[1-9]\d*)$/;function IE(t,e){var n=typeof t;return e=e==null?RE:e,!!e&&(n=="number"||n!="symbol"&&OE.test(t))&&t>-1&&t%1==0&&t<e}var m0=IE;function NE(t,e,n){e=="__proto__"&&Fl?Fl(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}var td=NE;function zE(t,e){return t===e||t!==t&&e!==e}var ch=zE,BE=Object.prototype,FE=BE.hasOwnProperty;function UE(t,e,n){var i=t[e];(!(FE.call(t,e)&&ch(i,n))||n===void 0&&!(e in t))&&td(t,e,n)}var g0=UE;function kE(t,e,n,i){var r=!n;n||(n={});for(var s=-1,a=e.length;++s<a;){var o=e[s],l=i?i(n[o],t[o],o,n,t):void 0;l===void 0&&(l=t[o]),r?td(n,o,l):g0(n,o,l)}return n}var oa=kE,Mf=Math.max;function VE(t,e,n){return e=Mf(e===void 0?t.length-1:e,0),function(){for(var i=arguments,r=-1,s=Mf(i.length-e,0),a=Array(s);++r<s;)a[r]=i[e+r];r=-1;for(var o=Array(e+1);++r<e;)o[r]=i[r];return o[e]=n(a),vE(t,this,o)}}var v0=VE;function HE(t,e){return f0(v0(t,e,d0),t+"")}var GE=HE,WE=9007199254740991;function jE(t){return typeof t=="number"&&t>-1&&t%1==0&&t<=WE}var y0=jE;function qE(t){return t!=null&&y0(t.length)&&!ed(t)}var uh=qE;function XE(t,e,n){if(!_r(n))return!1;var i=typeof e;return(i=="number"?uh(n)&&m0(e,n.length):i=="string"&&e in n)?ch(n[e],t):!1}var JE=XE;function $E(t){return GE(function(e,n){var i=-1,r=n.length,s=r>1?n[r-1]:void 0,a=r>2?n[2]:void 0;for(s=t.length>3&&typeof s=="function"?(r--,s):void 0,a&&JE(n[0],n[1],a)&&(s=r<3?void 0:s,r=1),e=Object(e);++i<r;){var o=n[i];o&&t(e,o,i,s)}return e})}var YE=$E,ZE=Object.prototype;function KE(t){var e=t&&t.constructor,n=typeof e=="function"&&e.prototype||ZE;return t===n}var nd=KE;function QE(t,e){for(var n=-1,i=Array(t);++n<t;)i[n]=e(n);return i}var e2=QE,t2="[object Arguments]";function n2(t){return br(t)&&$r(t)==t2}var Tf=n2,x0=Object.prototype,i2=x0.hasOwnProperty,r2=x0.propertyIsEnumerable,s2=Tf(function(){return arguments}())?Tf:function(t){return br(t)&&i2.call(t,"callee")&&!r2.call(t,"callee")},Ul=s2;function a2(){return!1}var o2=a2,b0=typeof Rn=="object"&&Rn&&!Rn.nodeType&&Rn,Ef=b0&&typeof On=="object"&&On&&!On.nodeType&&On,l2=Ef&&Ef.exports===b0,Af=l2?Di.Buffer:void 0,h2=Af?Af.isBuffer:void 0,c2=h2||o2,id=c2,u2="[object Arguments]",d2="[object Array]",p2="[object Boolean]",f2="[object Date]",m2="[object Error]",g2="[object Function]",v2="[object Map]",y2="[object Number]",x2="[object Object]",b2="[object RegExp]",_2="[object Set]",w2="[object String]",S2="[object WeakMap]",M2="[object ArrayBuffer]",T2="[object DataView]",E2="[object Float32Array]",A2="[object Float64Array]",C2="[object Int8Array]",L2="[object Int16Array]",P2="[object Int32Array]",D2="[object Uint8Array]",R2="[object Uint8ClampedArray]",O2="[object Uint16Array]",I2="[object Uint32Array]",At={};At[E2]=At[A2]=At[C2]=At[L2]=At[P2]=At[D2]=At[R2]=At[O2]=At[I2]=!0;At[u2]=At[d2]=At[M2]=At[p2]=At[T2]=At[f2]=At[m2]=At[g2]=At[v2]=At[y2]=At[x2]=At[b2]=At[_2]=At[w2]=At[S2]=!1;function N2(t){return br(t)&&y0(t.length)&&!!At[$r(t)]}var z2=N2;function B2(t){return function(e){return t(e)}}var rd=B2,_0=typeof Rn=="object"&&Rn&&!Rn.nodeType&&Rn,Wa=_0&&typeof On=="object"&&On&&!On.nodeType&&On,F2=Wa&&Wa.exports===_0,pc=F2&&l0.process,U2=function(){try{var t=Wa&&Wa.require&&Wa.require("util").types;return t||pc&&pc.binding&&pc.binding("util")}catch{}}(),Xs=U2,Cf=Xs&&Xs.isTypedArray,k2=Cf?rd(Cf):z2,w0=k2,V2=Object.prototype,H2=V2.hasOwnProperty;function G2(t,e){var n=Ci(t),i=!n&&Ul(t),r=!n&&!i&&id(t),s=!n&&!i&&!r&&w0(t),a=n||i||r||s,o=a?e2(t.length,String):[],l=o.length;for(var h in t)(e||H2.call(t,h))&&!(a&&(h=="length"||r&&(h=="offset"||h=="parent")||s&&(h=="buffer"||h=="byteLength"||h=="byteOffset")||m0(h,l)))&&o.push(h);return o}var S0=G2;function W2(t,e){return function(n){return t(e(n))}}var M0=W2,j2=M0(Object.keys,Object),q2=j2,X2=Object.prototype,J2=X2.hasOwnProperty;function $2(t){if(!nd(t))return q2(t);var e=[];for(var n in Object(t))J2.call(t,n)&&n!="constructor"&&e.push(n);return e}var Y2=$2;function Z2(t){return uh(t)?S0(t):Y2(t)}var sd=Z2;function K2(t){var e=[];if(t!=null)for(var n in Object(t))e.push(n);return e}var Q2=K2,eA=Object.prototype,tA=eA.hasOwnProperty;function nA(t){if(!_r(t))return Q2(t);var e=nd(t),n=[];for(var i in t)i=="constructor"&&(e||!tA.call(t,i))||n.push(i);return n}var iA=nA;function rA(t){return uh(t)?S0(t,!0):iA(t)}var vo=rA,sA=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,aA=/^\w*$/;function oA(t,e){if(Ci(t))return!1;var n=typeof t;return n=="number"||n=="symbol"||n=="boolean"||t==null||Qu(t)?!0:aA.test(t)||!sA.test(t)||e!=null&&t in Object(e)}var lA=oA,hA=Zr(Object,"create"),ro=hA;function cA(){this.__data__=ro?ro(null):{},this.size=0}var uA=cA;function dA(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}var pA=dA,fA="__lodash_hash_undefined__",mA=Object.prototype,gA=mA.hasOwnProperty;function vA(t){var e=this.__data__;if(ro){var n=e[t];return n===fA?void 0:n}return gA.call(e,t)?e[t]:void 0}var yA=vA,xA=Object.prototype,bA=xA.hasOwnProperty;function _A(t){var e=this.__data__;return ro?e[t]!==void 0:bA.call(e,t)}var wA=_A,SA="__lodash_hash_undefined__";function MA(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=ro&&e===void 0?SA:e,this}var TA=MA;function la(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}la.prototype.clear=uA;la.prototype.delete=pA;la.prototype.get=yA;la.prototype.has=wA;la.prototype.set=TA;var Lf=la;function EA(){this.__data__=[],this.size=0}var AA=EA;function CA(t,e){for(var n=t.length;n--;)if(ch(t[n][0],e))return n;return-1}var dh=CA,LA=Array.prototype,PA=LA.splice;function DA(t){var e=this.__data__,n=dh(e,t);if(n<0)return!1;var i=e.length-1;return n==i?e.pop():PA.call(e,n,1),--this.size,!0}var RA=DA;function OA(t){var e=this.__data__,n=dh(e,t);return n<0?void 0:e[n][1]}var IA=OA;function NA(t){return dh(this.__data__,t)>-1}var zA=NA;function BA(t,e){var n=this.__data__,i=dh(n,t);return i<0?(++this.size,n.push([t,e])):n[i][1]=e,this}var FA=BA;function ha(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}ha.prototype.clear=AA;ha.prototype.delete=RA;ha.prototype.get=IA;ha.prototype.has=zA;ha.prototype.set=FA;var ph=ha,UA=Zr(Di,"Map"),so=UA;function kA(){this.size=0,this.__data__={hash:new Lf,map:new(so||ph),string:new Lf}}var VA=kA;function HA(t){var e=typeof t;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?t!=="__proto__":t===null}var GA=HA;function WA(t,e){var n=t.__data__;return GA(e)?n[typeof e=="string"?"string":"hash"]:n.map}var fh=WA;function jA(t){var e=fh(this,t).delete(t);return this.size-=e?1:0,e}var qA=jA;function XA(t){return fh(this,t).get(t)}var JA=XA;function $A(t){return fh(this,t).has(t)}var YA=$A;function ZA(t,e){var n=fh(this,t),i=n.size;return n.set(t,e),this.size+=n.size==i?0:1,this}var KA=ZA;function ca(t){var e=-1,n=t==null?0:t.length;for(this.clear();++e<n;){var i=t[e];this.set(i[0],i[1])}}ca.prototype.clear=VA;ca.prototype.delete=qA;ca.prototype.get=JA;ca.prototype.has=YA;ca.prototype.set=KA;var ad=ca,QA="Expected a function";function od(t,e){if(typeof t!="function"||e!=null&&typeof e!="function")throw new TypeError(QA);var n=function(){var i=arguments,r=e?e.apply(this,i):i[0],s=n.cache;if(s.has(r))return s.get(r);var a=t.apply(this,i);return n.cache=s.set(r,a)||s,a};return n.cache=new(od.Cache||ad),n}od.Cache=ad;var e3=od,t3=500;function n3(t){var e=e3(t,function(i){return n.size===t3&&n.clear(),i}),n=e.cache;return e}var i3=n3,r3=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,s3=/\\(\\)?/g,a3=i3(function(t){var e=[];return t.charCodeAt(0)===46&&e.push(""),t.replace(r3,function(n,i,r,s){e.push(r?s.replace(s3,"$1"):i||n)}),e}),o3=a3;function l3(t){return t==null?"":VT(t)}var h3=l3;function c3(t,e){return Ci(t)?t:lA(t,e)?[t]:o3(h3(t))}var ld=c3,u3=1/0;function d3(t){if(typeof t=="string"||Qu(t))return t;var e=t+"";return e=="0"&&1/t==-u3?"-0":e}var T0=d3;function p3(t,e){e=ld(e,t);for(var n=0,i=e.length;t!=null&&n<i;)t=t[T0(e[n++])];return n&&n==i?t:void 0}var f3=p3;function m3(t,e){for(var n=-1,i=e.length,r=t.length;++n<i;)t[r+n]=e[n];return t}var hd=m3,Pf=Ai?Ai.isConcatSpreadable:void 0;function g3(t){return Ci(t)||Ul(t)||!!(Pf&&t&&t[Pf])}var v3=g3;function E0(t,e,n,i,r){var s=-1,a=t.length;for(n||(n=v3),r||(r=[]);++s<a;){var o=t[s];e>0&&n(o)?e>1?E0(o,e-1,n,i,r):hd(r,o):i||(r[r.length]=o)}return r}var y3=E0;function x3(t){var e=t==null?0:t.length;return e?y3(t,1):[]}var b3=x3;function _3(t){return f0(v0(t,void 0,b3),t+"")}var w3=_3,S3=M0(Object.getPrototypeOf,Object),cd=S3,M3="[object Object]",T3=Function.prototype,E3=Object.prototype,A0=T3.toString,A3=E3.hasOwnProperty,C3=A0.call(Object);function L3(t){if(!br(t)||$r(t)!=M3)return!1;var e=cd(t);if(e===null)return!0;var n=A3.call(e,"constructor")&&e.constructor;return typeof n=="function"&&n instanceof n&&A0.call(n)==C3}var C0=L3;function P3(t,e,n){var i=-1,r=t.length;e<0&&(e=-e>r?0:r+e),n=n>r?r:n,n<0&&(n+=r),r=e>n?0:n-e>>>0,e>>>=0;for(var s=Array(r);++i<r;)s[i]=t[i+e];return s}var D3=P3;function R3(){this.__data__=new ph,this.size=0}var O3=R3;function I3(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}var N3=I3;function z3(t){return this.__data__.get(t)}var B3=z3;function F3(t){return this.__data__.has(t)}var U3=F3,k3=200;function V3(t,e){var n=this.__data__;if(n instanceof ph){var i=n.__data__;if(!so||i.length<k3-1)return i.push([t,e]),this.size=++n.size,this;n=this.__data__=new ad(i)}return n.set(t,e),this.size=n.size,this}var H3=V3;function ua(t){var e=this.__data__=new ph(t);this.size=e.size}ua.prototype.clear=O3;ua.prototype.delete=N3;ua.prototype.get=B3;ua.prototype.has=U3;ua.prototype.set=H3;var L0=ua;function G3(t,e){return t&&oa(e,sd(e),t)}var W3=G3;function j3(t,e){return t&&oa(e,vo(e),t)}var q3=j3,P0=typeof Rn=="object"&&Rn&&!Rn.nodeType&&Rn,Df=P0&&typeof On=="object"&&On&&!On.nodeType&&On,X3=Df&&Df.exports===P0,Rf=X3?Di.Buffer:void 0,Of=Rf?Rf.allocUnsafe:void 0;function J3(t,e){if(e)return t.slice();var n=t.length,i=Of?Of(n):new t.constructor(n);return t.copy(i),i}var D0=J3;function $3(t,e){for(var n=-1,i=t==null?0:t.length,r=0,s=[];++n<i;){var a=t[n];e(a,n,t)&&(s[r++]=a)}return s}var Y3=$3;function Z3(){return[]}var R0=Z3,K3=Object.prototype,Q3=K3.propertyIsEnumerable,If=Object.getOwnPropertySymbols,eC=If?function(t){return t==null?[]:(t=Object(t),Y3(If(t),function(e){return Q3.call(t,e)}))}:R0,ud=eC;function tC(t,e){return oa(t,ud(t),e)}var nC=tC,iC=Object.getOwnPropertySymbols,rC=iC?function(t){for(var e=[];t;)hd(e,ud(t)),t=cd(t);return e}:R0,O0=rC;function sC(t,e){return oa(t,O0(t),e)}var aC=sC;function oC(t,e,n){var i=e(t);return Ci(t)?i:hd(i,n(t))}var I0=oC;function lC(t){return I0(t,sd,ud)}var hC=lC;function cC(t){return I0(t,vo,O0)}var N0=cC,uC=Zr(Di,"DataView"),jc=uC,dC=Zr(Di,"Promise"),qc=dC,pC=Zr(Di,"Set"),Xc=pC,Nf="[object Map]",fC="[object Object]",zf="[object Promise]",Bf="[object Set]",Ff="[object WeakMap]",Uf="[object DataView]",mC=Yr(jc),gC=Yr(so),vC=Yr(qc),yC=Yr(Xc),xC=Yr(Wc),Lr=$r;(jc&&Lr(new jc(new ArrayBuffer(1)))!=Uf||so&&Lr(new so)!=Nf||qc&&Lr(qc.resolve())!=zf||Xc&&Lr(new Xc)!=Bf||Wc&&Lr(new Wc)!=Ff)&&(Lr=function(t){var e=$r(t),n=e==fC?t.constructor:void 0,i=n?Yr(n):"";if(i)switch(i){case mC:return Uf;case gC:return Nf;case vC:return zf;case yC:return Bf;case xC:return Ff}return e});var dd=Lr,bC=Object.prototype,_C=bC.hasOwnProperty;function wC(t){var e=t.length,n=new t.constructor(e);return e&&typeof t[0]=="string"&&_C.call(t,"index")&&(n.index=t.index,n.input=t.input),n}var SC=wC,MC=Di.Uint8Array,kf=MC;function TC(t){var e=new t.constructor(t.byteLength);return new kf(e).set(new kf(t)),e}var pd=TC;function EC(t,e){var n=e?pd(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}var AC=EC,CC=/\w*$/;function LC(t){var e=new t.constructor(t.source,CC.exec(t));return e.lastIndex=t.lastIndex,e}var PC=LC,Vf=Ai?Ai.prototype:void 0,Hf=Vf?Vf.valueOf:void 0;function DC(t){return Hf?Object(Hf.call(t)):{}}var RC=DC;function OC(t,e){var n=e?pd(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}var z0=OC,IC="[object Boolean]",NC="[object Date]",zC="[object Map]",BC="[object Number]",FC="[object RegExp]",UC="[object Set]",kC="[object String]",VC="[object Symbol]",HC="[object ArrayBuffer]",GC="[object DataView]",WC="[object Float32Array]",jC="[object Float64Array]",qC="[object Int8Array]",XC="[object Int16Array]",JC="[object Int32Array]",$C="[object Uint8Array]",YC="[object Uint8ClampedArray]",ZC="[object Uint16Array]",KC="[object Uint32Array]";function QC(t,e,n){var i=t.constructor;switch(e){case HC:return pd(t);case IC:case NC:return new i(+t);case GC:return AC(t,n);case WC:case jC:case qC:case XC:case JC:case $C:case YC:case ZC:case KC:return z0(t,n);case zC:return new i;case BC:case kC:return new i(t);case FC:return PC(t);case UC:return new i;case VC:return RC(t)}}var eL=QC;function tL(t){return typeof t.constructor=="function"&&!nd(t)?mE(cd(t)):{}}var B0=tL,nL="[object Map]";function iL(t){return br(t)&&dd(t)==nL}var rL=iL,Gf=Xs&&Xs.isMap,sL=Gf?rd(Gf):rL,aL=sL,oL="[object Set]";function lL(t){return br(t)&&dd(t)==oL}var hL=lL,Wf=Xs&&Xs.isSet,cL=Wf?rd(Wf):hL,uL=cL,dL=1,pL=2,fL=4,F0="[object Arguments]",mL="[object Array]",gL="[object Boolean]",vL="[object Date]",yL="[object Error]",U0="[object Function]",xL="[object GeneratorFunction]",bL="[object Map]",_L="[object Number]",k0="[object Object]",wL="[object RegExp]",SL="[object Set]",ML="[object String]",TL="[object Symbol]",EL="[object WeakMap]",AL="[object ArrayBuffer]",CL="[object DataView]",LL="[object Float32Array]",PL="[object Float64Array]",DL="[object Int8Array]",RL="[object Int16Array]",OL="[object Int32Array]",IL="[object Uint8Array]",NL="[object Uint8ClampedArray]",zL="[object Uint16Array]",BL="[object Uint32Array]",Tt={};Tt[F0]=Tt[mL]=Tt[AL]=Tt[CL]=Tt[gL]=Tt[vL]=Tt[LL]=Tt[PL]=Tt[DL]=Tt[RL]=Tt[OL]=Tt[bL]=Tt[_L]=Tt[k0]=Tt[wL]=Tt[SL]=Tt[ML]=Tt[TL]=Tt[IL]=Tt[NL]=Tt[zL]=Tt[BL]=!0;Tt[yL]=Tt[U0]=Tt[EL]=!1;function wl(t,e,n,i,r,s){var a,o=e&dL,l=e&pL,h=e&fL;if(n&&(a=r?n(t,i,r,s):n(t)),a!==void 0)return a;if(!_r(t))return t;var c=Ci(t);if(c){if(a=SC(t),!o)return p0(t,a)}else{var d=dd(t),u=d==U0||d==xL;if(id(t))return D0(t,o);if(d==k0||d==F0||u&&!r){if(a=l||u?{}:B0(t),!o)return l?aC(t,q3(a,t)):nC(t,W3(a,t))}else{if(!Tt[d])return r?t:{};a=eL(t,d,o)}}s||(s=new L0);var p=s.get(t);if(p)return p;s.set(t,a),uL(t)?t.forEach(function(g){a.add(wl(g,e,n,g,t,s))}):aL(t)&&t.forEach(function(g,v){a.set(v,wl(g,e,n,v,t,s))});var m=h?l?N0:hC:l?vo:sd,f=c?void 0:m(t);return DE(f||t,function(g,v){f&&(v=g,g=t[v]),g0(a,v,wl(g,e,n,v,t,s))}),a}var V0=wl,FL=1,UL=4;function kL(t){return V0(t,FL|UL)}var H0=kL;function VL(t){return function(e,n,i){for(var r=-1,s=Object(e),a=i(e),o=a.length;o--;){var l=a[t?o:++r];if(n(s[l],l,s)===!1)break}return e}}var HL=VL,GL=HL(),WL=GL;function jL(t,e,n){(n!==void 0&&!ch(t[e],n)||n===void 0&&!(e in t))&&td(t,e,n)}var Jc=jL;function qL(t){return br(t)&&uh(t)}var XL=qL;function JL(t,e){if(!(e==="constructor"&&typeof t[e]=="function")&&e!="__proto__")return t[e]}var $c=JL;function $L(t){return oa(t,vo(t))}var YL=$L;function ZL(t,e,n,i,r,s,a){var o=$c(t,n),l=$c(e,n),h=a.get(l);if(h){Jc(t,n,h);return}var c=s?s(o,l,n+"",t,e,a):void 0,d=c===void 0;if(d){var u=Ci(l),p=!u&&id(l),m=!u&&!p&&w0(l);c=l,u||p||m?Ci(o)?c=o:XL(o)?c=p0(o):p?(d=!1,c=D0(l,!0)):m?(d=!1,c=z0(l,!0)):c=[]:C0(l)||Ul(l)?(c=o,Ul(o)?c=YL(o):(!_r(o)||ed(o))&&(c=B0(l))):d=!1}d&&(a.set(l,c),r(c,l,i,s,a),a.delete(l)),Jc(t,n,c)}var KL=ZL;function G0(t,e,n,i,r){t!==e&&WL(e,function(s,a){if(r||(r=new L0),_r(s))KL(t,e,a,n,G0,i,r);else{var o=i?i($c(t,a),s,a+"",t,e,r):void 0;o===void 0&&(o=s),Jc(t,a,o)}},vo)}var QL=G0;function eP(t){var e=t==null?0:t.length;return e?t[e-1]:void 0}var tP=eP;function nP(t,e){return e.length<2?t:f3(t,D3(e,0,-1))}var iP=nP,rP=YE(function(t,e,n){QL(t,e,n)}),kl=rP;function sP(t,e){return e=ld(e,t),t=iP(t,e),t==null||delete t[T0(tP(e))]}var aP=sP;function oP(t){return C0(t)?void 0:t}var lP=oP,hP=1,cP=2,uP=4,dP=w3(function(t,e){var n={};if(t==null)return n;var i=!1;e=c0(e,function(s){return s=ld(s,t),i||(i=s.length>1),s}),oa(t,N0(t),n),i&&(n=V0(n,hP|cP|uP,lP));for(var r=e.length;r--;)aP(n,e[r]);return n}),Yc=dP,Vl;(t=>{t.all=["PerspectiveCamera","OrthographicCamera"];function e(n){return t.all.includes(n)}t.is=e})(Vl||(Vl={}));var ao;(t=>{t.DefaultUp=[0,1,0],t.DefaultTargetOffset=1e3,t.defaultData={far:1e5,type:"OrthographicCamera",perspective:{near:5,fov:45,zoom:1},orthographic:{near:-1e5,zoom:1},up:t.DefaultUp,isUpVectorFlipped:!1,targetOffset:t.DefaultTargetOffset};function e(n){return n.type==="PerspectiveCamera"?n.perspective.zoom:n.orthographic.zoom}t.getZoom=e})(ao||(ao={}));var jf;(t=>{function e(i,r){return i[0]===r[0]&&i[1]===r[1]}t.isEqual=e;function n(i,r,s){return[i[0]+(r[0]-i[0])*s,i[1]+(r[1]-i[1])*s]}t.lerp=n})(jf||(jf={}));var ja;(t=>{function e(s,a){return s[0]===a[0]&&s[1]===a[1]&&s[2]===a[2]}t.isEqual=e;function n(s,a){return[s[0]+a[0],s[1]+a[1],s[2]+a[2]]}t.add=n;function i(s,a){return[s[0]-a[0],s[1]-a[1],s[2]-a[2]]}t.sub=i;function r(s,a,o){return[s[0]+(a[0]-s[0])*o,s[1]+(a[1]-s[1])*o,s[2]+(a[2]-s[2])*o]}t.lerp=r})(ja||(ja={}));var qf;(t=>{function e(i,r){return i[0]===r[0]&&i[1]===r[1]&&i[2]===r[2]&&i[3]===r[3]}t.isEqual=e;function n(i,r,s){return[i[0]+(r[0]-i[0])*s,i[1]+(r[1]-i[1])*s,i[2]+(r[2]-i[2])*s,i[3]+(r[3]-i[3])*s]}t.lerp=n})(qf||(qf={}));var Js;(t=>{t.identity=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function e(r,s){for(let a=0;a<16;a++)if(r[a]!==s[a])return!1;return!0}t.isEqual=e;function n(r){return r!=null?r:t.identity}t.simplify=n;function i(r,s){let a=s.slice(0);for(var o=0,l=s.length;o<l;o+=3){let h=r[3]*s[o]+r[7]*s[o+1]+r[11]*s[o+2]+r[15];a[o]=(r[0]*s[o]+r[4]*s[o+1]+r[8]*s[o+2]+r[12])/h,a[o+1]=(r[1]*s[o]+r[5]*s[o+1]+r[9]*s[o+2]+r[13])/h,a[o+2]=(r[2]*s[o]+r[6]*s[o+1]+r[10]*s[o+2]+r[14])/h}return a}t.applyMatrix4=i})(Js||(Js={}));var ti;(t=>{t.white={r:1,g:1,b:1},t.red={r:1,g:0,b:0},t.black={r:0,g:0,b:0};function e(a){return{r:Math.round(a.r*255),g:Math.round(a.g*255),b:Math.round(a.b*255),a:1}}t.toRgb255a1=e;function n(a){return{r:a.r,g:a.g,b:a.b}}t.clone=n;function i(a){return a=Math.floor(a),{r:(a>>16&255)/255,g:(a>>8&255)/255,b:(a&255)/255}}t.fromHex=i;function r(a,o){return a.r===o.r&&a.g===o.g&&a.b===o.b}t.equals=r;function s(a,o,l){return{r:a.r+(o.r-a.r)*l,g:a.g+(o.g-a.g)*l,b:a.b+(o.b-a.b)*l}}t.lerp=s})(ti||(ti={}));var Br;(t=>{t.white=Ie(ve({},ti.white),{a:1});function e(a){return{r:a[0],g:a[1],b:a[2],a:a[3]}}t.from0to1=e;function n(a,o){return Ie(ve({},ti.fromHex(a)),{a:o})}t.fromHexAndA=n;function i(a){return{r:Math.round(a.r*255),g:Math.round(a.g*255),b:Math.round(a.b*255),a:a.a}}t.toRgb255a1=i;function r(a,o){return ti.equals(a,o)&&a.a===o.a}t.equals=r;function s(a,o,l){return{r:a.r+(o.r-a.r)*l,g:a.g+(o.g-a.g)*l,b:a.b+(o.b-a.b)*l,a:a.a+(o.a-a.a)*l}}t.lerp=s})(Br||(Br={}));var Zc;(t=>t.identity={position:[0,0,0],rotation:[0,0,0],scale:[1,1,1]})(Zc||(Zc={}));var Xf;(t=>t.defaultData={mass:1,stiffness:80,damping:10,velocity:0})(Xf||(Xf={}));var Jf;(t=>t.defaultData={control1:[.5,.05],control2:[.1,.3]})(Jf||(Jf={}));var Kc;(t=>{function e(n,i=.1){return{type:"radial",hideBase:!1,count:3,radial:{radius:Math.max(n[0],n[1])*2,start:0,end:360,alignment:!1,axis:"y",scale:[1,1,1],rotation:[0,0,0],position:[0,0,0]},linear:{scale:[1,1,1],rotation:[0,0,0],position:[n[0]+n[0]*i,0,0]},grid:{count:[2,2,2],size:n.map(r=>r*(1+i)),useCenter:!0}}}t.defaultData=e})(Kc||(Kc={}));var Fr=class{modifyById(t,e){let n=this;if(n[t]===void 0)throw new Error("not expected");{let i=Ie(ve({},n),{[t]:e});return Object.setPrototypeOf(i,Fr.prototype),i}}add(t,e){var n;let i=this.runOp({type:1,id:t,data:e});return(n=i==null?void 0:i.data)!=null?n:this}runOp(t){let e=this;if(t.type===1){let n=e[t.id],i;n===void 0?i={type:2,id:t.id}:i={type:1,id:t.id,data:n};let{id:r,data:s}=t,a=Ie(ve({},e),{[r]:s});return Object.setPrototypeOf(a,Fr.prototype),{data:a,actual:t,reverse:i}}else if(t.type===2){let{id:n}=t,i=e[n];if(i===void 0)return null;{let r=ve({},e);return Object.setPrototypeOf(r,Fr.prototype),delete r[n],{data:r,actual:t,reverse:{type:1,id:n,data:i}}}}throw new Error("illegal arg")}};function fd(t){if(t.deepFreeze!==void 0){t.deepFreeze(t);return}let e=Object.getOwnPropertyNames(t);for(let n of e){let i=t[n];i&&typeof i=="object"&&fd(i)}return Object.freeze(t)}function pP(t,e){let n=0;for(;n<t.length&&n<e.length;){if(t[n]<e[n])return-1;if(t[n]>e[n])return 1;n+=1}return n!==e.length?-1:n!==t.length?1:0}var fP=class extends Error{};function lr(t,e,n){if(t===void 0?e===void 0?(t=0,e=10):t=e-10:e===void 0&&(e=t+10),t>e){let s=t;t=e,e=s}let i=[],r=1/(n+1);for(let s=0;s<n;s++){let a=t+(e-t)*(s+.75+Math.random()*.5)*r;i.push(a)}return i}function mP(t){return t instanceof Uint8Array||t instanceof Uint16Array||t instanceof Uint32Array||t instanceof Int8Array||t instanceof Int16Array||t instanceof Int32Array||t instanceof Float32Array||t instanceof Float64Array}function gP(){return typeof process<"u"}function W0(t,e){for(let n of t)e(n.id,n.data),W0(n.children,e)}function j0(t,e){e(t.id,t.data);for(let n of t.children)j0(n,e)}var $s=class extends Array{constructor(...t){super(...t),Object.setPrototypeOf(this,$s.prototype)}deepFreeze(){let t=0;for(;t<this.length;)fd(this[t]),t++}fillCaches0(t,e){this.objCaches.set(t.id,t),this.parentCaches.set(t.id,e);for(let n of t.children)this.fillCaches0(n,t.id)}fillCaches(){if(this.objCaches===void 0){this.objCaches=new Map,this.parentCaches=new Map;for(let t of this)this.fillCaches0(t,null)}}randomId(){this.fillCaches();let t=Array.from(this.objCaches.keys());if(t.length!==0)return t[Math.max(0,Math.floor(Math.random()*t.length)-1)]}isDescendantOf(t,e){for(;t;){let n=this.parent(t);if(n===e)return!0;t=n}return!1}data(t){var e;return(e=this.get(t))==null?void 0:e.data}has(t){return this.childrenOf(t)!==void 0}get(t){return this.fillCaches(),this.objCaches.get(t)}childrenOf(t){var e;return t===null?this:(e=this.get(t))==null?void 0:e.children}traverseFrom(t,e){if(t===null)this.traverse(e);else{let n=this.get(t);n&&j0(n,e)}}traverse(t){W0(this,t)}totalSize(){return this.fillCaches(),this.objCaches.size}parent(t){return this.fillCaches(),this.parentCaches.get(t)}childrenArray(t){return t===null?this:this.get(t).children}modifyById(t,e){if(this.get(t)===void 0)throw new Error("not expected");{let n=this.parent(t),i=this.childrenArray(n),r=i.findIndex(a=>a.id===t);if(r<0)throw new Error("not expected");let s=i[r];return i=[...i],i[r]=Ie(ve({},s),{data:e}),this.modifyArrayBy(n,i)}}modifyArrayBy(t,e){let n=t,i=e;for(;n!==null;){let s=i,a=n;if(n=this.parent(n),n===void 0)throw new Error;i=this.childrenArray(n);let o=i.findIndex(l=>l.id===a);if(o<0)throw new Error;i=[...i],i[o]=Ie(ve({},i[o]),{children:s})}Object.setPrototypeOf(i,$s.prototype);let r=i;return r.fillCaches(),r}runOp(t){switch(t.type){case 7:return this.addOp(t);case 8:return this.deleteOp(t);case 9:return this.moveOp(t)}}checkDuplicatedIdRec({id:t,children:e}){if(this.get(t)!==void 0)return!0;for(let n of e)if(this.checkDuplicatedIdRec(n))return!0;return!1}addOp(t){let{parent:e,fi:n,id:i,data:r,children:s}=t;if(e!==null&&this.get(e)===void 0||this.checkDuplicatedIdRec(t))return null;{let a=e,o=this.childrenArray(a),l={fi:n,id:i,data:r,children:s};return o=[...o,l],o.sort((h,c)=>h.fi-c.fi),t.localIndex=o.indexOf(l),{data:this.modifyArrayBy(a,o),actual:t,reverse:{type:8,id:i}}}}deleteOp(t){let{id:e}=t;if(this.get(e)===null)return null;{let n=this.parent(e);if(n===void 0)return null;let i=this.childrenArray(n),r=i.findIndex(a=>a.id===e);t.localIndex=r,i=[...i];let s=i.splice(r,1)[0];return{data:this.modifyArrayBy(n,i),actual:t,reverse:Ie(ve({type:7},s),{parent:n})}}}moveOp(t){let{parent:e,fi:n,id:i}=t;if(e!==null&&this.get(e)===void 0)return this.deleteOp({type:8,id:i});if(e!==null){let d=e;for(;d!==null;){if(d===void 0)throw new Error;if(d===i)throw new fP("cyclic tree");d=this.parent(d)}}let r=this.parent(i);if(r===void 0)return null;let s=r,a=this.childrenArray(r),o=a.findIndex(d=>d.id===i);a=[...a];let l=a.splice(o,1)[0],h=this.modifyArrayBy(r,a);r=e,a=h.childrenArray(r);let c=l.fi;return l=Ie(ve({},l),{fi:n}),a=[...a,l],a.sort((d,u)=>d.fi-u.fi),t.localIndex=a.indexOf(l),h=h.modifyArrayBy(r,a),{data:h,actual:t,reverse:{type:9,parent:s,fi:c,id:i}}}previous(t,e){if(e===null){let i=this.childrenArray(t);return i.length===0?null:i[i.length-1].id}let n=null;for(let i of this.childrenArray(t)){if(i.id===e)return n;n=i.id}return null}traverseSortNext(t){let e=this.parent(t);if(e!==void 0){let n=this.childrenArray(e),i=n.findIndex(r=>r.id===t)+1;if(i<n.length)return n[i].id;if(e)return this.traverseSortNext(e)}}sortNext(t){let e=this.childrenArray(t);return e.length>0?e[0].id:this.traverseSortNext(t)}traverseSortPrevious(t){let e=this.childrenArray(t);return e.length>0?this.traverseSortPrevious(e[e.length-1].id):t}sortPrevious(t){let e=this.parent(t);if(e!==void 0){let n=this.childrenArray(e),i=n.findIndex(r=>r.id===t)-1;return i>=0?this.traverseSortPrevious(n[i].id):e}}getAllSorted(t){let e=[];for(let n of t){let i=this.getWithSortKey(n.id);i!==void 0&&e.push(ve(ve({},n),i))}e.sort((n,i)=>pP(n.sortKey,i.sortKey));for(let n of e)delete n.sortKey;return e}getWithSortKey(t){var e=t;let n=[],i=this.get(e),r=i;if(i!==void 0){for(;e;)n.splice(0,0,i.fi),e=this.parent(e),e!==null&&(i=this.get(e));return Ie(ve({},r),{sortKey:n})}}insertBeforeHelper(t,e,n){return this.insertAfterHelper(t,this.previous(t,e),n)}insertAfterHelper(t,e,n){let i=this.childrenArray(t);if(e===null){if(i.length===0)return lr(0,n,n);{let r=i[0].fi;return lr(r-n,r,n)}}else{let r=this.get(e);if(r===void 0||this.parent(e)!==t)throw new Error("illegal args");let s=i.find(a=>a.fi>r.fi);if(s===void 0){let a=i[i.length-1].fi;return lr(a,a+n,n)}else return lr(r.fi,s.fi,n)}}},Qc;(t=>{function e(n,i){if(Array.isArray(n)){let r=i.props,s={},a=[...n],o=!1;if(r)for(let l of Object.keys(r)){let h=parseInt(l);if(isNaN(h))throw new Error("wrong index");s[l]=a[h],a[h]=r[l],o=!0}return o?{data:a,actual:i,reverse:{type:0,props:s}}:null}else{let r=i.props,s={},a=ve({},n),o=!1;if(r)for(let l of Object.keys(r)){s[l]=a[l];let h=r[l];h===void 0?delete a[l]:a[l]=h,o=!0}return o?{data:a,actual:i,reverse:{type:0,props:s}}:null}}t.runOp=e})(Qc||(Qc={}));var Mn=class extends Array{constructor(...t){super(...t),Object.setPrototypeOf(this,Mn.prototype)}deepFreeze(){let t=0;for(;t<this.length;)fd(this[t]),t++}fillCaches0(t){this.objCaches.set(t.id,t)}fillCaches(){if(this.objCaches===void 0){this.objCaches=new Map,Object.getOwnPropertyDescriptor(this,"objCaches").enumerable=!1;for(let t of this)this.fillCaches0(t)}}randomId(){this.fillCaches();let t=Array.from(this.objCaches.keys());if(t.length!==0)return t[Math.max(0,Math.floor(Math.random()*t.length)-1)]}data(t){var e;return(e=this.get(t))==null?void 0:e.data}get(t){return this.fillCaches(),this.objCaches.get(t)}modifyById(t,e){if(this.get(t)===void 0)throw new Error("not expected");{let n=this,i=n.findIndex(s=>s.id===t);if(i<0)throw new Error("not expected");let r=n[i];return n=[...n],n[i]=Ie(ve({},r),{data:e}),this.modifyArrayBy(n)}}modifyArrayBy(t){Object.setPrototypeOf(t,Mn.prototype);let e=t;return gP()||e.fillCaches(),e}runOp(t){switch(t.type){case 4:return this.addOp(t);case 5:return this.deleteOp(t);case 6:return this.moveOp(t)}}addOp(t){let{fi:e,id:n,data:i}=t,r=this,s={fi:e,id:n,data:i};return r=[...r,s],r.sort((a,o)=>a.fi-o.fi),t.localIndex=r.indexOf(s),{data:this.modifyArrayBy(r),actual:t,reverse:{type:5,id:n}}}deleteOp(t){let{id:e}=t,n=this,i=n.findIndex(s=>s.id===e);if(i===-1)return null;t.localIndex=i,n=[...n];let r=n.splice(i,1)[0];return{data:this.modifyArrayBy(n),actual:t,reverse:ve({type:4},r)}}moveOp(t){let{fi:e,id:n}=t,i=this;i=[...i];let r=i.findIndex(o=>o.id===n);if(r===-1)return null;let s=i[r].fi,a=Ie(ve({},i[r]),{fi:e});return i[r]=a,i.sort((o,l)=>o.fi-l.fi),t.localIndex=i.indexOf(a),{data:this.modifyArrayBy(i),actual:t,reverse:{type:6,fi:s,id:n}}}previous(t){if(t===null)return this.length===0?null:this[this.length-1].id;let e=null;for(let n of this){if(n.id===t)return e;e=n.id}return null}insertBeforeHelper(t,e){return this.insertAfterHelper(this.previous(t),e)}insertAfterHelper(t,e){let n=this;if(t===null){if(n.length===0)return lr(0,e,e);{let i=n[0].fi;return lr(i-e,i,e)}}else{let i=this.get(t);if(i===void 0)throw new Error("illegal args");let r=n.find(s=>s.fi>i.fi);if(r===void 0){let s=n[n.length-1].fi;return lr(s,s+e,e)}else return lr(i.fi,r.fi,e)}}},q0=Symbol(),mh=Symbol(),gh=class{reportOp(t,e){let n=this;if(e===null)return;n._current=e.data;let i=[];for(;!(n instanceof J0);){let r=n._path,s=n._current;if(r!==""&&i.splice(0,0,r),n=n._parent,n===null)return;n.update(r,s)}n.push(i,t,e.actual,e.reverse)}deleteChildren(t){if(this._children){let e=this._children[t];if(e){let n=e[mh];n&&n(),delete this._children[t]}}}},vP=class extends gh{constructor(t,e,n){super(),this._parent=t,this._path=e,this._current=n}update(t,e){if(Array.isArray(this._current)){if(typeof t=="string"&&(t=parseInt(t),isNaN(t)))throw new Error("Invalid path");this._current=[...this._current],this._current[t]=e}else this._current=Ie(ve({},this._current),{[t]:e})}runOp(t){this.reportOp(t,Qc.runOp(this._current,t))}},yP=class extends gh{constructor(t,e,n){super(),this._parent=t,this._path=e,this._current=n}update(t,e){this._current=Ie(ve({},this._current),{[t]:e}),Object.setPrototypeOf(this._current,Fr.prototype)}runOp(t){this.reportOp(t,this._current.runOp(t))}},X0={get(t,e){if(e===mh)return()=>{t._parent=null};if(e===q0)return t._current;let{_current:n,_children:i}=t;if(e==="push"&&Array.isArray(n))throw new Error("not supported to expand array");let r=i===void 0?void 0:i[e];if(r!==void 0)return r;let s=n[e],a=vh(t,e,s);return a!==s?(i===void 0&&(i={},t._children=i),i[e]=a,a):s},has(t,e){return e in t._current},ownKeys(t){return Reflect.ownKeys(t._current)},defineProperty(){throw Error("not supported")},getPrototypeOf(t){return Object.getPrototypeOf(t._current)},setPrototypeOf(){throw Error("not supported")},getOwnPropertyDescriptor(t,e){let n=t._current,i=Reflect.getOwnPropertyDescriptor(n,e);return i&&{writable:!0,configurable:!0,enumerable:i.enumerable,value:n[e]}}},xP=Ie(ve({},X0),{set(t,e,n){var i;let r={type:0,props:{[e]:(i=Y0(n))!=null?i:n}};return t.deleteChildren(e),t.runOp(r),!0},deleteProperty(t,e){let n={type:0,props:{[e]:void 0}};return t.deleteChildren(e),t.runOp(n),!0}}),bP=Ie(ve({},X0),{set(t,e,n){return n===void 0?this.deleteProperty(t,e):(t.deleteChildren(e),t.runOp({type:1,id:e,data:n})),!0},deleteProperty(t,e){return t.runOp({type:2,id:e}),!0}}),md=class extends gh{constructor(t,e,n){super(),this._children={},this._parent=t,this._path=e,this._current=n,this[mh]=()=>{this._parent=null}}unproxy(){return this._current}update(t,e){this._current=this._current.modifyById(t,e)}runOp(t){this.reportOp(t,this._current.runOp(t))}randomId(){return this._current.randomId()}isDescendantOf(t,e){return this._current.isDescendantOf(t,e)}childrenOf(t){return this._current.childrenOf(t)}traverse(t){return this._current.traverse(t)}get(t){return this._current.get(t)}parent(t){return this._current.parent(t)}traverse(t){this._current.traverse((e,n)=>{t(e,this.data(e))})}data(t){var e;let{_current:n,_children:i}=this,r=i===void 0?void 0:i[t];if(r!==void 0)return r;let s=(e=n.get(t))==null?void 0:e.data,a=vh(this,t,s);return a!==s?(i===void 0&&(i={},this._children=i),i[t]=a,a):s}add(t,e,n,i,r){this.runOp({type:7,parent:t,fi:e,id:n,data:i,children:r})}move(t,e,n){this.runOp({type:9,parent:t,fi:e,id:n})}insertAfter(t,e,n){let i=this._current.insertAfterHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.add(t,i[r],s.id,s.data,s.children)}}insertBefore(t,e,n){let i=this._current.insertBeforeHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.add(t,i[r],s.id,s.data,s.children)}}moveAfter(t,e,n){let i=this._current.insertAfterHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.move(t,i[r],s)}}moveBefore(t,e,n){let i=this._current.insertBeforeHelper(t,e,n.length);for(let r=0;r<n.length;r++){let s=n[r];this.move(t,i[r],s)}}delete(t){this.deleteChildren(t),this.runOp({type:8,id:t})}sortNext(t){return this._current.sortNext(t)}sortPrevious(t){return this._current.sortPrevious(t)}getAllSorted(t){return this._current.getAllSorted(t)}},gd=class extends gh{constructor(t,e,n){super(),this._children={},this._parent=t,this._path=e,this._current=n,this[mh]=()=>{this._parent=null}}unproxy(){return this._current}get length(){return this._current.length}forEach(t){let e=this.length;for(let n=0;n<e;n++){let i=this._current[n].id;t(this.data(this._current[n].id),i)}}update(t,e){this._current=this._current.modifyById(t,e)}randomId(){return this._current.randomId()}get(t){return Ie(ve({},this._current.get(t)),{data:this.data(t)})}data(t){var e;let{_current:n,_children:i}=this,r=i===void 0?void 0:i[t];if(r!==void 0)return r;let s=(e=n.get(t))==null?void 0:e.data,a=vh(this,t,s);return a!==s?(i===void 0&&(i={},this._children=i),i[t]=a,a):s}runOp(t){this.reportOp(t,this._current.runOp(t))}add(t,e,n){this.runOp({type:4,fi:t,id:e,data:n})}move(t,e){this.runOp({type:6,fi:t,id:e})}insertAfter(t,e){let n=this._current.insertAfterHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.add(n[i],r.id,r.data)}}insertBefore(t,e){let n=this._current.insertBeforeHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.add(n[i],r.id,r.data)}}moveAfter(t,e){let n=this._current.insertAfterHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.move(n[i],r)}}moveBefore(t,e){let n=this._current.insertBeforeHelper(t,e.length);for(let i=0;i<e.length;i++){let r=e[i];this.move(n[i],r)}}delete(t){this.deleteChildren(t),this.runOp({type:5,id:t})}};function fc(t,e,n){if(t.length>0){let i=t[t.length-1];if(i.type===0&&e.type===0&&eu.equal(i.path,n)){Object.assign(i.props,e.props);return}}t.push(Ie(ve({},e),{path:n}))}var J0=class{constructor(t){this.ts=[],this.actual=[],this.reverse=[],this._current=t}update(t,e){if(t!=="")throw new Error("");this._current=e}push(t,e,n,i){fc(this.ts,e,t),fc(this.actual,n,t),fc(this.reverse,i,t)}result(){return{data:this._current,ts:this.ts,actual:this.actual,reverse:this.reverse.reverse()}}};function vh(t,e,n){return n instanceof $s?new md(t,e,n):n instanceof Mn?new gd(t,e,n):n instanceof Fr?new Proxy(new yP(t,e,n),bP):n!==null&&typeof n=="object"?mP(n)?n:new Proxy(new vP(t,e,n),xP):n}function $0(t){let e=new J0(t);return[vh(e,"",t),e]}function $f(t,e){let[n,i]=$0(t);return e(n),i.result()}function Y0(t){return t instanceof md||t instanceof gd?t._current:t!==null&&typeof t=="object"?t[q0]:t}var eu;(t=>{function e(r,s){if(s.length===r.length)for(var a=0;a<r.length;){if(r[a]!==s[a])return!1;a+=1}else return!1;return!0}t.equal=e;function n(r,s,a){let o=i(a,r);if(o!==void 0&&typeof o=="object"&&o!==null){let l=ve({},s);return Object.keys(o).forEach(h=>{delete l[h]}),l}else return s}t.removeOverridden=n;function i(r,s,a=0){if(s.length<=a)return r;if((r instanceof $s||r instanceof md)&&typeof s[a]=="string"||(r instanceof Mn||r instanceof gd)&&typeof s[a]=="string")return i(r.data(s[a]),s,a+1);if(typeof s[a]=="number"&&Array.isArray(r)||typeof s[a]=="string"&&typeof r=="object")return i(r[s[a]],s,a+1)}t.zoom=i})(eu||(eu={}));var Z0=class{},Yf=class extends Z0{constructor(t){super(),this.id=t}},Zf=class extends Z0{constructor(t){super(),this.data=t}},tu;try{tu=new TextDecoder}catch{}var De,pr,Q=0,K0=[],nu=K0,iu=0,bn={},ft,hr,Bn=0,Si=0,Cn,Wi,xn=[],gt,Kf={useRecords:!1,mapsAsObjects:!0},Q0=class{},ev=new Q0;ev.name="MessagePack 0xC1";var Ys=!1,Hl=class{constructor(t){t&&(t.useRecords===!1&&t.mapsAsObjects===void 0&&(t.mapsAsObjects=!0),t.structures?t.structures.sharedLength=t.structures.length:t.getStructures&&((t.structures=[]).uninitialized=!0,t.structures.sharedLength=0)),Object.assign(this,t)}unpack(t,e){if(De)return av(()=>(su(),this?this.unpack(t,e):Hl.prototype.unpack.call(Kf,t,e)));pr=e>-1?e:t.length,Q=0,iu=0,Si=0,hr=null,nu=K0,Cn=null,De=t;try{gt=t.dataView||(t.dataView=new DataView(t.buffer,t.byteOffset,t.byteLength))}catch(n){throw De=null,t instanceof Uint8Array?n:new Error("Source must be a Uint8Array or Buffer but was a "+(t&&typeof t=="object"?t.constructor.name:typeof t))}if(this instanceof Hl){if(bn=this,this.structures)return ft=this.structures,ll();(!ft||ft.length>0)&&(ft=[])}else bn=Kf,(!ft||ft.length>0)&&(ft=[]);return ll()}unpackMultiple(t,e){let n,i=0;try{Ys=!0;let r=t.length,s=this?this.unpack(t,r):xh.unpack(t,r);if(e){for(e(s);Q<r;)if(i=Q,e(ll())===!1)return}else{for(n=[s];Q<r;)i=Q,n.push(ll());return n}}catch(r){throw r.lastPosition=i,r.values=n,r}finally{Ys=!1,su()}}_mergeStructures(t,e){t=t||[];for(let n=0,i=t.length;n<i;n++){let r=t[n];r&&(r.isShared=!0,n>=32&&(r.highByte=n-32>>5))}t.sharedLength=t.length;for(let n in e||[])if(n>=0){let i=t[n],r=e[n];r&&(i&&((t.restoreStructures||(t.restoreStructures=[]))[n]=i),t[n]=r)}return this.structures=t}decode(t,e){return this.unpack(t,e)}};function ll(){try{if(!bn.trusted&&!Ys){let e=ft.sharedLength||0;e<ft.length&&(ft.length=e)}let t=zt();if(Q==pr)ft.restoreStructures&&Qf(),ft=null,De=null,Wi&&(Wi=null);else if(Q>pr){let e=new Error("Unexpected end of MessagePack data");throw e.incomplete=!0,e}else if(!Ys)throw new Error("Data read, but end of buffer not reached");return t}catch(t){throw ft.restoreStructures&&Qf(),su(),(t instanceof RangeError||t.message.startsWith("Unexpected end of buffer"))&&(t.incomplete=!0),t}}function Qf(){for(let t in ft.restoreStructures)ft[t]=ft.restoreStructures[t];ft.restoreStructures=null}function zt(){let t=De[Q++];if(t<160)if(t<128){if(t<64)return t;{let e=ft[t&63]||bn.getStructures&&tv()[t&63];return e?(e.read||(e.read=vd(e,t&63)),e.read()):t}}else if(t<144)if(t-=128,bn.mapsAsObjects){let e={};for(let n=0;n<t;n++)e[iv()]=zt();return e}else{let e=new Map;for(let n=0;n<t;n++)e.set(zt(),zt());return e}else{t-=144;let e=new Array(t);for(let n=0;n<t;n++)e[n]=zt();return e}else if(t<192){let e=t-160;if(Si>=Q)return hr.slice(Q-Bn,(Q+=e)-Bn);if(Si==0&&pr<140){let n=e<16?yd(e):nv(e);if(n!=null)return n}return ru(e)}else{let e;switch(t){case 192:return null;case 193:return Cn?(e=zt(),e>0?Cn[1].slice(Cn.position1,Cn.position1+=e):Cn[0].slice(Cn.position0,Cn.position0-=e)):ev;case 194:return!1;case 195:return!0;case 196:return mc(De[Q++]);case 197:return e=gt.getUint16(Q),Q+=2,mc(e);case 198:return e=gt.getUint32(Q),Q+=4,mc(e);case 199:return Ar(De[Q++]);case 200:return e=gt.getUint16(Q),Q+=2,Ar(e);case 201:return e=gt.getUint32(Q),Q+=4,Ar(e);case 202:if(e=gt.getFloat32(Q),bn.useFloat32>2){let n=xd[(De[Q]&127)<<1|De[Q+1]>>7];return Q+=4,(n*e+(e>0?.5:-.5)>>0)/n}return Q+=4,e;case 203:return e=gt.getFloat64(Q),Q+=8,e;case 204:return De[Q++];case 205:return e=gt.getUint16(Q),Q+=2,e;case 206:return e=gt.getUint32(Q),Q+=4,e;case 207:return bn.int64AsNumber?(e=gt.getUint32(Q)*4294967296,e+=gt.getUint32(Q+4)):e=gt.getBigUint64(Q),Q+=8,e;case 208:return gt.getInt8(Q++);case 209:return e=gt.getInt16(Q),Q+=2,e;case 210:return e=gt.getInt32(Q),Q+=4,e;case 211:return bn.int64AsNumber?(e=gt.getInt32(Q)*4294967296,e+=gt.getUint32(Q+4)):e=gt.getBigInt64(Q),Q+=8,e;case 212:if(e=De[Q++],e==114)return rm(De[Q++]&63);{let n=xn[e];if(n)return n.read?(Q++,n.read(zt())):n.noBuffer?(Q++,n()):n(De.subarray(Q,++Q));throw new Error("Unknown extension "+e)}case 213:return e=De[Q],e==114?(Q++,rm(De[Q++]&63,De[Q++])):Ar(2);case 214:return Ar(4);case 215:return Ar(8);case 216:return Ar(16);case 217:return e=De[Q++],Si>=Q?hr.slice(Q-Bn,(Q+=e)-Bn):wP(e);case 218:return e=gt.getUint16(Q),Q+=2,Si>=Q?hr.slice(Q-Bn,(Q+=e)-Bn):SP(e);case 219:return e=gt.getUint32(Q),Q+=4,Si>=Q?hr.slice(Q-Bn,(Q+=e)-Bn):MP(e);case 220:return e=gt.getUint16(Q),Q+=2,tm(e);case 221:return e=gt.getUint32(Q),Q+=4,tm(e);case 222:return e=gt.getUint16(Q),Q+=2,nm(e);case 223:return e=gt.getUint32(Q),Q+=4,nm(e);default:if(t>=224)return t-256;if(t===void 0){let n=new Error("Unexpected end of MessagePack data");throw n.incomplete=!0,n}throw new Error("Unknown MessagePack token "+t)}}}var _P=/^[a-zA-Z_$][a-zA-Z\d_$]*$/;function vd(t,e){function n(){if(n.count++>2){let r=t.read=new Function("r","return function(){return {"+t.map(s=>_P.test(s)?s+":r()":"["+JSON.stringify(s)+"]:r()").join(",")+"}}")(zt);return t.highByte===0&&(t.read=em(e,t.read)),r()}let i={};for(let r=0,s=t.length;r<s;r++){let a=t[r];i[a]=zt()}return i}return n.count=0,t.highByte===0?em(e,n):n}var em=(t,e)=>function(){let n=De[Q++];if(n===0)return e();let i=t<32?-(t+(n<<5)):t+(n<<5),r=ft[i]||tv()[i];if(!r)throw new Error("Record id is not defined for "+i);return r.read||(r.read=vd(r,t)),r.read()};function tv(){let t=av(()=>(De=null,bn.getStructures()));return ft=bn._mergeStructures(t,ft)}var ru=yh,wP=yh,SP=yh,MP=yh;function yh(t){let e;if(t<16&&(e=yd(t)))return e;if(t>64&&tu)return tu.decode(De.subarray(Q,Q+=t));let n=Q+t,i=[];for(e="";Q<n;){let r=De[Q++];if((r&128)===0)i.push(r);else if((r&224)===192){let s=De[Q++]&63;i.push((r&31)<<6|s)}else if((r&240)===224){let s=De[Q++]&63,a=De[Q++]&63;i.push((r&31)<<12|s<<6|a)}else if((r&248)===240){let s=De[Q++]&63,a=De[Q++]&63,o=De[Q++]&63,l=(r&7)<<18|s<<12|a<<6|o;l>65535&&(l-=65536,i.push(l>>>10&1023|55296),l=56320|l&1023),i.push(l)}else i.push(r);i.length>=4096&&(e+=en.apply(String,i),i.length=0)}return i.length>0&&(e+=en.apply(String,i)),e}function tm(t){let e=new Array(t);for(let n=0;n<t;n++)e[n]=zt();return e}function nm(t){if(bn.mapsAsObjects){let e={};for(let n=0;n<t;n++)e[iv()]=zt();return e}else{let e=new Map;for(let n=0;n<t;n++)e.set(zt(),zt());return e}}var en=String.fromCharCode;function nv(t){let e=Q,n=new Array(t);for(let i=0;i<t;i++){let r=De[Q++];if((r&128)>0){Q=e;return}n[i]=r}return en.apply(String,n)}function yd(t){if(t<4)if(t<2){if(t===0)return"";{let e=De[Q++];if((e&128)>1){Q-=1;return}return en(e)}}else{let e=De[Q++],n=De[Q++];if((e&128)>0||(n&128)>0){Q-=2;return}if(t<3)return en(e,n);let i=De[Q++];if((i&128)>0){Q-=3;return}return en(e,n,i)}else{let e=De[Q++],n=De[Q++],i=De[Q++],r=De[Q++];if((e&128)>0||(n&128)>0||(i&128)>0||(r&128)>0){Q-=4;return}if(t<6){if(t===4)return en(e,n,i,r);{let s=De[Q++];if((s&128)>0){Q-=5;return}return en(e,n,i,r,s)}}else if(t<8){let s=De[Q++],a=De[Q++];if((s&128)>0||(a&128)>0){Q-=6;return}if(t<7)return en(e,n,i,r,s,a);let o=De[Q++];if((o&128)>0){Q-=7;return}return en(e,n,i,r,s,a,o)}else{let s=De[Q++],a=De[Q++],o=De[Q++],l=De[Q++];if((s&128)>0||(a&128)>0||(o&128)>0||(l&128)>0){Q-=8;return}if(t<10){if(t===8)return en(e,n,i,r,s,a,o,l);{let h=De[Q++];if((h&128)>0){Q-=9;return}return en(e,n,i,r,s,a,o,l,h)}}else if(t<12){let h=De[Q++],c=De[Q++];if((h&128)>0||(c&128)>0){Q-=10;return}if(t<11)return en(e,n,i,r,s,a,o,l,h,c);let d=De[Q++];if((d&128)>0){Q-=11;return}return en(e,n,i,r,s,a,o,l,h,c,d)}else{let h=De[Q++],c=De[Q++],d=De[Q++],u=De[Q++];if((h&128)>0||(c&128)>0||(d&128)>0||(u&128)>0){Q-=12;return}if(t<14){if(t===12)return en(e,n,i,r,s,a,o,l,h,c,d,u);{let p=De[Q++];if((p&128)>0){Q-=13;return}return en(e,n,i,r,s,a,o,l,h,c,d,u,p)}}else{let p=De[Q++],m=De[Q++];if((p&128)>0||(m&128)>0){Q-=14;return}if(t<15)return en(e,n,i,r,s,a,o,l,h,c,d,u,p,m);let f=De[Q++];if((f&128)>0){Q-=15;return}return en(e,n,i,r,s,a,o,l,h,c,d,u,p,m,f)}}}}}function mc(t){return bn.copyBuffers?Uint8Array.prototype.slice.call(De,Q,Q+=t):De.subarray(Q,Q+=t)}function Ar(t){let e=De[Q++];if(xn[e])return xn[e](De.subarray(Q,Q+=t));throw new Error("Unknown extension type "+e)}var im=new Array(4096);function iv(){let t=De[Q++];if(t>=160&&t<192){if(t=t-160,Si>=Q)return hr.slice(Q-Bn,(Q+=t)-Bn);if(!(Si==0&&pr<180))return ru(t)}else return Q--,zt();let e=(t<<5^(t>1?gt.getUint16(Q):t>0?De[Q]:0))&4095,n=im[e],i=Q,r=Q+t-3,s,a=0;if(n&&n.bytes==t){for(;i<r;){if(s=gt.getUint32(i),s!=n[a++]){i=1879048192;break}i+=4}for(r+=3;i<r;)if(s=De[i++],s!=n[a++]){i=1879048192;break}if(i===r)return Q=i,n.string;r-=3,i=Q}for(n=[],im[e]=n,n.bytes=t;i<r;)s=gt.getUint32(i),n.push(s),i+=4;for(r+=3;i<r;)s=De[i++],n.push(s);let o=t<16?yd(t):nv(t);return o!=null?n.string=o:n.string=ru(t)}var rm=(t,e)=>{var n=zt();let i=t;e!==void 0&&(t=t<32?-((e<<5)+t):(e<<5)+t,n.highByte=e);let r=ft[t];return r&&r.isShared&&((ft.restoreStructures||(ft.restoreStructures=[]))[t]=r),ft[t]=n,n.read=vd(n,i),n.read()},rv=typeof self=="object"?self:global;xn[0]=()=>{};xn[0].noBuffer=!0;xn[101]=()=>{let t=zt();return(rv[t[0]]||Error)(t[1])};xn[105]=t=>{let e=gt.getUint32(Q-4);Wi||(Wi=new Map);let n=De[Q],i;n>=144&&n<160||n==220||n==221?i=[]:i={};let r={target:i};Wi.set(e,r);let s=zt();return r.used?Object.assign(i,s):(r.target=s,s)};xn[112]=t=>{let e=gt.getUint32(Q-4),n=Wi.get(e);return n.used=!0,n.target};xn[115]=()=>new Set(zt());var sv=["Int8","Uint8","Uint8Clamped","Int16","Uint16","Int32","Uint32","Float32","Float64","BigInt64","BigUint64"].map(t=>t+"Array");xn[116]=t=>{let e=t[0],n=sv[e];if(!n)throw new Error("Could not find typed array for code "+e);return new rv[n](Uint8Array.prototype.slice.call(t,1).buffer)};xn[120]=()=>{let t=zt();return new RegExp(t[0],t[1])};xn[98]=t=>{let e=(t[0]<<24)+(t[1]<<16)+(t[2]<<8)+t[3],n=Q;Q+=e-4,Cn=[zt(),zt()],Cn.position0=0,Cn.position1=0;let i=Q;Q=n;try{return zt()}finally{Q=i}};xn[255]=t=>t.length==4?new Date((t[0]*16777216+(t[1]<<16)+(t[2]<<8)+t[3])*1e3):t.length==8?new Date(((t[0]<<22)+(t[1]<<14)+(t[2]<<6)+(t[3]>>2))/1e6+((t[3]&3)*4294967296+t[4]*16777216+(t[5]<<16)+(t[6]<<8)+t[7])*1e3):t.length==12?new Date(((t[0]<<24)+(t[1]<<16)+(t[2]<<8)+t[3])/1e6+((t[4]&128?-281474976710656:0)+t[6]*1099511627776+t[7]*4294967296+t[8]*16777216+(t[9]<<16)+(t[10]<<8)+t[11])*1e3):new Date("invalid");function av(t){let e=pr,n=Q,i=iu,r=Bn,s=Si,a=hr,o=nu,l=Wi,h=Cn,c=new Uint8Array(De.slice(0,pr)),d=ft,u=ft.slice(0,ft.length),p=bn,m=Ys,f=t();return pr=e,Q=n,iu=i,Bn=r,Si=s,hr=a,nu=o,Wi=l,Cn=h,De=c,Ys=m,ft=d,ft.splice(0,ft.length,...u),bn=p,gt=new DataView(De.buffer,De.byteOffset,De.byteLength),f}function su(){De=null,Wi=null,ft=null}function TP(t){t.unpack?xn[t.type]=t.unpack:xn[t.type]=t}var xd=new Array(147);for(let t=0;t<256;t++)xd[t]=+("1e"+Math.floor(45.15-t*.30103));var xh=new Hl({useRecords:!1});xh.unpack;xh.unpackMultiple;xh.unpack;var EP=new Float32Array(1);new Uint8Array(EP.buffer,0,4);var Sl;try{Sl=new TextEncoder}catch{}var Gl,bd,bh=typeof Buffer<"u",gc=bh?Buffer.allocUnsafeSlow:Uint8Array,ov=bh?Buffer:Uint8Array,sm=bh?4294967296:2144337920,de,kt,ae=0,yi,xi=null,AP=/[\u0080-\uFFFF]/,Aa=Symbol("record-id"),lv=class extends Hl{constructor(t){super(t),this.offset=0;let e,n,i,r,s,a=0,o=ov.prototype.utf8Write?function(_,E,x){return de.utf8Write(_,E,x)}:Sl&&Sl.encodeInto?function(_,E){return Sl.encodeInto(_,de.subarray(E)).written}:!1,l=this;t||(t={});let h=t&&t.sequential,c=t.structures||t.saveStructures,d=t.maxSharedStructures;if(d==null&&(d=c?32:0),d>8160)throw new Error("Maximum maxSharedStructure is 8160");let u=t.maxOwnStructures;u==null&&(u=c?32:64),h&&!t.saveStructures&&(this.structures=[]);let p=d>32||u+d>64,m=d+64,f=d+u+64;if(f>8256)throw new Error("Maximum maxSharedStructure + maxOwnStructure is 8192");let g=[],v=0,y=0;this.pack=this.encode=function(_,E){if(de||(de=new gc(8192),kt=new DataView(de.buffer,0,8192),ae=0),yi=de.length-10,yi-ae<2048?(de=new gc(de.length),kt=new DataView(de.buffer,0,de.length),yi=de.length-10,ae=0):ae=ae+7&2147483640,e=ae,s=l.structuredClone?new Map:null,l.bundleStrings?(xi=["",""],de[ae++]=214,de[ae++]=98,xi.position=ae-e,ae+=4):xi=null,n=l.structures,n){n.uninitialized&&(n=l._mergeStructures(l.getStructures()));let x=n.sharedLength||0;if(x>d)throw new Error("Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to "+n.sharedLength);if(!n.transitions){n.transitions=Object.create(null);for(let A=0;A<x;A++){let M=n[A];if(!M)continue;let C,F=n.transitions;for(let W=0,O=M.length;W<O;W++){let Z=M[W];C=F[Z],C||(C=F[Z]=Object.create(null)),F=C}F[Aa]=A+64}a=x}h||(n.nextId=x+64)}i&&(i=!1),r=n||[];try{if(w(_),xi){kt.setUint32(xi.position+e,ae-xi.position-e);let x=xi;xi=null,w(x[0]),w(x[1])}if(l.offset=ae,s&&s.idsToInsert){ae+=s.idsToInsert.length*6,ae>yi&&b(ae),l.offset=ae;let x=LP(de.subarray(e,ae),s.idsToInsert);return s=null,x}return E&PP?(de.start=e,de.end=ae,de):de.subarray(e,ae)}finally{if(n){if(y<10&&y++,v>1e4)n.transitions=null,y=0,v=0,g.length>0&&(g=[]);else if(g.length>0&&!h){for(let x=0,A=g.length;x<A;x++)g[x][Aa]=0;g=[]}if(i&&l.saveStructures){let x=n.sharedLength||d;n.length>x&&(n=n.slice(0,x));let A=de.subarray(e,ae);return l.saveStructures(n,a)===!1?(l._mergeStructures(l.getStructures()),l.pack(_)):(a=x,A)}}E&DP&&(ae=e)}};let w=_=>{ae>yi&&(de=b(ae));var E=typeof _,x;if(E==="string"){let A=_.length;if(xi&&A>=8&&A<4096){let F=AP.test(_);xi[F?0:1]+=_,de[ae++]=193,w(F?-A:A);return}let M;A<32?M=1:A<256?M=2:A<65536?M=3:M=5;let C=A*3;if(ae+C>yi&&(de=b(ae+C)),A<64||!o){let F,W,O,Z=ae+M;for(F=0;F<A;F++)W=_.charCodeAt(F),W<128?de[Z++]=W:W<2048?(de[Z++]=W>>6|192,de[Z++]=W&63|128):(W&64512)===55296&&((O=_.charCodeAt(F+1))&64512)===56320?(W=65536+((W&1023)<<10)+(O&1023),F++,de[Z++]=W>>18|240,de[Z++]=W>>12&63|128,de[Z++]=W>>6&63|128,de[Z++]=W&63|128):(de[Z++]=W>>12|224,de[Z++]=W>>6&63|128,de[Z++]=W&63|128);x=Z-ae-M}else x=o(_,ae+M,C);x<32?de[ae++]=160|x:x<256?(M<2&&de.copyWithin(ae+2,ae+1,ae+1+x),de[ae++]=217,de[ae++]=x):x<65536?(M<3&&de.copyWithin(ae+3,ae+2,ae+2+x),de[ae++]=218,de[ae++]=x>>8,de[ae++]=x&255):(M<5&&de.copyWithin(ae+5,ae+3,ae+3+x),de[ae++]=219,kt.setUint32(ae,x),ae+=4),ae+=x}else if(E==="number")if(_>>>0===_)_<64?de[ae++]=_:_<256?(de[ae++]=204,de[ae++]=_):_<65536?(de[ae++]=205,de[ae++]=_>>8,de[ae++]=_&255):(de[ae++]=206,kt.setUint32(ae,_),ae+=4);else if(_>>0===_)_>=-32?de[ae++]=256+_:_>=-128?(de[ae++]=208,de[ae++]=_+256):_>=-32768?(de[ae++]=209,kt.setInt16(ae,_),ae+=2):(de[ae++]=210,kt.setInt32(ae,_),ae+=4);else{let A;if((A=this.useFloat32)>0&&_<4294967296&&_>=-2147483648){de[ae++]=202,kt.setFloat32(ae,_);let M;if(A<4||(M=_*xd[(de[ae]&127)<<1|de[ae+1]>>7])>>0===M){ae+=4;return}else ae--}de[ae++]=203,kt.setFloat64(ae,_),ae+=8}else if(E==="object")if(!_)de[ae++]=192;else{if(s){let M=s.get(_);if(M){if(!M.id){let C=s.idsToInsert||(s.idsToInsert=[]);M.id=C.push(M)}de[ae++]=214,de[ae++]=112,kt.setUint32(ae,M.id),ae+=4;return}else s.set(_,{offset:ae-e})}let A=_.constructor;if(A===Object)S(_,!0);else if(A===Array){x=_.length,x<16?de[ae++]=144|x:x<65536?(de[ae++]=220,de[ae++]=x>>8,de[ae++]=x&255):(de[ae++]=221,kt.setUint32(ae,x),ae+=4);for(let M=0;M<x;M++)w(_[M])}else if(A===Map){x=_.size,x<16?de[ae++]=128|x:x<65536?(de[ae++]=222,de[ae++]=x>>8,de[ae++]=x&255):(de[ae++]=223,kt.setUint32(ae,x),ae+=4);for(let[M,C]of _)w(M),w(C)}else{for(let M=0,C=Gl.length;M<C;M++){let F=bd[M];if(_ instanceof F){let W=Gl[M];if(W.write){W.type&&(de[ae++]=212,de[ae++]=W.type,de[ae++]=0),w(W.write.call(this,_));return}let O=de,Z=kt,X=ae;de=null;let j;try{j=W.pack.call(this,_,H=>(de=O,O=null,ae+=H,ae>yi&&b(ae),{target:de,targetView:kt,position:ae-H}),w)}finally{O&&(de=O,kt=Z,ae=X,yi=de.length-10)}j&&(j.length+ae>yi&&b(j.length+ae),ae=CP(j,de,ae,W.type));return}}S(_,!_.hasOwnProperty)}}else if(E==="boolean")de[ae++]=_?195:194;else if(E==="bigint"){if(_<BigInt(1)<<BigInt(63)&&_>=-(BigInt(1)<<BigInt(63)))de[ae++]=211,kt.setBigInt64(ae,_);else if(_<BigInt(1)<<BigInt(64)&&_>0)de[ae++]=207,kt.setBigUint64(ae,_);else if(this.largeBigIntToFloat)de[ae++]=203,kt.setFloat64(ae,Number(_));else throw new RangeError(_+" was too large to fit in MessagePack 64-bit integer format, set largeBigIntToFloat to convert to float-64");ae+=8}else if(E==="undefined")this.encodeUndefinedAsNil?de[ae++]=192:(de[ae++]=212,de[ae++]=0,de[ae++]=0);else if(E==="function")w(this.writeFunction&&this.writeFunction());else throw new Error("Unknown type: "+E)},S=this.useRecords===!1?this.variableMapSize?_=>{let E=Object.keys(_),x=E.length;x<16?de[ae++]=128|x:x<65536?(de[ae++]=222,de[ae++]=x>>8,de[ae++]=x&255):(de[ae++]=223,kt.setUint32(ae,x),ae+=4);let A;for(let M=0;M<x;M++)w(A=E[M]),w(_[A])}:(_,E)=>{de[ae++]=222;let x=ae-e;ae+=2;let A=0;for(let M in _)(E||_.hasOwnProperty(M))&&(w(M),w(_[M]),A++);de[x+++e]=A>>8,de[x+e]=A&255}:_=>{let E=Object.keys(_),x,A=r.transitions||(r.transitions=Object.create(null)),M=0;for(let F=0,W=E.length;F<W;F++){let O=E[F];x=A[O],x||(x=A[O]=Object.create(null),M++),A=x}let C=A[Aa];if(C)C>=96&&p?(de[ae++]=((C-=96)&31)+96,de[ae++]=C>>5):de[ae++]=C;else{C=r.nextId,C||(C=64),C<m&&this.shouldShareStructure&&!this.shouldShareStructure(E)?(C=r.nextOwnId,C<f||(C=m),r.nextOwnId=C+1):(C>=f&&(C=m),r.nextId=C+1);let F=E.highByte=C>=96&&p?C-96>>5:-1;A[Aa]=C,r[C-64]=E,C<m?(E.isShared=!0,r.sharedLength=C-63,i=!0,F>=0?(de[ae++]=(C&31)+96,de[ae++]=F):de[ae++]=C):(F>=0?(de[ae++]=213,de[ae++]=114,de[ae++]=(C&31)+96,de[ae++]=F):(de[ae++]=212,de[ae++]=114,de[ae++]=C),M&&(v+=y*M),g.length>=u&&(g.shift()[Aa]=0),g.push(A),w(E))}for(let F=0,W=E.length;F<W;F++)w(_[E[F]])},b=_=>{let E;if(_>16777216){if(_-e>sm)throw new Error("Packed buffer would be larger than maximum buffer size");E=Math.min(sm,Math.round(Math.max((_-e)*(_>67108864?1.25:2),4194304)/4096)*4096)}else E=(Math.max(_-e<<2,de.length-1)>>12)+1<<12;let x=new gc(E);return kt=new DataView(x.buffer,0,E),de.copy?de.copy(x,0,e,_):x.set(de.slice(e,_)),ae-=e,e=0,yi=x.length-10,de=x}}useBuffer(t){de=t,kt=new DataView(de.buffer,de.byteOffset,de.byteLength),ae=0}};bd=[Date,Set,Error,RegExp,ArrayBuffer,Object.getPrototypeOf(Uint8Array.prototype).constructor,Q0];Gl=[{pack(t,e,n){let i=t.getTime()/1e3;if((this.useTimestamp32||t.getMilliseconds()===0)&&i>=0&&i<4294967296){let{target:r,targetView:s,position:a}=e(6);r[a++]=214,r[a++]=255,s.setUint32(a,i)}else if(i>0&&i<17179869184){let{target:r,targetView:s,position:a}=e(10);r[a++]=215,r[a++]=255,s.setUint32(a,t.getMilliseconds()*4e6+(i/1e3/4294967296>>0)),s.setUint32(a+4,i)}else if(isNaN(i)){if(this.onInvalidDate)return e(0),n(this.onInvalidDate());let{target:r,targetView:s,position:a}=e(3);r[a++]=212,r[a++]=255,r[a++]=255}else{let{target:r,targetView:s,position:a}=e(15);r[a++]=199,r[a++]=12,r[a++]=255,s.setUint32(a,t.getMilliseconds()*1e6),s.setBigInt64(a+4,BigInt(Math.floor(i)))}}},{pack(t,e,n){let i=Array.from(t),{target:r,position:s}=e(this.structuredClone?3:0);this.structuredClone&&(r[s++]=212,r[s++]=115,r[s++]=0),n(i)}},{pack(t,e,n){let{target:i,position:r}=e(this.structuredClone?3:0);this.structuredClone&&(i[r++]=212,i[r++]=101,i[r++]=0),n([t.name,t.message])}},{pack(t,e,n){let{target:i,position:r}=e(this.structuredClone?3:0);this.structuredClone&&(i[r++]=212,i[r++]=120,i[r++]=0),n([t.source,t.flags])}},{pack(t,e){this.structuredClone?am(t,16,e):om(bh?Buffer.from(t):new Uint8Array(t),e)}},{pack(t,e){let n=t.constructor;n!==ov&&this.structuredClone?am(t,sv.indexOf(n.name),e):om(t,e)}},{pack(t,e){let{target:n,position:i}=e(1);n[i]=193}}];function am(t,e,n,i){let r=t.byteLength;if(r+1<256){var{target:s,position:a}=n(4+r);s[a++]=199,s[a++]=r+1}else if(r+1<65536){var{target:s,position:a}=n(5+r);s[a++]=200,s[a++]=r+1>>8,s[a++]=r+1&255}else{var{target:s,position:a,targetView:o}=n(7+r);s[a++]=201,o.setUint32(a,r+1),a+=4}s[a++]=116,s[a++]=e,s.set(new Uint8Array(t.buffer,t.byteOffset,t.byteLength),a)}function om(t,e){let n=t.byteLength;var i,r;if(n<256){var{target:i,position:r}=e(n+2);i[r++]=196,i[r++]=n}else if(n<65536){var{target:i,position:r}=e(n+3);i[r++]=197,i[r++]=n>>8,i[r++]=n&255}else{var{target:i,position:r,targetView:s}=e(n+5);i[r++]=198,s.setUint32(r,n),r+=4}i.set(t,r)}function CP(t,e,n,i){let r=t.length;switch(r){case 1:e[n++]=212;break;case 2:e[n++]=213;break;case 4:e[n++]=214;break;case 8:e[n++]=215;break;case 16:e[n++]=216;break;default:r<256?(e[n++]=199,e[n++]=r):r<65536?(e[n++]=200,e[n++]=r>>8,e[n++]=r&255):(e[n++]=201,e[n++]=r>>24,e[n++]=r>>16&255,e[n++]=r>>8&255,e[n++]=r&255)}return e[n++]=i,e.set(t,n),n+=r,n}function LP(t,e){let n,i=e.length*6,r=t.length-i;for(e.sort((s,a)=>s.offset>a.offset?1:-1);n=e.pop();){let s=n.offset,a=n.id;t.copyWithin(s+i,s,r),i-=6;let o=s+i;t[o++]=214,t[o++]=105,t[o++]=a>>24,t[o++]=a>>16&255,t[o++]=a>>8&255,t[o++]=a&255,r=s}return t}function yo(t){if(t.Class){if(!t.pack&&!t.write)throw new Error("Extension has no pack or write function");if(t.pack&&!t.type)throw new Error("Extension has no type (numeric code to identify the extension)");bd.unshift(t.Class),Gl.unshift(t)}TP(t)}var hv=new lv({useRecords:!1});hv.pack;hv.pack;var PP=512,DP=1024,lm=new lv({structuredClone:!0});yo({Class:Fr.prototype.constructor,type:1,write(t){return ve({},t)},read(t){return Object.setPrototypeOf(t,Fr.prototype),t}});yo({Class:Mn.prototype.constructor,type:2,write(t){return[...t]},read(t){return Object.setPrototypeOf(t,Mn.prototype),t}});yo({Class:$s.prototype.constructor,type:3,write(t){return[...t]},read(t){return Object.setPrototypeOf(t,$s.prototype),t}});yo({Class:Yf.prototype.constructor,type:4,write(t){return t.id},read(t){return new Yf(t)}});yo({Class:Zf.prototype.constructor,type:5,write(t){return t.data},read(t){return new Zf(t)}});function RP(t){var e=0;if(t.length===0)return e;for(let n=0;n<t.length;n++){let i=t[n];e=(e<<5)-e+i,e=e&e}return e}var au;(t=>{function e(r){return lm.pack(r)}t.serialize=e;function n(r){return lm.unpack(r)}t.deserialize=n;function i(r){return RP(e(r)).toString()}t.checksum=i})(au||(au={}));var ou;(t=>{t.all=["PointLight","SpotLight","DirectionalLight","HemisphereLight"];function e(n){return t.all.includes(n)}t.is=e})(ou||(ou={}));var lu;(t=>{function e(i){return n(i)}t.defaultData=e;function n(i){if(i==="PointLight")return{type:i,color:Br.white,intensity:1,distance:2e3,decay:1,shadows:!0,shadowResolution:1024,shadowRadius:1,depth:1e5,helper:!0};if(i==="SpotLight")return{type:i,color:Br.white,intensity:1,distance:2e3,decay:1,shadows:!0,penumbra:0,angle:30/180*Math.PI,depth:1e5,helper:!0,shadowResolution:1024,shadowRadius:1};if(i==="DirectionalLight")return{type:i,color:Br.white,intensity:1,shadows:!0,size:1e3,depth:1e5,shadowResolution:1024,helper:!0,shadowRadius:1};throw new Error("not implemented")}})(lu||(lu={}));var hu;(t=>{t.defaultData={castShadow:!0,receiveShadow:!0};function e(n,i){return n.castShadow===i.castShadow&&n.receiveShadow===i.receiveShadow}t.equals=e})(hu||(hu={}));var cu;(t=>{t.defaultData={flatShading:!1,wireframe:!1,side:0};function e(n,i){return n.flatShading===i.flatShading&&n.side===i.side&&n.wireframe===i.wireframe}t.equals=e})(cu||(cu={}));var uu;(t=>t.defaultData=Ie(ve(ve({},cu.defaultData),hu.defaultData),{cloner:null,booleanExclude:null}))(uu||(uu={}));var cv=(t=>(t[t.Left=1]="Left",t[t.Right=2]="Right",t[t.Center=3]="Center",t[t.Justify=4]="Justify",t))(cv||{}),uv=(t=>(t[t.Top=1]="Top",t[t.Center=2]="Center",t[t.Bottom=3]="Bottom",t))(uv||{}),dv=(t=>(t[t.None=1]="None",t[t.Upper=2]="Upper",t[t.Lower=3]="Lower",t))(dv||{}),du;(t=>t.defaultData={width:100,height:100,horizontalAlign:1,verticalAlign:1,fontSize:16,lineHeight:1.5,letterSpacing:1,text:"",textTransform:1,color:Br.fromHexAndA(6974058,1),alpha:1,font:"roboto_regular"})(du||(du={}));var zs;(t=>{function e(r,s){return r==="light"&&s?n(s):i(r)}t.defaultData=e;function n(r){switch(r){case"basic":return{type:"light",category:"basic",alpha:1,visible:!0,mode:0};case"phong":return{category:"phong",specular:{r:.2,g:.2,b:.2},shininess:10,type:"light",alpha:1,visible:!0,mode:0};case"toon":return{category:"toon",specular:{r:.2,g:.2,b:.2},shininess:10,type:"light",alpha:1,visible:!0,mode:0};case"lambert":return{category:"lambert",emissive:{r:0,g:0,b:0,a:1},type:"light",alpha:1,visible:!0,mode:0};case"physical":return{category:"physical",roughness:.2,metalness:.2,reflectivity:.2,type:"light",alpha:1,visible:!0,mode:0}}}function i(r){switch(r){case"texture":return{alpha:1,visible:!0,size:[128,128],mode:0,axis:"x",side:2,type:"texture",projection:0,texture:{image:"image_0",wrapping:1001,repeat:[1,1],offset:[0,0]},crop:!0};case"color":return{type:"color",alpha:1,visible:!0,mode:0,color:ti.fromHex(4737101)};case"depth":return{type:"depth",alpha:1,visible:!0,mode:0,gradientType:1,smooth:!1,isVector:!0,isWorldSpace:!1,origin:[0,0,0],direction:[1,0,0],colors:[[1,1,1,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1]],steps:[0,1,1,1,1,1,1,1,1,1],num:2,near:50,far:200};case"normal":return{type:"normal",alpha:1,visible:!0,mode:0,cnormal:[1,1,1]};case"gradient":return{type:"gradient",alpha:1,visible:!0,mode:0,gradientType:0,smooth:!1,colors:[[0,0,0,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1]],steps:[0,1,1,1,1,1,1,1,1,1],num:2,angle:0,offset:[0,0],morph:[0,0]};case"noise":return{type:"noise",alpha:1,visible:!0,mode:0,size:[100,100,100],noiseType:0,scale:1,move:1,colorA:Ie(ve({},ti.fromHex(6710886)),{a:1}),colorB:Ie(ve({},ti.fromHex(6710886)),{a:1}),colorC:Ie(ve({},ti.fromHex(16777215)),{a:1}),colorD:Ie(ve({},ti.fromHex(16777215)),{a:1}),distortion:[1,1],fA:[1.7,9.2],fB:[8.3,2.8]};case"fresnel":return{type:"fresnel",alpha:1,visible:!0,mode:0,color:Br.fromHexAndA(16777215,1),bias:.1,scale:1,intensity:2,factor:1};case"rainbow":return{type:"rainbow",alpha:1,visible:!0,mode:0,filmThickness:30,movement:0,wavelengths:[0,0,0],noiseStrength:0,noiseScale:1,offset:[0,0,0]};case"matcap":return{type:"matcap",alpha:1,visible:!0,mode:0,texture:{image:"matcap_0",wrapping:1001,repeat:[1,1],offset:[0,0]}};case"transmission":return{type:"transmission",alpha:1,visible:!0,mode:0,thickness:10,ior:1.5,roughness:1};case"displace":return{type:"displace",displacementType:"noise",noiseType:0,scale:10,movement:1,offset:[0,0,0],intensity:8,visible:!0}}}})(zs||(zs={}));var oo;(t=>{function e(l){return!l.layers.some(h=>{if(h.data.type==="texture"&&h.data.projection!==0||h.data.type==="depth"&&!h.data.isWorldSpace||h.data.type==="noise"||h.data.type==="displace")return!0})&&!i(l)}t.isMergable=e;function n(l){let h="";return l.layers.forEach(c=>{Object.entries(c.data).forEach(([d,u])=>{h+=`${d}${u}`,Array.isArray(u)?u.forEach(p=>h+=`${p}`):typeof u=="object"?Object.values(u).forEach(p=>{typeof p=="number"?h+=`${p.toFixed(4)}`:h+=`${p}`}):h+=`${u}`})}),h}t.getHash=n;function i(l){let h=0;for(let c of l.layers)"alpha"in c.data&&c.data.type!=="light"&&c.data.type!=="fresnel"&&(h+=(1-h)*c.data.alpha);return h<1}t.isTransparent=i;function r(){return{layers:new Mn}}t.defaultEmptyData=r;function s(l="layer1",h="layer2"){return a("phong",l,h)}t.defaultData=s;function a(l,h="layer1",c="layer2"){let d=new Mn;return d.push({fi:0,data:zs.defaultData("light",l),id:h}),d.push({fi:1,data:zs.defaultData("color"),id:c}),{layers:d}}t.defaultTwoLayerData=a;function o(l,h="basic",c="layer1",d="layer2"){let u=zs.defaultData("texture");Object.assign(u.texture,{image:l});let p=new Mn;return p.push({fi:0,data:u,id:c}),p.push({fi:1,data:zs.defaultData("light",h),id:d}),{layers:p}}t.defaultTwoLayerTextureData=o})(oo||(oo={}));var Wl;(t=>{function e(){return{points:new Mn,roundness:0,shapeHoles:[],isClosed:!1}}t.defaultData=e})(Wl||(Wl={}));var pu;(t=>{function e(n){return n==="PolygonGeometry"||n==="RectangleGeometry"||n==="StarGeometry"||n==="TriangleGeometry"||n==="EllipseGeometry"}t.is2DParametricMesh=e})(pu||(pu={}));var jl;(t=>{function e(n){if(n==="RectangleGeometry")return{width:320,height:320,type:n,cornerRadius:[0,0,0,0],cornerType:0,depth:0,extrudeBevelSize:0,extrudeBevelSegments:1};if(n==="VectorGeometry")return{width:1,height:1,type:n,subdivisions:12,shape:Wl.defaultData(),depth:0,extrudeBevelSize:0,extrudeBevelSegments:1};if(n==="BooleanGeometry")return{type:n,operation:2,width:0,height:0,depth:0,phongAngle:35};throw new Error("not implemented")}t.defaultData=e})(jl||(jl={}));var lo;(t=>{t.identity=Ie(ve({},Zc.identity),{hiddenMatrix:Js.identity});function e(r){return{position:r.position,rotation:r.rotation,scale:r.scale,hiddenMatrix:r.hiddenMatrix}}t.fromObject=e;function n(r,s){return{position:(s==null?void 0:s.position)||r.position,rotation:(s==null?void 0:s.rotation)||r.rotation,scale:(s==null?void 0:s.scale)||r.scale,hiddenMatrix:(s==null?void 0:s.hiddenMatrix)||r.hiddenMatrix}}t.merge=n;function i(r,s){return{position:ja.isEqual(r.position,s.position)?null:s.position,rotation:ja.isEqual(r.rotation,s.rotation)?null:s.rotation,scale:ja.isEqual(r.scale,s.scale)?null:s.scale,hiddenMatrix:Js.isEqual(r.hiddenMatrix,s.hiddenMatrix)?null:s.hiddenMatrix}}t.diff=i})(lo||(lo={}));var qi;(t=>t.defaultData=ve({states:new Mn,events:new Mn,visible:!0,raycastLock:!1},lo.identity))(qi||(qi={}));var hm;(t=>t.defaultData=ve({type:"Empty"},qi.defaultData))(hm||(hm={}));var ql;(t=>t.defaultData=ve(ve({type:"Mesh"},qi.defaultData),uu.defaultData))(ql||(ql={}));var cm;(t=>t.defaultData=ve(ve({type:"TextFrame"},qi.defaultData),du.defaultData))(cm||(cm={}));var fu;(t=>t.defaultData=ve(ve(ve({},qi.defaultData),lo.identity),ao.defaultData))(fu||(fu={}));var um;(t=>{function e(n){return ve(ve({},qi.defaultData),lu.defaultData(n))}t.defaultData=e})(um||(um={}));var dm;(t=>(t.defaultCamera=ve({position:[0,0,1e3],scale:[1,1,1],rotation:[0,0,0],hiddenMatrix:Js.identity,name:"Play Camera",visible:!0,raycastLock:!1,states:new Mn,events:new Mn},ao.defaultData),t.defaultMeshObject=Ie(ve(ve({name:"Rectangle"},qi.defaultData),ql.defaultData),{geometry:jl.defaultData("RectangleGeometry"),material:oo.defaultTwoLayerData("basic","layer1","layer2")}),t.defaultBooleanObject=Ie(ve(ve({name:"Boolean"},qi.defaultData),ql.defaultData),{geometry:jl.defaultData("BooleanGeometry"),material:oo.defaultTwoLayerData("phong","layer1","layer2")})))(dm||(dm={}));var pm;(t=>{function e(i,r){if(r===void 0)return i;let s=ve({},i);return"material"in s&&"material"in r&&r.material&&(s.material=$f(s.material,a=>{if(typeof a!="string")for(let[o,l]of Object.entries(r.material.layers)){let h=a.layers.data(o);h&&kl(h,l)}}).data),s.materials&&r.materials&&(s.materials=$f(s.materials,a=>{var o,l;for(let h=0;h<s.materials.length;h++){let c=r.materials[h];if(typeof c!="string")for(let[d,u]of Object.entries(c.layers)){let p=(l=(o=a[h])==null?void 0:o.layers)==null?void 0:l.data(d);p&&kl(p,u)}}}).data),s}t.patchMaterialState=e;function n(i,r){var s,a;if(r===void 0)return i;let o=ve({},i);if(Object.assign(o,lo.merge(o,r)),Vl.is(i.type)){o.orthographic=ve({},o.orthographic),o.perspective=ve({},o.perspective);let l=r;((s=l.orthographic)==null?void 0:s.zoom)!==void 0&&(o.orthographic.zoom=l.orthographic.zoom),((a=l.perspective)==null?void 0:a.zoom)!==void 0&&(o.perspective.zoom=l.perspective.zoom),l.isUpVectorFlipped!==void 0&&(o.isUpVectorFlipped=l.isUpVectorFlipped),l.targetOffset!==void 0&&(o.targetOffset=l.targetOffset)}else if(i.type==="Mesh")o.geometry=ve({},o.geometry),Object.assign(o.geometry,r.geometry),o=e(o,r);else if(ou.is(i.type)){let l=r;o.intensity!==void 0&&(o.intensity=l.intensity),l.color!==void 0&&(typeof l.color=="string"?o.color=l.color:o.color=ti.clone(l.color))}return o}t.patch=n})(pm||(pm={}));var OP=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s,a;let o=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:64,heightSegments:1,openEnded:!1,thetaStart:0,thetaLength:360,cornerRadius:0,cornerSegments:8,hollow:0},t.parameters),l=o.width/2,h=(i=o.radiusTop)!=null?i:l,c=(r=o.radiusBottom)!=null?r:l;return h===c?(h=l,c=l):h>c?(h=l,c=c*l/h):(h=h*l/c,c=l),{parameters:Object.assign(o,{width:Math.abs(o.width),height:Math.abs((s=o.height)!=null?s:o.width),depth:Math.abs((a=o.depth)!=null?a:o.width),radiusTop:h,radiusBottom:c})}}static build(t){let{width:e,depth:n,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l,radiusTop:h,radiusBottom:c,cornerRadius:d,cornerSegments:u,hollow:p}=t.parameters,m;return d||p?m=new pv(h,c,i,r,s,a,o,l*Math.PI/180,d,d,u,p):m=new rh(h,c,i,r,s,a,o,l*Math.PI/180),m.scale(1,1,n/e),Object.assign(m,{userData:Ie(ve({},t),{type:"CylinderGeometry"})})}};function rr(t,e,n){n.x=t.x*e.x,n.y=t.y,n.z=t.x*e.y}function fm(t){return new q(t.y,-t.x)}var pv=class extends Ve{constructor(t,e,n,i,r,s,a,o,l,h,c,d,u=!1){super(),this.type="RoundedCylinderBufferGeometry",t=t!==void 0?t:1,e=e!==void 0?e:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,s=s!==void 0?s:!1,a=a!==void 0?a:0,o=o!==void 0?o:Math.PI*2,s&&(l=0,h=0);let p=[],m=[],f=[],g=[],v=0,y=n/2,w=new T,S=new T;u&&t==0&&(t=l),u&&e==0&&(e=h);let b=new q(t,y),_=new q(e,-y),E=null,x=null,A=null,M=null,C=b.clone().sub(_),F=0,W=0,O=0;d>0&&(F=Math.min(t,e)*(1-d),W=t-F,O=e-F);let Z=b.clone();Z.x-=F;let X=Math.PI-C.angle(),j=C.angle(),H=Math.tan(j/2),N=Math.tan(X/2),I=H+N,V=d?I:N,B=d?I:H;if(l=Math.min(l,(t-W)/V,C.length()/I),h=Math.min(h,(e-O)/B,C.length()/I),l>0){let ie=l/H;E=b.clone().sub(new q(ie,l)),d&&(A=E.clone(),A.x-=F-I*l),b.sub(C.clone().setLength(ie))}if(h>0){let ie=h/N;x=_.clone().sub(new q(ie,-h)),_.add(C.clone().setLength(ie)),d&&(M=x.clone(),M.x-=F-I*h,Z.sub(C.clone().setLength(ie)))}C=b.clone().sub(_);let k=C.length()<.5,$=[];for(let ie=0;ie<=i;ie++){let le=[],K=ie/i,pe=K*o+a,G=new q(Math.sin(pe),Math.cos(pe));M&&x?(ne(le,K,G,X,h,M,-1,!0),ne(le,K,G,j,h,x,-1,!1)):x?(z(le,G,x.x,0,-1),ne(le,K,G,j,h,x,-1,!1)):s||z(le,G,e,O,-1);let J=fm(C).normalize();if(rr(J,G,w),!k)for(let ee=0;ee<=r;ee++){let se=ee/r,ce=C.clone().multiplyScalar(se).add(_);rr(ce,G,S),m.push(S.x,S.y,S.z),f.push(w.x,w.y,w.z),g.push(K,.5+S.y/n),le.push(v++)}if(A&&E?(ne(le,K,G,X,l,E,1,!1),ne(le,K,G,j,l,A,1,!0)):E?(ne(le,K,G,X,l,E,1,!1),z(le,G,E.x,0,1)):s||z(le,G,t,W,1),d&&!k){let ee=fm(C).multiplyScalar(-1).normalize();rr(ee,G,w);for(let se=0;se<=r;se++){let ce=se/r,fe=C.clone().multiplyScalar(-ce).add(Z);rr(fe,G,S),m.push(S.x,S.y,S.z),f.push(w.x,w.y,w.z),g.push(K,.5+S.y/n),le.push(v++)}}d&&!s&&le.push(le[0]),$.push(le)}for(let ie=0;ie<$.length-1;ie++)for(let le=0;le<$[0].length-1;le++){if(s&&d&&le==r)continue;let K=$[ie][le],pe=$[ie+1][le],G=$[ie+1][le+1],J=$[ie][le+1],ee=m[G*3+0],se=m[G*3+2];p.push(K,pe,J),(ee!=0||se!=0)&&p.push(pe,G,J)}o<Math.PI*2&&(oe(-1,$[0],a),oe(1,$[$.length-1],a+o)),this.setIndex(p),this.setAttribute("position",new Pe(m,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(g,2));function ne(ie,le,K,pe,G,J,ee,se){for(let ce=0;ce<c+1;ce++){let fe=ce/c,ge=ee<0?fe:1-fe;se&&(ge-=1),ge*=pe;let _e=new q(Math.sin(ge),Math.cos(ge)*ee),Oe=_e.clone().multiplyScalar(G).add(J);rr(Oe,K,S),m.push(S.x,S.y,S.z),rr(_e,K,w),f.push(w.x,w.y,w.z),g.push(le,.5+S.y/n),ie.push(v++)}}function z(ie,le,K,pe,G){let J=new T,ee=new q,se=[K,pe];G<0&&se.reverse();for(let ce of se)ee.set(ce,y*G),rr(ee,le,J),m.push(J.x,J.y,J.z),f.push(0,G,0),g.push(.5,.5),ie.push(v++)}function oe(ie,le,K){let pe=new q(Math.sin(K),Math.cos(K)),G=new q(-Math.cos(K),Math.sin(K)),J=new T,ee=ie<0?(fe,ge,_e)=>p.push(fe,ge,_e):(fe,ge,_e)=>p.push(fe,_e,ge),se=new q((t+e+W+O)/4,0);rr(se,pe,J),m.push(J.x,J.y,J.z),f.push(G.x,0,G.y),g.push(.5,.5);let ce=v++;for(let fe of le){let ge=m.slice(fe*3,fe*3+3);m.push(...ge),f.push(G.x,0,G.y);let _e=g.slice(fe*2,fe*2+2);g.push(..._e),v++}for(let fe=ce+1;fe<v-1;fe++)ee(ce,fe,fe+1);ee(ce,v-1,ce+1)}}},IP=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:32,heightSegments:8,openEnded:!1,thetaStart:0,thetaLength:360,cornerRadiusTop:0,cornerRadiusBottom:0,cornerSegments:8},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,depth:n,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l,cornerRadiusTop:h,cornerRadiusBottom:c,cornerSegments:d}=t.parameters,u;return h>0||c>0||l<360?u=new pv(0,e/2,i,r,s,a,o,l*Math.PI/180,h,c,d,0,!0):u=new Gu(e/2,i,r,s,a),u.scale(1,1,n/e),Object.assign(u,{userData:Ie(ve({},t),{type:"ConeGeometry"})})}},NP=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,widthSegments:1,heightSegments:1,depthSegments:1,cornerRadius:0,cornerSegments:8},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:a,cornerRadius:o,cornerSegments:l}=t.parameters,h;return o==0?h=new ji(e,n,i,r,s,a):h=new zP(e,n,i,r,s,a,o,l),Object.assign(h,{userData:Ie(ve({},t),{type:"CubeGeometry"})})}},vc=Math.PI/2,zP=class extends Ve{constructor(t=1,e=1,n=1,i=1,r=1,s=1,a=0,o=4){super(),this.type="BoxBufferGeometry";let l=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s),o=Math.floor(o),a=Math.min(a,t/2,e/2,n/2);let h=[],c=[],d=[],u=[],p=0,m=0;f("z","y","x",-1,-1,n,e,t,s,r,0),f("z","y","x",1,-1,n,e,-t,s,r,1),f("x","z","y",1,1,t,n,e,i,s,2),f("x","z","y",1,-1,t,n,-e,i,s,3),f("x","y","z",1,-1,t,e,n,i,r,4),f("x","y","z",-1,-1,t,e,-n,i,r,5),a>0&&(g("z","y","x",-1,-1,1,n,e,t,s,0),g("z","y","x",1,-1,-1,n,e,t,s,1),g("z","y","x",-1,1,-1,n,e,t,s,1),g("z","y","x",1,1,1,n,e,t,s,0),g("x","y","z",-1,-1,-1,t,e,n,i,0),g("x","y","z",1,-1,1,t,e,n,i,1),g("x","y","z",-1,1,1,t,e,n,i,0),g("x","y","z",1,1,-1,t,e,n,i,1),g("y","x","z",-1,-1,1,e,t,n,r,0),g("y","x","z",1,-1,-1,e,t,n,r,1),g("y","x","z",1,1,1,e,t,n,r,1),g("y","x","z",-1,1,-1,e,t,n,r,0),v(1,1,1),v(-1,1,1),v(1,-1,1),v(-1,-1,1),v(1,1,-1),v(-1,1,-1),v(1,-1,-1),v(-1,-1,-1)),this.setIndex(h),this.setAttribute("position",new Pe(c,3)),this.setAttribute("normal",new Pe(d,3)),this.setAttribute("uv",new Pe(u,2));function f(y,w,S,b,_,E,x,A,M,C,F){let W=(E-2*a)/M,O=(x-2*a)/C,Z=E/2-a,X=x/2-a,j=A/2,H=M+1,N=C+1,I=0,V=0,B=new T;for(let k=0;k<N;k++){let $=k*O-X;for(let ne=0;ne<H;ne++){let z=ne*W-Z;B[y]=z*b,B[w]=$*_,B[S]=j,c.push(B.x,B.y,B.z),B[y]=0,B[w]=0,B[S]=A>0?1:-1,d.push(B.x,B.y,B.z),u.push(ne/M),u.push(1-k/C),I+=1}}for(let k=0;k<C;k++)for(let $=0;$<M;$++){let ne=p+$+H*k,z=p+$+H*(k+1),oe=p+($+1)+H*(k+1),ie=p+($+1)+H*k;h.push(ne,z,ie),h.push(z,oe,ie),V+=6}l.addGroup(m,V,F),m+=V,p+=I}function g(y,w,S,b,_,E,x,A,M,C,F){let W=(x-2*a)/C,O=x/2-a,Z=A/2-a,X=M/2,j=C+1,H=0,N=0,I=new T,V=new T;for(let B=0;B<o+1;B++){let k=B/o*vc,$=Math.sin(k)*a,ne=(1-Math.cos(k))*a,z=Math.sin(k),oe=Math.cos(k);I[w]=(Z+$)*_,I[S]=(X-ne)*E,V[y]=0,V[w]=z*Math.sign(I[w]),V[S]=oe*Math.sign(I[S]);for(let ie=0;ie<j;ie++){let le=ie*W-O;I[y]=le*b,c.push(I.x,I.y,I.z),d.push(V.x,V.y,V.z),u.push(ie/C),u.push(0),H+=1}}for(let B=0;B<o;B++)for(let k=0;k<C;k++){let $=p+k+j*B,ne=p+k+j*(B+1),z=p+(k+1)+j*(B+1),oe=p+(k+1)+j*B;h.push($,ne,oe),h.push(ne,z,oe),N+=6}l.addGroup(m,N,F),m+=N,p+=H}function v(y,w,S){let b=new T,_=new T(t/2,e/2,n/2);_.subScalar(a);let E=[],x=y*w*S>0?(M,C,F)=>h.push(M,C,F):(M,C,F)=>h.push(M,F,C);for(let M=0;M<=o;M++){let C=[],F=vc*(1-M/o),W=Math.cos(F),O=Math.sin(F),Z=0;for(let X=0;X<=M;X++){let j=Math.cos(Z),H=Math.sin(Z);b.x=W*j,b.y=O,b.z=W*H;let N=_.clone().addScaledVector(b,a);c.push(y*N.x,w*N.y,S*N.z),d.push(y*b.x,w*b.y,S*b.z),u.push(0,0),C.push(p++),Z+=vc/M}E.push(C)}let A=E.length-1;for(let M=0;M<A;M++){let C=E[M],F=E[M+1],W=C.length-1;x(C[0],F[1],F[0]);for(let O=1;O<=W;O++)x(C[O-1],C[O],F[O]),x(C[O],F[O+1],F[O])}}}},_d=class extends Ve{constructor(t=[],e=[],n="",i=1,r=.2,s=4){super(),this.type="PolyhedronGeometryRound";let a=[],o=[],l=[];h(),c(),this.setAttribute("position",new Pe(a,3)),this.setAttribute("normal",new Pe(l,3)),this.setAttribute("uv",new Pe(o,2));return;function h(){var d;r=Math.min(1-1e-5,r),r==0&&(s=0);let u={IcosahedronGeometry:5,DodecahedronGeometry:3,HexahedronGeometry:3,OctahedronGeometry:4,TetrahedronGeometry:3}[n],p=new T,m=p.clone(),f=new Vt,g=r*i,v=i-g,y=s+1,w=new T,S=(H,N)=>w.subVectors(H,N).normalize(),b=(H,N)=>Array(H).fill(void 0).map(N),_=b(t.length/3,(H,N)=>new T().fromArray(t,N*3).setLength(i)),E=[],x=1e6;for(let H=0;H<_.length;H++){let N=_[H],I=[],V,B,k,$=1e10,ne=-1;for(;(ne=e.indexOf(H,ne+1))!=-1;){let le=ne-ne%3;V=e[le+(ne+1)%3],B=e[le+(ne+2)%3],k=N.distanceToSquared(_[V]),$=Math.min($,k),I.push([V,B,k])}$+=1e-6;let z=[],oe=0,ie=I.length;for(let le=0;le<ie;le++){[V,B,k]=I[oe];let K=((d=E[V])==null?void 0:d.includes(H))==!0;k<=$&&z.push(V+ +K*x),oe=I.findIndex(pe=>pe[0]==B)}E.push(z)}let A=[];{let H=0,N=0,I,V,B=u==3;for(let k=0;k<=s;k++){I=k*(k+1)/2,V=(k+1)*(k+2)/2;for(let $=0;$<s-k;$++)[H,N]=[I+$+k+2,V+$+k+3],A.push(I,V,...B?[N,I]:[H,V],N,H),[I,V]=[H,N];A.push(I,V,I+s+2)}}let M=p.clone(),C=p.clone(),F=p.clone(),W=p.clone(),O=p.clone(),Z=[],X=b(_.length,()=>b(u,()=>p.clone()));for(let H=0;H<_.length;H++){p.copy(_[H]).normalize(),M.copy(p).multiplyScalar(v);let N=E[H];for(let z=0;z<N.length;z++){let oe=N[z],ie=N[(z+1)%u];f.setFromPointsAndIndices(_,H,oe%x,ie%x),f.b.sub(f.a).setLength(1e10).add(f.a),f.c.sub(f.a).setLength(1e10).add(f.a),f.closestPointToPoint(M,X[H][z])}let I=[],V=[],B=[],k=new T;s==0&&[...X[H]].reduce((z,oe)=>z.add(oe),k).multiplyScalar(1/u);for(let z=0;z<u;z++){let oe=[],ie=(z-1+u)%u,le=X[H][ie],K=X[H][z];p.copy(le).sub(M),m.copy(K).sub(M);let pe=M.angleTo(p),G=p.angleTo(m),J=Math.cos(pe)*g;s==0?C.copy(k):C.copy(M).setLength(v+J),V.push(J);let ee=[C,le,K];for(let se=0;se<2;se++){let ce=ee[se],fe=ee[se+1];W.subVectors(ce,M),O.subVectors(fe,M),F.crossVectors(W,O).normalize();for(let ge=0;ge<y;ge++){let _e=[pe,G][se]*ge/y;p.copy(W).applyAxisAngle(F,_e).add(M),I.push(p.clone()),se&&(S(p,M),oe.push([ge==0?ce:p.clone(),w.clone()]))}se&&(S(fe,M),oe.push([fe,w.clone()]))}B.push(oe)}Z.push(B);let $=2*y,ne=2;for(let z=0;z<u;z++){let oe=$*z,ie=$*((z+1)%u),le=[I[oe]];for(let pe=1;pe<y;pe++){W=I[oe+pe],O=I[ie+pe],le.push(W);for(let G=1,J=pe-ne+1;G<=J;G++)p.lerpVectors(W,O,G/(J+1)),p.sub(M).setLength(V[z]).add(M),le.push(p.clone());le.push(O)}for(let pe=0;pe<y;pe++)le.push(I[pe+y+oe]);le.push(I[ie+y]);let K=A.map(pe=>le[pe]);a.push(...K.map(pe=>[pe.x,pe.y,pe.z]).flat()),l.push(...K.map(pe=>(S(pe,M),[w.x,w.y,w.z])).flat())}}let j=[];for(let H=0;H<E.length;H++)for(let N=0;N<u;N++){let I=E[H][N];if(I<x){let V=E[I].findIndex($=>$%x==H),B=Z[H][N],k=Z[I][V];for(let $=0;$<y;$++){let ne=B[$],z=k[y-$],oe=B[$+1],ie=k[y-($+1)];[ne,z,oe,oe,z,ie].forEach(le=>{a.push(le[0].x,le[0].y,le[0].z),l.push(le[1].x,le[1].y,le[1].z)})}j.push(B[0][0],k[y][0],B[y][0],k[0][0])}}for(;j.length;){let H,N,I,V;[H,N]=j.splice(0,2);let B=[H];for(;H!=N;)B.push(N),I=j.indexOf(N),V=I%2,N=j.splice(I-V,2)[1-V];w.subVectors(B[0],B[1]).cross(p.subVectors(B[0],B[2])).normalize();let k=w.dot(B[0])<0;k&&w.negate();for(let $=1;$<=B.length-2;$++)[B[$+ +k],B[$+1-+k],B[0]].forEach(ne=>{a.push(ne.x,ne.y,ne.z),l.push(w.x,w.y,w.z)})}}function c(){let d=new T;for(let _=0;_<a.length;_+=3){d.x=a[_+0],d.y=a[_+1],d.z=a[_+2];let E=S(d)/2/Math.PI+.5,x=b(d)/Math.PI+.5;o.push(E,1-x)}let u=new T,p=new T,m=new T,f=new T,g=new q,v=new q,y=new q,w=(_,E,x,A)=>{A<0&&_.x===1&&(o[E]=_.x-1),x.x===0&&x.z===0&&(o[E]=A/2/Math.PI+.5)};for(let _=0,E=0;_<a.length;_+=9,E+=6){u.set(a[_+0],a[_+1],a[_+2]),p.set(a[_+3],a[_+4],a[_+5]),m.set(a[_+6],a[_+7],a[_+8]),g.set(o[E+0],o[E+1]),v.set(o[E+2],o[E+3]),y.set(o[E+4],o[E+5]),f.copy(u).add(p).add(m).divideScalar(3);let x=S(f);w(g,E+0,u,x),w(v,E+2,p,x),w(y,E+4,m,x)}for(let _=0;_<o.length;_+=6){let E=o[_+0],x=o[_+2],A=o[_+4],M=Math.max(E,x,A),C=Math.min(E,x,A);M>.9&&C<.1&&(E<.2&&(o[_+0]+=1),x<.2&&(o[_+2]+=1),A<.2&&(o[_+4]+=1))}function S(_){return Math.atan2(_.z,-_.x)}function b(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}}}static fromJSON(t){return new _d(t.vertices,t.indices,t.radius,t.corner,t.cornerSides)}},BP=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,detail:0,corner:0,cornerSides:4},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,detail:r,corner:s,cornerSides:a}=t.parameters,o=r===0&&s!==0?new fv(e*.5,s,a):new Wu(e*.5,r);return o.scale(1,n/e,i/e),Object.assign(o,{userData:Ie(ve({},t),{type:"DodecahedronGeometry"})})}},fv=class extends _d{constructor(t=1,e=.2,n=4){let i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],o="DodecahedronGeometry";super(s,a,o,t,e,n),this.type=o}static fromJSON(t){return new fv(t.radius,t.corner,t.cornerSides)}},Ca=1e-12,wd=class{constructor(t){this.position=new q,this.startPosition=new q,this.uuid=Mt.generateUUID(),this.position=t.clone()}start(){this.reset()}reset(){this.startPosition.copy(this.position)}applyOffset(t){this.position.copy(this.startPosition).add(t)}copy(t){return this.position.copy(t.position),this.startPosition.copy(t.startPosition),this}clone(){return new wd(this.position).copy(this)}toJSON(){return[this.position.x,this.position.y]}},mu=class extends wd{constructor(t){super(t.position),this.parent=t}copy(t){return super.copy(t),this}clone(){return new mu(this.parent).copy(this)}},Us=class extends wd{constructor(t,e){super(e),this.controls=[],this.roundness=0,this.areControlsDirectionsMirrored=!0,this.uuid=t,this.controls.push(new mu(this),new mu(this))}static create(t,e){let n=new Us(t,new q(...e.position));return n.controls[0].position.set(...e.controlPrevious.position),n.controls[1].position.set(...e.controlNext.position),n.roundness=e.roundness,n.areControlsDirectionsMirrored=e.areControlsDirectionsMirrored,n}getOppositeControl(t){let e=this.controls.indexOf(t);return e===0?this.controls[1]:e===1?this.controls[0]:null}applyOffsetToControls(t,e=1){for(let n=0,i=this.controls.length;n<i;n++){let r=this.controls[n];this.position.distanceTo(r.position)<=e?r.position.copy(this.position):r.applyOffset(t)}}controlsMoved(){return!(this.position.equals(this.controls[0].position)&&this.position.equals(this.controls[1].position))}copy(t){return super.copy(t),this.controls[0].copy(t.controls[0]),this.controls[1].copy(t.controls[1]),this.roundness=t.roundness,this.uuid=t.uuid,this}clone(){return new Us(this.uuid,this.position).copy(this)}toJSON(){return super.toJSON().concat(this.controls[0].toJSON(),this.controls[1].toJSON(),[this.roundness])}computeTangents(){var t,e;let n=(t=this.curveBefore)==null?void 0:t.getTangentAt(1),i=(e=this.curveAfter)==null?void 0:e.getTangentAt(0);return[n,i]}computeNormals(t=new q,e=new q){let[n,i]=this.computeTangents();return n&&i&&(mm(n,t),mm(i,e)),[t,e]}computeTangent(t=new q){let[e,n]=this.computeTangents();return e&&n&&t.copy(e).add(n).normalize(),t}computeNormal(t=new q){let[e,n]=this.computeNormals();return t.copy(e).add(n).normalize(),t}};function mm(t,e=new q){let n=t.length();return e.set(-t.y/n,t.x/n)}var Sd=t=>t,da=new q,_h=new q,FP=new q,UP=new q,kP=new q,VP=new q,mv=new T,gv=new T;function HP(t){let e=new q;e.addVectors(t.v0,da.subVectors(t.v1,t.v0).multiplyScalar(2/3));let n=new q;return n.addVectors(t.v2,_h.subVectors(t.v1,t.v2).multiplyScalar(2/3)),new ri(t.v0,e,n,t.v2)}function Ia(t,e,n=Number.EPSILON){return Math.abs(t-e)<n}function GP(t,e,n=Number.EPSILON){return t.distanceTo(e)<n}function WP(t,e,n=Number.EPSILON){return t.distanceTo(e)<n}function vv(t,e,n){let i=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),r=Math.sqrt(Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2)),s=Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2));return Math.acos((r*r+i*i-s*s)/(2*r*i))}function jP(t,e,n){return vm(t,e)&&vm(e,n)&&gu(t.position,e.position,n.position)}function gu(t,e,n){return da.copy(e).sub(t).cross(_h.copy(n).sub(t))===0}function qP(t,e,n,i,r){let s=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),a=(t.y+e.y)/2,o=(t.x+e.x)/2,l=Math.sqrt(Math.pow(n,2)-Math.pow(s/2,2))*(t.y-e.y)/s,h=Math.sqrt(Math.pow(n,2)-Math.pow(s/2,2))*(e.x-t.x)/s;return i.set(o+l,a+h),r.set(o-l,a-h),[i,r]}function XP(t,e,n){let i=t.distanceTo(n),r=e.distanceTo(n);return i<r?e:t}function JP(t,e,n,i,r,s){let a=e.x-t.x,o=e.y-t.y,l=n.x-t.x,h=n.y-t.y,c=Math.sqrt((a+l)*(a+l)+(o+h)*(o+h)),d;return vv(e,t,n)>Math.PI&&(c*=-1),Ia(h,o)?d=(o+h)*(i/c-.5)*8/3/(a-l):d=(a+l)*(i/c-.5)*8/3/(h-o),r.set(e.x-d*o,e.y+d*a),s.set(n.x+d*h,n.y-d*l),[r,s]}function gm(t,e){return t.position.equals(t.controls[1].position)&&e.position.equals(e.controls[0].position)}function vm(t,e){return gu(t.position,t.controls[1].position,e.position)&&gu(t.position,e.controls[0].position,e.position)}function $P(t,e,n,i,r=.5){let s=da.subVectors(e,t).multiplyScalar(r).add(t),a=_h.subVectors(n,e).multiplyScalar(r).add(e),o=FP.subVectors(i,n).multiplyScalar(r).add(n),l=s,h=UP.subVectors(a,s).multiplyScalar(r).add(s),c=kP.subVectors(o,a).multiplyScalar(r).add(a),d=o,u=VP.subVectors(c,h).multiplyScalar(r).add(h);return[t.x,t.y,l.x,l.y,h.x,h.y,u.x,u.y,c.x,c.y,d.x,d.y,i.x,i.y]}function YP(t,e,n=12,i=!0){let r=gv.set(0,0,0),s,a=0;for(let o=0;o<e.length;o++){let l=Sd(e[o]),h=da,c=Ur(l,n);for(let d=0;d<=c;d++)if(l instanceof ri||l instanceof gr||l instanceof ai){if(l.getPoint(d/c,h),r.set(h.x,h.y,0),s!==void 0&&WP(s,r))continue;s===void 0&&(s=mv),s.copy(r),t.setXYZ(a,r.x,r.y,r.z),a++}}return i&&a>1&&!(t.getX(a-1)===t.getX(0)&&t.getY(a-1)===t.getY(0)&&t.getZ(a-1)===t.getZ(0))&&(t.setXYZ(a,t.getX(0),t.getY(0),t.getZ(0)),a++),t}function ZP(t,e,n,i=12,r=!0){let s=gv.set(0,0,0),a=0,o=[];for(let l=0;l<e.length;l++){if(n[l]===!1)continue;let h,c=Sd(e[l]),d=da,u=Ur(c,i);o.push(u);for(let p=0;p<=u;p++)if(c instanceof ri||c instanceof gr||c instanceof ai){if(c.getPoint(p/u,d),s.set(d.x,d.y,0),h!=null&&h.equals(s))continue;h===void 0?h=mv:(t.setXYZ(a,h.x,h.y,h.z),a++,t.setXYZ(a,s.x,s.y,s.z),a++),h.copy(s)}}return r&&a>1&&!(t.getX(a-1)===t.getX(0)&&t.getY(a-1)===t.getY(0)&&t.getZ(a-1)===t.getZ(0))&&(t.setXYZ(a,t.getX(0),t.getY(0),t.getZ(0)),a++),o}function ym(t,e=12,n=!1){let i=[];for(let r=0,s=t.length;r<s;r++){let a=t[r],o=0;if(n&&a.roundedCurveCorner!==void 0){let l=Ur(a.roundedCurveCorner,e)*.5;r>0&&(i[r-1]+=l),o+=l}a.curveAfter!==void 0&&(o+=Ur(a.curveAfter,e)),i.push(o)}return t.length>0&&n&&t[0].roundedCurveCorner!==void 0&&(i[t.length-1]+=Ur(t[0].roundedCurveCorner,e)*.5),i}function Ur(t,e=12){return t&&t instanceof fo?e*2:t&&(t instanceof ai||t instanceof Dg)?1:t&&t instanceof ih?e*t.points.length:e}function KP(t,e,n=12,i=!0){let r,s=0;for(let a=0;a<e.length;a++){let o=Sd(e[a]),l=Ur(o,n),h=da;for(let c=0;c<=l;c++)if(o instanceof ri||o instanceof gr||o instanceof ai){if(o.getPoint(c/l,h),r!==void 0&&GP(r,h,Ca))continue;r===void 0&&(r=_h),r.copy(h),t.push(h.x,h.y),s++}}return Ia(t[0],t[t.length-2],Ca)&&Ia(t[1],t[t.length-1],Ca)&&(t.pop(),t.pop()),i&&s>1&&!(Ia(t[s-1],t[1],Ca)&&Ia(t[s-2],t[0],Ca))&&(t.push(t[0],t[1]),s++),t}var yc=new q,QP=new q,eD=new q,tD=new q,nD=new q,iD=new q,Bt=class extends oi{constructor(t=100,e=100){super(),this.points=[],this.shapeHoles=[],this.eventDispatcher=new ci,this.plane=new _i(new T(0,0,-1)),this.subdivision=0,this.controlSnapDistance=4,this.pointIDs=0,this.isMesh2D=!1,this._roundness=0,this.isClosed=!1,this.useCubicForRoundedCorners=!0,this.uuid=Mt.generateUUID(),this.needsUpdate=!1,this.roundedCurves=[],this._width=t,this._height=e}static createFromState(t,e,n){let i=new Bt;return i.isClosed=t.isClosed,i.points=t.points.map(r=>Us.create(r.id,r.data)),typeof t.roundness=="number"&&(i.roundness=t.roundness),i.shapeHoles=t.shapeHoles.map(r=>Bt.createFromState(r)),e!==void 0&&n!==void 0&&i.applySize(e,n),i.update(),i}get width(){return this._width}get height(){return this._height}get roundness(){return this._roundness}set roundness(t){if(this._roundness!==t){this._roundness=t;for(let e=0,n=this.points.length;e<n;e++)this.points[e].roundness=t;this.needsUpdate=!0}}getPointsIndexesByIds(t){return t.map(e=>this.getPointIndexById(e)).filter(e=>e>=0)}getPointIndexById(t){let e=this.points.length,n=this.points.findIndex(i=>i.uuid===t);if(n<0){let i=e;for(let r=0,s=this.shapeHoles.length;r<s;r++){let a=this.shapeHoles[r],o=a.points.length-1,l=a.getPointIndexById(t);if(l<0)i+=o;else return l+i}}return n}getLineIndexById(t){return this.getPointIndexById(t)}getBezierPoint(t){if(t<=this.points.length-1)return this.points[t];if(this.shapeHoles.length>0)for(let e=0,n=this.shapeHoles.length;e<n;e++){let i=this.shapeHoles[e],r=t-this.points.length;if(r<=i.points.length-1)return i.points[r]}throw new Error("This shape does not have a point for this index: "+t)}getBezierPointIndex(t){let e=this.points.indexOf(t);if(e>=0)return e;if(e=this.points.length,this.shapeHoles.length>0)for(let n=0,i=this.shapeHoles.length;n<i;n++){let r=this.shapeHoles[n],s=r.points.indexOf(t);if(s>=0)return e+s;e+=r.points.length}return-1}getAllPoints(){let t=[].concat(...this.shapeHoles.map(e=>e.points));return[...this.points,...t]}applySize(t,e){t===0&&(t=.001),e===0&&(e=.001),this._width=t,this._height=e}applyScale(t,e){let n=yc.set(t,e);for(let i=0,r=this.points.length;i<r;i++){let s=this.points[i];s.position.multiply(n),s.controls[0].position.multiply(n),s.controls[1].position.multiply(n)}for(let i=0,r=this.shapeHoles.length;i<r;i++)this.shapeHoles[i].applyScale(t,e);this._update(!1)}createPoint(t,e=0,n=Mt.generateUUID()){let i;t instanceof q?i=t:i=new q(t,e);let r=new Us(n,i);return r.roundness=this.roundness,r}addPoint(t){this.points.push(t),this.needsUpdate=!0}addPointAt(t,e){this.points.splice(e,0,t),this.needsUpdate=!0}getPointByUuid(t){for(let e=0,n=this.points.length;e<n;e++){let i=this.points[e];if(i.uuid===t)return i}for(let e=0,n=this.shapeHoles.length;e<n;e++){let i=this.shapeHoles[e].getPointByUuid(t);if(i)return i}}getFirstPoint(){return this.points[0]}getLastPoint(){return this.points[this.points.length-1]}removePoint(t){let e=this.points.indexOf(t);e>=0&&this.points.splice(e,1),this.needsUpdate=!0}removePointById(t){let e=this.points.find(n=>n.uuid===t);e&&this.removePoint(e)}update(t=!0){for(let e=0,n=this.shapeHoles.length;e<n;e++)this.shapeHoles[e].update(!1);this._update(t)}extractShapePointsToBuffer(t,e=12,n=!1){this.subdivision=e,this.curveDivisions===void 0&&this.computeCurveDivisions(e);let i=n?this.roundedCurveDivisions:this.curveDivisions;return YP(t,n?this.roundedCurves:this.curves,e,this.autoClose),i.reduce((r,s)=>r+s,0)+1}computeCurveDivisions(t=12){return this.curveDivisions=ym(this.points,t,!1),this.roundedCurveDivisions=ym(this.points,t,!0),this.curveDivisions}extractFilteredShapePointsToBuffer(t,e,n=12){return ZP(t,this.curves,e,n,this.autoClose).reduce((i,r)=>i+r,0)*2}extractShapePointsToFlatArray(t,e=12){return this.subdivision=e,this.curveDivisions===void 0&&this.computeCurveDivisions(e),KP(t,this.roundedCurves,e,this.autoClose)}getCurveIndexFromVertexId(t,e=!1){let n=0;this.curveDivisions===void 0&&this.computeCurveDivisions(this.subdivision);let i=e?this.roundedCurveDivisions:this.curveDivisions,r=0;e&&this.points[0].roundedCurveCorner!==void 0&&(r=Ur(this.points[0].roundedCurveCorner,this.subdivision)*.5);let s=t-r;s<0&&(s+=i.reduce((a,o)=>a+o,0));for(let a=0,o=i.length;a<o;a++){let l=i[a];if(s<n+l)return[a,(s-n+1)/l];n+=l}return[0,1]}getCurveT(t,e,n){let i=this.points[t],r=this.points[t>=this.points.length-1?0:t+1],s=this.curveDivisions,a=s[t];if(gm(i,r)){let l=i.position.distanceTo(r.position);return i.position.distanceTo(yc.set(n.x,n.y))/l}let o=0;for(let l=0;l<t;l++)o+=s[l];return(e-o)/a}dispose(){this.eventDispatcher=null}_applyCurveForPoint(t,e){gm(e,t)?this.lineTo(t.position.x,t.position.y):this.bezierCurveTo(e.controls[1].position.x,e.controls[1].position.y,t.controls[0].position.x,t.controls[0].position.y,t.position.x,t.position.y);let n=this.curves[this.curves.length-1];t.curveBefore=n,e.curveAfter=n;let i=n.clone();t.roundedCurveBefore=i,e.roundedCurveAfter=i,t.roundedCurveCorner=void 0,this.roundedCurves.push(i)}_update(t=!0){var e,n,i;if(this.curves=[],this.roundedCurves=[],!this.points.length)return;for(let s=0,a=this.points.length;s<a;s++){let o=this.points[s];if(s===0)this.moveTo(o.position.x,o.position.y);else{let l=this.points[s-1];this._applyCurveForPoint(o,l)}}let r=this.getLastPoint();if(r!=null&&r.curveAfter&&(r.curveAfter=void 0),this.isClosed){let s=this.points[0],a=this.points[this.points.length-1];this._applyCurveForPoint(s,a)}if(this.points.length>2){let s=0;for(let a=0,o=this.points.length;a<o;a++){let l=this.points[a],h=(e=this.points[a-1])!=null?e:this.points[this.points.length-1],c=(n=this.points[a+1])!=null?n:this.points[0],d=l.roundness,u=h&&c&&jP(h,l,c);if(!l.controlsMoved()&&d>0&&!u){let p=l.curveBefore,m=l.curveAfter;if(p===void 0||m===void 0)continue;let f=l.roundedCurveBefore,g=l.roundedCurveAfter,v=p.getLength(),y=m.getLength(),w=Math.min(d,v*.499),S=Math.min(d,y*.499),b=Math.min(w,S),_=1-b/v,E=b/y,x=p.getPointAt(_,yc),A=m.getPointAt(E,QP);this._subSplitCurve(p,f,_,x,void 0),this._subSplitCurve(m,g,E,void 0,A);let M;if(this.useCubicForRoundedCorners){let C=vv(x,l.position,A)/2,F=Math.tan(C)*x.distanceTo(l.position),[W,O]=qP(x,A,F,eD,tD),Z=XP(W,O,l.position),[X,j]=JP(Z,x,A,F,nD,iD);M=new ri(x.clone(),X.clone(),j.clone(),A.clone())}else M=new gr(x.clone(),l.position.clone(),A.clone());l.roundedCurveCorner=M,this.roundedCurves.splice(a+s,0,M),s++}}}t&&((i=this.eventDispatcher)==null||i.dispatchEvent({type:"update"}))}_subSplitCurve(t,e,n,i,r){if(t instanceof ai)i!==void 0&&e.v2.copy(i),r!==void 0&&e.v1.copy(r);else{let s=t,a=e,o=s.getUtoTmapping(n,0),l=$P(s.v0,s.v1,s.v2,s.v3,o);return i!==void 0&&(a.v0.set(l[0],l[1]),a.v1.set(l[2],l[3]),a.v2.set(l[4],l[5]),a.v3.set(l[6],l[7])),r!==void 0&&(a.v0.set(l[6],l[7]),a.v1.set(l[8],l[9]),a.v2.set(l[10],l[11]),a.v3.set(l[12],l[13])),a}return e}clone(){let t=new Bt(this._width,this._height);return t.points=this.points.map(e=>e.clone()),t.isClosed=this.isClosed,t.roundness=this.roundness,t.isMesh2D=this.isMesh2D,t.shapeHoles=this.shapeHoles.map(e=>e.clone()),t}toJSON(){return{points:this.points.reduce((t,e)=>t.concat(e.toJSON()),[]),shapeHoles:this.shapeHoles.map(t=>t.toJSON()),isClosed:this.isClosed,roundness:this.roundness}}fromJSON(t){var e;this.points=[],this.pointIDs=0;let n=t.points.length/7;for(let i=0;i<n;i++){let r=i*7,s=t.points[r+0],a=t.points[r+1],o=t.points[r+2],l=t.points[r+3],h=t.points[r+4],c=t.points[r+5],d=t.points[r+6],u=new Us(Mt.generateUUID(),new q(s,a));u.controls[0].position.set(o,l),u.controls[1].position.set(h,c),u.roundness=d,this.points.push(u)}return this.shapeHoles=(e=t.shapeHoles)!=null&&e.length?t.shapeHoles.map(i=>{let r=new Bt;return r.fromJSON(i),r}):[],this.isClosed=t.isClosed,this._roundness=t.roundness,this._update(),this}fromShape(t){let e=(i,r)=>{r instanceof ri&&r.v3.equals(i.position)&&i.controls[0].position.copy(r.v2)},n=i=>{let r=[],s,a;for(s=0,a=i.length;s<a;s++)i[s]instanceof gr&&(i[s]=HP(i[s]));for(s=0,a=i.length;s<a;s++){let h=i[s],c=s>0?i[s-1]:null,d;h instanceof ri?(d=this.createPoint(h.v0),d.controls[1].position.copy(h.v1)):h instanceof ai&&(d=this.createPoint(h.v1)),d!==void 0&&(c!==null&&e(d,c),r.push(d))}let o=i[i.length-1],l=!1;return o instanceof ri?o.v3.equals(r[0].position)&&(r[0].controls[0].position.copy(o.v2),l=!0):o instanceof ai&&o.v2.equals(r[0].position)&&(l=!0),this.isClosed=l,r};return this.points=n(t.curves),t instanceof oi&&(this.shapeHoles=t.holes.map(i=>{let r=new Bt;return r.fromShape(i),r})),this.update(),this}},vu=Math.PI*2;function xc({x:t,y:e},n,i,r,s){return{x:t*n+r,y:e*i+s}}function rD(t,e){let n=e===1.5707963267948966?.551915024494:e===-1.5707963267948966?-.551915024494:1.3333333333333333*Math.tan(e/4),i=Math.cos(t),r=Math.sin(t),s=Math.cos(t+e),a=Math.sin(t+e);return[{x:i-r*n,y:r+i*n},{x:s+a*n,y:a-s*n},{x:s,y:a}]}function xm(t,e,n,i){let r=t*i-e*n<0?-1:1,s=Math.min(1,Math.max(-1,t*n+e*i));return r*Math.acos(s)}function sD(t,e,n,i,r,s,a,o,l,h){let c=Math.pow(r,2),d=Math.pow(s,2),u=Math.pow(a,2),p=Math.pow(o,2),m=c*d-c*p-d*u;m<0&&(m=0),m/=c*p+d*u,m=Math.sqrt(m)*(l===h?-1:1);let f=m*r/s*o,g=m*-s/r*a,v=f+(t+n)/2,y=g+(e+i)/2,w=(a-f)/r,S=(o-g)/s,b=(-a-f)/r,_=(-o-g)/s,E=xm(1,0,w,S),x=xm(w,S,b,_);return!h&&x>0&&(x-=vu),h&&x<0&&(x+=vu),{centerx:v,centery:y,ang1:E,ang2:x}}function aD({px:t,py:e,cx:n,cy:i,rx:r,ry:s,largeArcFlag:a,sweepFlag:o}){let l=[];if(r===0||s===0)return[];let h=(t-n)/2,c=(e-i)/2;if(h===0&&c===0)return[];r=Math.abs(r),s=Math.abs(s);let d=Math.pow(h,2)/Math.pow(r,2)+Math.pow(c,2)/Math.pow(s,2);d>1&&(r*=Math.sqrt(d),s*=Math.sqrt(d));let u=sD(t,e,n,i,r,s,h,c,a,o),{ang1:p,ang2:m}=u,{centerx:f,centery:g}=u,v=Math.abs(m)/(vu/4);Math.abs(1-v)<1e-7&&(v=1);let y=Math.max(Math.ceil(v),1);m/=y;for(let w=0;w<y;w++)l.push(rD(p,m)),p+=m;return l.map(w=>{let{x:S,y:b}=xc(w[0],r,s,f,g),{x:_,y:E}=xc(w[1],r,s,f,g),{x,y:A}=xc(w[2],r,s,f,g);return{x1:S,y1:b,x2:_,y2:E,x,y:A}})}var Ft;(function(t){t[t.ODD=0]="ODD",t[t.NONZERO=1]="NONZERO",t[t.POSITIVE=2]="POSITIVE",t[t.NEGATIVE=3]="NEGATIVE",t[t.ABS_GEQ_TWO=4]="ABS_GEQ_TWO"})(Ft||(Ft={}));var on;(function(t){t[t.POLYGONS=0]="POLYGONS",t[t.CONNECTED_POLYGONS=1]="CONNECTED_POLYGONS",t[t.BOUNDARY_CONTOURS=2]="BOUNDARY_CONTOURS"})(on||(on={}));function qe(t,e){if(!t)throw e||"Assertion Failed!"}var He=function(){function t(){}return t.vertEq=function(e,n){return e.s===n.s&&e.t===n.t},t.vertLeq=function(e,n){return e.s<n.s||e.s===n.s&&e.t<=n.t},t.transLeq=function(e,n){return e.t<n.t||e.t===n.t&&e.s<=n.s},t.edgeGoesLeft=function(e){return t.vertLeq(e.Dst,e.Org)},t.edgeGoesRight=function(e){return t.vertLeq(e.Org,e.Dst)},t.vertL1dist=function(e,n){return Math.abs(e.s-n.s)+Math.abs(e.t-n.t)},t.edgeEval=function(e,n,i){qe(t.vertLeq(e,n)&&t.vertLeq(n,i));var r=n.s-e.s,s=i.s-n.s;return r+s>0?r<s?n.t-e.t+(e.t-i.t)*(r/(r+s)):n.t-i.t+(i.t-e.t)*(s/(r+s)):0},t.edgeSign=function(e,n,i){qe(t.vertLeq(e,n)&&t.vertLeq(n,i));var r=n.s-e.s,s=i.s-n.s;return r+s>0?(n.t-i.t)*r+(n.t-e.t)*s:0},t.transEval=function(e,n,i){qe(t.transLeq(e,n)&&t.transLeq(n,i));var r=n.t-e.t,s=i.t-n.t;return r+s>0?r<s?n.s-e.s+(e.s-i.s)*(r/(r+s)):n.s-i.s+(i.s-e.s)*(s/(r+s)):0},t.transSign=function(e,n,i){qe(t.transLeq(e,n)&&t.transLeq(n,i));var r=n.t-e.t,s=i.t-n.t;return r+s>0?(n.s-i.s)*r+(n.s-e.s)*s:0},t.vertCCW=function(e,n,i){return e.s*(n.t-i.t)+n.s*(i.t-e.t)+i.s*(e.t-n.t)>=0},t.interpolate=function(e,n,i,r){return e=e<0?0:e,i=i<0?0:i,e<=i?i===0?(n+r)/2:n+(r-n)*(e/(e+i)):r+(n-r)*(i/(e+i))},t.intersect=function(e,n,i,r,s){var a,o,l;t.vertLeq(e,n)||(l=e,e=n,n=l),t.vertLeq(i,r)||(l=i,i=r,r=l),t.vertLeq(e,i)||(l=e,e=i,i=l,l=n,n=r,r=l),t.vertLeq(i,n)?t.vertLeq(n,r)?(a=t.edgeEval(e,i,n),o=t.edgeEval(i,n,r),a+o<0&&(a=-a,o=-o),s.s=t.interpolate(a,i.s,o,n.s)):(a=t.edgeSign(e,i,n),o=-t.edgeSign(e,r,n),a+o<0&&(a=-a,o=-o),s.s=t.interpolate(a,i.s,o,r.s)):s.s=(i.s+n.s)/2,t.transLeq(e,n)||(l=e,e=n,n=l),t.transLeq(i,r)||(l=i,i=r,r=l),t.transLeq(e,i)||(l=e,e=i,i=l,l=n,n=r,r=l),t.transLeq(i,n)?t.transLeq(n,r)?(a=t.transEval(e,i,n),o=t.transEval(i,n,r),a+o<0&&(a=-a,o=-o),s.t=t.interpolate(a,i.t,o,n.t)):(a=t.transSign(e,i,n),o=-t.transSign(e,r,n),a+o<0&&(a=-a,o=-o),s.t=t.interpolate(a,i.t,o,r.t)):s.t=(i.t+n.t)/2},t}(),La=function(){function t(){this.next=null,this.prev=null,this.anEdge=null,this.trail=null,this.n=0,this.marked=!1,this.inside=!1}return t}(),hl=function(){function t(e){this.side=e,this.next=null,this.Org=null,this.Sym=null,this.Onext=null,this.Lnext=null,this.Lface=null,this.activeRegion=null,this.winding=0}return Object.defineProperty(t.prototype,"Rface",{get:function(){return this.Sym.Lface},set:function(e){this.Sym.Lface=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Dst",{get:function(){return this.Sym.Org},set:function(e){this.Sym.Org=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Oprev",{get:function(){return this.Sym.Lnext},set:function(e){this.Sym.Lnext=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Lprev",{get:function(){return this.Onext.Sym},set:function(e){this.Onext.Sym=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Dprev",{get:function(){return this.Lnext.Sym},set:function(e){this.Lnext.Sym=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Rprev",{get:function(){return this.Sym.Onext},set:function(e){this.Sym.Onext=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Dnext",{get:function(){return this.Sym.Onext.Sym},set:function(e){this.Sym.Onext.Sym=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Rnext",{get:function(){return this.Sym.Lnext.Sym},set:function(e){this.Sym.Lnext.Sym=e},enumerable:!0,configurable:!0}),t}(),As=function(){function t(){this.next=null,this.prev=null,this.anEdge=null,this.coords=[0,0,0],this.s=0,this.t=0,this.pqHandle=0,this.n=0,this.idx=0}return t}(),bm=function(){function t(){var e=new As,n=new La,i=new hl(0),r=new hl(1);e.next=e.prev=e,e.anEdge=null,n.next=n.prev=n,i.next=i,i.Sym=r,r.next=r,r.Sym=i,this.vHead=e,this.fHead=n,this.eHead=i,this.eHeadSym=r}return t.prototype.makeEdge_=function(e){var n=new hl(0),i=new hl(1);e.Sym.side<e.side&&(e=e.Sym);var r=e.Sym.next;return i.next=r,r.Sym.next=n,n.next=e,e.Sym.next=i,n.Sym=i,n.Onext=n,n.Lnext=i,n.Org=null,n.Lface=null,n.winding=0,n.activeRegion=null,i.Sym=n,i.Onext=i,i.Lnext=n,i.Org=null,i.Lface=null,i.winding=0,i.activeRegion=null,n},t.prototype.splice_=function(e,n){var i=e.Onext,r=n.Onext;i.Sym.Lnext=n,r.Sym.Lnext=e,e.Onext=r,n.Onext=i},t.prototype.makeVertex_=function(e,n,i){var r=e;qe(r,"Vertex can't be null!");var s=i.prev;r.prev=s,s.next=r,r.next=i,i.prev=r,r.anEdge=n;var a=n;do a.Org=r,a=a.Onext;while(a!==n)},t.prototype.makeFace_=function(e,n,i){var r=e;qe(r,"Face can't be null");var s=i.prev;r.prev=s,s.next=r,r.next=i,i.prev=r,r.anEdge=n,r.trail=null,r.marked=!1,r.inside=i.inside;var a=n;do a.Lface=r,a=a.Lnext;while(a!==n)},t.prototype.killEdge_=function(e){e.Sym.side<e.side&&(e=e.Sym);var n=e.next,i=e.Sym.next;n.Sym.next=i,i.Sym.next=n},t.prototype.killVertex_=function(e,n){var i=e.anEdge,r=i;do r.Org=n,r=r.Onext;while(r!==i);var s=e.prev,a=e.next;a.prev=s,s.next=a},t.prototype.killFace_=function(e,n){var i=e.anEdge,r=i;do r.Lface=n,r=r.Lnext;while(r!==i);var s=e.prev,a=e.next;a.prev=s,s.next=a},t.prototype.makeEdge=function(){var e=new As,n=new As,i=new La,r=this.makeEdge_(this.eHead);return this.makeVertex_(e,r,this.vHead),this.makeVertex_(n,r.Sym,this.vHead),this.makeFace_(i,r,this.fHead),r},t.prototype.splice=function(e,n){var i=!1,r=!1;if(e!==n){if(n.Org!==e.Org&&(r=!0,this.killVertex_(n.Org,e.Org)),n.Lface!==e.Lface&&(i=!0,this.killFace_(n.Lface,e.Lface)),this.splice_(n,e),!r){var s=new As;this.makeVertex_(s,n,e.Org),e.Org.anEdge=e}if(!i){var a=new La;this.makeFace_(a,n,e.Lface),e.Lface.anEdge=e}}},t.prototype.delete=function(e){var n=e.Sym,i=!1;if(e.Lface!==e.Rface&&(i=!0,this.killFace_(e.Lface,e.Rface)),e.Onext===e)this.killVertex_(e.Org,null);else if(e.Rface.anEdge=e.Oprev,e.Org.anEdge=e.Onext,this.splice_(e,e.Oprev),!i){var r=new La;this.makeFace_(r,e,e.Lface)}n.Onext===n?(this.killVertex_(n.Org,null),this.killFace_(n.Lface,null)):(e.Lface.anEdge=n.Oprev,n.Org.anEdge=n.Onext,this.splice_(n,n.Oprev)),this.killEdge_(e)},t.prototype.addEdgeVertex=function(e){var n=this.makeEdge_(e),i=n.Sym;this.splice_(n,e.Lnext),n.Org=e.Dst;var r=new As;return this.makeVertex_(r,i,n.Org),n.Lface=i.Lface=e.Lface,n},t.prototype.splitEdge=function(e){var n=this.addEdgeVertex(e),i=n.Sym;return this.splice_(e.Sym,e.Sym.Oprev),this.splice_(e.Sym,i),e.Dst=i.Org,i.Dst.anEdge=i.Sym,i.Rface=e.Rface,i.winding=e.winding,i.Sym.winding=e.Sym.winding,i.idx=e.idx,i.Sym.idx=e.Sym.idx,i},t.prototype.connect=function(e,n){var i=!1,r=this.makeEdge_(e),s=r.Sym;if(n.Lface!==e.Lface&&(i=!0,this.killFace_(n.Lface,e.Lface)),this.splice_(r,e.Lnext),this.splice_(s,n),r.Org=e.Dst,s.Org=n.Org,r.Lface=s.Lface=e.Lface,e.Lface.anEdge=s,!i){var a=new La;this.makeFace_(a,r,e.Lface)}return r},t.prototype.zapFace=function(e){var n=e.anEdge,i,r,s,a,o;r=n.Lnext;do i=r,r=i.Lnext,i.Lface=null,i.Rface===null&&(i.Onext===i?this.killVertex_(i.Org,null):(i.Org.anEdge=i.Onext,this.splice_(i,i.Oprev)),s=i.Sym,s.Onext===s?this.killVertex_(s.Org,null):(s.Org.anEdge=s.Onext,this.splice_(s,s.Oprev)),this.killEdge_(i));while(i!=n);a=e.prev,o=e.next,o.prev=a,a.next=o},t.prototype.countFaceVerts_=function(e){var n=e.anEdge,i=0;do i++,n=n.Lnext;while(n!==e.anEdge);return i},t.prototype.mergeConvexFaces=function(e){var n,i,r,s,a,o,l;for(n=this.fHead.next;n!==this.fHead;n=n.next)if(n.inside)for(i=n.anEdge,a=i.Org;r=i.Lnext,s=i.Sym,s&&s.Lface&&s.Lface.inside&&(o=this.countFaceVerts_(n),l=this.countFaceVerts_(s.Lface),o+l-2<=e&&He.vertCCW(i.Lprev.Org,i.Org,s.Lnext.Lnext.Org)&&He.vertCCW(s.Lprev.Org,s.Org,i.Lnext.Lnext.Org)&&(r=s.Lnext,this.delete(s),i=null,s=null)),!(i&&i.Lnext.Org===a);)i=r;return!0},t.prototype.check=function(){var e=this.fHead,n=this.vHead,i=this.eHead,r,s,a,o,l,h;for(s=e,s=e;(r=s.next)!==e;s=r){qe(r.prev===s),l=r.anEdge;do qe(l.Sym!==l),qe(l.Sym.Sym===l),qe(l.Lnext.Onext.Sym===l),qe(l.Onext.Sym.Lnext===l),qe(l.Lface===r),l=l.Lnext;while(l!==r.anEdge)}for(qe(r.prev===s&&r.anEdge===null),o=n,o=n;(a=o.next)!==n;o=a){qe(a.prev===o),l=a.anEdge;do qe(l.Sym!==l),qe(l.Sym.Sym===l),qe(l.Lnext.Onext.Sym===l),qe(l.Onext.Sym.Lnext===l),qe(l.Org===a),l=l.Onext;while(l!==a.anEdge)}for(qe(a.prev===o&&a.anEdge===null),h=i,h=i;(l=h.next)!==i;h=l)qe(l.Sym.next===h.Sym),qe(l.Sym!==l),qe(l.Sym.Sym===l),qe(l.Org!==null),qe(l.Dst!==null),qe(l.Lnext.Onext.Sym===l),qe(l.Onext.Sym.Lnext===l);qe(l.Sym.next===h.Sym&&l.Sym===this.eHeadSym&&l.Sym.Sym===l&&l.Org===null&&l.Dst===null&&l.Lface===null&&l.Rface===null)},t}(),_m=function(){function t(){this.handle=null}return t}(),wm=function(){function t(){this.key=null,this.node=0}return t}(),oD=function(){function t(e,n){this.leq=n,this.max=0,this.nodes=[],this.handles=[],this.initialized=!1,this.freeList=0,this.size=0,this.max=e,this.nodes=[],this.handles=[];for(var i=0;i<e+1;i++)this.nodes[i]=new _m,this.handles[i]=new wm;this.initialized=!1,this.nodes[1].handle=1,this.handles[1].key=null}return t.prototype.floatDown_=function(e){var n=this.nodes,i=this.handles,r,s,a;for(r=n[e].handle;;){if(a=e<<1,a<this.size&&this.leq(i[n[a+1].handle].key,i[n[a].handle].key)&&++a,qe(a<=this.max),s=n[a].handle,a>this.size||this.leq(i[r].key,i[s].key)){n[e].handle=r,i[r].node=e;break}n[e].handle=s,i[s].node=e,e=a}},t.prototype.floatUp_=function(e){var n=this.nodes,i=this.handles,r,s,a;for(r=n[e].handle;;){if(a=e>>1,s=n[a].handle,a===0||this.leq(i[s].key,i[r].key)){n[e].handle=r,i[r].node=e;break}n[e].handle=s,i[s].node=e,e=a}},t.prototype.init=function(){for(var e=this.size;e>=1;--e)this.floatDown_(e);this.initialized=!0},t.prototype.min=function(){return this.handles[this.nodes[1].handle].key},t.prototype.insert=function(e){var n,i;if(n=++this.size,n*2>this.max){this.max*=2;var r,s;for(s=this.nodes.length,this.nodes.length=this.max+1,r=s;r<this.nodes.length;r++)this.nodes[r]=new _m;for(s=this.handles.length,this.handles.length=this.max+1,r=s;r<this.handles.length;r++)this.handles[r]=new wm}return this.freeList===0?i=n:(i=this.freeList,this.freeList=this.handles[i].node),this.nodes[n].handle=i,this.handles[i].node=n,this.handles[i].key=e,this.initialized&&this.floatUp_(n),i},t.prototype.extractMin=function(){var e=this.nodes,n=this.handles,i=e[1].handle,r=n[i].key;return this.size>0&&(e[1].handle=e[this.size].handle,n[e[1].handle].node=1,n[i].key=null,n[i].node=this.freeList,this.freeList=i,--this.size,this.size>0&&this.floatDown_(1)),r},t.prototype.delete=function(e){var n=this.nodes,i=this.handles,r;qe(e>=1&&e<=this.max&&i[e].key!==null),r=i[e].node,n[r].handle=n[this.size].handle,i[n[r].handle].node=r,--this.size,r<=this.size&&(r<=1||this.leq(i[n[r>>1].handle].key,i[n[r].handle].key)?this.floatDown_(r):this.floatUp_(r)),i[e].key=null,i[e].node=this.freeList,this.freeList=e},t}(),bc=function(){function t(){this.eUp=null,this.nodeUp=null,this.windingNumber=0,this.inside=!1,this.sentinel=!1,this.dirty=!1,this.fixUpperEdge=!1}return t}(),Sm=function(){function t(){this.key=null,this.next=null,this.prev=null}return t}(),lD=function(){function t(e,n){this.frame=e,this.leq=n,this.head=new Sm,this.head.next=this.head,this.head.prev=this.head}return t.prototype.min=function(){return this.head.next},t.prototype.max=function(){return this.head.prev},t.prototype.insert=function(e){return this.insertBefore(this.head,e)},t.prototype.search=function(e){var n=this.head;do n=n.next;while(n.key!==null&&!this.leq(this.frame,e,n.key));return n},t.prototype.insertBefore=function(e,n){do e=e.prev;while(e.key!==null&&!this.leq(this.frame,e.key,n));var i=new Sm;return i.key=n,i.next=e.next,e.next.prev=i,i.prev=e,e.next=i,i},t.prototype.delete=function(e){e.next.prev=e.prev,e.prev.next=e.next},t}(),hD=function(){function t(){}return t.regionBelow=function(e){return e.nodeUp.prev.key},t.regionAbove=function(e){return e.nodeUp.next.key},t.debugEvent=function(e){},t.addWinding=function(e,n){e.winding+=n.winding,e.Sym.winding+=n.Sym.winding},t.edgeLeq=function(e,n,i){var r=e.event,s=n.eUp,a=i.eUp;if(s.Dst===r)return a.Dst===r?He.vertLeq(s.Org,a.Org)?He.edgeSign(a.Dst,s.Org,a.Org)<=0:He.edgeSign(s.Dst,a.Org,s.Org)>=0:He.edgeSign(a.Dst,r,a.Org)<=0;if(a.Dst===r)return He.edgeSign(s.Dst,r,s.Org)>=0;var o=He.edgeEval(s.Dst,r,s.Org),l=He.edgeEval(a.Dst,r,a.Org);return o>=l},t.deleteRegion=function(e,n){n.fixUpperEdge&&qe(n.eUp.winding===0),n.eUp.activeRegion=null,e.dict.delete(n.nodeUp)},t.fixUpperEdge=function(e,n,i){qe(n.fixUpperEdge),e.mesh.delete(n.eUp),n.fixUpperEdge=!1,n.eUp=i,i.activeRegion=n},t.topLeftRegion=function(e,n){var i=n.eUp.Org,r;do n=t.regionAbove(n);while(n.eUp.Org===i);if(n.fixUpperEdge){if(r=e.mesh.connect(t.regionBelow(n).eUp.Sym,n.eUp.Lnext),r===null)return null;t.fixUpperEdge(e,n,r),n=t.regionAbove(n)}return n},t.topRightRegion=function(e){var n=e.eUp.Dst;do e=t.regionAbove(e);while(e.eUp.Dst===n);return e},t.addRegionBelow=function(e,n,i){var r=new bc;return r.eUp=i,r.nodeUp=e.dict.insertBefore(n.nodeUp,r),r.fixUpperEdge=!1,r.sentinel=!1,r.dirty=!1,i.activeRegion=r,r},t.isWindingInside=function(e,n){switch(e.windingRule){case Ft.ODD:return(n&1)!==0;case Ft.NONZERO:return n!==0;case Ft.POSITIVE:return n>0;case Ft.NEGATIVE:return n<0;case Ft.ABS_GEQ_TWO:return n>=2||n<=-2}throw new Error("Invalid winding rulle")},t.computeWinding=function(e,n){n.windingNumber=t.regionAbove(n).windingNumber+n.eUp.winding,n.inside=t.isWindingInside(e,n.windingNumber)},t.finishRegion=function(e,n){var i=n.eUp,r=i.Lface;r.inside=n.inside,r.anEdge=i,t.deleteRegion(e,n)},t.finishLeftRegions=function(e,n,i){for(var r,s=null,a=n,o=n.eUp;a!==i;){if(a.fixUpperEdge=!1,s=t.regionBelow(a),r=s.eUp,r.Org!=o.Org){if(!s.fixUpperEdge){t.finishRegion(e,a);break}r=e.mesh.connect(o.Lprev,r.Sym),t.fixUpperEdge(e,s,r)}o.Onext!==r&&(e.mesh.splice(r.Oprev,r),e.mesh.splice(o,r)),t.finishRegion(e,a),o=s.eUp,a=s}return o},t.addRightEdges=function(e,n,i,r,s,a){var o,l,h,c,d=!0;h=i;do qe(He.vertLeq(h.Org,h.Dst)),t.addRegionBelow(e,n,h.Sym),h=h.Onext;while(h!==r);for(s===null&&(s=t.regionBelow(n).eUp.Rprev),l=n,c=s;o=t.regionBelow(l),h=o.eUp.Sym,h.Org===c.Org;)h.Onext!==c&&(e.mesh.splice(h.Oprev,h),e.mesh.splice(c.Oprev,h)),o.windingNumber=l.windingNumber-h.winding,o.inside=t.isWindingInside(e,o.windingNumber),l.dirty=!0,!d&&t.checkForRightSplice(e,l)&&(t.addWinding(h,c),t.deleteRegion(e,l),e.mesh.delete(c)),d=!1,l=o,c=h;l.dirty=!0,qe(l.windingNumber-h.winding===o.windingNumber),a&&t.walkDirtyRegions(e,l)},t.spliceMergeVertices=function(e,n,i){e.mesh.splice(n,i)},t.vertexWeights=function(e,n,i){var r=He.vertL1dist(n,e),s=He.vertL1dist(i,e),a=.5*s/(r+s),o=.5*r/(r+s);e.coords[0]+=a*n.coords[0]+o*i.coords[0],e.coords[1]+=a*n.coords[1]+o*i.coords[1],e.coords[2]+=a*n.coords[2]+o*i.coords[2]},t.getIntersectData=function(e,n,i,r,s,a){n.coords[0]=n.coords[1]=n.coords[2]=0,n.idx=-1,t.vertexWeights(n,i,r),t.vertexWeights(n,s,a)},t.checkForRightSplice=function(e,n){var i=t.regionBelow(n),r=n.eUp,s=i.eUp;if(He.vertLeq(r.Org,s.Org)){if(He.edgeSign(s.Dst,r.Org,s.Org)>0)return!1;He.vertEq(r.Org,s.Org)?r.Org!==s.Org&&(e.pq.delete(r.Org.pqHandle),t.spliceMergeVertices(e,s.Oprev,r)):(e.mesh.splitEdge(s.Sym),e.mesh.splice(r,s.Oprev),n.dirty=i.dirty=!0)}else{if(He.edgeSign(r.Dst,s.Org,r.Org)<0)return!1;t.regionAbove(n).dirty=n.dirty=!0,e.mesh.splitEdge(r.Sym),e.mesh.splice(s.Oprev,r)}return!0},t.checkForLeftSplice=function(e,n){var i=t.regionBelow(n),r=n.eUp,s=i.eUp,a;if(qe(!He.vertEq(r.Dst,s.Dst)),He.vertLeq(r.Dst,s.Dst)){if(He.edgeSign(r.Dst,s.Dst,r.Org)<0)return!1;t.regionAbove(n).dirty=n.dirty=!0,a=e.mesh.splitEdge(r),e.mesh.splice(s.Sym,a),a.Lface.inside=n.inside}else{if(He.edgeSign(s.Dst,r.Dst,s.Org)>0)return!1;n.dirty=i.dirty=!0,a=e.mesh.splitEdge(s),e.mesh.splice(r.Lnext,s.Sym),a.Rface.inside=n.inside}return!0},t.checkForIntersect=function(e,n){var i=t.regionBelow(n),r=n.eUp,s=i.eUp,a=r.Org,o=s.Org,l=r.Dst,h=s.Dst,c,d,u=new As,p,m;if(qe(!He.vertEq(h,l)),qe(He.edgeSign(l,e.event,a)<=0),qe(He.edgeSign(h,e.event,o)>=0),qe(a!==e.event&&o!==e.event),qe(!n.fixUpperEdge&&!i.fixUpperEdge),a===o||(c=Math.min(a.t,l.t),d=Math.max(o.t,h.t),c>d))return!1;if(He.vertLeq(a,o)){if(He.edgeSign(h,a,o)>0)return!1}else if(He.edgeSign(l,o,a)<0)return!1;return t.debugEvent(e),He.intersect(l,a,h,o,u),qe(Math.min(a.t,l.t)<=u.t),qe(u.t<=Math.max(o.t,h.t)),qe(Math.min(h.s,l.s)<=u.s),qe(u.s<=Math.max(o.s,a.s)),He.vertLeq(u,e.event)&&(u.s=e.event.s,u.t=e.event.t),p=He.vertLeq(a,o)?a:o,He.vertLeq(p,u)&&(u.s=p.s,u.t=p.t),He.vertEq(u,a)||He.vertEq(u,o)?(t.checkForRightSplice(e,n),!1):!He.vertEq(l,e.event)&&He.edgeSign(l,e.event,u)>=0||!He.vertEq(h,e.event)&&He.edgeSign(h,e.event,u)<=0?h===e.event?(e.mesh.splitEdge(r.Sym),e.mesh.splice(s.Sym,r),n=t.topLeftRegion(e,n),r=t.regionBelow(n).eUp,t.finishLeftRegions(e,t.regionBelow(n),i),t.addRightEdges(e,n,r.Oprev,r,r,!0),!0):l===e.event?(e.mesh.splitEdge(s.Sym),e.mesh.splice(r.Lnext,s.Oprev),i=n,n=t.topRightRegion(n),m=t.regionBelow(n).eUp.Rprev,i.eUp=s.Oprev,s=t.finishLeftRegions(e,i,null),t.addRightEdges(e,n,s.Onext,r.Rprev,m,!0),!0):(He.edgeSign(l,e.event,u)>=0&&(t.regionAbove(n).dirty=n.dirty=!0,e.mesh.splitEdge(r.Sym),r.Org.s=e.event.s,r.Org.t=e.event.t),He.edgeSign(h,e.event,u)<=0&&(n.dirty=i.dirty=!0,e.mesh.splitEdge(s.Sym),s.Org.s=e.event.s,s.Org.t=e.event.t),!1):(e.mesh.splitEdge(r.Sym),e.mesh.splitEdge(s.Sym),e.mesh.splice(s.Oprev,r),r.Org.s=u.s,r.Org.t=u.t,r.Org.pqHandle=e.pq.insert(r.Org),t.getIntersectData(e,r.Org,a,l,o,h),t.regionAbove(n).dirty=n.dirty=i.dirty=!0,!1)},t.walkDirtyRegions=function(e,n){for(var i=t.regionBelow(n),r,s;;){for(;i.dirty;)n=i,i=t.regionBelow(i);if(!n.dirty&&(i=n,n=t.regionAbove(n),n===null||!n.dirty))return;if(n.dirty=!1,r=n.eUp,s=i.eUp,r.Dst!==s.Dst&&t.checkForLeftSplice(e,n)&&(i.fixUpperEdge?(t.deleteRegion(e,i),e.mesh.delete(s),i=t.regionBelow(n),s=i.eUp):n.fixUpperEdge&&(t.deleteRegion(e,n),e.mesh.delete(r),n=t.regionAbove(i),r=n.eUp)),r.Org!==s.Org)if(r.Dst!==s.Dst&&!n.fixUpperEdge&&!i.fixUpperEdge&&(r.Dst===e.event||s.Dst===e.event)){if(t.checkForIntersect(e,n))return}else t.checkForRightSplice(e,n);r.Org===s.Org&&r.Dst===s.Dst&&(t.addWinding(s,r),t.deleteRegion(e,n),e.mesh.delete(r),n=t.regionAbove(i))}},t.connectRightVertex=function(e,n,i){var r,s=i.Onext,a=t.regionBelow(n),o=n.eUp,l=a.eUp,h=!1;if(o.Dst!==l.Dst&&t.checkForIntersect(e,n),He.vertEq(o.Org,e.event)&&(e.mesh.splice(s.Oprev,o),n=t.topLeftRegion(e,n),s=t.regionBelow(n).eUp,t.finishLeftRegions(e,t.regionBelow(n),a),h=!0),He.vertEq(l.Org,e.event)&&(e.mesh.splice(i,l.Oprev),i=t.finishLeftRegions(e,a,null),h=!0),h){t.addRightEdges(e,n,i.Onext,s,s,!0);return}He.vertLeq(l.Org,o.Org)?r=l.Oprev:r=o,r=e.mesh.connect(i.Lprev,r),t.addRightEdges(e,n,r,r.Onext,r.Onext,!1),r.Sym.activeRegion.fixUpperEdge=!0,t.walkDirtyRegions(e,n)},t.connectLeftDegenerate=function(e,n,i){var r,s,a,o,l;if(r=n.eUp,He.vertEq(r.Org,i)){qe(!1),t.spliceMergeVertices(e,r,i.anEdge);return}if(!He.vertEq(r.Dst,i)){e.mesh.splitEdge(r.Sym),n.fixUpperEdge&&(e.mesh.delete(r.Onext),n.fixUpperEdge=!1),e.mesh.splice(i.anEdge,r),t.sweepEvent(e,i);return}qe(!1),n=t.topRightRegion(n),l=t.regionBelow(n),a=l.eUp.Sym,s=o=a.Onext,l.fixUpperEdge&&(qe(s!==a),t.deleteRegion(e,l),e.mesh.delete(a),a=s.Oprev),e.mesh.splice(i.anEdge,a),He.edgeGoesLeft(s)||(s=null),t.addRightEdges(e,n,a.Onext,o,s,!0)},t.connectLeftVertex=function(e,n){var i,r,s,a,o,l,h=new bc;if(h.eUp=n.anEdge.Sym,i=e.dict.search(h).key,r=t.regionBelow(i),!!r){if(a=i.eUp,o=r.eUp,He.edgeSign(a.Dst,n,a.Org)===0){t.connectLeftDegenerate(e,i,n);return}if(s=He.vertLeq(o.Dst,a.Dst)?i:r,i.inside||s.fixUpperEdge){if(s===i)l=e.mesh.connect(n.anEdge.Sym,a.Lnext);else{var c=e.mesh.connect(o.Dnext,n.anEdge);l=c.Sym}s.fixUpperEdge?t.fixUpperEdge(e,s,l):t.computeWinding(e,t.addRegionBelow(e,i,l)),t.sweepEvent(e,n)}else t.addRightEdges(e,i,n.anEdge,n.anEdge,null,!0)}},t.sweepEvent=function(e,n){e.event=n,t.debugEvent(e);for(var i=n.anEdge;i.activeRegion===null;)if(i=i.Onext,i===n.anEdge){t.connectLeftVertex(e,n);return}var r=t.topLeftRegion(e,i.activeRegion);qe(r!==null);var s=t.regionBelow(r),a=s.eUp,o=t.finishLeftRegions(e,s,null);o.Onext===a?t.connectRightVertex(e,r,o):t.addRightEdges(e,r,o.Onext,a,a,!0)},t.addSentinel=function(e,n,i,r){var s=new bc,a=e.mesh.makeEdge();a.Org.s=i,a.Org.t=r,a.Dst.s=n,a.Dst.t=r,e.event=a.Dst,s.eUp=a,s.windingNumber=0,s.inside=!1,s.fixUpperEdge=!1,s.sentinel=!0,s.dirty=!1,s.nodeUp=e.dict.insert(s)},t.initEdgeDict=function(e){e.dict=new lD(e,t.edgeLeq);var n=e.bmax[0]-e.bmin[0],i=e.bmax[1]-e.bmin[1],r=e.bmin[0]-n,s=e.bmax[0]+n,a=e.bmin[1]-i,o=e.bmax[1]+i;t.addSentinel(e,r,s,a),t.addSentinel(e,r,s,o)},t.doneEdgeDict=function(e){for(var n,i=0;(n=e.dict.min().key)!==null;)n.sentinel||(qe(n.fixUpperEdge),qe(++i===1)),qe(n.windingNumber===0),t.deleteRegion(e,n)},t.removeDegenerateEdges=function(e){var n,i,r,s=e.mesh.eHead;for(n=s.next;n!==s;n=i)i=n.next,r=n.Lnext,He.vertEq(n.Org,n.Dst)&&n.Lnext.Lnext!==n&&(t.spliceMergeVertices(e,r,n),e.mesh.delete(n),n=r,r=n.Lnext),r.Lnext===n&&(r!==n&&((r===i||r===i.Sym)&&(i=i.next),e.mesh.delete(r)),(n===i||n===i.Sym)&&(i=i.next),e.mesh.delete(n))},t.initPriorityQ=function(e){var n,i,r,s=0;for(r=e.mesh.vHead,i=r.next;i!==r;i=i.next)s++;for(s+=8,n=e.pq=new oD(s,He.vertLeq),r=e.mesh.vHead,i=r.next;i!==r;i=i.next)i.pqHandle=n.insert(i);return i!==r?!1:(n.init(),!0)},t.donePriorityQ=function(e){e.pq=null},t.removeDegenerateFaces=function(e,n){var i,r,s;for(i=n.fHead.next;i!==n.fHead;i=r)r=i.next,s=i.anEdge,qe(s.Lnext!==s),s.Lnext.Lnext===s&&(t.addWinding(s.Onext,s),e.mesh.delete(s));return!0},t.computeInterior=function(e,n){n===void 0&&(n=!0);var i,r;if(t.removeDegenerateEdges(e),!t.initPriorityQ(e))return!1;for(t.initEdgeDict(e);(i=e.pq.extractMin())!==null;){for(;r=e.pq.min(),!(r===null||!He.vertEq(r,i));)r=e.pq.extractMin(),t.spliceMergeVertices(e,i.anEdge,r.anEdge);t.sweepEvent(e,i)}return e.event=e.dict.min().key.eUp.Org,t.debugEvent(e),t.doneEdgeDict(e),t.donePriorityQ(e),t.removeDegenerateFaces(e,e.mesh)?(n&&e.mesh.check(),!0):!1},t}(),cD=function(){function t(){this.mesh=new bm,this.normal=[0,0,0],this.sUnit=[0,0,0],this.tUnit=[0,0,0],this.bmin=[0,0],this.bmax=[0,0],this.windingRule=Ft.ODD,this.dict=null,this.pq=null,this.event=null,this.vertexIndexCounter=0,this.vertices=[],this.vertexIndices=[],this.vertexCount=0,this.elements=[],this.elementCount=0}return t.prototype.dot_=function(e,n){return e[0]*n[0]+e[1]*n[1]+e[2]*n[2]},t.prototype.normalize_=function(e){var n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];if(!n)throw"Zero-size vector!";n=Math.sqrt(n),e[0]/=n,e[1]/=n,e[2]/=n},t.prototype.longAxis_=function(e){var n=0;return Math.abs(e[1])>Math.abs(e[0])&&(n=1),Math.abs(e[2])>Math.abs(e[n])&&(n=2),n},t.prototype.computeNormal_=function(e){var n,i,r,s,a,o,l=[0,0,0],h=[0,0,0],c=[0,0,0],d=[0,0,0],u=[0,0,0],p=[null,null,null],m=[null,null,null],f=this.mesh.vHead;n=f.next;for(var g=0;g<3;++g)s=n.coords[g],h[g]=s,m[g]=n,l[g]=s,p[g]=n;for(n=f.next;n!==f;n=n.next)for(var v=0;v<3;++v)s=n.coords[v],s<h[v]&&(h[v]=s,m[v]=n),s>l[v]&&(l[v]=s,p[v]=n);var y=0;if(l[1]-h[1]>l[0]-h[0]&&(y=1),l[2]-h[2]>l[y]-h[y]&&(y=2),h[y]>=l[y]){e[0]=0,e[1]=0,e[2]=1;return}for(o=0,i=m[y],r=p[y],c[0]=i.coords[0]-r.coords[0],c[1]=i.coords[1]-r.coords[1],c[2]=i.coords[2]-r.coords[2],n=f.next;n!==f;n=n.next)d[0]=n.coords[0]-r.coords[0],d[1]=n.coords[1]-r.coords[1],d[2]=n.coords[2]-r.coords[2],u[0]=c[1]*d[2]-c[2]*d[1],u[1]=c[2]*d[0]-c[0]*d[2],u[2]=c[0]*d[1]-c[1]*d[0],a=u[0]*u[0]+u[1]*u[1]+u[2]*u[2],a>o&&(o=a,e[0]=u[0],e[1]=u[1],e[2]=u[2]);o<=0&&(e[0]=e[1]=e[2]=0,e[this.longAxis_(c)]=1)},t.prototype.checkOrientation_=function(){for(var e=this.mesh.fHead,n,i=this.mesh.vHead,r,s=0,a=e.next;a!==e;a=a.next)if(r=a.anEdge,!(r.winding<=0))do s+=(r.Org.s-r.Dst.s)*(r.Org.t+r.Dst.t),r=r.Lnext;while(r!==a.anEdge);if(s<0){for(n=i.next;n!==i;n=n.next)n.t=-n.t;this.tUnit[0]=-this.tUnit[0],this.tUnit[1]=-this.tUnit[1],this.tUnit[2]=-this.tUnit[2]}},t.prototype.projectPolygon_=function(){var e=this.mesh.vHead,n=[0,0,0],i,r,s=!1;n[0]=this.normal[0],n[1]=this.normal[1],n[2]=this.normal[2],!n[0]&&!n[1]&&!n[2]&&(this.computeNormal_(n),s=!0),i=this.sUnit,r=this.tUnit;var a=this.longAxis_(n);i[a]=0,i[(a+1)%3]=1,i[(a+2)%3]=0,r[a]=0,r[(a+1)%3]=0,r[(a+2)%3]=n[a]>0?1:-1;for(var o=e.next;o!==e;o=o.next)o.s=this.dot_(o.coords,i),o.t=this.dot_(o.coords,r);s&&this.checkOrientation_();for(var l=!0,h=e.next;h!==e;h=h.next)l?(this.bmin[0]=this.bmax[0]=h.s,this.bmin[1]=this.bmax[1]=h.t,l=!1):(h.s<this.bmin[0]&&(this.bmin[0]=h.s),h.s>this.bmax[0]&&(this.bmax[0]=h.s),h.t<this.bmin[1]&&(this.bmin[1]=h.t),h.t>this.bmax[1]&&(this.bmax[1]=h.t))},t.prototype.addWinding_=function(e,n){e.winding+=n.winding,e.Sym.winding+=n.Sym.winding},t.prototype.tessellateMonoRegion_=function(e,n){var i,r;if(i=n.anEdge,!(i.Lnext!==i&&i.Lnext.Lnext!==i))throw"Mono region invalid";for(;He.vertLeq(i.Dst,i.Org);i=i.Lprev);for(;He.vertLeq(i.Org,i.Dst);i=i.Lnext);r=i.Lprev;for(var s=void 0;i.Lnext!==r;)if(He.vertLeq(i.Dst,r.Org)){for(;r.Lnext!==i&&(He.edgeGoesLeft(r.Lnext)||He.edgeSign(r.Org,r.Dst,r.Lnext.Dst)<=0);)s=e.connect(r.Lnext,r),r=s.Sym;r=r.Lprev}else{for(;r.Lnext!==i&&(He.edgeGoesRight(i.Lprev)||He.edgeSign(i.Dst,i.Org,i.Lprev.Org)>=0);)s=e.connect(i,i.Lprev),i=s.Sym;i=i.Lnext}if(r.Lnext===i)throw"Mono region invalid";for(;r.Lnext.Lnext!==i;)s=e.connect(r.Lnext,r),r=s.Sym;return!0},t.prototype.tessellateInterior_=function(e){for(var n,i=e.fHead.next;i!==e.fHead;i=n)if(n=i.next,i.inside&&!this.tessellateMonoRegion_(e,i))return!1;return!0},t.prototype.discardExterior_=function(e){for(var n,i=e.fHead.next;i!==e.fHead;i=n)n=i.next,i.inside||e.zapFace(i)},t.prototype.setWindingNumber_=function(e,n,i){for(var r,s=e.eHead.next;s!==e.eHead;s=r)r=s.next,s.Rface.inside!==s.Lface.inside?s.winding=s.Lface.inside?n:-n:i?e.delete(s):s.winding=0},t.prototype.getNeighbourFace_=function(e){return!e.Rface||!e.Rface.inside?-1:e.Rface.n},t.prototype.outputPolymesh_=function(e,n,i,r){var s,a=0,o=0,l;i>3&&e.mergeConvexFaces(i);for(var h=e.vHead.next;h!==e.vHead;h=h.next)h.n=-1;for(var c=e.fHead.next;c!==e.fHead;c=c.next)if(c.n=-1,!!c.inside){s=c.anEdge,l=0;do{var h=s.Org;h.n===-1&&(h.n=o,o++),l++,s=s.Lnext}while(s!==c.anEdge);if(l>i)throw"Face vertex greater that support polygon";c.n=a,++a}this.elementCount=a,n===on.CONNECTED_POLYGONS&&(a*=2),this.elements=[],this.elements.length=a*i,this.vertexCount=o,this.vertices=[],this.vertices.length=o*r,this.vertexIndices=[],this.vertexIndices.length=o;for(var h=e.vHead.next;h!==e.vHead;h=h.next)if(h.n!==-1){var d=h.n*r;this.vertices[d+0]=h.coords[0],this.vertices[d+1]=h.coords[1],r>2&&(this.vertices[d+2]=h.coords[2]),this.vertexIndices[h.n]=h.idx}for(var u=0,c=e.fHead.next;c!==e.fHead;c=c.next)if(c.inside){s=c.anEdge,l=0;do{var h=s.Org;this.elements[u++]=h.n,l++,s=s.Lnext}while(s!==c.anEdge);for(var p=l;p<i;++p)this.elements[u++]=-1;if(n===on.CONNECTED_POLYGONS){s=c.anEdge;do this.elements[u++]=this.getNeighbourFace_(s),s=s.Lnext;while(s!==c.anEdge);for(var m=l;m<i;++m)this.elements[u++]=-1}}},t.prototype.outputContours_=function(e,n){var i,r,s=0,a=0;this.vertexCount=0,this.elementCount=0;for(var o=e.fHead.next;o!==e.fHead;o=o.next)if(o.inside){r=i=o.anEdge;do this.vertexCount++,i=i.Lnext;while(i!==r);this.elementCount++}this.elements=[],this.elements.length=this.elementCount*2,this.vertices=[],this.vertices.length=this.vertexCount*n,this.vertexIndices=[],this.vertexIndices.length=this.vertexCount;var l=0,h=0,c=0;s=0;for(var o=e.fHead.next;o!==e.fHead;o=o.next)if(o.inside){a=0,r=i=o.anEdge;do this.vertices[l++]=i.Org.coords[0],this.vertices[l++]=i.Org.coords[1],n>2&&(this.vertices[l++]=i.Org.coords[2]),this.vertexIndices[h++]=this.vertexIdCallback?this.vertexIdCallback(i):i.Org.idx,a++,i=i.Lnext;while(i!==r);this.elements[c++]=s,this.elements[c++]=a,s+=a}},t.prototype.addContour=function(e,n){this.mesh===null&&(this.mesh=new bm),e<2&&(e=2),e>3&&(e=3);for(var i=null,r=0;r<n.length;r+=e)i===null?(i=this.mesh.makeEdge(),this.mesh.splice(i,i.Sym)):(this.mesh.splitEdge(i),i=i.Lnext),i.Org.coords[0]=n[r+0],i.Org.coords[1]=n[r+1],e>2?i.Org.coords[2]=n[r+2]:i.Org.coords[2]=0,i.Org.idx=this.vertexIndexCounter++,this.edgeCreateCallback&&this.edgeCreateCallback(i),i.winding=1,i.Sym.winding=-1},t.prototype.tesselate=function(e,n,i,r,s,a){if(e===void 0&&(e=Ft.ODD),n===void 0&&(n=on.POLYGONS),a===void 0&&(a=!0),this.vertices=[],this.elements=[],this.vertexIndices=[],this.vertexIndexCounter=0,s&&(this.normal[0]=s[0],this.normal[1]=s[1],this.normal[2]=s[2]),this.windingRule=e,r<2&&(r=2),r>3&&(r=3),!this.mesh)return!1;this.projectPolygon_(),hD.computeInterior(this,a);var o=this.mesh;return n===on.BOUNDARY_CONTOURS?this.setWindingNumber_(o,1,!0):this.tessellateInterior_(o),a&&o.check(),n===on.BOUNDARY_CONTOURS?this.outputContours_(o,r):this.outputPolymesh_(o,n,i,r),!0},t}();function Na(t){var e=t.windingRule,n=e===void 0?Ft.ODD:e,i=t.elementType,r=i===void 0?on.POLYGONS:i,s=t.polySize,a=s===void 0?3:s,o=t.vertexSize,l=o===void 0?2:o,h=t.normal,c=h===void 0?[0,0,1]:h,d=t.contours,u=d===void 0?[]:d,p=t.strict,m=p===void 0?!0:p,f=t.debug,g=f===void 0?!1:f;if(!u&&m)throw new Error("Contours can't be empty");if(u){var v=new cD;t.edgeCreateCallback&&(v.edgeCreateCallback=t.edgeCreateCallback),t.vertexIdCallback&&(v.vertexIdCallback=t.vertexIdCallback);for(var y=0;y<u.length;y++)v.addContour(l||2,u[y]);return v.tesselate(n,r,a,l,c,m),{vertices:v.vertices,vertexIndices:v.vertexIndices,vertexCount:v.vertexCount,elements:v.elements,elementCount:v.elementCount,mesh:g?v.mesh:void 0}}}Ft.ODD;Ft.NONZERO;Ft.POSITIVE;Ft.NEGATIVE;Ft.ABS_GEQ_TWO;on.POLYGONS;on.CONNECTED_POLYGONS;on.BOUNDARY_CONTOURS;var yv=class extends Ve{constructor(t,e=12,n={}){var i,r,s;super(),this.type="ShapeGeometry",this.windingRule=Ft.ODD,this.elementType=on.POLYGONS,this.polySize=3,this.vertexSize=2,this.strict=!0,this._shape=t,this._curveSegments=e,this._triangulationOptions=Object.assign({windingRule:Ft.ODD,elementType:on.POLYGONS,polySize:3,vertexSize:2,strict:!0},n);let a=this._shape.extractShapePointsToFlatArray([],this._curveSegments),o=this._shape.shapeHoles.map(f=>f.extractShapePointsToFlatArray([],this._curveSegments)),l,h=!0,c=!0,d,u;for(let f=0,g=a.length/2;f<g;f++){let v=f*2,y=a[v+0],w=a[v+1];if(d!==void 0&&y!==d&&(h=!1),u!==void 0&&w!==u&&(c=!1),d=y,u=w,!h&&!c)break}!h&&!c&&(l=Na({contours:[a,...o],windingRule:this._triangulationOptions.windingRule,elementType:this._triangulationOptions.elementType,polySize:this._triangulationOptions.polySize,vertexSize:this._triangulationOptions.vertexSize,strict:this._triangulationOptions.strict}));let p=(i=l==null?void 0:l.vertexCount)!=null?i:1,m=(r=l==null?void 0:l.elementCount)!=null?r:1;if(this._positionAttribute=new tt(new Float32Array(p*3),3),this._normalAttribute=new tt(new Float32Array(p*3),3),this._uvAttribute=new tt(new Float32Array(p*2),2),this._indexAttribute=new tt(new Uint32Array(m*3),1),l){let f=1/0,g=-1/0,v=1/0,y=-1/0;for(let b=0,_=p;b<_;b++){let E=b*2,x=l.vertices[E+0],A=l.vertices[E+1];x<f&&(f=x),x>g&&(g=x),A<v&&(v=A),A>y&&(y=A)}let w=g-f,S=y-v;for(let b=0,_=p;b<_;b++){let E=b*2,x=l.vertices[E+0],A=l.vertices[E+1],M=(x-f)/w,C=(A-v)/S;this._positionAttribute.setXYZ(b,x,A,0),this._normalAttribute.setXYZ(b,0,0,1),this._uvAttribute.setXY(b,M,C)}for(let b=0,_=m;b<_;b++){let E=b*3,x=l.elements[E+0],A=l.elements[E+1],M=l.elements[E+2];this._indexAttribute.setX(E+0,x),this._indexAttribute.setX(E+1,A),this._indexAttribute.setX(E+2,M)}}this.setAttribute("position",this._positionAttribute),this.setAttribute("normal",this._normalAttribute),this.setAttribute("uv",this._uvAttribute),this.setIndex(this._indexAttribute),this.setDrawRange(0,((s=l==null?void 0:l.elementCount)!=null?s:1)*3)}clone(){let t=new yv(this._shape,this._curveSegments);return t.userData=H0(this.userData),t}},yu=class{constructor(t=256,e=!1){this.capacity=t,this.size=0,this.debug=e,this.debug&&console.log(`allocating with cap ${t}`);let n=t*yu.eSize;this.buffer=new ArrayBuffer(n);let i=Float32Array.BYTES_PER_ELEMENT,r=0;this.positions=new Float32Array(this.buffer,r*i,3*t),r+=3*t,this.normals=new Float32Array(this.buffer,r*i,3*t),r+=3*t,this.uvs=new Float32Array(this.buffer,r*i,2*t)}realloc(t,e=!1){if(t<this.size)throw Error("cannot shrink buffer");if(t<=this.capacity&&!e)return;this.debug&&console.log(`resizing from ${this.capacity} \u2192 ${t}`);let n=t*yu.eSize,i=new ArrayBuffer(n),r=Float32Array.BYTES_PER_ELEMENT,s=0,a=new Float32Array(i,s*r,3*t);s+=3*t;let o=new Float32Array(i,s*r,3*t);s+=3*t;let l=new Float32Array(i,s*r,2*t);a.set(this.positions.slice(0,this.size*3)),o.set(this.normals.slice(0,this.size*3)),l.set(this.uvs.slice(0,this.size*2)),this.buffer=i,this.positions=a,this.normals=o,this.uvs=l,this.capacity=t}get(t=1){let e=this.size+t;if(e>this.capacity){let i=this.capacity;for(;e>i;)i*=2;this.realloc(i)}let n=this.size;return this.size=e,n}reserve(t){let e=this.size+t;e>this.capacity&&this.realloc(e)}shrink(){this.debug&&console.log(`shrinking ${this.capacity} \u2192 ${this.size}`),this.realloc(this.size,!0)}},xv=yu;xv.eSize=(3+3+2)*Float32Array.BYTES_PER_ELEMENT;var _c=(t,e)=>([n,i])=>(i<n&&(i+=e),(t>=n?t:t+e)<=i),bv=class extends Ve{constructor(t,e,n=0,i=12,r=3){super(),this.type="ShapeGeometry",this.vertexCache={},this._shape=t,this._depth=e,this._bevel=n,this._curveSegments=i,this._bevelSegmentsInput=r,n<=0?(this._bevelSize=0,this._bevelSegments=0):(this._bevelSize=Math.min(n,e/2-1e-12),this._bevelSegments=Math.floor(r));let s=this._shape.extractShapePointsToFlatArray([],i),a=this._shape.shapeHoles.map(b=>{let _=b.extractShapePointsToFlatArray([],i),E=[];for(let x=_.length-1;x>=1;x-=2){let A=_[x-1],M=_[x-0];E.push(A,M)}return E}),o=Na({windingRule:Ft.ODD,elementType:on.BOUNDARY_CONTOURS,vertexSize:2,strict:!0,contours:[s]}),l=Na({windingRule:Ft.ODD,elementType:on.BOUNDARY_CONTOURS,vertexSize:2,strict:!0,contours:[...a]});if(!o)throw new Error("error generating geometry");let h=o.elementCount;if(l){o.elementCount+=l.elementCount;for(let b=0;b<l.elements.length;b++){let _=l.elements[b],E=b%2===0?o.vertexCount:0;o.elements.push(_+E)}for(let b=0;b<l.vertexIndices.length;b++){let _=l.vertexIndices[b],E=o.vertexCount;o.vertexIndices.push(_+E)}for(let b=0;b<l.vertices.length;b++){let _=l.vertices[b];o.vertices.push(_)}}let c=1/0,d=-1/0,u=1/0,p=-1/0;for(let b=0,_=o.vertexCount;b<_;b++){let E=b*2,x=o.vertices[E+0],A=o.vertices[E+1];x<c&&(c=x),x>d&&(d=x),A<u&&(u=A),A>p&&(p=A)}this._minX=c,this._minY=u,this._width=d-c,this._height=p-u;let m=o.vertexCount*2*(2+this._bevelSegments);this._buffer=new xv(m);let f=[],g=[];for(let b=o.elementCount-1;b>=0;b--){let _=b>=h,E=b*2,x=o.elements[E+0],A=o.elements[E+1],M=x+A,C={start:x,count:A,normals:[],continuous:[],concave:[]},F=x,W=M-1,O=x+1,Z=this._shape.roundedCurves.length;do{let N=F-x,I=o.vertices[W*2+0],V=o.vertices[W*2+1],B=o.vertices[F*2+0],k=o.vertices[F*2+1],$=o.vertices[O*2+0],ne=o.vertices[O*2+1],z=B-I,oe=k-V,ie=Math.sqrt(z*z+oe*oe);z/=ie,oe/=ie;let le=B-$,K=k-ne,pe=Math.sqrt(le*le+K*K);le/=pe,K/=pe,C.normals[N*2+0]=-K,C.normals[N*2+1]=le,C.concave[N]=z*K-oe*le>0;let G=o.vertexIndices[F];if(Array.isArray(G))C.continuous[N]=!1;else{let[J,ee]=this._shape.getCurveIndexFromVertexId(G-1,!0);if(ee>0&&ee<1)C.continuous[N]=!0;else{let se=ee===1?J+1:J-1;se=(se+Z)%Z;let ce=ee===1?0:1,fe=this._shape.roundedCurves[J].getTangent(ee),ge=this._shape.roundedCurves[se].getTangent(ce);C.continuous[N]=fe.dot(ge)>.95}}_&&(C.normals[N*2+0]*=-1,C.normals[N*2+1]*=-1),[W,F,O]=[F,O,O+1],O>=M&&(O-=A)}while(O!==x+1);let X=[];X.push({bevelI:0,angle:0,size:0,boundary:{vertices:o.vertices.slice(x*2,M*2),vertexCount:A,vertexIndices:new Array(A).fill(!0).map((N,I)=>[I,I]),elements:[0,A],elementCount:1,mesh:null},reverseMap:[],insetPoints:o.vertices.slice(x*2,M*2)});for(let N=1;N<=this._bevelSegments;N++){let I=N/this._bevelSegments*Math.PI/2,V=(1-Math.cos(I))*this._bevelSize,B=[],k=[],$=0;for(let z=0;z<A;z++){let oe=z*2,ie=(z-1+A)%A*2,le=o.vertices[C.start*2+oe+0],K=o.vertices[C.start*2+oe+1],pe=-C.normals[ie+0]*V,G=-C.normals[ie+1]*V,J=-C.normals[oe+0]*V,ee=-C.normals[oe+1]*V;if(C.concave[z]||!C.concave[z]&&_){let se=Math.atan2(G,pe),ce=Math.atan2(ee,J);ce>se&&(ce-=Math.PI*2);let fe=ce-se;if(C.continuous[z]||_){let ge=se+fe/2,_e=Math.cos(ge)*V,Oe=Math.sin(ge)*V;B[2*$+0]=le+_e*(_?-1:1),B[2*$+1]=K+Oe*(_?-1:1),k[$]=z,$++}else{let ge=Math.max(1,Math.floor(i/4*Math.abs(fe)/Math.PI));for(let _e=0;_e<=ge;_e++){let Oe=se+fe*(_e/ge),Ne=Math.cos(Oe)*V,D=Math.sin(Oe)*V;B[2*$+0]=le+Ne,B[2*$+1]=K+D,k[$]=z,$++}}}else B[2*$+0]=le+pe,B[2*$+1]=K+G,k[$]=z,$++,B[2*$+0]=le,B[2*$+1]=K,k[$]=z,$++,B[2*$+0]=le+J,B[2*$+1]=K+ee,k[$]=z,$++}let ne=Na({windingRule:Ft.POSITIVE,elementType:on.BOUNDARY_CONTOURS,vertexSize:2,strict:!0,contours:[B],edgeCreateCallback:z=>{let oe=z.Org.idx,ie=k[oe],le=k[(oe+1)%k.length];z.idx=[ie,le],z.Sym.idx=[le,ie]},vertexIdCallback:z=>{let oe=z.Lprev.idx;return[oe?oe[1]:0,z.idx[0]]}});if(!ne)throw console.log("Error"),new Error(`error generating bevel geometry for ${N}'th loop`);if(!ne.vertexCount)break;for(let z=0;z<ne.vertexIndices.length;z++){let[oe,ie]=ne.vertexIndices[z];if(oe===ie)continue;let le=ie;ie<oe&&(le+=A);for(let K=oe;K<le;K++){let pe=K%A,G=(K+1)%A;if(!C.continuous[pe]||!C.continuous[G]){ne.vertexIndices[z]=[oe,pe],ne.vertexIndices.splice(z+1,0,[G,ie]),ne.vertices.splice((z+1)*2,0,ne.vertices[z*2],ne.vertices[z*2+1]);break}}}X.push({bevelI:N,angle:I,size:V,boundary:ne,reverseMap:k,insetPoints:B})}let j=(N,I,V)=>{let B=0,k=N.boundary.vertexIndices.length;for(;B<k&&V(N.boundary.vertexIndices[I]);)I=(I+1)%k,B++;return B},H=f.length;for(let N=1;N<X.length;N++){let I=X[N-1],V=X[N],B=I.boundary.vertexIndices.length,k=V.boundary.vertexIndices.length;if(!B||!k)break;let $=C.concave.length,ne=0,z=_c(ne,A);for(;!I.boundary.vertexIndices.filter(z).length||!V.boundary.vertexIndices.filter(z).length;)ne++,z=_c(ne,A);let oe=I.boundary.vertexIndices.findIndex(z),ie=V.boundary.vertexIndices.findIndex(z);do oe=(oe+1)%B;while(z(I.boundary.vertexIndices[oe]));do ie=(ie+1)%k;while(z(V.boundary.vertexIndices[ie]));ne=(ne+1)%A;let le=ne,K=this.buildBevelVert(C,I,(oe-1+B)%B),pe=this.buildBevelVert(C,V,(ie-1+k)%k),G=K,J=pe,ee,se,ce=!1;do{z=_c(ne,A);let fe=j(I,oe,z),ge=j(V,ie,z),_e=ce;if(ce=!1,fe&&!ge){for(let Oe=0;Oe<fe;Oe++)ee=this.buildBevelVert(C,I,(oe+Oe)%B,Oe/(fe-1)),f.push(G.topN,ee.topP,J.topN),f.push(ee.bottomP,G.bottomN,J.bottomN),G=ee;ce=!0}else if(!fe&&ge)for(let Oe=0;Oe<ge;Oe++)se=this.buildBevelVert(C,V,(ie+Oe)%k,Oe/(ge-1)),f.push(J.topN,G.topP,se.topP),f.push(G.bottomP,J.bottomN,se.bottomP),J=se;else if(fe&&ge)if(ee=this.buildBevelVert(C,I,oe,0),se=this.buildBevelVert(C,V,ie,0),_e?(f.push(G.topN,se.topP,J.topN),f.push(G.topN,ee.topP,se.topP),f.push(se.bottomP,G.bottomN,J.bottomN),f.push(se.bottomP,ee.bottomP,G.bottomN)):(f.push(J.topN,G.topN,ee.topP),f.push(J.topN,ee.topP,se.topP),f.push(ee.bottomP,G.bottomN,J.bottomN),f.push(ee.bottomP,J.bottomN,se.bottomP)),G=ee,J=se,fe===ge)for(let Oe=1;Oe<fe;Oe++)ee=this.buildBevelVert(C,I,(oe+Oe)%B,Oe/(fe-1)),se=this.buildBevelVert(C,V,(ie+Oe)%k,Oe/(ge-1)),f.push(G.topN,ee.topP,J.topN),f.push(J.topN,ee.topP,se.topP),f.push(ee.bottomP,G.bottomN,J.bottomN),f.push(ee.bottomP,J.bottomN,se.bottomP),G=ee,J=se;else if(fe>ge){let Oe=fe/ge,Ne=0;for(let D=1;D<fe;D++)ee=this.buildBevelVert(C,I,(oe+D)%B,D/(fe-1)),f.push(G.topN,ee.topP,J.topN),f.push(ee.bottomP,G.bottomN,J.bottomN),G=ee,D>(Ne+1)*Oe&&(Ne++,se=this.buildBevelVert(C,V,(ie+Ne)%k,Ne/(ge-1)),f.push(J.topN,ee.topP,se.topP),f.push(ee.bottomP,J.bottomN,se.bottomP),J=se)}else{let Oe=ge/fe,Ne=0;for(let D=1;D<ge;D++)se=this.buildBevelVert(C,V,(ie+D)%k,D/(ge-1)),f.push(J.topN,ee.topP,se.topP),f.push(ee.bottomP,J.bottomN,se.bottomP),J=se,D>(Ne+1)*Oe&&(Ne++,ee=this.buildBevelVert(C,I,(oe+Ne)%B,Ne/(fe-1)),f.push(G.topN,ee.topP,J.topN),f.push(ee.bottomP,G.bottomN,J.bottomN),G=ee)}oe=(oe+fe)%B,ie=(ie+ge)%k,ne=(ne+1)%$}while(ne!==le)}{let N=X[0];for(let I=0,V=N.boundary.vertexCount;I<V;I++){let B=this.buildBevelVert(C,N,I),k=this.buildBevelVert(C,N,(I+1)%V);f.push(k.topP,B.topN,B.bottomN),f.push(k.topP,B.bottomN,k.bottomP)}}if(_){let N=[];for(let I=f.length-1;I>=H+2;I-=3){let V=f[I-2],B=f[I-1],k=f[I-0];N.push(k,B,V)}f.splice(H,f.length-H,...N)}if(_){let N=[];for(let I=X[X.length-1].boundary.vertices.length-1;I>=1;I-=2){let V=X[X.length-1].boundary.vertices[I-1],B=X[X.length-1].boundary.vertices[I-0];N.push(V,B)}g.push(N)}if(!_){let N=X[X.length-1],I=Na({windingRule:X.length>1?Ft.POSITIVE:Ft.ODD,elementType:on.POLYGONS,vertexSize:2,strict:!0,contours:[N.insetPoints,...g]});if(!I)throw new Error("Error generating geometry for surface");Object.assign(this,{capStartIndex:f.length});for(let V=0;V<I.elementCount*3;V+=3){let B=this.buildSurfaceVert(I,I.elements[V+0]),k=this.buildSurfaceVert(I,I.elements[V+1]),$=this.buildSurfaceVert(I,I.elements[V+2]);f.push(B.top,k.top,$.top),f.push($.bottom,k.bottom,B.bottom)}}this.vertexCache={}}this._buffer.shrink();let v=new tt(Uint32Array.from(f),1),y=new tt(this._buffer.positions,3),w=new tt(this._buffer.normals,3),S=new tt(this._buffer.uvs,2);y.needsUpdate=!0,w.needsUpdate=!0,S.needsUpdate=!0,v.needsUpdate=!0,this.setAttribute("position",y),this.setAttribute("normal",w),this.setAttribute("uv",S),this.setIndex(v)}buildSurfaceVert(t,e){let n=e.toString();if(n in this.vertexCache)return this.vertexCache[n];let i=t.vertices[e*2+0],r=t.vertices[e*2+1],s=(i-this._minX)/this._width,a=(r-this._minY)/this._height,o=this._buffer.get(2),l=o*3,h=o*2,c={top:o+0,bottom:o+1};return this._buffer.positions[l+0]=i,this._buffer.positions[l+1]=r,this._buffer.positions[l+2]=this._depth,this._buffer.normals[l+0]=0,this._buffer.normals[l+1]=0,this._buffer.normals[l+2]=1,this._buffer.uvs[h+0]=s,this._buffer.uvs[h+1]=a,this._buffer.positions[l+3]=i,this._buffer.positions[l+4]=r,this._buffer.positions[l+5]=0,this._buffer.normals[l+3]=0,this._buffer.normals[l+4]=0,this._buffer.normals[l+5]=-1,this._buffer.uvs[h+2]=s,this._buffer.uvs[h+3]=a,this.vertexCache[n]=c,c}buildBevelVert(t,e,n,i=1){let r=`${e.bevelI}:${n}`;if(r in this.vertexCache)return this.vertexCache[r];let[s,a]=e.boundary.vertexIndices[n],o,l,h,c;s!==a?(l=s,o=a,c=!1,h=t.continuous[l]&&t.continuous[o]):(o=s,l=(o-1+t.count)%t.count,c=t.concave[o]&&e.bevelI>0,h=t.continuous[o]||c);let d=Math.cos(e.angle),u=Math.sin(e.angle),p=n*2,m=o*2,f=l*2,g=e.boundary.vertices[p+0],v=e.boundary.vertices[p+1],y=(1-u)*this._bevelSize,w=(g-this._minX)/this._width,S=(v-this._minY)/this._height,b=t.normals[m+0],_=t.normals[m+1],E=t.normals[f+0],x=t.normals[f+1];if(c){let W=E-b,O=x-_;b=b+W*(1-i),_=_+O*(1-i);let Z=Math.sqrt(b*b+_*_);b/=Z,_/=Z}let A=this._buffer.get(h?2:4),M=A*3,C=A*2,F={i:n,fi:o,topP:A+0,topN:A+0,bottomP:A+1,bottomN:A+1};return this._buffer.positions[M+0]=g,this._buffer.positions[M+1]=v,this._buffer.positions[M+2]=this._depth-y,this._buffer.normals[M+0]=b*d,this._buffer.normals[M+1]=_*d,this._buffer.normals[M+2]=u,this._buffer.uvs[C+0]=w,this._buffer.uvs[C+1]=S,this._buffer.positions[M+3]=g,this._buffer.positions[M+4]=v,this._buffer.positions[M+5]=y,this._buffer.normals[M+3]=b*d,this._buffer.normals[M+4]=_*d,this._buffer.normals[M+5]=-u,this._buffer.uvs[C+2]=S,this._buffer.uvs[C+3]=w,h||(A+=2,M+=6,C+=4,F.topP=A+0,F.bottomP=A+1,this._buffer.positions[M+0]=g,this._buffer.positions[M+1]=v,this._buffer.positions[M+2]=this._depth-y,this._buffer.normals[M+0]=E*d,this._buffer.normals[M+1]=x*d,this._buffer.normals[M+2]=u,this._buffer.uvs[C+0]=w,this._buffer.uvs[C+1]=S,this._buffer.positions[M+3]=g,this._buffer.positions[M+4]=v,this._buffer.positions[M+5]=y,this._buffer.normals[M+3]=E*d,this._buffer.normals[M+4]=x*d,this._buffer.normals[M+5]=-u,this._buffer.uvs[C+2]=S,this._buffer.uvs[C+3]=w),this.vertexCache[r]=F,F}clone(){let t=new bv(this._shape,this._depth,this._bevel,this._curveSegments,this._bevelSegmentsInput);return t.userData=H0(this.userData),t}},Xi=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s,a,o,l;let h=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,subdivisions:40,roundness:0,extrudeBevelSize:0,extrudeBevelSegments:3},t.parameters),c=Math.abs(h.width),d=Math.abs((i=h.height)!=null?i:h.width),u=Math.abs((r=h.depth)!=null?r:0),p=(s=t.shape)!=null?s:e==null?void 0:e.shape,m=(a=p==null?void 0:p.roundness)!=null?a:h.roundness;p!==void 0&&(p instanceof Bt?(p.width!==c||p.height!==d)&&p.applySize(c,d):p=new Bt(c,d).fromJSON(p),((o=t.parameters)==null?void 0:o.roundness)!==void 0&&((l=t.parameters)==null?void 0:l.roundness)>0&&p.update(!1));let f=p!=null?p:new Bt(c,d);return{parameters:Object.assign(h,{width:c,height:d,depth:u,roundness:m}),shape:f}}static build(t){let{depth:e,extrudeBevelSize:n,extrudeBevelSegments:i,subdivisions:r,roundness:s}=t.parameters;t.shape.roundness=s;let a;return e<=0?a=new yv(t.shape,r):a=new bv(t.shape,e,n,r,i),Object.assign(a,{userData:Ie(ve({},t),{type:"VectorGeometry"})})}},_v=Math.PI*2,uD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,spikes:64,angle:360,innerRadius:0,extrudeBevelSize:0,extrudeBevelSegments:1},t.parameters);return{shape:t.shape&&t.shape instanceof Bt?t.shape:new Bt,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n,spikes:i,angle:r,innerRadius:s,depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}=t.parameters,h=t.shape,c=e*.5,d=n*.5,u=dD(h,c,d,r*Math.PI/180,i,s);h.isClosed=!0,h.update();let p=Xi.create({shape:h,parameters:{subdivisions:u,depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}});return Object.assign(p,{userData:Ie(ve({},t),{type:"EllipseGeometry"})})}};function dD(t,e,n,i,r,s){if(i>=_v)return r>30||r%4===0?(fD(t,e,n,s),Math.round(r/4)):Mm(t,i,r,e,n,s);let a={x:0,y:n},o=i+Math.PI*.5,l={x:Math.cos(o)*e,y:Math.sin(o)*n},h=aD({px:a.x,py:a.y,cx:l.x,cy:l.y,rx:e,ry:n,largeArcFlag:i>Math.PI,sweepFlag:!0});return r>30||r%h.length===0?pD(t,a.x,a.y,h,r,e,n,s):Mm(t,i,r,e,n,s)}function pD(t,e,n,i,r,s,a,o){let l=Math.round(r/i.length);t.addPoint(ks(e,n));for(let h=0,c=i.length;h<c;h++){let d=i[h],u=t.points[h],p=ks(d.x,d.y);u.controls[1].position.set(d.x1,d.y1),p.controls[0].position.set(d.x2,d.y2),t.addPoint(p)}return o>0?wv(t,s,a,o):t.addPoint(ks(0,0)),l}function Mm(t,e,n,i,r,s){let a=-e/n;for(let o=0;o<=n;o++){let l=a*o,h=Math.sin(l)*i,c=Math.cos(l)*r;t.addPoint(ks(h,c))}return e<_v?s>0?wv(t,i,r,s):t.addPoint(ks(0,0)):(t.removePoint(t.points[t.points.length-1]),s>0&&Sv(t,i,r,s)),1}function fD(t,e,n,i=0,r=0,s=0){let a=.5522847498,o=e*a,l=n*a;t.addPoint(cl(r-e,s,r-e,s-l,r-e,s+l)),t.addPoint(cl(r,s+n,r-o,s+n,r+o,s+n)),t.addPoint(cl(r+e,s,r+e,s+l,r+e,s-l)),t.addPoint(cl(r,s-n,r+o,s-n,r-o,s-n)),i>0&&Sv(t,e,n,i)}function ks(t,e){return new Us(Mt.generateUUID(),new q(t,e))}function cl(t,e,n,i,r,s){let a=ks(t,e);return a.controls[0].position.set(n,i),a.controls[1].position.set(r,s),a}function wv(t,e,n,i){Mv(t,e,n,i).forEach(r=>t.addPoint(r))}function Sv(t,e,n,i){let r=Mv(t,e,n,i),s=new Bt;r.forEach(a=>s.addPoint(a)),s.isClosed=!0,t.shapeHoles.push(s)}function Mv(t,e,n,i){let r=i*e/100,s=r*(Math.abs(n)/Math.abs(e)),a=new q(r/e,s/n),o=t.points.map(l=>{let h=l.clone();return h.uuid=Mt.generateUUID(),h}).reverse();return o.forEach(l=>{l.position.multiply(a);let h=l.controls[0].position.clone().multiply(a),c=l.controls[1].position.clone().multiply(a);l.controls[0].position.copy(c),l.controls[1].position.copy(h)}),o}var mD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,revolutions:2,segments:40,pathRadius:10,pathType:0,pathSegments:30,cornerRadius:30,cornerSegments:4},t.parameters),a=Math.abs(s.width),o=Math.abs((i=s.height)!=null?i:a),l=Math.abs((r=s.depth)!=null?r:a),h=Math.abs(Math.min(a,l))/2;return{parameters:Object.assign(s,{width:a,height:o,depth:l,radius:h,segments:Math.round(s.segments),pathSegments:Math.round(s.pathSegments),cornerSegments:Math.round(s.cornerSegments)})}}static build(t){let{width:e,height:n,depth:i,radius:r,revolutions:s,segments:a,pathRadius:o,pathType:l,pathSegments:h,cornerRadius:c,cornerSegments:d}=t.parameters,u=new Tv(!1,e,n,i,r,s,a,o,l,h,c,d);return Object.assign(u,{userData:Ie(ve({},t),{type:"HelixGeometry"})})}},Tv=class extends Ve{constructor(t=!0,e=1,n=1,i=1,r=1,s=1,a=1,o=1,l=1,h=1,c=1,d=1){super();let u=t&&s===1;u&&(d=0),c>100&&(c=100);let p=()=>new T,m=new T,f=p(),g=p(),v=p(),y,w,S,b,_,E,x,A,M=p(),C=p(),F=p(),W=p(),O=p(),Z=p(),X=p(),j=p(),H=n-2*o+.001,N=H/s,I=Math.ceil(a*s),V=I+1,B=H/I,k=-H/2,$=h+1,ne=2*Math.PI/h,z=Math.PI/2/d,oe=.01,ie=Math.min((1-c/100)*o,o-oe),le=o-ie,K=0,pe=2,G=d*pe+pe,J=$*G/pe,ee=J+$*V,se=$*(V+G),[ce,fe,ge]=[3,3,2].map(Ee=>Array(se*Ee).fill(0)),_e=[],Oe=r-o;function Ne(Ee,xe){let U=Math.PI/2;E=xe*B,A=2*Math.PI*(E%N)/N+U,E+=k,x=Math.sin(A)*Oe,_=Math.cos(A)*Oe,t?Ee.set(_,x,E):Ee.set(_,E,x)}Ne(m,-1e-10),Ne(f,0),M.copy(m),Ne(m,1);let D=m.distanceTo(f),L=le+ie,he=D*I+2*L,me=ie,Te=he-L;for(let Ee=0;Ee<=I;Ee++){Ne(g,Ee),j.subVectors(g,M).normalize(),M.copy(g),Z.copy(g).setComponent(+t+1,0).normalize(),X.crossVectors(j,Z).normalize();let xe=Ee===0,U=Ee===I,we=xe?3*Math.PI/2:z,be=xe?me:Te,We=xe?$:ee,Le=xe?0:se-$,ze=j.clone().multiplyScalar(xe?-le:le).add(g),Se=j.clone().multiplyScalar(xe?-1:1).normalize();for(let Ue=0;Ue<$;Ue++){let ht=Ue*ne;if(C.addVectors(m.copy(Z).multiplyScalar(o*Math.cos(ht)),f.copy(X).multiplyScalar(o*Math.sin(ht))),F.copy(C).normalize(),xe||U){u||(K=Le+Ue,[0,1,2].forEach(je=>{ce[K*3+je]=ze.getComponent(je),fe[K*3+je]=Se.getComponent(je)}),ge[K*2]=+U,ge[K*2+1]=Ue/h),f.copy(F).multiplyScalar(ie),v.addVectors(g,f);for(let je=0;je<d;je++){let rn=je*z+we;W.addVectors(m.copy(j).multiplyScalar(le*Math.sin(rn)),f.copy(F).multiplyScalar(le*Math.cos(rn))),O.copy(W).normalize(),f.addVectors(v,W),W.normalize(),K=We+je*$+Ue,[0,1,2].forEach(Ht=>{ce[K*3+Ht]=f.getComponent(Ht),fe[K*3+Ht]=O.getComponent(Ht)});let dn=+xe+Math.sin(rn);ge[K*2]=(be+le*dn)/he,ge[K*2+1]=Ue/h}}f.addVectors(g,C),K=J+Ee*$+Ue,[0,1,2].forEach(je=>{ce[K*3+je]=f.getComponent(je),fe[K*3+je]=F.getComponent(je)}),ge[K*2]=(L+Ee*D)/he,ge[K*2+1]=Ue/h}}let Ce=V+2*d+pe,Be=1,[R,ye]=u?[Be,Be+V-1]:[0,Ce-1];for(let Ee=R;Ee<=ye-1;Ee++){let xe=u&&Ee===ye-1;for(let U=0;U<$-1;U++)y=Ee*$+U,w=y+1,S=(xe?U:y)+$,b=(xe?U+1:w)+$,Ee===0?_e.push(w,b,S):Ee===Ce-2?_e.push(y,w,S):_e.push(y,w,S,w,b,S)}this.setIndex(_e),this.setAttribute("position",new Pe(ce,3)),this.setAttribute("normal",new Pe(fe,3)),this.setAttribute("uv",new Pe(ge,2))}},gD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,detail:0,corner:0,cornerSides:4},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,detail:r,corner:s,cornerSides:a}=t.parameters,o=r===0&&s!==0?new Ev(e*.5,s,a):new ju(e*.5,r);return o.scale(1,n/e,i/e),Object.assign(o,{userData:Ie(ve({},t),{type:"IcosahedronGeometry"})})}},Ev=class extends _d{constructor(t=1,e=.2,n=4){let i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a="IcosahedronGeometry";super(r,s,a,t,e,n),this.type=a}static fromJSON(t){return new Ev(t.radius,t.corner,t.cornerSides)}},vD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s,a;((i=(n=t.parameters)==null?void 0:n.points)!=null?i:[]).forEach(l=>{Array.isArray(l)&&(l.x=l[0],l.y=l[1])});let o=Object.assign({},(r=e==null?void 0:e.parameters)!=null?r:{width:100,segments:64,verticalSegments:64,points:[{x:0,y:-50,id:0},{x:50,y:-50,id:1},{x:50,y:50,id:2},{x:0,y:50,id:3}]},t.parameters);return{parameters:Object.assign(o,{width:Math.abs(o.width),height:Math.abs((s=o.height)!=null?s:o.width),depth:Math.abs((a=o.depth)!=null?a:o.width)})}}static build(t){let{points:e,segments:n,verticalSegments:i}=t.parameters,r=new oi;r.moveTo(e[0].x,e[0].y),r.bezierCurveTo(e[1].x,e[1].y,e[2].x,e[2].y,e[3].x,e[3].y);let s=new Hu(r.extractPoints(i).shape,n);return s.rotateZ(Math.PI),Object.assign(s,{userData:Ie(ve({},t),{type:"LatheGeometry"})})}},yD=["a","b","c"];function xD(t,e){switch(e){case"c":return t.c;case"b":return t.b;case"a":default:return t.a}}function wc(t,e,n){let i=Math.min(t,e),r=Math.max(t,e),s=i+"_"+r;return n.get(s)}function Sc(t,e,n,i,r,s){let a=Math.min(t,e),o=Math.max(t,e),l=a+"_"+o,h;if(i.has(l))h=i.get(l);else{let c=n[a],d=n[o];h={a:c,b:d,newEdge:null,faces:[]},i.set(l,h)}h.faces.push(r),s[t].edges.push(h),s[e].edges.push(h)}function bD(t,e,n,i){let r,s,a;for(r=0,s=t.length;r<s;r++)n[r]={edges:[]};for(r=0,s=e.length;r<s;r++)a=e[r],Sc(a.a,a.b,t,i,a,n),Sc(a.b,a.c,t,i,a,n),Sc(a.c,a.a,t,i,a,n)}function ul(t,e,n,i,r){t.push(new Gc(e,n,i,void 0,void 0,r))}function ws(t,e){return Math.abs(e-t)/2+Math.min(t,e)}function dl(t,e,n,i){t.push([e.clone(),n.clone(),i.clone()])}var _D=class{constructor(t=1){this.subdivisions=t}modify(t){t instanceof Ve?t=new io().fromBufferGeometry(t):t=t.clone(),t.mergeVertices();let e=this.subdivisions;for(;e-- >0;)this._smooth(t);return t.computeFaceNormals(),t.computeVertexNormals(),t}_smooth(t){let e=new T,n,i,r,s,a,o=t.vertices,l=t.faces,h=t.faceVertexUvs[0],c=h!==void 0&&h.length>0,d=[],u=new Map;bD(o,l,d,u);let p=[],m,f,g,v,y,w,S;for(let oe of Array.from(u.keys())){for(f=u.get(oe),g=new T,y=3/8,w=1/8,S=f.faces.length,S!=2&&(y=.5,w=0,S!=1),g.addVectors(f.a,f.b).multiplyScalar(y),e.set(0,0,0),s=0;s<S;s++){for(v=f.faces[s],a=0;a<3&&(m=o[xD(v,yD[a])],!(m!==f.a&&m!==f.b));a++);m&&e.add(m)}e.multiplyScalar(w),g.add(e),f.newEdge=p.length,p.push(g)}let b,_,E,x,A,M,C,F=[];for(i=0,r=o.length;i<r;i++){for(M=o[i],A=d[i].edges,n=A.length,n==3?b=3/16:n>3&&(b=3/(8*n)),_=1-n*Number(b),E=b,n<=2&&(n==2?(_=3/4,E=1/8):n==1||n==0),C=M.clone().multiplyScalar(_),e.set(0,0,0),s=0;s<n;s++)x=A[s],m=x.a!==M?x.a:x.b,e.add(m);e.multiplyScalar(Number(E)),C.add(e),F.push(C)}let W=F.concat(p),O=F.length,Z,X,j,H=[],N=[],I,V,B,k,$=new q,ne=new q,z=new q;for(i=0,r=l.length;i<r;i++)v=l[i],Z=Number(wc(v.a,v.b,u).newEdge)+O,X=Number(wc(v.b,v.c,u).newEdge)+O,j=Number(wc(v.c,v.a,u).newEdge)+O,ul(H,Z,X,j,v.materialIndex),ul(H,v.a,Z,j,v.materialIndex),ul(H,v.b,X,Z,v.materialIndex),ul(H,v.c,j,X,v.materialIndex),c&&(I=h[i],V=I[0],B=I[1],k=I[2],$.set(ws(V.x,B.x),ws(V.y,B.y)),ne.set(ws(B.x,k.x),ws(B.y,k.y)),z.set(ws(V.x,k.x),ws(V.y,k.y)),dl(N,$,ne,z),dl(N,V,$,z),dl(N,B,ne,$),dl(N,k,z,ne));t.vertices=W,t.faces=H,c&&(t.faceVertexUvs[0]=N)}},Yt=new T,wD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i;let r=(i=(n=t.geometry)!=null?n:e==null?void 0:e.geometry)!=null?i:new Ve().copy(new ji(100,100,100)),s;e===void 0?(r.computeBoundingBox(),r.boundingBox.getSize(Yt),s={width:Yt.x,height:Yt.y,depth:Yt.z,subdivisions:0}):s=e.parameters;let a=ve(ve({},s),t.parameters);return{parameters:{width:Math.abs(a.width),height:Math.abs(a.height),depth:Math.abs(a.depth),subdivisions:Math.abs(a.subdivisions)},geometry:r}}static build(t){var e;let{width:n,height:i,depth:r,subdivisions:s}=t.parameters,a=(e=t.geometry)!=null?e:new Ve().copy(new ji(100,100,100)),o=a.userData.parameters;o===void 0?(a.computeBoundingBox(),a.boundingBox.getSize(Yt)):Yt.set(o.width,o.height,o.depth),(n!==Yt.x||i!==Yt.y||r!==Yt.z)&&a.scale(Yt.x===0?1:n/Yt.x,Yt.y===0?1:i/Yt.y,Yt.z===0?1:r/Yt.z);let l=a.originalGeometry;return s>0?(l===void 0||(o==null?void 0:o.subdivisions)!==s)&&(l===void 0&&(l=a),a=new _D(s).modify(l).toBufferGeometry()):(l!==void 0&&(a=l),l=void 0,a.getAttribute("normal")===void 0&&a.computeVertexNormals()),l!==void 0&&Object.assign(a,{originalGeometry:l}),delete t.geometry,Object.assign(a,{userData:Ie(ve({},t),{type:"NonParametricGeometry"})})}static loadFromUrl(t,e,n){new Yu(n).load(t,i=>{let r=this.normalizeInputs({geometry:i});i.boundingBox.getSize(Yt);let s=100/Yt.x;Object.assign(r.parameters,{width:100,height:Yt.y*s,depth:Yt.z*s}),e(this.build(r))})}},SD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,spikes:5,cornerRadius:0,extrudeBevelSize:0,extrudeBevelSegments:3},t.parameters);return{shape:t.shape&&t.shape instanceof Bt?t.shape:new Bt,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n,spikes:i,cornerRadius:r,depth:s,extrudeBevelSize:a,extrudeBevelSegments:o}=t.parameters,l=t.shape,h=e*.5,c=n*.5,d=0,u=0,p=2*Math.PI/i;for(let f=0;f<i;f++){let g=p*f,v=d+Math.sin(g)*h,y=u+Math.cos(g)*c;l.addPoint(l.createPoint(v,y))}l.isClosed=!0;for(let f=0,g=l.points.length;f<g;f++)l.points[f].roundness=r;l.roundness=r,l.update();let m=Xi.create({shape:l,parameters:{roundness:r,depth:s,extrudeBevelSize:a,extrudeBevelSegments:o}});return Object.assign(m,{userData:Ie(ve({},t),{type:"PolygonGeometry"})})}},MD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:4,heightSegments:1,cornerRadius:0,cornerSegments:8,openEnded:!1},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,radialSegments:r,heightSegments:s,openEnded:a,cornerRadius:o,cornerSegments:l}=t.parameters,h=new ED(e*.5,n,r,s,a,o,l);return h.scale(1,1,i/e),Object.assign(h,{userData:Ie(ve({},t),{type:"PyramidGeometry"})})}};function Pa(t,e,n){n.x=t.x*e.x,n.y=t.y,n.z=t.x*e.y}function Mc(t,e,n,i,r,s){let a=e.clone().sub(t),o=n.clone().sub(t),l=a.angleTo(o);if(a.normalize(),o.normalize(),i===r){let h=a.add(o).normalize();s.copy(t).addScaledVector(h,i/Math.sin(l/2))}else{let h=a.angleTo(o);s.copy(t),s.addScaledVector(a,r/Math.sin(h)),s.addScaledVector(o,i/Math.sin(h))}}function TD(t,e,n){let i=t.clone().sub(e),r=n.clone().sub(e);return i.projectOnVector(r),i.add(e)}var ED=class extends Ve{constructor(t=.5,e=1,n=4,i=1,r=!1,s=0,a=4){super(),n=Math.floor(Math.max(3,n)),i=Math.floor(i),a=Math.floor(a);let o=[],l=[],h=[],c=[],d=0,u=e/2,p=Math.PI/n,m=t*Math.cos(Math.PI/n),f=2*Math.PI/n,g=(n-2)*Math.PI/n,v=Math.PI-g,y=new T(0,-u,0),w=new T(0,u,0),S=new q(t,-u),b=new q(m,-u),_=new q(0,w.y).sub(b),E=new q(0,w.y).sub(S),x=new q(_.y,-_.x).normalize(),A=new q(E.y,-E.x).normalize(),M=t*Math.cos(Math.PI/n)*Math.tan((Math.PI-_.angle())/2)-1e-8;s=Math.min(s,M);let C;{let j=new T(x.x,x.y,0),H=new T(Math.cos(f)*j.x,j.y,Math.sin(f)*j.x);C=j.angleTo(H)}let F=s/Math.tan((Math.PI-_.angle())/2),W=s/Math.tan((Math.PI-C)/2),O=new T;if(!r){l.push(y.x,y.y,y.z),h.push(0,-1,0),c.push(0,0);let j=d++,H=[],N=S.clone(),I=F/Math.cos(Math.PI/n);N.x-=I;for(let V=0;V<n;V++){let B=V/n*Math.PI*2+p,k=new q(Math.sin(B),Math.cos(B));Pa(N,k,O),l.push(O.x,O.y,O.z),h.push(0,-1,0),c.push(0,0),H.push(d++)}for(let V=0;V<H.length;V++)o.push(H[V],j,H[(V+1)%H.length])}{let j=new T,H=new T,N=new T,I=new T,V=new T,B=new T;for(let k=0;k<n;k++){let $=k/n*Math.PI*2+p,ne=(k+.5)/n*Math.PI*2+p,z=(k+1)/n*Math.PI*2+p,oe=new q(Math.sin($),Math.cos($)),ie=new q(Math.sin(ne),Math.cos(ne)),le=new q(Math.sin(z),Math.cos(z));Pa(S,oe,H),Pa(S,le,N),Pa(x,ie,j),Mc(w,H,N,W,W,I),l.push(I.x,I.y,I.z),Mc(H,w,N,W,F,V),l.push(V.x,V.y,V.z),Mc(N,H,w,F,W,B),l.push(B.x,B.y,B.z),h.push(j.x,j.y,j.z),h.push(j.x,j.y,j.z),h.push(j.x,j.y,j.z),c.push(0,0),c.push(0,0),c.push(0,0);let K=d++,pe=d++,G=d++;if(o.push(K,pe,G),s>0){{let se=H.clone().add(N).multiplyScalar(.5),ce=w.clone().sub(se).normalize(),fe=y.clone().sub(se).normalize().add(ce).normalize().multiplyScalar(-1),ge=B.clone().sub(V);Z(se,ge,fe,_.angle())}let J,ee;{let se=new T;Pa(A,le,se);let ce=B.clone().add(I).multiplyScalar(.5);ce=TD(ce,N,w);let fe=B.clone().sub(I);[J,ee]=Z(ce,fe,se,C,I.y)}{let se=J,ce=se.clone().setY(0).normalize(),fe=new T(0,-1,0),ge=ce.clone().cross(fe);X(se,ce,fe,ge)}{let se=_.angle(),ce=Math.PI-se,fe=w.clone();fe.y-=s/Math.sin(se-Math.PI/2);let ge=new T,_e=[];for(let Ne=0;Ne<a;Ne++){let D=[],L=Math.PI/2-ce*Ne/a,he=Math.cos(L),me=Math.sin(L),Te=ne;for(let Ce=0;Ce<=Ne;Ce++){let Be=Math.cos(Te),R=Math.sin(Te);j.x=he*R,j.y=me,j.z=he*Be,ge.copy(fe).addScaledVector(j,s),l.push(ge.x,ge.y,ge.z),h.push(j.x,j.y,j.z),c.push(0,0),D.push(d++),Te+=Math.PI*2/Ne/n}_e.push(D)}ee.reverse(),_e.push(ee);let Oe=_e.length-1;for(let Ne=0;Ne<Oe;Ne++){let D=_e[Ne],L=_e[Ne+1],he=D.length-1;o.push(L[1],D[0],L[0]);for(let me=1;me<=he;me++)o.push(D[me],D[me-1],L[me]),o.push(L[me+1],D[me],L[me])}}}}}this.setIndex(o),this.setAttribute("position",new Pe(l,3)),this.setAttribute("normal",new Pe(h,3)),this.setAttribute("uv",new Pe(c,2));function Z(j,H,N,I,V){let B=-I/2,k=(Math.PI-I)/2,$=H.clone().normalize().cross(N);j.addScaledVector(N,-s/Math.sin(k));let ne=new T,z=new T,oe=1,ie=d,le=[];for(let K=0;K<=a;K++){let pe=B+K/a*I;z.set(0,0,0),z.addScaledVector($,Math.sin(pe)),z.addScaledVector(N,Math.cos(pe));for(let G=0;G<=oe;G++){let J=G/oe-.5;if(ne.copy(j),ne.addScaledVector(H,J),ne.addScaledVector(z,s),V!=null){let ee=Math.max(0,ne.y-V);ne.addScaledVector(H,-ee/H.y)}l.push(ne.x,ne.y,ne.z),h.push(z.x,z.y,z.z),c.push(0,0),G===0&&le.push(d),d++}}for(let K=0;K<a;K++)for(let pe=0;pe<oe;pe++){let G=ie+pe+(oe+1)*K,J=G+(oe+1),ee=J+1,se=G+1;o.push(G,J,se),o.push(J,ee,se)}return[j.clone().addScaledVector(H,.5),le]}function X(j,H,N,I){let V=Math.PI/2,B=E.angle()-V,k=[],$=new T,ne=new T;for(let oe=0;oe<=a;oe++){let ie=[],le=oe/a;for(let K=0;K<=oe;K++){let pe=((oe?K/oe:0)-.5)*v,G=Math.cos(pe),J=Math.sin(pe),ee=Math.atan(Math.tan(B)*G),se=(V+ee)*le,ce=Math.cos(se),fe=Math.sin(se);$.set(0,0,0),$.addScaledVector(H,fe*G),$.addScaledVector(N,ce),$.addScaledVector(I,fe*J),ne.copy(j).addScaledVector($,s),l.push(ne.x,ne.y,ne.z),h.push($.x,$.y,$.z),c.push(0,0),ie.push(d++)}k.push(ie)}let z=k.length-1;for(let oe=0;oe<z;oe++){let ie=k[oe],le=k[oe+1],K=ie.length-1;o.push(ie[0],le[1],le[0]);for(let pe=1;pe<=K;pe++)o.push(ie[pe-1],ie[pe],le[pe]),o.push(ie[pe],le[pe+1],le[pe])}}}},Av=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s;let a=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,cornerRadius:[0,0,0,0],cornerType:1,extrudeBevelSize:0,extrudeBevelSegments:1},t.parameters),o=Object.assign((i=e==null?void 0:e.ui)!=null?i:{enabledIndieCorners:!1},t.ui);return{shape:t.shape&&t.shape instanceof Bt?t.shape:new Bt,parameters:Object.assign(a,{width:Math.abs(a.width),height:Math.abs((r=a.height)!=null?r:a.width),depth:Math.abs((s=a.depth)!=null?s:0)}),ui:o}}static build(t){let e=t.shape,{width:n,height:i,cornerRadius:r,cornerType:s,depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}=t.parameters,h={x:n*.5,y:i*.5},c={x:-h.x,y:-h.y},d={x:h.x,y:h.y};function u(S,b,_){return b>n&&_>i?Math.min(S*n/b,S*i/_):b>n?S*n/b:_>i?S*i/_:S}let p=[];p[0]=r[0]===0?0:u(r[0],r[0]+r[3],r[0]+r[1]),p[1]=r[1]===0?0:u(r[1],r[1]+r[2],r[1]+r[0]),p[2]=r[2]===0?0:u(r[2],r[2]+r[1],r[2]+r[3]),p[3]=r[3]===0?0:u(r[3],r[3]+r[0],r[3]+r[2]);let m=c.x,f=d.x,g=d.y,v=c.y;e.addPoint(e.createPoint(m,g)),e.addPoint(e.createPoint(f,g)),e.addPoint(e.createPoint(f,v)),e.addPoint(e.createPoint(m,v)),e.isClosed=!0;let y=!0;for(let S=0,b=e.points.length;S<b;S++)e.points[S].roundness=p[S],S>0&&p[S]!==p[S-1]&&(y=!1);y&&(e.roundness=p[0]),e.useCubicForRoundedCorners=s!==1,e.update();let w=Xi.create({shape:e,parameters:{depth:a,extrudeBevelSize:o,extrudeBevelSegments:l}});return Object.assign(w,{userData:Ie(ve({},t),{type:"RectangleGeometry"})})}},AD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,widthSegments:64,heightSegments:64,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e=100,height:n=e,depth:i=e,widthSegments:r=64,heightSegments:s=64,phiStart:a,phiLength:o,thetaStart:l,thetaLength:h}=t.parameters,c=new lh(.5*e,r,s,a,o,l,h);return c.scale(1,n/e,i/e),Object.assign(c,{userData:Ie(ve({},t),{type:"SphereGeometry"})})}},CD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i;let r=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,widthSegments:8,heightSegments:8},t.parameters);return{parameters:Object.assign(r,{width:Math.abs(r.width),height:Math.abs((i=r.height)!=null?i:r.width),depth:0})}}static build(t){let{width:e=100,height:n=e,widthSegments:i=8,heightSegments:r=8}=t.parameters,s=new po(e,n,i,r);return s.scale(1,1,1),Object.assign(s,{userData:Ie(ve({},t),{type:"PlaneGeometry"})})}},LD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,angle:90,cornerRadius:24,cornerSegments:8},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:s.width)})}}static build(t){let{width:e,height:n,depth:i,angle:r,cornerRadius:s,cornerSegments:a}=t.parameters,o=new PD(e,n,i,r,s,a);return Object.assign(o,{userData:Ie(ve({},t),{type:"BackdropGeometry"})})}},PD=class extends Ve{constructor(t=1,e=1,n=1,i=90,r=10,s=24){super(),this.type="BackdropGeometry";let a=[],o=[],l=[],h=.001;r==0&&(s=1),s=Math.max(1,Math.floor(s)),r=Math.min(r,100),i=Math.min(180-h,i),i*=Math.PI/180;let c=[],d=(oe=0,ie=0,le=0)=>new T(oe,ie,le),u=d(),p=d(),[m,f,g]=[e/2,t/2,n/2],v=-f,y=+f,[w,S,b]=[d(v,-m,+g),d(v,-m,-g),d(v,+m,-g)],[_,E]=[oe=>Math.sin(oe),oe=>Math.cos(oe)],x=(oe,ie=!1)=>Math.sin(oe-Math.PI/(1+ +ie)),A=(oe,ie=!1)=>Math.cos(oe-Math.PI/(1+ +ie));b.y=_(i)*e-m;let M=E(i)*e-g;i<=Math.PI/2?b.z=Math.min(M,w.z-h):S.z=Math.min(S.z-M-g,w.z-h),u.subVectors(w,S),p.subVectors(b,S);let C=Math.min(u.length(),p.length())*r/100,F=C*Math.tan(i/2),W=C/Math.cos(i/2),O=u.clone().normalize().add(p.normalize()).setLength(W).add(S);u.set(0,x(i,!0),A(i,!0)),c.push([b,u.clone()]);let Z=(Math.PI-i)/s;for(let oe=0;oe<=s;oe++){let ie=Math.PI/2+i+oe*Z;u.set(0,_(ie)*F,E(ie)*F),u.add(O),p.set(0,x(ie),A(ie)),c.push([u.clone(),p.clone()])}c.push([w,d(0,1,0)]);let X=Math.sin(Z/2)*F*2,j=c.length-1,H=c[0][0].distanceTo(c[1][0]),N=c[j-1][0].distanceTo(c[j][0]),I=H+X*s+N;c[0].push(1);for(let oe=0;oe<=s;oe++)c[oe+1].push(1-(H+oe*X)/I);c[j].push(0);let[V,B,k]=c[0],$,ne,z;for(let oe=1;oe<c.length;oe++)[$,ne,z]=c[oe],a.push(v,V.y,V.z,v,$.y,$.z,y,V.y,V.z,y,V.y,V.z,v,$.y,$.z,y,$.y,$.z),o.push(0,B.y,B.z,0,ne.y,ne.z,0,B.y,B.z,0,B.y,B.z,0,ne.y,ne.z,0,ne.y,ne.z),l.push(0,k,0,z,1,k,1,k,0,z,1,z),[V,B,k]=[$,ne,z];this.setAttribute("position",new Pe(a,3)),this.setAttribute("normal",new Pe(o,3)),this.setAttribute("uv",new Pe(l,2))}},DD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,innerRadiusPercent:38.19,spikes:5,cornerRadius:0,angle:360,extrudeBevelSize:0,extrudeBevelSegments:1},t.parameters);return{shape:t.shape&&t.shape instanceof Bt?t.shape:new Bt,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n,innerRadiusPercent:i,spikes:r,cornerRadius:s,angle:a,depth:o,extrudeBevelSize:l,extrudeBevelSegments:h}=t.parameters,c=t.shape,d=e*.5,u=n*.5,p=0,m=0,f=a*Math.PI/360/r,g=Math.PI/2*3*-1,v=d*i/100,y=u*i/100;if(r===3&&i===50){f=2*Math.PI/r;for(let S=0;S<r;S++){let b=f*S,_=p+Math.sin(b)*d,E=m+Math.cos(b)*u;c.addPoint(c.createPoint(_,E))}}else for(let S=0;S<r;S++){let b=p+Math.cos(g)*d,_=m+Math.sin(g)*u;c.addPoint(c.createPoint(b,_)),g+=f,b=p+Math.cos(g)*v,_=m+Math.sin(g)*y,c.addPoint(c.createPoint(b,_)),g+=f}c.isClosed=!0;for(let S=0,b=c.points.length;S<b;S++)c.points[S].roundness=s;c.roundness=s,c.update();let w=Xi.create({shape:c,parameters:{roundness:s,depth:o,extrudeBevelSize:l,extrudeBevelSegments:h}});return Object.assign(w,{userData:Ie(ve({},t),{type:"StarGeometry"})})}},Cv=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0},t.parameters);return{parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e,height:n}=t.parameters,i=new po(e,n);return Object.assign(i,{userData:Ie(ve({},t),{type:"TextFrameGeometry"})})}},RD=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,radialSegments:32,tubularSegments:64,arc:Math.PI*2,cornerRadius:30,cornerSegments:8},t.parameters),a=Math.abs(s.width),o=Math.abs((i=s.height)!=null?i:s.width),l=Math.abs((r=s.depth)!=null?r:s.width*.25);return{parameters:Object.assign(s,{width:a,height:o,depth:l})}}static build(t){let{width:e,height:n,depth:i,radialSegments:r,tubularSegments:s,arc:a,cornerRadius:o,cornerSegments:l}=t.parameters,h=OD(e,n,i,e*.5,a,s,0,0,r,o,l);return h.scale(1,n/e,1),Object.assign(h,{userData:Ie(ve({},t),{type:"TorusGeometry"})})}};function OD(t,e,n,i,r,s,a,o,l,h,c){return[e,n]=[n,e],a=e/2,r/=2*Math.PI,r==1&&(h=0),new Tv(!0,t,e,n,i,r,s,a,o,l,h,c)}var ID=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r,s;let a=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,tubularSegments:64,radialSegments:32,p:2,q:3},t.parameters);return{parameters:Object.assign(a,{width:Math.abs(a.width),height:Math.abs((i=a.height)!=null?i:a.width),depth:Math.abs((r=a.depth)!=null?r:a.width),tube:(s=a.tube)!=null?s:a.width*.125})}}static build(t){let{width:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:a}=t.parameters,o=e*.5;o!==n&&(o-=n);let l=new qu(o,n,i,r,s,a);return Object.assign(l,{userData:Ie(ve({},t),{type:"TorusKnotGeometry"})})}},ND=class{static create(t){return this.build(this.normalizeInputs(t))}static normalizeInputs(t,e){var n,i,r;let s=Object.assign({},(n=e==null?void 0:e.parameters)!=null?n:{width:100,depth:0,spikes:5,cornerRadius:0,extrudeBevelSize:0,extrudeBevelSegments:1,isRect:!1},t.parameters);return{shape:t.shape&&t.shape instanceof Bt?t.shape:new Bt,parameters:Object.assign(s,{width:Math.abs(s.width),height:Math.abs((i=s.height)!=null?i:s.width*(s.isRect?1:Math.sqrt(3)/2)),depth:Math.abs((r=s.depth)!=null?r:0)})}}static build(t){let{width:e=100,height:n,cornerRadius:i,depth:r,extrudeBevelSize:s,extrudeBevelSegments:a,isRect:o}=t.parameters,l=t.shape,h=e*.5,c=n*.5;o?(l.addPoint(l.createPoint(-h,c)),l.addPoint(l.createPoint(h,-c)),l.addPoint(l.createPoint(-h,-c))):(l.addPoint(l.createPoint(0,c)),l.addPoint(l.createPoint(h,-c)),l.addPoint(l.createPoint(-h,-c))),l.isClosed=!0;for(let u=0,p=l.points.length;u<p;u++)l.points[u].roundness=i;l.roundness=i,l.update();let d=Xi.create({shape:l,parameters:{roundness:i,depth:r,extrudeBevelSize:s,extrudeBevelSegments:a}});return Object.assign(d,{userData:Ie(ve({},t),{type:"TriangleGeometry"})})}},Lv={};o0(Lv,{addBarycentricAttribute:()=>FD,fixUvs:()=>kD,loadFromUrl:()=>UD,resizeGeometry:()=>BD,roundShapePolygon:()=>zD});var Tm=function(t,e){let n=e.x-t.x,i=e.y-t.y,r=Math.sqrt(n*n+i*i),s=n/r,a=i/r,o=Math.atan2(a,s);return{x:n,y:i,len:r,nx:s,ny:a,ang:o}},zD=(t,e,n)=>{let i,r,s,a,o,l,h,c,d,u,p,m,f,g,v=e.length;for(a=e[v-2],t.curves=[],i=1;i<v-1;i++){o=e[i%v],l=e[(i+1)%v];let y=Tm(o,a),w=Tm(o,l);h=y.nx*w.ny-y.ny*w.nx,c=y.nx*w.nx-y.ny*-w.ny,p=Math.asin(h),d=1,u=!1,c<0?p<0?p=Math.PI+p:(p=Math.PI-p,d=-1,u=!0):p>0&&(d=-1,u=!0),m=p/2,g=Math.abs(Math.cos(m)*n/Math.sin(m)),g>Math.min(y.len/2,w.len/2)?(g=Math.min(y.len/2,w.len/2),f=Math.abs(g*Math.sin(m)/Math.cos(m))):f=n,r=o.x+w.nx*g,s=o.y+w.ny*g,r+=-w.ny*f*d,s+=w.nx*f*d,t.absarc(r,s,f,y.ang+Math.PI/2*d,w.ang-Math.PI/2*d,u),a=o,o=l}t.closePath()},BD=(t,{width:e,height:n,depth:i})=>{e=Math.abs(e),n=Math.abs(n),i=Math.abs(i);let r=t.userData.parameters,s,a,o;e===0?(e=r.width,s=1):s=e/r.width,n===0?(n=r.height,a=1):a=n/r.height,i===0?(i=r.depth,o=1):o=i/r.depth,t.scale(s,a,o),r.width=e,r.height=n,r.depth=i},FD=(t,e)=>{let n=[new T(1,0,0),new T(0,1,0),new T(0,0,1)],i=t.attributes.position,r=new Float32Array(i.count*3);for(let s=0,a=i.count;s<a;s++)n[s%3].toArray(r,s*3);t.setAttribute(e,new Pe(r,3))},UD=t=>new Promise(e=>{new Yu().load(t,n=>e(n))}),kD=(t,e,n)=>{let i=t.getAttribute("uv");if(i)for(let r=0;r<i.count;r++){let s=i.getX(r),a=i.getY(r);i.setXY(r,(s+e/2)/e,1-(a-n/2)/n*-1)}},Pv=new Promise(t=>{}),Em=class{constructor(t){t=t!=null?t:{},this.name=t.name,this.type=t.type,this.node=t.node,this.size=t.size,this.needsUpdate=t.needsUpdate}get value(){return this.node.value}set value(t){this.node.value=t}},lt=class{constructor(t){this.hashProperties=void 0,this.isNode=!0,this.shortcuts={},this.uuid=Mt.generateUUID(),this.type=t,this.name="",this.userData={}}analyze(t,e){e=e!=null?e:{},t.analyzing=!0,this.build(t.addFlow(e.slot,e.cache,e.context),"v4"),t.clearVertexNodeCode(),t.clearFragmentNodeCode(),t.removeFlow(),t.analyzing=!1}analyzeAndFlow(t,e,n){return n=n!=null?n:{},this.analyze(t,n),this.flow(t,e,n)}flow(t,e,n){n=n!=null?n:{},t.addFlow(n.slot,n.cache,n.context);let i={result:this.build(t,e),code:t.clearNodeCode(),extra:t.context.extra};return t.removeFlow(),i}build(t,e,n){e=e!=null?e:this.getType(t,e);let i=t.getNodeData(n!=null?n:this);return t.analyzing&&this.appendDepsNode(t,i,e),t.nodes.indexOf(this)===-1&&t.nodes.push(this),this.updateFrame!==void 0&&t.updaters.indexOf(this)===-1&&t.updaters.push(this),this.generate(t,e,n)}updateFrame(t){}generateReadonly(t,e,n,i,r,s){return""}generate(t,e,n,i,r){return""}parse(t,e,n,i){}appendDepsNode(t,e,n){e.deps=(e.deps||0)+1;let i=t.getTypeLength(n);(i>(e.outputMax||0)||this.getType(t,n))&&(e.outputMax=i,e.output=n)}setName(t){this.name=t}getName(){return this.name}getType(t,e){return e==="sampler2D"||e==="samplerCube"?e:this.type}getJSONNode(t){if((t==null?void 0:t.materials)&&(t==null?void 0:t.materials[this.uuid])!==void 0)return t.materials[this.uuid]}getHash(){let t="{",e,n;for(e in this)n=this[e],n instanceof lt&&(t+='"'+e+'":'+n.getHash()+",");if(this.hashProperties)for(let i=0;i<this.hashProperties.length;i++)e=this.hashProperties[i],n=this[e],t+='"'+e+'":"'+String(n)+'",';return t+='"id":"'+this.uuid+'"}',t}copy(t){return this.name=t.name,t.type&&(this.type=t.type),t.frameId&&(this.frameId=t.frameId),t.hashProperties&&(this.hashProperties=t.hashProperties.map(e=>e)),this.userData=JSON.parse(JSON.stringify(t.userData)),this.shortcuts=JSON.parse(JSON.stringify(t.shortcuts)),this}clone(){return new this.constructor().copy(this)}createJSONNode(t){let e=t===void 0||typeof t=="string";if(typeof this.type!="string")throw new Error("Node does not allow serialization.");let n={};return n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),!e&&t&&(t.nodes[this.uuid]=n),n}toJSON(t){var e;return(e=this.getJSONNode(t))!=null?e:this.createJSONNode(t)}fromJSON(t,e){return this.uuid=t.uuid,this.type=t.type,t.name&&(this.name=t.name),t.userData&&(this.userData=t.userData),this}},VD=class{constructor(){this.nodes={},this.keywords={}}add(t){this.nodes[t.name]=t}addKeyword(t,e,n){n=n!==void 0?n:!0,this.keywords[t]={callback:e,cache:n}}remove(t){delete this.nodes[t.name]}removeKeyword(t){delete this.keywords[t]}get(t){return this.nodes[t]}getKeyword(t,e){return this.keywords[t].callback(e)}getKeywordData(t){return this.keywords[t]}contains(t){return this.nodes[t]!==void 0}containsKeyword(t){return this.keywords[t]!==void 0}},_n=new VD,Ct=class extends lt{constructor(t,e){super(t),this.scope="",e=e!=null?e:{},this.shared=e.shared!==void 0?e.shared:!0,this.unique=e.unique!==void 0?e.unique:!1}build(t,e,n,i){if(e=e!=null?e:this.getType(t),this.getShared(t,e)){let r=this.getUnique(t,e);r&&this.uuid===void 0&&(this.uuid=Mt.generateUUID()),n=t.getUUID(n!=null?n:this.getUUID(),!r);let s=t.getNodeData(n),a=s.output||this.getType(t);if(t.analyzing)return(s.deps||0)>0||this.getLabel()?(this.appendDepsNode(t,s,e),this.generate(t,e,n)):super.build(t,e,n);if(r)return s.name=s.name||super.build(t,e,n),s.name;if(!this.getLabel()&&(!this.getShared(t,a)||t.context.ignoreCache||s.deps===1))return super.build(t,e,n);n=this.getUUID(!1);let o=this.getTemp(t,n);if(o)return t.format(o,a,e);{o=super.generate(t,e,n,s.output,i);let l=this.generate(t,a,n);return t.addNodeCode(o+" = "+l+";"),t.format(o,a,e)}}return super.build(t,e,n)}getShared(t,e){return e!=="sampler2D"&&e!=="samplerCube"&&this.shared}getUnique(t,e){return this.unique}setLabel(t){return this.label=t,this}getLabel(){return this.label}getUUID(t){let e=this.uuid;return typeof this.scope=="string"&&(e=this.scope+"-"+e),e}getTemp(t,e){e=e||this.uuid;let n=t.getVars()[e];return n?n.name:void 0}generate(t,e,n,i,r){return this.getShared(t,e)||console.error("TempNode is not shared"),n=n!=null?n:this.uuid,t.getTempVar(n,i!=null?i:this.getType(t),r,this.getLabel()).name}},Wn=class extends Ct{constructor(t,e){e=e!=null?e:{},e.shared=e.shared!==void 0?e.shared:!1,super(t,e),this.readonly=!1}setReadonly(t){return this.readonly=t,this.hashProperties=this.readonly?["value"]:void 0,this}getReadonly(){return this.readonly}createJSONNode(t){let e=super.createJSONNode(t);return this.readonly===!0&&(e.readonly=this.readonly),e}fromJSON(t,e){return super.fromJSON(t,e),t.readonly!==void 0&&this.setReadonly(t.readonly),this}generate(t,e,n,i,r,s){n=t.getUUID(n!=null?n:this.getUUID()),i=i!=null?i:this.getType(t);let a=t.getNodeData(n);return this.getReadonly()&&this.generateReadonly!==void 0?this.generateReadonly(t,e,n,i,r,s):t.isShader("vertex")?(a.vertex||(a.vertex=t.createVertexUniform(i,this,r,s,this.getLabel())),t.format(a.vertex.name,i,e)):(a.fragment||(a.fragment=t.createFragmentUniform(i,this,r,s,this.getLabel())),t.format(a.fragment.name,i,e))}copy(t){return super.copy(t),this.readonly=t.readonly,this}},Zn=class extends Wn{constructor(t=0,e){super("v2"),this.nodeType="Vector2",this.value=t instanceof q?t:new q(t,e)}get x(){return this.value.x}set x(t){this.value.x=t}get y(){return this.value.y}set y(t){this.value.y=t}generateReadonly(t,e,n,i,r,s){return t.format("vec2("+this.value.x+", "+this.value.y+")",i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this}},Kn=class extends Wn{constructor(t=0,e,n){super("v3"),this.nodeType="Vector3",this.value=t instanceof T?t:new T(t,e,n)}get x(){return this.value.x}set x(t){this.value.x=t}get y(){return this.value.y}set y(t){this.value.y=t}get z(){return this.value.z}set z(t){this.value.z=t}generateReadonly(t,e,n,i,r,s){return t.format("vec3("+this.value.x+", "+this.value.y+", "+this.value.z+")",i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this}},fr=class extends Ae{constructor(t,e,n,i){super(t,e,n),this.isColorA=!0,this.a=i}setRGBA(t,e,n,i){super.setRGB(t,e,n),this.a=i}copy(t){return super.copy(t),this.a="a"in t?t.a:1,this}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}get x(){return this.r}get y(){return this.g}get z(){return this.b}get w(){return this.a}set x(t){this.r=t}set y(t){this.g=t}set z(t){this.b=t}set w(t){this.a=t}},za=class extends Wn{constructor(t){super("v4"),this.nodeType="Vector4",this.value=t instanceof fr?t:new fr(t.r,t.g,t.b,t.a)}generateReadonly(t,e,n,i,r,s){return t.format("vec4("+this.value.r+", "+this.value.g+", "+this.value.b+", "+this.value.a+")",i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this}},HD=/^\s*([a-z_0-9]+)\s([a-z_0-9]+)\s*\((.*?)\)/i,Am=/[a-z_0-9]+/gi,Je=class extends Ct{constructor(t,e,n,i,r){super(r),this.src="",this.nodeType="Function",this.useKeywords=!0,this.includes=[],this.extensions={},this.keywords={},this.isMethod=r===void 0,this.isInterface=!1,this.parse(t,e,n,i)}getShared(t,e){return!this.isMethod}getType(t){return t.getTypeByFormat(this.type)}getInputByName(t){if(this.inputs){let e=this.inputs.length;for(;e--;)if(this.inputs[e].name===t)return this.inputs[e]}}getIncludeByName(t){if(this.includes){let e=this.includes.length;for(;e--;)if(this.includes[e].name===t)return this.includes[e]}}generate(t,e,n,i,r){let s,a=0,o=this.src;if(this.includes)for(let h=0;h<this.includes.length;h++)t.include(this.includes[h],this);for(let h in this.extensions)t.extensions[h]=!0;let l=[];for(;s=Am.exec(this.src);)l.push(s);for(let h=0;h<l.length;h++){let c=l[h],d=c[0],u=this.isMethod?!this.getInputByName(d):!0,p=d;if(this.keywords[d]||this.useKeywords&&u&&_n.containsKeyword(d)){let m=this.keywords[d];if(!m){let f=_n.getKeywordData(d);f.cache&&(m=t.keywords[d]),m=m||_n.getKeyword(d,t),f.cache&&(t.keywords[d]=m)}p=m.build(t)}d!==p&&(o=o.substring(0,c.index+a)+p+o.substring(c.index+d.length+a),a+=p.length-d.length),this.getIncludeByName(p)===void 0&&_n.contains(p)&&t.include(_n.get(p))}return e==="source"?o:this.isMethod?(this.isInterface||t.include(this,void 0,o),this.name):t.format("( "+o+" )",this.getType(t),e)}parse(t,e,n,i){if(this.src=t||"",this.includes=e!=null?e:[],this.extensions=n!=null?n:{},this.keywords=i!=null?i:{},this.isMethod){let r=HD.exec(this.src);if(this.inputs=[],r&&r.length==4){this.type=r[1],this.name=r[2];let s=r[3].match(Am);if(s){let a=0;for(;a<s.length;){let o=s[a++],l;o==="in"||o==="out"||o==="inout"?l=s[a++]:(l=o,o="");let h=s[a++];this.inputs.push({name:h,type:l,qualifier:o})}}this.isInterface=this.src.indexOf("{")===-1}else this.type="",this.name=""}}copy(t){return super.copy(t),this.isMethod=t.isMethod,this.useKeywords=t.useKeywords,t.type!==void 0&&(this.type=t.type),this.parse(t.src,t.includes,t.extensions,t.keywords),this}toJSON(t){var e;let n=this.getJSONNode(t);if(!n){n=this.createJSONNode(t),n.src=this.src,n.isMethod=this.isMethod,n.useKeywords=this.useKeywords,this.isMethod||(n.type=this.type),n.extensions=JSON.parse(JSON.stringify(this.extensions));let i={};for(let r in this.keywords)i[r]=this.keywords[r].toJSON(t).uuid;if(n.keywords=i,(e=this.includes)!=null&&e.length){let r=[];for(let s=0;s<this.includes.length;s++)r.push(this.includes[s].toJSON(t).uuid);n.includes=r}n.isMethod=this.isMethod,n.inputs=this.inputs}return n.nodeType=this.nodeType,n}fromJSON(t,e){if(super.fromJSON(t,e),t.inputs!==void 0&&(this.inputs=t.inputs),t.isMethod!==void 0&&(this.isMethod=t.isMethod),t.src&&(this.src=t.src),t.isMethod&&(this.isMethod=t.isMethod),t.useKeywords&&(this.useKeywords=t.useKeywords),t.type&&(this.type=t.type),t.extensions&&(this.extensions=t.extensions),t.keywords&&e){this.keywords={};for(let n in t.keywords)this.keywords[n]=e.getNode(t.keywords[n])}return t.includes&&e&&(this.includes=t.includes.map(n=>e.getNode(n))),this}},GD=/^([a-z_0-9]+)\s([a-z_0-9]+)\s?\=?\s?(.*?)(\;|$)/i,Dv=class extends Ct{constructor(t="",e){super(),this.src="",this.useDefine=!1,this.nodeType="Const",this.parse(t||Dv.PI,void 0,void 0,void 0,e)}getType(t){return t.getTypeByFormat(this.type)}parse(t,e,n,i,r){this.src=t||"";let s,a,o="",l=GD.exec(t);this.useDefine=r!=null?r:this.src.charAt(0)==="#",l&&l.length>1?(a=l[1],s=l[2],o=l[3]):(s=this.src,a="f"),this.name=s,this.type=a,this.value=o}build(t,e){if(e==="source"){if(this.value)return this.useDefine?"#define "+this.name+" "+this.value:"const "+this.type+" "+this.name+" = "+this.value+";";if(this.useDefine)return this.src}return t.include(this),t.format(this.name,this.getType(t),e)}generate(t,e,n,i,r){return t.format(this.name,this.getType(t),e)}copy(t){return super.copy(t),this.parse(t.src,void 0,void 0,void 0,t.useDefine),this}},bt=Dv;bt.PI="PI",bt.PI2="PI2",bt.RECIPROCAL_PI="RECIPROCAL_PI",bt.RECIPROCAL_PI2="RECIPROCAL_PI2",bt.LOG2="LOG2",bt.EPSILON="EPSILON";var WD=new RegExp(`^structs*([a-z_0-9]+)s*{s*((.|
)*?)}`,"gim"),jD=new RegExp("s*(w*?)s*(w*?)(=|;)","gim"),Rv=class extends Ct{constructor(t=""){super(),this.inputs=[],this.src="",this.nodeType="Struct",this.parse(t)}getType(t){return t.getTypeByFormat(this.name)}getInputByName(t){let e=this.inputs.length;for(;e--;)if(this.inputs[e].name===t)return this.inputs[e]}generate(t,e,n,i,r){return e==="source"?this.src+";":t.format("( "+this.src+" )",this.getType(t),e)}parse(t=""){this.src=t,this.inputs=[];let e=WD.exec(t);if(e){let n=e[2],i;for(;i=jD.exec(n);)this.inputs.push({type:i[1],name:i[2]});this.name=e[1]}else this.name="";this.type=this.name}},Md=class extends Ct{constructor(t){super("v2",{shared:!1}),this.nodeType="UV",this.index=t!=null?t:0}generate(t,e){t.requires.uv[this.index]=!0;let n=this.index>0?this.index+1:"",i=t.isShader("vertex")?"uv"+n:"vUv"+n;return t.format(i,this.getType(t),e)}copy(t){return super.copy(t),this.index=t.index,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.index=this.index),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.index&&(this.index=t.index),this}};_n.addKeyword("uv",function(){return new Md});_n.addKeyword("uv2",function(){return new Md(1)});var Cs=class extends Ct{constructor(t=new lt,e){super("v4"),this.nodeType="ColorSpace",this.factor=new lt,this.input=t,this.method=e!=null?e:Cs.LINEAR_TO_LINEAR,this.hashProperties=["method"]}static getEncodingComponents(t){switch(t){case li:return["Linear"];case Et:return["sRGB"];default:return[]}}generate(t,e){var n;let i=this.input.build(t,"v4"),r=this.getType(t),s=Cs.Nodes[this.method],a=t.include(s);if(a===Cs.LINEAR_TO_LINEAR)return t.format(i,r,e);if(((n=s.inputs)==null?void 0:n.length)===2){let o=this.factor.build(t,"f");return t.format(a+"( "+i+", "+o+" )",r,e)}else return t.format(a+"( "+i+" )",r,e)}fromEncoding(t){let e=Cs.getEncodingComponents(t);this.method="LinearTo"+e[0],this.factor=e[1]}fromDecoding(t){let e=Cs.getEncodingComponents(t);this.method=e[0]+"ToLinear",this.factor=e[1]}copy(t){return super.copy(t),this.input.copy(t.input),this.method=t.method,this.factor.copy(t.factor),this}},Mi=Cs;Mi.Nodes={LinearToLinear:new Je(["vec4 LinearToLinear( in vec4 value ) {","	return value;","}"].join(`
`)),sRGBToLinear:new Je(["vec4 sRGBToLinear( in vec4 value ) {","	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );","}"].join(`
`)),LinearTosRGB:new Je(["vec4 LinearTosRGB( in vec4 value ) {","	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );","}"].join(`
`))},Mi.LINEAR_TO_LINEAR="LinearToLinear",Mi.SRGB_TO_LINEAR="sRGBToLinear",Mi.LINEAR_TO_SRGB="LinearTosRGB";var Nt=class extends Je{constructor(t="",e,n,i,r){super(t,r,i,n,e),this.nodeType="Expression"}},Ls=class extends Rt{toJSON(t){let e=super.toJSON(t),n=t===void 0||typeof t=="string";if(this.image!==void 0&&!n){let i=this.image;if(Array.isArray(i)){t.images[i.uuid].url=[];for(let r=0;r<i.length;r++)t.images[i.uuid].url[r]=Cm(i[r])}else t.images[i.uuid].url=Cm(i)}return e}};function Cm(t){return typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap?qD(t):(console.warn("THREE.Texture: Unable to serialize Texture."),"")}var Ss;function qD(t){if(/^data:/i.test(t.src))return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Ss===void 0&&(Ss=document.createElement("canvas")),Ss.width=t.width,Ss.height=t.height;let i=Ss.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Ss}let n=t.src.startsWith("blob:")?t.fileName:t.src;return/\.jpe?g$/i.test(n)?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}var ki=class extends Wn{constructor(t=new Ls,e,n,i){super("v4",{shared:!0}),this.nodeType="Texture",this.value=t,this.uv=e!=null?e:new Md,this.bias=n,this.project=i!==void 0?i:!1}getTexture(t,e){return super.generate(t,e,this.value.uuid,"t")}generate(t,e){var n;if(e==="sampler2D")return this.getTexture(t,e);let i=this.getTexture(t,e),r=this.uv.build(t,this.project?"v4":"v2"),s=this.bias?this.bias.build(t,"f"):void 0;s===void 0&&t.context.bias&&(s=t.context.bias.setTexture(this).build(t,"f"));let a,o;this.project?a="texture2DProj":a=s?"tex2DBias":"tex2D",s?o=a+"( "+i+", "+r+", "+s+" )":o=a+"( "+i+", "+r+" )";let l={include:t.isShader("vertex"),ignoreCache:!0},h=this.getType(t);return t.addContext(l),this.colorSpace=(n=this.colorSpace)!=null?n:new Mi(new Nt("",h)),this.colorSpace.fromDecoding(t.getTextureEncodingFromMap(this.value)),this.colorSpace.input.parse(o),o=this.colorSpace.build(t,h),t.removeContext(),t.format(o,h,e)}copy(t){return super.copy(t),t.value.isRenderTargetTexture?this.value=t.value:this.value.copy(t.value),this.uv.copy(t.uv),t.bias?this.bias?this.bias.copy(t.bias):this.bias=t.bias.clone():this.bias=void 0,t.colorSpace?this.colorSpace?this.colorSpace.copy(t.colorSpace):this.colorSpace=t.colorSpace.clone():this.colorSpace=void 0,this.project=t.project,t.value.isRenderTargetTexture||(this.value.updateMatrix(),this.value.needsUpdate=!0),this}},Fe=class extends Wn{constructor(t){super("f"),this.nodeType="Float",this.value=t!=null?t:0}generateReadonly(t,e,n,i,r,s){return t.format(this.value+(this.value%1?"":".0"),i,e)}copy(t){return super.copy(t),this.value=t.value,this}},Lm=class extends Ct{constructor(t,e){super(),this.inputs=[],this.nodeType="FunctionCall",this.value=t,this.inputs=e!=null?e:[]}getFunction(){return this.value}getType(t){return this.value.getType(t)}generate(t,e,n,i,r){i=this.getType(t);let s=this.value,a=s.build(t,e)+"( ",o=[];if(s.inputs){for(let l=0;l<s.inputs.length;l++){let h=s.inputs[l],c=this.inputs[l]||this.inputs[h.name];o.push(c.build(t,t.getTypeByFormat(h.type)))}a+=o.join(", ")+" )"}return t.format(a,i,e)}copy(t){return super.copy(t),this.value.copy(t.value),this.inputs=t.inputs.map(e=>e.clone()),this}toJSON(t){var e;let n=this.getJSONNode(t);if(!n){let i=this.value;if(n=this.createJSONNode(t),n.value=this.value.toJSON(t).uuid,(e=i.inputs)!=null&&e.length){n.inputs={};for(let r=0;r<i.inputs.length;r++){let s=i.inputs[r],a=this.inputs[r];n.inputs[s.name]=a.toJSON(t).uuid}}}return n}},Ov=class extends Ct{constructor(t=new lt,e=new lt,n=Ov.ADD){super(),this.nodeType="Operator",this.type=t.type,this.a=t,this.b=e,this.op=n}getType(t){let e=this.a.getType(t),n=this.b.getType(t);return t.isTypeMatrix(e)?"v4":t.getTypeLength(n)>t.getTypeLength(e)?n:e}generate(t,e){let n=this.getType(t);this.type=n;let i=this.a.build(t,n),r=this.b.build(t,n);return t.format("( "+i+" "+this.op+" "+r+" )",n,e)}copy(t){return super.copy(t),this.a.copy(t.a),this.b.copy(t.b),this.op=t.op,this}},Ti=Ov;Ti.ADD="+",Ti.SUB="-",Ti.MUL="*",Ti.DIV="/";var xt=class extends Ct{constructor(t=new lt,e=xt.ABS,n,i){super(),this.nodeType="Math",this.a=t,typeof e!="string"?this.b=e:i=e,typeof n!="string"?this.c=n:i=n,this.method=i,this.hashProperties=["method"]}getNumInputs(t){switch(this.method){case xt.MIX:case xt.CLAMP:case xt.REFRACT:case xt.SMOOTHSTEP:case xt.FACEFORWARD:return 3;case xt.MIN:case xt.MAX:case xt.MOD:case xt.STEP:case xt.REFLECT:case xt.DISTANCE:case xt.DOT:case xt.CROSS:case xt.POW:return 2;default:return 1}}getInputType(t){let e=t.getTypeLength(this.a.getType(t)),n=this.b?t.getTypeLength(this.b.getType(t)):0,i=this.c?t.getTypeLength(this.c.getType(t)):0;return e>n&&e>i?this.a.getType(t):n>i?this.b.getType(t):this.c.getType(t)}getType(t){switch(this.method){case xt.LENGTH:case xt.DISTANCE:case xt.DOT:return"f";case xt.CROSS:return"v3"}return this.getInputType(t)}generate(t,e){let n,i,r,s=this.a?t.getTypeLength(this.a.getType(t)):0,a=this.b?t.getTypeLength(this.b.getType(t)):0,o=this.c?t.getTypeLength(this.c.getType(t)):0,l=this.getInputType(t),h=this.getType(t);switch(this.type=h,this.method){case xt.NEGATE:return t.format("( -"+this.a.build(t,l)+" )",l,e);case xt.INVERT:return t.format("( 1.0 - "+this.a.build(t,l)+" )",l,e);case xt.CROSS:n=this.a.build(t,"v3"),i=this.b.build(t,"v3");break;case xt.STEP:n=this.a.build(t,s===1?"f":l),i=this.b.build(t,l);break;case xt.MIN:case xt.MAX:case xt.MOD:n=this.a.build(t,l),i=this.b.build(t,a===1?"f":l);break;case xt.REFRACT:n=this.a.build(t,l),i=this.b.build(t,l),r=this.c.build(t,"f");break;case xt.MIX:n=this.a.build(t,l),i=this.b.build(t,l),r=this.c.build(t,o===1?"f":l);break;default:n=this.a.build(t,l),this.b&&(i=this.b.build(t,l)),this.c&&(r=this.c.build(t,l));break}let c=[];c.push(n),i&&c.push(i),r&&c.push(r);let d=this.getNumInputs(t);if(c.length!==d)throw Error(`Arguments not match used in "${this.method}". Require ${d}, currently ${c.length}.`);return t.format(this.method+"( "+c.join(", ")+" )",h,e)}copy(t){return super.copy(t),this.a.copy(t.a),this.b=t.b instanceof lt?t.b.clone():t.b,this.c=t.c instanceof lt?t.c.clone():t.c,this.method=t.method,this}},Ke=xt;Ke.RAD="radians",Ke.DEG="degrees",Ke.EXP="exp",Ke.EXP2="exp2",Ke.LOG="log",Ke.LOG2="log2",Ke.SQRT="sqrt",Ke.INV_SQRT="inversesqrt",Ke.FLOOR="floor",Ke.CEIL="ceil",Ke.NORMALIZE="normalize",Ke.FRACT="fract",Ke.SATURATE="saturate",Ke.SIN="sin",Ke.COS="cos",Ke.TAN="tan",Ke.ASIN="asin",Ke.ACOS="acos",Ke.ARCTAN="atan",Ke.ABS="abs",Ke.SIGN="sign",Ke.LENGTH="length",Ke.NEGATE="negate",Ke.INVERT="invert",Ke.MIN="min",Ke.MAX="max",Ke.MOD="mod",Ke.STEP="step",Ke.REFLECT="reflect",Ke.DISTANCE="distance",Ke.DOT="dot",Ke.CROSS="cross",Ke.POW="pow",Ke.MIX="mix",Ke.CLAMP="clamp",Ke.REFRACT="refract",Ke.SMOOTHSTEP="smoothstep",Ke.FACEFORWARD="faceforward";var Ba=class extends Ct{constructor(t=new lt,e=new lt,n=new lt){super("v4"),this.nodeType="TextureCubeUV",this.value=t,this.uv=e,this.bias=n}bilinearCubeUV(t,e,n,i){var r,s,a,o;let l=new Lm(Ba.Nodes.bilinearCubeUV,[e,n,i]);this.colorSpaceTL=(r=this.colorSpaceTL)!=null?r:new Mi(new Nt("","v4")),this.colorSpaceTL.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceTL.input.parse(l.build(t)+".tl"),this.colorSpaceTR=(s=this.colorSpaceTR)!=null?s:new Mi(new Nt("","v4")),this.colorSpaceTR.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceTR.input.parse(l.build(t)+".tr"),this.colorSpaceBL=(a=this.colorSpaceBL)!=null?a:new Mi(new Nt("","v4")),this.colorSpaceBL.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceBL.input.parse(l.build(t)+".bl"),this.colorSpaceBR=(o=this.colorSpaceBR)!=null?o:new Mi(new Nt("","v4")),this.colorSpaceBR.fromDecoding(t.getTextureEncodingFromMap(this.value.value)),this.colorSpaceBR.input.parse(l.build(t)+".br");let h={include:t.isShader("vertex"),ignoreCache:!0};t.addContext(h),this.colorSpaceTLExp=new Nt(this.colorSpaceTL.build(t,"v4"),"v4"),this.colorSpaceTRExp=new Nt(this.colorSpaceTR.build(t,"v4"),"v4"),this.colorSpaceBLExp=new Nt(this.colorSpaceBL.build(t,"v4"),"v4"),this.colorSpaceBRExp=new Nt(this.colorSpaceBR.build(t,"v4"),"v4"),t.removeContext();let c=new Nt("mix( mix( cubeUV_TL, cubeUV_TR, cubeUV.f.x ), mix( cubeUV_BL, cubeUV_BR, cubeUV.f.x ), cubeUV.f.y )","v4");return c.keywords.cubeUV_TL=this.colorSpaceTLExp,c.keywords.cubeUV_TR=this.colorSpaceTRExp,c.keywords.cubeUV_BL=this.colorSpaceBLExp,c.keywords.cubeUV_BR=this.colorSpaceBRExp,c.keywords.cubeUV=l,c}generate(t,e){if(t.isShader("fragment")){let n=this.uv,i=this.bias||t.context.roughness,r=new Lm(Ba.Nodes.roughnessToMip,[i]),s=new Ke(r,Ba.Nodes.m0,Ba.Nodes.cubeUV_maxMipLevel,Ke.CLAMP),a=new Ke(s,Ke.FLOOR),o=new Ke(s,Ke.FRACT),l=this.bilinearCubeUV(t,this.value,n,a),h=this.bilinearCubeUV(t,this.value,n,new Ti(a,new Fe(1).setReadonly(!0),Ti.ADD)),c=new Ke(l,h,o,Ke.MIX);return t.format(c.build(t),"v4",e)}else return console.warn("TextureCubeUVNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.uv.copy(t.uv),this.bias.copy(t.bias),this.value.copy(t.value),t.colorSpaceTL?this.colorSpaceTL?this.colorSpaceTL.copy(t.colorSpaceTL):this.colorSpaceTL=t.colorSpaceTL.clone():this.colorSpaceTL=void 0,t.colorSpaceTR?this.colorSpaceTR?this.colorSpaceTR.copy(t.colorSpaceTR):this.colorSpaceTR=t.colorSpaceTR.clone():this.colorSpaceTR=void 0,t.colorSpaceBL?this.colorSpaceBL?this.colorSpaceBL.copy(t.colorSpaceBL):this.colorSpaceBL=t.colorSpaceBL.clone():this.colorSpaceBL=void 0,t.colorSpaceBR?this.colorSpaceBR?this.colorSpaceBR.copy(t.colorSpaceBR):this.colorSpaceBR=t.colorSpaceBR.clone():this.colorSpaceBR=void 0,t.colorSpaceTLExp?this.colorSpaceTLExp?this.colorSpaceTLExp.copy(t.colorSpaceTLExp):this.colorSpaceTLExp=t.colorSpaceTLExp.clone():this.colorSpaceTLExp=void 0,t.colorSpaceTRExp?this.colorSpaceTRExp?this.colorSpaceTRExp.copy(t.colorSpaceTRExp):this.colorSpaceTRExp=t.colorSpaceTRExp.clone():this.colorSpaceTRExp=void 0,t.colorSpaceBLExp?this.colorSpaceBLExp?this.colorSpaceBLExp.copy(t.colorSpaceBLExp):this.colorSpaceBLExp=t.colorSpaceBLExp.clone():this.colorSpaceBLExp=void 0,t.colorSpaceBRExp?this.colorSpaceBRExp?this.colorSpaceBRExp.copy(t.colorSpaceBRExp):this.colorSpaceBRExp=t.colorSpaceBRExp.clone():this.colorSpaceBRExp=void 0,this}},xu=Ba;xu.Nodes=function(){let t=new Rv(`struct TextureCubeUVData {
			vec4 tl;
			vec4 tr;
			vec4 br;
			vec4 bl;
			vec2 f;
		}`),e=new bt("float cubeUV_maxMipLevel 8.0",!0),n=new bt("float cubeUV_minMipLevel 4.0",!0),i=new bt("float cubeUV_maxTileSize 256.0",!0),r=new bt("float cubeUV_minTileSize 16.0",!0),s=new Je(`float getFace(vec3 direction) {
				vec3 absDirection = abs(direction);
				float face = -1.0;
				if (absDirection.x > absDirection.z) {
					if (absDirection.x > absDirection.y)
						face = direction.x > 0.0 ? 0.0 : 3.0;
					else
						face = direction.y > 0.0 ? 1.0 : 4.0;
				} else {
					if (absDirection.z > absDirection.y)
						face = direction.z > 0.0 ? 2.0 : 5.0;
					else
						face = direction.y > 0.0 ? 1.0 : 4.0;
				}
				return face;
		}`);s.useKeywords=!1;let a=new Je(`vec2 getUV(vec3 direction, float face) {
				vec2 uv;
				if (face == 0.0) {
					uv = vec2(direction.z, direction.y) / abs(direction.x); // pos x
				} else if (face == 1.0) {
					uv = vec2(-direction.x, -direction.z) / abs(direction.y); // pos y
				} else if (face == 2.0) {
					uv = vec2(-direction.x, direction.y) / abs(direction.z); // pos z
				} else if (face == 3.0) {
					uv = vec2(-direction.z, direction.y) / abs(direction.x); // neg x
				} else if (face == 4.0) {
					uv = vec2(-direction.x, direction.z) / abs(direction.y); // neg y
				} else {
					uv = vec2(direction.x, direction.y) / abs(direction.z); // neg z
				}
				return 0.5 * (uv + 1.0);
		}`);a.useKeywords=!1;let o=new Je(`TextureCubeUVData bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {
			float face = getFace(direction);
			float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);
			mipInt = max(mipInt, cubeUV_minMipLevel);
			float faceSize = exp2(mipInt);
			float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);
			vec2 uv = getUV(direction, face) * (faceSize - 1.0);
			vec2 f = fract(uv);
			uv += 0.5 - f;
			if (face > 2.0) {
				uv.y += faceSize;
				face -= 3.0;
			}
			uv.x += face * faceSize;
			if(mipInt < cubeUV_maxMipLevel){
				uv.y += 2.0 * cubeUV_maxTileSize;
			}
			uv.y += filterInt * 2.0 * cubeUV_minTileSize;
			uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);
			uv *= texelSize;
			vec4 tl = texture2D(envMap, uv);
			uv.x += texelSize;
			vec4 tr = texture2D(envMap, uv);
			uv.y += texelSize;
			vec4 br = texture2D(envMap, uv);
			uv.x -= texelSize;
			vec4 bl = texture2D(envMap, uv);
			return TextureCubeUVData( tl, tr, br, bl, f );
		}`,[t,s,a,e,n,i,r]);o.useKeywords=!1;let l=new bt("float r0 1.0",!0),h=new bt("float v0 0.339",!0),c=new bt("float m0 -2.0",!0),d=new bt("float r1 0.8",!0),u=new bt("float v1 0.276",!0),p=new bt("float m1 -1.0",!0),m=new bt("float r4 0.4",!0),f=new bt("float v4 0.046",!0),g=new bt("float m4 2.0",!0),v=new bt("float r5 0.305",!0),y=new bt("float v5 0.016",!0),w=new bt("float m5 3.0",!0),S=new bt("float r6 0.21",!0),b=new bt("float v6 0.0038",!0),_=new bt("float m6 4.0",!0),E=[l,h,c,d,u,p,m,f,g,v,y,w,S,b,_],x=new Je(`float roughnessToMip(float roughness) {
			float mip = 0.0;
			if (roughness >= r1) {
				mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;
			} else if (roughness >= r4) {
				mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;
			} else if (roughness >= r5) {
				mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;
			} else if (roughness >= r6) {
				mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;
			} else {
				mip = -2.0 * log2(1.16 * roughness);// 1.16 = 1.79^0.25
			}
			return mip;
		}`,E);return{bilinearCubeUV:o,roughnessToMip:x,m0:c,cubeUV_maxMipLevel:e}}();var Ps=class extends Ct{constructor(t){super("v3"),this.nodeType="Normal",this.scope=t!=null?t:Ps.VIEW}getShared(){return this.scope===Ps.WORLD}build(t,e,n,i){let r=t.context[this.scope+"Normal"];return r?r.build(t,e,n,i):super.build(t,e,n)}generate(t,e,n,i,r){let s;switch(this.scope){case Ps.VIEW:t.isShader("vertex")?s="transformedNormal":s="geometryNormal";break;case Ps.LOCAL:t.isShader("vertex")?s="objectNormal":(t.requires.normal=!0,s="vObjectNormal");break;case Ps.WORLD:t.isShader("vertex")?s="inverseTransformDirection( transformedNormal, viewMatrix ).xyz":(t.requires.worldNormal=!0,s="vWNormal");break}return t.format(s,this.getType(t),e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.scope&&(this.scope=t.scope),this}},wn=Ps;wn.LOCAL="local",wn.WORLD="world",wn.VIEW="view",wn.NORMAL="normal";_n.addKeyword("viewNormal",function(){return new wn(wn.VIEW)});_n.addKeyword("localNormal",function(){return new wn(wn.NORMAL)});_n.addKeyword("worldNormal",function(){return new wn(wn.WORLD)});var Fi=class extends Ct{constructor(t){super("v3"),this.nodeType="Position",this.scope=t!=null?t:Fi.LOCAL}getType(){switch(this.scope){case Fi.PROJECTION:return"v4"}return this.type}getShader(){switch(this.scope){case Fi.LOCAL:case Fi.WORLD:return!1}return!0}generate(t,e,n,i,r){let s;switch(this.scope){case Fi.LOCAL:t.isShader("vertex")?s="transformed":(t.requires.position=!0,s="vPosition");break;case Fi.WORLD:if(t.isShader("vertex"))return"( modelMatrix * vec4( transformed, 1.0 ) ).xyz";t.requires.worldPosition=!0,s="vWPosition";break;case Fi.VIEW:s=t.isShader("vertex")?"-mvPosition.xyz":"vViewPosition";break;case Fi.PROJECTION:s=t.isShader("vertex")?"( projectionMatrix * modelViewMatrix * vec4( position, 1.0 ) )":"vec4( 0.0 )";break}return t.format(s,this.getType(),e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.scope&&(this.scope=t.scope),this}},Dn=Fi;Dn.LOCAL="local",Dn.WORLD="world",Dn.VIEW="view",Dn.PROJECTION="projection";_n.addKeyword("position",function(){return new Dn});_n.addKeyword("worldPosition",function(){return new Dn(Dn.WORLD)});_n.addKeyword("viewPosition",function(){return new Dn(Dn.VIEW)});var bi=class extends Ct{constructor(t){super("v3"),this.nodeType="Reflect",this.scope=t!=null?t:bi.CUBE}getUnique(t){return!t.context.viewNormal}getType(){switch(this.scope){case bi.SPHERE:return"v2"}return this.type}generate(t,e){let n=this.getUnique(t);if(t.isShader("fragment")){let i;switch(this.scope){case bi.VECTOR:{let r=new wn(wn.VIEW),s=t.context.roughness,a=r.build(t,"v3"),o=new Dn(Dn.VIEW).build(t,"v3"),l=s?s.build(t,"f"):void 0,h=`reflect( -normalize( ${o} ), ${a} )`;l&&(h=`normalize( mix( ${h}, ${a}, ${l} * ${l} ) )`);let c=`inverseTransformDirection( ${h}, viewMatrix )`;n?(t.addNodeCode(`vec3 reflectVec = ${c};`),i="reflectVec"):i=c;break}case bi.CUBE:{let r=new bi(bi.VECTOR).build(t,"v3"),s="vec3( -"+r+".x, "+r+".yz )";n?(t.addNodeCode(`vec3 reflectCubeVec = ${s};`),i="reflectCubeVec"):i=s;break}case bi.SPHERE:{let r=new bi(bi.VECTOR).build(t,"v3"),s="normalize( ( viewMatrix * vec4( "+r+", 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) ).xy * 0.5 + 0.5";n?(t.addNodeCode(`vec2 reflectSphereVec = ${s};`),i="reflectSphereVec"):i=s;break}}return t.format(i,this.getType(),e)}else return console.warn("ReflectNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.type,e)}copy(t){return super.copy(t),this.scope=t.scope,this}toJSON(t){let e=this.getJSONNode(t);return e||(e=this.createJSONNode(t),e.scope=this.scope),e.nodeType=this.nodeType,e}fromJSON(t,e){return super.fromJSON(t,e),t.scope&&(this.scope=t.scope),this}},Vs=bi;Vs.CUBE="cube",Vs.SPHERE="sphere",Vs.VECTOR="vector";var XD=class extends Ct{constructor(t=new ki,e,n){super("v4"),this.nodeType="TextureCube",this.value=t,this.radianceNode=new xu(this.value,e!=null?e:new Vs(Vs.VECTOR),n),this.irradianceNode=new xu(this.value,new wn(wn.WORLD),new Fe(1).setReadonly(!0))}generate(t,e){return t.isShader("fragment")?(t.require("irradiance"),t.context.bias&&t.context.bias.setTexture(this.value),(t.slot==="irradiance"?this.irradianceNode:this.radianceNode).build(t,e)):(console.warn("TextureCubeNode is not compatible with "+t.shader+" shader."),t.format("vec4( 0.0 )",this.getType(t),e))}copy(t){return super.copy(t),this.value.copy(t.value),this.radianceNode.copy(t.radianceNode),this.irradianceNode.copy(t.irradianceNode),this}},JD=class extends Wn{constructor(t=new uo,e,n){super("v4",{shared:!0}),this.nodeType="CubeTexture",this.value=t,this.uv=e!=null?e:new Vs,this.bias=n}getTexture(t,e){return super.generate(t,e,this.value.uuid,"tc")}generate(t,e){var n,i;if(e==="samplerCube")return this.getTexture(t,e);let r=this.getTexture(t,e),s=(n=this.uv)==null?void 0:n.build(t,"v3"),a=this.bias?this.bias.build(t,"f"):void 0;a===void 0&&t.context.bias&&(a=t.context.bias.setTexture(this).build(t,"f"));let o;a?o="texCubeBias( "+r+", "+s+", "+a+" )":o="texCube( "+r+", "+s+" )";let l={include:t.isShader("vertex"),ignoreCache:!0},h=this.getType(t);return t.addContext(l),this.colorSpace=(i=this.colorSpace)!=null?i:new Mi(new Nt("",h)),this.colorSpace.fromDecoding(t.getTextureEncodingFromMap(this.value)),this.colorSpace.input.parse(o),o=this.colorSpace.build(t,h),t.removeContext(),t.format(o,h,e)}copy(t){return super.copy(t),this.value.copy(t.value),t.uv?this.uv?this.uv.copy(t.uv):this.uv=t.uv.clone():this.uv=void 0,t.bias?this.bias?this.bias.copy(t.bias):this.bias=t.bias.clone():this.bias=void 0,this}},Pm=["x","y","z","w"],$D=["float","vec2","vec3","vec4"],YD={float:"f",vec2:"v2",vec3:"v3",vec4:"v4",mat4:"v4",int:"i",bool:"b","float[]":"f[]","vec4[]":"v4[]"},ZD={t:"sampler2D",tc:"samplerCube",b:"bool",i:"int",f:"float",c:"vec3",v2:"vec2",v3:"vec3",v4:"vec4",m3:"mat3",m4:"mat4","f[]":"float[]","v4[]":"vec4[]"},KD=class{constructor(){this.includes={consts:{},functions:{},structs:{}},this.cache="",this.slot="",this.shader="",this.context={},this.getIncludesCode=function(){function t(e,n){return e.deps.length-n.deps.length}return function(e,n){let i=this.getIncludes(e,n);if(!i)return"";let r="";i=i.sort(t);for(let s=0;s<i.length;s++)i[s].src&&(r+=i[s].src+`
`);return r}}(),this.slots=[],this.caches=[],this.contexts=[],this.keywords={},this.nodeData={},this.fragmentVariables={},this.requires={uv:[],color:[],lights:!1,fog:!1,transparent:!1,irradiance:!1,position:!1,worldPosition:!1,normal:!1,worldNormal:!1,vWorldViewDir:!1,modelMatrix:!1,viewMatrix:!1,projectionMatrix:!1},this.includes={consts:[],functions:[],structs:[]},this.attributes={},this.prefixCode=["#ifdef TEXTURE_LOD_EXT","	#define texCube(a, b) textureCube(a, b)","	#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)","	#define tex2D(a, b) texture2D(a, b)","	#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)","#else","	#define texCube(a, b) textureCube(a, b)","	#define texCubeBias(a, b, c) textureCube(a, b, c)","	#define tex2D(a, b) texture2D(a, b)","	#define tex2DBias(a, b, c) texture2D(a, b, c)","#endif",`
			// NOTE: Include Spline's blending modes. This could be part of BlendNode
			#define SPE_BLENDING_NORMAL 0
			#define SPE_BLENDING_MULTIPLY 1
			#define SPE_BLENDING_SCREEN 2
			#define SPE_BLENDING_OVERLAY 3

			vec3 spe_normalBlend( vec3 a, vec3 b, float alpha ) {
				return mix( a, b, alpha );
			}

			vec3 spe_multiplyBlend( vec3 a, vec3 b, float alpha ) {
				return mix( a, a * b, alpha );
			}

			vec3 spe_screenBlend( vec3 a, vec3 b, float alpha ) {
				vec3 tmp = 1.0 - ( 1.0 - a ) * ( 1.0 - b );
				return mix( a, tmp, alpha );
			}

			vec3 spe_overlayBlend( vec3 a, vec3 b, float alpha ) {
				vec3 tmp = mix( 1. - 2. * (1. - a) * (1. - b), 2. * a * b, step( a, vec3(.5) ) );
				return clamp( mix( a, tmp, alpha ), 0.0, 1.0 );
			}

			vec3 spe_blend( vec3 a, vec3 b, float alpha, int mode ) {
				if ( mode == SPE_BLENDING_NORMAL ) return spe_normalBlend( a, b, alpha );
				else if ( mode == SPE_BLENDING_MULTIPLY ) return spe_multiplyBlend( a, b, alpha );
				else if ( mode == SPE_BLENDING_SCREEN ) return spe_screenBlend( a, b, alpha );
				else if ( mode == SPE_BLENDING_OVERLAY ) return spe_overlayBlend( a, b, alpha );
				return vec3( 1.0 );
			}
			`,"#include <packing>","#include <common>"].join(`
`),this.parsCode={vertex:["float neighbor_offset = 0.0001;",""].join(`
`),fragment:["float accumAlpha = 0.0;",`void accumulateAlpha(float alpha) {
					accumAlpha += (1.0 - accumAlpha) * alpha;
				}`,""].join(`
`)},this.code={vertex:"",fragment:""},this.nodeCode={vertex:"",fragment:""},this.resultCode={vertex:"",fragment:""},this.finalCode={vertex:"",fragment:""},this.inputs={uniforms:{list:[],vertex:[],fragment:[]},arrayUniforms:{list:[],vertex:[],fragment:[]},vars:{varying:[],vertex:[],fragment:[]}},this.defines={},this.uniforms={},this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.updaters=[],this.nodes=[],this.analyzing=!1}build(t,e){this.buildShader("vertex",t),this.buildShader("fragment",e);for(let n=0;n<this.requires.uv.length;n++)if(this.requires.uv[n]){let i=n>0?n+1:"";this.addVaryCode("varying vec2 vUv"+i+";"),n>0&&this.addVertexParsCode("attribute vec2 uv"+i+";"),this.addVertexFinalCode("vUv"+i+" = uv"+i+";")}return this.requires.color[0]&&(this.addVaryCode("varying vec4 vColor;"),this.addVertexParsCode("attribute vec4 color;"),this.addVertexFinalCode("vColor = color;")),this.requires.color[1]&&(this.addVaryCode("varying vec4 vColor2;"),this.addVertexParsCode("attribute vec4 color2;"),this.addVertexFinalCode("vColor2 = color2;")),this.requires.position&&(this.addVaryCode("varying vec3 vPosition;"),this.addVertexFinalCode("vPosition = transformed;")),this.requires.worldPosition,this.requires.normal&&(this.addVaryCode("varying vec3 vObjectNormal;"),this.addVertexFinalCode("vObjectNormal = normal;")),this.requires.modelMatrix&&this.addFragmentParsCode("uniform mat4 modelMatrix;"),this.requires.viewMatrix&&this.addFragmentParsCode("uniform mat4 viewMatrix;"),this.requires.projectionMatrix&&this.addFragmentParsCode("uniform mat4 projectionMatrix;"),this.requires.worldNormal&&(this.addVaryCode("varying vec3 vWNormal;"),this.addVertexFinalCode("vWNormal = inverseTransformDirection( transformedNormal, viewMatrix ).xyz;")),this.requires.vWorldViewDir&&(this.addVaryCode("varying vec3 vWorldViewDir;"),this.addVertexFinalCode("vWorldViewDir = isPerspectiveMatrix( projectionMatrix ) ?  ( (modelMatrix * vec4(position, 1.0)).xyz - cameraPosition ) : vec3( -viewMatrix[0][2], -viewMatrix[1][2], -viewMatrix[2][2] );")),this}buildShader(t,e){this.resultCode[t]=e.build(this.setShader(t),"v4")}setMaterial(t,e){return this.material=t,this.renderer=e,this.requires.lights=t.lights,this.requires.fog=t.fog,this.mergeDefines(t.defines),this}addFlow(t,e,n){return this.addSlot(t).addCache(e).addContext(n)}removeFlow(){return this.removeSlot().removeCache().removeContext()}addCache(t){return this.cache=t!=null?t:"",this.caches.push(this.cache),this}removeCache(){return this.caches.pop(),this.cache=this.caches[this.caches.length-1]||"",this}addContext(t){return this.context=Object.assign({},this.context,t),this.context.extra=this.context.extra||{},this.contexts.push(this.context),this}removeContext(){return this.contexts.pop(),this.context=this.contexts[this.contexts.length-1]||{},this}addSlot(t){return this.slot=t||"",this.slots.push(this.slot),this}removeSlot(){return this.slots.pop(),this.slot=this.slots[this.slots.length-1]||"",this}addFragmentVariable(t,e){this.fragmentVariables[t]===void 0&&(this.addFragmentCode(`${e} ${t};`),this.fragmentVariables[t]="")}addVertexCode(t){this.addCode(t,"vertex")}addFragmentCode(t){this.addCode(t,"fragment")}addCode(t,e){this.code[e!=null?e:this.shader]+=t+`
`}addVertexNodeCode(t){this.addNodeCode(t,"vertex")}addFragmentNodeCode(t){this.addNodeCode(t,"fragment")}addNodeCode(t,e){this.nodeCode[e!=null?e:this.shader]+=t+`
`}clearNodeCode(t){t=t!=null?t:this.shader;let e=this.nodeCode[t];return this.nodeCode[t]="",e}clearVertexNodeCode(){return this.clearNodeCode("vertex")}clearFragmentNodeCode(){return this.clearNodeCode("fragment")}addVertexFinalCode(t){this.addFinalCode(t,"vertex")}addFragmentFinalCode(t){this.addFinalCode(t,"fragment")}addFinalCode(t,e){this.finalCode[e!=null?e:this.shader]+=t+`
`}addVertexParsCode(t){this.addParsCode(t,"vertex")}addFragmentParsCode(t){this.addParsCode(t,"fragment")}addParsCode(t,e){this.parsCode[e!=null?e:this.shader]+=t+`
`}addVaryCode(t){this.addVertexParsCode(t),this.addFragmentParsCode(t)}isCache(t){return this.caches.indexOf(t)!==-1}isSlot(t){return this.slots.indexOf(t)!==-1}define(t,e){this.defines[t]=e===void 0?1:e}require(t){this.requires[t]=!0}isDefined(t){return this.defines[t]!==void 0}getVar(t,e,n,i="varying",r="V",s=""){let a=this.getVars(i),o=a[t];if(!o){let l=a.length;o={name:n||"node"+r+l+(s?"_"+s:""),type:e},a.push(o),a[t]=o}return o}getTempVar(t,e,n,i){return this.getVar(t,e,n,this.shader,"T",i)}getAttribute(t,e){if(!this.attributes[t]){let n=this.getVar(t,e);this.addVertexParsCode("attribute "+e+" "+t+";"),this.addVertexFinalCode(n.name+" = "+t+";"),this.attributes[t]={varying:n,name:t,type:e}}return this.attributes[t]}getCode(t){return[this.prefixCode,this.parsCode[t],this.getVarListCode(this.getVars("varying"),"varying"),this.getVarListCode(this.inputs.uniforms[t],"uniform"),this.getVarListCode(this.inputs.arrayUniforms[t],"uniform"),this.getIncludesCode("consts",t),this.getIncludesCode("structs",t),this.getIncludesCode("functions",t),"void main() {",this.getVarListCode(this.getVars(t)),this.code[t],this.resultCode[t],this.finalCode[t],"}"].join(`
`)}getVarListCode(t,e){e=e!=null?e:"";let n="";for(let i=0,r=t.length;i<r;++i){let s=t[i],a=s.type,o=s.name,l=s.size,h=this.getFormatByType(a);if(h===void 0)throw new Error("Node pars "+h+" not found.");h.includes("[]")?n+=e+" "+h.substring(0,h.length-2)+" "+o+`[${l}];
`:n+=e+" "+h+" "+o+`;
`}return n}getVars(t){return this.inputs.vars[t!=null?t:this.shader]}getNodeData(t){let e=t instanceof lt?t.uuid:t;return this.nodeData[e]=this.nodeData[e]||{}}createUniform(t,e,n,i,r,s){if(e.includes("[]")){let a=this.inputs.arrayUniforms,o=a.list.length,l=new Em({type:e,size:n.size,name:i||"nodeUA"+o+(s?"_"+s:""),node:n,needsUpdate:r});return a.list.push(l),a[t].push(l),a[t][l.name]=l,this.uniforms[l.name]=l,l}else{let a=this.inputs.uniforms,o=a.list.length,l=new Em({type:e,name:i||"nodeU"+o+(s?"_"+s:""),node:n,needsUpdate:r});return a.list.push(l),a[t].push(l),a[t][l.name]=l,this.uniforms[l.name]=l,l}}createVertexUniform(t,e,n,i,r){return this.createUniform("vertex",t,e,n,i,r)}createFragmentUniform(t,e,n,i,r){return this.createUniform("fragment",t,e,n,i,r)}include(t,e,n){var i;let r;if(t=typeof t=="string"?_n.get(t):t,this.context.include===!1)return t.name;t instanceof Je?r=this.includes.functions:t instanceof bt?r=this.includes.consts:t instanceof Rv&&(r=this.includes.structs);let s=r[this.shader]=r[this.shader]||[];if(t){let a=s[t.name];if(a||(a=s[t.name]={node:t,deps:[]},s.push(a),a.src=t.build(this,"source")),t instanceof Je&&e&&s[e.name]&&s[e.name].deps.indexOf(t)===-1&&(s[e.name].deps.push(t),(i=t.includes)!=null&&i.length)){let o=0;do this.include(t.includes[o++],e);while(o<t.includes.length)}return n&&(a.src=n),t.name}else throw new Error("Include not found.")}colorToVectorProperties(t){return t.replace("r","x").replace("g","y").replace("b","z").replace("a","w")}colorToVector(t){return t.replace(/c/g,"v3")}getIncludes(t,e){return this.includes[t][e||this.shader]}getConstructorFromLength(t){return $D[t-1]}isTypeMatrix(t){return/^m/.test(t)}getTypeLength(t){return t==="f"?1:parseInt(this.colorToVector(t).substr(1))}getTypeFromLength(t){return t===1?"f":"v"+t}findNode(...t){for(let e=0;e<arguments.length;e++){let n=t[e];if(n!=null&&n.isNode)return n}}resolve(...t){for(let e=0;e<arguments.length;e++){let n=t[e];if(n!==void 0){if(n.isNode)return n;if(n.isTexture)switch(n.mapping){case Vr:case Hr:return new JD(n);case ho:return new XD(new ki(n));default:return new ki(n)}else{if(n.isVector2)return new Zn(n);if(n.isVector3)return new Kn(n);if(n.isVector4)return new za(n)}}}}format(t,e,n){switch(this.colorToVector(n+" <- "+e)){case"f <- v2":return t+".x";case"f <- v3":return t+".x";case"f <- v4":return t+".x";case"f <- i":case"f <- b":return"float( "+t+" )";case"v2 <- f":return"vec2( "+t+" )";case"v2 <- v3":return t+".xy";case"v2 <- v4":return t+".xy";case"v2 <- i":case"v2 <- b":return"vec2( float( "+t+" ) )";case"v3 <- f":return"vec3( "+t+" )";case"v3 <- v2":return"vec3( "+t+", 0.0 )";case"v3 <- v4":return t+".xyz";case"v3 <- i":case"v3 <- b":return"vec2( float( "+t+" ) )";case"v4 <- f":return"vec4( "+t+" )";case"v4 <- v2":return"vec4( "+t+", 0.0, 1.0 )";case"v4 <- v3":return"vec4( "+t+", 1.0 )";case"v4 <- i":case"v4 <- b":return"vec4( float( "+t+" ) )";case"i <- f":case"i <- b":return"int( "+t+" )";case"i <- v2":return"int( "+t+".x )";case"i <- v3":return"int( "+t+".x )";case"i <- v4":return"int( "+t+".x )";case"b <- f":return"( "+t+" != 0.0 )";case"b <- v2":return"( "+t+" != vec2( 0.0 ) )";case"b <- v3":return"( "+t+" != vec3( 0.0 ) )";case"b <- v4":return"( "+t+" != vec4( 0.0 ) )";case"b <- i":return"( "+t+" != 0 )"}return t}getTypeByFormat(t){return YD[t]||t}getFormatByType(t){return ZD[t]||t}getUUID(t,e){return e=e!==void 0?e:!0,e&&this.cache&&(t=this.cache+"-"+t),t}getElementByIndex(t){return Pm[t]}getIndexByElement(t){return Pm.indexOf(t)}isShader(t){return this.shader===t}setShader(t){return this.shader=t,this}mergeDefines(t){for(let e in t)this.defines[e]=t[e];return this.defines}mergeUniform(t){for(let e in t)this.uniforms[e]=t[e];return this.uniforms}getTextureEncodingFromMap(t){let e;return t?t.isTexture&&(e=t.encoding):e=li,e===li&&this.context.gamma&&(e=Et),e}},Dm=class extends lt{constructor(t=new lt){super("v4"),this.nodeType="Raw",this.value=t}generate(t){let e=this.value.analyzeAndFlow(t,this.type),n=e.code+`
`;return t.isShader("vertex")?n+="gl_Position = "+e.result+";":n+="gl_FragColor = "+e.result+";",n}copy(t){return super.copy(t),this.value.copy(t.value),this}},Zt=class extends Wn{constructor(t=0,e,n,i){super("c"),this.nodeType="Color",this.value=t instanceof fr?t:new fr(t||0,e,n,i)}setRGBA(t){this.value.setRGBA(t.r,t.g,t.b,t.a)}generate(t,e,n,i,r,s){n=t.getUUID(n!=null?n:this.getUUID()),i=i!=null?i:this.getType(t);let a=t.getNodeData(n),o=this.getReadonly()&&this.generateReadonly!==void 0;if(this.alpha){let l=this.alpha.build(t,"f");t.addFragmentNodeCode(`accumAlpha += ( 1.0 - accumAlpha ) * ${l};`)}return o?this.generateReadonly(t,e,n,i,r,s):t.isShader("vertex")?(a.vertex||(a.vertex=t.createVertexUniform(i,this,r,s,this.getLabel())),t.format(a.vertex.name,i,e)):(a.fragment||(a.fragment=t.createFragmentUniform(i,this,r,s,this.getLabel())),t.format(a.fragment.name,i,e))}generateReadonly(t,e,n,i,r,s){return t.format("vec3("+this.value.r+", "+this.value.g+", "+this.value.b+")",i,e)}},dt=class extends Wn{constructor(t){super("i"),this.nodeType="Int",this.value=Math.floor(t!=null?t:0)}generateReadonly(t,e,n,i,r,s){return t.format(this.value.toString(),i,e)}copy(t){return super.copy(t),this.value=t.value,this}},qt=class{constructor(t,e,n,i){if(this.next=void 0,this.uniforms={},this.textures={},this.defines={},this.id=t,this.uuid=e,n){this.type=n.type;for(let r in n)r!=="type"&&r!=="calpha"&&(this.uniforms[`f${this.id}_${r}`]=n[r]);for(let r in i)this.defines[r]=i[r]}}copy(t){this.id=t.id,this.type=t.type,this.defines=ve({},t.defines);for(let e in t.uniforms)this.getName(e)==="transmissionSamplerMap"||this.getName(e)==="transmissionDepthMap"||(this.uniforms[e]?this.uniforms[e].copy(t.uniforms[e]):this.uniforms[e]=t.uniforms[e].clone());return this}clone(){return new qt(this.id).copy(this)}fromJSON(t,e){this.id=t.id,this.defines=ve({},t.defines);for(let n in t.uniforms)this.uniforms[n]=e.getNode(t.uniforms[n]);if(t.type==="texture"){if(!(`f${this.id}_textureSize`in this.uniforms)){let n=this.uniforms[`f${this.id}_texture`].value.image;this.uniforms[`f${t.id}_textureSize`]=new Kn(n.width,n.height)}`f${this.id}_size`in this.uniforms||(this.uniforms[`f${t.id}_size`]=new Zn(200,200)),`f${t.id}_axis`in this.uniforms||(this.uniforms[`f${t.id}_axis`]=new dt(0)),`f${t.id}_side`in this.uniforms||(this.uniforms[`f${t.id}_side`]=new dt(0)),`f${t.id}_projection`in this.uniforms||(this.uniforms[`f${t.id}_projection`]=new dt(0))}else t.type==="noise"?(`f${t.id}_noiseType`in this.uniforms||(this.uniforms[`f${t.id}_noiseType`]=new dt(0)),`f${t.id}_size`in this.uniforms||(this.uniforms[`f${t.id}_size`]=new Kn(-1,-1,-1))):t.type==="depth"&&(`f${t.id}_isWorldSpace`in this.uniforms||(this.uniforms[`f${t.id}_isWorldSpace`]=new Fe(1)));return this}toJSON(t){let e={};for(let n in this.uniforms)e[n]=this.uniforms[n].toJSON(t).uuid;return{id:this.id,type:this.type,defines:JSON.parse(JSON.stringify(this.defines)),uniforms:e,next:this.next==null?void 0:this.next.toJSON(t)}}copyUniforms(t){for(let e in this.uniforms){let n=this.getName(e);n!==void 0&&t.uniforms[`f${t.id}_${n}`]&&n!=="transmissionDepthMap"&&n!=="transmissionSamplerMap"&&this.uniforms[e].copy(t.uniforms[`f${t.id}_${n}`])}return this}hasValueByKey(t){return this.uniforms[t]!==void 0}hasValue(t){return this.hasValueByKey(`f${this.id}_${t}`)}setValue(t,e){let n=`f${this.id}_${t}`;this.hasValueByKey(n)&&e!==void 0&&(this.uniforms[n].value=e)}getValue(t){let e=`f${this.id}_${t}`;if(this.hasValueByKey(e))return this.uniforms[e].value}getValues(){let t={type:this.type};for(let e in this.uniforms){let n=this.getName(e);if(n===void 0)continue;let i=this.uniforms[`f${this.id}_${n}`].value;i!==void 0&&(Array.isArray(i)?t[n]=i.map(r=>r.clone?r.clone():r):t[n]=i.clone?i.clone():i)}return t}getName(t){let e=/f\d+_(.*)/.exec(t);if(e&&e.length>1)return e[1];console.log(`Layer.getName: error ${t}`)}getNames(){let t=[];for(let e in this.uniforms){let n=this.getName(e);n&&t.push(n)}return t}isEqual(t){for(let e in t.uniforms){let n=t.getName(e);if(!n)return!1;let i=this.getValue(n),r=t.uniforms[e].value;if(r.value instanceof Rt){if(i.image!==r.image)return!1}else if(Array.isArray(r)){let s=i;for(let a=0,o=s.length;a<o;++a)if(s[a]!==r[a])return!1}else{let s=i;if(s.equals){if(!s.equals(r))return!1}else if(i!==r)return!1}}return!0}dispose(){}};function QD(t){let e=t instanceof qt?t.type:t;return e==="texture"||e==="displace_map"||e==="matcap"}var Rm=class extends Wn{constructor(t){super("b"),this.nodeType="Bool",this.value=t!=null?t:!1}generateReadonly(t,e,n,i){return t.format(this.value?"true":"false",i,e)}copy(t){return super.copy(t),this.value=t.value,this}},pl=class extends Wn{constructor(t=1,e){super("v4[]"),this.nodeType="Vector4Array",this.size=t,this.value=Array.isArray(e)?e:e instanceof at?new Array(t).fill(e):new Array(t).fill(new at(0))}copy(t){return super.copy(t),this.value=t.value.map(e=>e.clone()),this}},Vi=class extends Wn{constructor(t=1,e){super("f[]"),this.nodeType="FloatArray",this.size=t,this.value=Array.isArray(e)?e:typeof e=="number"?new Array(t).fill(e):new Array(t).fill(0)}copy(t){return super.copy(t),this.size=t.size,this.value=[...t.value],this}},Iv=class extends Wn{constructor(t){super("m3"),this.nodeType="Matrix3",this.value=t!=null?t:new Dt}generateReadonly(t,e,n,i,r,s){return t.format("mat3("+this.value.elements.join(", ")+")",i,e)}copy(t){return super.copy(t),this.elements=t.elements,this}get elements(){return this.value.elements}set elements(t){this.value.fromArray(t)}},Ml=class extends Ct{constructor(t=new ki,e,n,i,r,s,a,o,l){super("v3"),this.nodeType="CustomTexture",this.firstTime=!0,this.texture=t,this.textureSize=e,this.crop=n,this.projection=i,this.axis=r,this.side=s,this.size=a,this.mat=new Iv(this.texture.value.matrix),this.alpha=o,this.mode=l,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){t.require("position"),t.require("normal"),t.require("uv"),t.requires.uv=[!0],t.extensions.shaderTextureLOD=!0,t.extensions.derivatives=!0;let n=`g${this.uuid.toString().replace(/-/g,"")}`,i;switch(this.projection.value){case 3:i=t.include(Ml.Nodes.cylindrical);break;case 2:i=t.include(Ml.Nodes.spherical);break;case 1:let s=["vec3(1.0, 0.0, 0.0)","vec3(0.0, 1.0, 0.0)","vec3(0.0, 0.0, 1.0)"][this.axis.value],a=new Je(`
		vec3 ${n}_planarTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {

				vec2 uvs = ( mat * vec3( (${n}_vCustomUv * 2. - 1.) / (size * .5), 1. ) / 2. + 0.5 ).xy;

				vec4 tmp = texture2D( tex, uvs );

				vec3 col = tmp.rgb;
				float lalpha = alpha * tmp.a;
				${this.side.value===0?"":`lalpha *= step(0.0, ${this.side.value===2?"-1.0 * ":""}dot(vObjectNormal, mat * ${s}));`}

				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}`);i=t.include(a);break;default:i=t.include(Ml.Nodes.uv);break}if(this.projection.value===1&&this.firstTime){t.addVertexParsCode(`varying vec2 ${n}_vCustomUv;`),t.addFragmentParsCode(`varying vec2 ${n}_vCustomUv;`);let s=["zy","xz","xy"][this.axis.value];t.addVertexFinalCode(`${n}_vCustomUv = (1. + (transformed.${s})) / 2.;`)}t.addFragmentVariable(this.calpha,"float");let r=[];return r.push(this.texture.getTexture(t,"t")),r.push(this.textureSize.build(t,"v2")),r.push(this.crop.build(t,"f")),r.push(this.mat.build(t,"mat3")),r.push(this.size.build(t,"v2")),r.push(this.alpha.build(t,"f")),r.push(this.mode.build(t,"i")),r.push(this.calpha),this.firstTime=!this.firstTime,t.format(i+"("+r.join(",")+")",this.getType(t),e)}copy(t){return super.copy(t),this.texture.copy(t.texture),this.textureSize=t.textureSize.clone(),this.crop=t.crop.clone(),this.projection=t.projection.clone(),this.axis=t.axis.clone(),this.size=t.size.clone(),this.alpha=t.alpha.clone(),this.mode=t.mode.clone(),this}},Nv=Ml;Nv.Nodes=function(){let t=new Je(`
vec3 cylindricalTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {
                vec3 posN = normalize(position);
                float u = 0.5 + atan(posN.z, posN.x) / (2.*3.1415);
                float scaledHeight = position.y / (size.y * 0.5);
                float v =  (scaledHeight / 2.) + .5;

                vec2 calculatedUv = vec2(u,v);
				vec2 uvs = ( mat * vec3( calculatedUv * 2. - 1., 1. ) / 2. + 0.5 ).xy;

                vec2 df = fwidth(uvs);
               	if(df.x > 0.5) df.x = 0.;

				#ifdef GL_EXT_shader_texture_lod
                vec4 tmp = texture2DLodEXT(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#else
                vec4 tmp = textureLod(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#endif

				vec3 col = tmp.rgb;
				float lalpha = alpha * tmp.a;
				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}
`),e=new Je(`
vec3 sphericalTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {
                vec3 posN = normalize(vPosition);
                float u = 0.5 + atan(posN.z, posN.x) / (2.*3.1415);
                float v = 0.5 + asin(posN.y) / 3.1415;

                vec2 calculatedUv = vec2(u,v);
				vec2 uvs = ( mat * vec3( calculatedUv * 2. - 1., 1. ) / 2. + 0.5 ).xy;

                vec2 df = fwidth(uvs);
               	if(df.x > 0.5) df.x = 0.;
				#ifdef GL_EXT_shader_texture_lod
                vec4 tmp = texture2DLodEXT(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#else
                vec4 tmp = textureLod(tex, uvs, log2(max(df.x, df.y)*min(textureSize.x, textureSize.y)));
				#endif

				vec3 col = tmp.rgb;
				float lalpha = alpha * tmp.a;
				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}
`),n=new Je(`vec3 uvTexture(sampler2D tex, vec2 textureSize, float crop, mat3 mat, vec2 size, float alpha, int mode, out float calpha) {

				vec2 uvs = ( mat * vec3( vUv * 2. - 1., 1. ) / 2. + 0.5 ).xy;
				vec4 tmp = texture2D( tex, uvs );

				vec3 col = tmp.rgb;

				float lalpha = alpha * tmp.a;
				if ( crop > 0.5 ) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						lalpha = 0.0;
					}
				}
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return col;
			}`);return{cylindrical:t,spherical:e,uv:n}}();var zv=class extends Ct{constructor(t,e,n,i,r,s,a){super("v3"),this.nodeType="Fresnel",this.color=t,this.bias=e,this.scale=n,this.intensity=i,this.factor=r,this.alpha=s,this.mode=a,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.require("vWorldViewDir"),t.require("worldNormal"),t.isShader("fragment")){t.addFragmentVariable(this.calpha,"float");let n=t.include(zv.Nodes.fresnel),i=[];return i.push(this.color.build(t,"c")),i.push(this.bias.build(t,"f")),i.push(this.scale.build(t,"f")),i.push(this.intensity.build(t,"f")),i.push(this.factor.build(t,"f")),i.push(this.alpha.build(t,"f")),i.push(this.mode.build(t,"i")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("FresnelNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.color=t.color.clone(),this.bias=t.bias.clone(),this.scale=t.scale.clone(),this.intensity=t.intensity.clone(),this.factor=t.factor.clone(),this.alpha=t.alpha.clone(),this.mode=t.mode.clone(),this.calpha=t.calpha,this}},Bv=zv;Bv.Nodes=function(){return{fresnel:new Je(`vec3 fresnel(vec3 color, float bias, float scale, float intensity, float factor, float alpha, int mode, out float calpha) {
				float fresnel = bias + scale * pow( abs( factor + dot( normalize( vWorldViewDir ), normalize( vWNormal ) ) ), intensity );

				float lalpha = clamp( fresnel, 0.0, 1.0 ) * alpha;
				calpha = lalpha / clamp(lalpha + accumAlpha, 0.001, 1.0);
				accumAlpha += (1.0 - accumAlpha) * lalpha;
				return color;
			}`)}}();var Td=(t=>(t.SIMPLEX="simplex3d",t.SIMPLEX_FRACTAL="simplex3dFractal",t.ASHIMA="simplexAshima",t.FBM="fbm",t.PERLIN="perlin",t))(Td||{}),ni=function(){let t=new Je(`vec3 random3(vec3 c) {
			float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));
			vec3 r;
			r.z = fract(512.0*j);
			j *= .125;
			r.x = fract(512.0*j);
			j *= .125;
			r.y = fract(512.0*j);
			return r-0.5;
		}`),e=new Je(`float simplex3d(vec3 p) {
			 vec3 s = floor(p + dot(p, vec3(F3)));
			 vec3 x = p - s + dot(s, vec3(G3));
			 
			 vec3 e = step(vec3(0.0), x - x.yzx);
			 vec3 i1 = e*(1.0 - e.zxy);
			 vec3 i2 = 1.0 - e.zxy*(1.0 - e);
				
			 vec3 x1 = x - i1 + G3;
			 vec3 x2 = x - i2 + 2.0*G3;
			 vec3 x3 = x - 1.0 + 3.0*G3;
			 
			 vec4 w, d;
			 
			 w.x = dot(x, x);
			 w.y = dot(x1, x1);
			 w.z = dot(x2, x2);
			 w.w = dot(x3, x3);
			 
			 w = max(0.6 - w, 0.0);
			 
			 d.x = dot(random3(s), x);
			 d.y = dot(random3(s + i1), x1);
			 d.z = dot(random3(s + i2), x2);
			 d.w = dot(random3(s + 1.0), x3);
			 
			 w *= w;
			 w *= w;
			 d *= w;
			 
			 return dot(d, vec4(52.0));
		}`,[t]);e.keywords.F3=new bt("float F3 0.3333333"),e.keywords.G3=new bt("float G3 0.1666667");let n=new Je(`float simplex3dFractal(vec3 m) {
			mat3 rot1 = mat3(-0.37, 0.36, 0.85,-0.14,-0.93, 0.34,0.92, 0.01,0.4);
			mat3 rot2 = mat3(-0.55,-0.39, 0.74, 0.33,-0.91,-0.24,0.77, 0.12,0.63);
			mat3 rot3 = mat3(-0.71, 0.52,-0.47,-0.08,-0.72,-0.68,-0.7,-0.45,0.56);
			return 0.5333333 * simplex3d(m * rot1)
				 + 0.2666667 * simplex3d(2.0 * m * rot2)
				 + 0.1333333 * simplex3d(4.0 * m * rot3)
				 + 0.0666667 * simplex3d(8.0 * m);
		}`,[e]),i=new Je("vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}"),r=new Je("vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}"),s=new Je(`float simplexAshima(vec3 v) {
		  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;
		  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);
		  vec3 i  = floor(v + dot(v, C.yyy) );
		  vec3 x0 =   v - i + dot(i, C.xxx) ;
		  vec3 g = step(x0.yzx, x0.xyz);
		  vec3 l = 1.0 - g;
		  vec3 i1 = min( g.xyz, l.zxy );
		  vec3 i2 = max( g.xyz, l.zxy );
		  vec3 x1 = x0 - i1 + 1.0 * C.xxx;
		  vec3 x2 = x0 - i2 + 2.0 * C.xxx;
		  vec3 x3 = x0 - 1. + 3.0 * C.xxx;
		  i = mod(i, 289.0 ); 
		  vec4 p = permute( permute( permute( 
					 i.z + vec4(0.0, i1.z, i2.z, 1.0 ))
				   + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) 
				   + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));
		  float n_ = 1.0/7.0; // N=7
		  vec3  ns = n_ * D.wyz - D.xzx;
		  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)
		  vec4 x_ = floor(j * ns.z);
		  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)
		  vec4 x = x_ *ns.x + ns.yyyy;
		  vec4 y = y_ *ns.x + ns.yyyy;
		  vec4 h = 1.0 - abs(x) - abs(y);
		  vec4 b0 = vec4( x.xy, y.xy );
		  vec4 b1 = vec4( x.zw, y.zw );
		  vec4 s0 = floor(b0)*2.0 + 1.0;
		  vec4 s1 = floor(b1)*2.0 + 1.0;
		  vec4 sh = -step(h, vec4(0.0));
		  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;
		  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;
		  vec3 p0 = vec3(a0.xy,h.x);
		  vec3 p1 = vec3(a0.zw,h.y);
		  vec3 p2 = vec3(a1.xy,h.z);
		  vec3 p3 = vec3(a1.zw,h.w);
		  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
		  p0 *= norm.x;
		  p1 *= norm.y;
		  p2 *= norm.z;
		  p3 *= norm.w;
		  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
		  m = m * m;
		  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), 
										dot(p2,x2), dot(p3,x3) ) );
		}`,[i,r]),a=new Je("vec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}"),o=new Je("vec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}",[a]),l=new Je(`float noise(vec3 p){
			vec3 a = floor(p);
			vec3 d = p - a;
			d = d * d * (3.0 - 2.0 * d);
			vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);
			vec4 k1 = perm(b.xyxy);
			vec4 k2 = perm(k1.xyxy + b.zzww);
			vec4 c = k2 + a.zzzz;
			vec4 k3 = perm(c);
			vec4 k4 = perm(c + 1.0);
			vec4 o1 = fract(k3 * (1.0 / 41.0));
			vec4 o2 = fract(k4 * (1.0 / 41.0));
			vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);
			vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);
			return o4.y * d.y + o4.x * (1.0 - d.y);
		}`,[o]),h=new Je(`float fbm(vec3 x) {
			float v = 0.0;
			float a = 0.5;
			vec3 shift = vec3(100);
			for (int i = 0; i < NUM_OCTAVES; ++i) {
				v += a * noise(x);
				x = x * 2.0 + shift;
				a *= 0.5;
			}
			return v;
		}`,[l]);h.keywords.NUM_OCTAVES=new bt(`int NUM_OCTAVES ${5}`);let c=new Je("vec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}"),d=new Je(`float perlin(vec3 P){
		  vec3 Pi0 = floor(P);
		  vec3 Pi1 = Pi0 + vec3(1.0);
		  Pi0 = mod(Pi0, 289.0);
		  Pi1 = mod(Pi1, 289.0);
		  vec3 Pf0 = fract(P);
		  vec3 Pf1 = Pf0 - vec3(1.0);
		  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
		  vec4 iy = vec4(Pi0.yy, Pi1.yy);
		  vec4 iz0 = Pi0.zzzz;
		  vec4 iz1 = Pi1.zzzz;
		  vec4 ixy = permute(permute(ix) + iy);
		  vec4 ixy0 = permute(ixy + iz0);
		  vec4 ixy1 = permute(ixy + iz1);
		  vec4 gx0 = ixy0 / 7.0;
		  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;
		  gx0 = fract(gx0);
		  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
		  vec4 sz0 = step(gz0, vec4(0.0));
		  gx0 -= sz0 * (step(0.0, gx0) - 0.5);
		  gy0 -= sz0 * (step(0.0, gy0) - 0.5);
		  vec4 gx1 = ixy1 / 7.0;
		  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;
		  gx1 = fract(gx1);
		  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
		  vec4 sz1 = step(gz1, vec4(0.0));
		  gx1 -= sz1 * (step(0.0, gx1) - 0.5);
		  gy1 -= sz1 * (step(0.0, gy1) - 0.5);
		  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
		  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
		  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
		  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
		  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
		  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
		  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
		  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);
		  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
		  g000 *= norm0.x;
		  g010 *= norm0.y;
		  g100 *= norm0.z;
		  g110 *= norm0.w;
		  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
		  g001 *= norm1.x;
		  g011 *= norm1.y;
		  g101 *= norm1.z;
		  g111 *= norm1.w;
		  float n000 = dot(g000, Pf0);
		  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
		  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
		  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
		  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
		  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
		  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
		  float n111 = dot(g111, Pf1);
		  vec3 fade_xyz = fade(Pf0);
		  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
		  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
		  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); 
		  return 2.2 * n_xyz;
		}`,[i,r,c]);return{simplex:e,simplexFractal:n,simplexAshima:s,fbm:h,perlin:d}}(),Fv=class extends Ct{constructor(t,e,n,i,r,s,a){super("v3"),this.nodeType="Rainbow",this.filmThickness=t,this.movement=e,this.wavelengths=n,this.noiseStrength=i,this.noiseScale=r,this.offset=s,this.alpha=a,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.require("vWorldViewDir"),t.require("worldNormal"),t.isShader("fragment")){t.require("uv"),t.requires.uv=[!0],t.addFragmentVariable(this.calpha,"float");let n=t.include(Fv.Nodes.rainbow),i=[];return i.push(this.filmThickness.build(t,"f")),i.push(this.movement.build(t,"f")),i.push(this.wavelengths.build(t,"v3")),i.push(this.noiseStrength.build(t,"f")),i.push(this.noiseScale.build(t,"f")),i.push(this.offset.build(t,"v3")),i.push(this.alpha.build(t,"f")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("RainbowNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.filmThickness=t.filmThickness.clone(),this.movement=t.movement.clone(),this.wavelengths=t.wavelengths.clone(),this.noiseStrength=t.noiseStrength.clone(),this.noiseScale=t.noiseScale.clone(),this.offset=t.offset.clone(),this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},Uv=Fv;Uv.Nodes=function(){let t=new Je(`vec3 attenuation(vec3 wavelengths, float filmThickness, float movement, float noiseStrength, float noiseScale, vec3 offset) {
                 vec3 st = position / noiseScale;
				 vec3 q = vec3(simplex3d(st),
							  simplex3d(st + vec3(1.0)),
							  simplex3d(st + vec3(1.0)));

				 vec3 r = vec3(simplex3d(st + vec3(1.4, 1.3, 1.0) * q + vec3(1.7, 9.2, 1.0)),
							  simplex3d(st + vec3(2.0, 1.2, 1.0) * q + vec3(8.3, 2.8, 1.0)),
							  simplex3d(st * q));

                 float noise = simplex3d(st + r);

                 return .5 + .5 * cos((((filmThickness + (noise * noiseStrength)) / (vec3(wavelengths.r * 1.0, wavelengths.g * 0.8, wavelengths.b * 0.6) + 1.0)) * dot(normalize(vWorldViewDir + (offset * -0.001)), normalize(vWNormal))) + movement);
             }`,[ni.simplex]);return{rainbow:new Je(`vec3 rainbow(float filmThickness, float movement, vec3 wavelengths, float noiseStrength, float noiseScale, vec3 offset, float alpha, out float calpha) {
                 vec3 res = clamp(attenuation(wavelengths, filmThickness, movement, noiseStrength, noiseScale, offset), 0.0, 2.0);

                 float rainbowContribution = clamp(res.r + res.g + res.b, 0.0, 1.0);
                 float lalpha = alpha * rainbowContribution;
                 calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
                 accumAlpha += ( 1.0 - accumAlpha ) * lalpha;

                 return res;
             }`,[t])}}();var kv=class extends Ct{constructor(t,e,n,i,r,s,a,o){super("v3"),this.nodeType="Transmission",this.thickness=t,this.ior=e,this.roughness=n,this.transmissionSamplerSize=i,this.transmissionSamplerMap=r,this.transmissionDepthMap=s,this.aspectRatio=a,this.alpha=o,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.extensions.shaderTextureLOD=!0,t.extensions.derivatives=!0,t.isShader("fragment")){t.define("NUM_SAMPLES",30),t.require("worldPosition"),t.requires.worldNormal=!0,t.requires.modelMatrix=!0,t.requires.projectionMatrix=!0,t.addFragmentVariable(this.calpha,"float");let n=t.include(kv.Nodes.transmission),i=[];return i.push(this.thickness.build(t,"f")),i.push(this.ior.build(t,"f")),i.push(this.roughness.build(t,"f")),i.push(this.transmissionSamplerSize.build(t,"v2")),i.push(this.transmissionSamplerMap.getTexture(t,"t")),i.push(this.transmissionDepthMap.getTexture(t,"t")),i.push(this.aspectRatio.build(t,"v2")),i.push("normal"),i.push(this.alpha.build(t,"f")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("TransmissionNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(this),this.thickness=t.thickness.clone(),this.ior=t.ior.clone(),this.roughness=t.roughness.clone(),this.transmissionSamplerSize=t.transmissionSamplerSize.clone(),this.transmissionSamplerMap=t.transmissionSamplerMap,this.transmissionDepthMap=t.transmissionDepthMap,this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},Vv=kv;Vv.Nodes=function(){let t=new Je(`
            float gaussian(vec2 i) {
                const float sigma = float(NUM_SAMPLES) * .25;
                return exp( -.5* dot(i/=sigma,i) ) / ( 6.28 * sigma*sigma );
            }`),e=new Je(`
            vec4 blur(sampler2D sp, vec2 U, vec2 scale, float lod, sampler2D dm, vec2 unrefractedU, vec2 aspectRatio) {
                // Slightly modified version of this:
                // https://www.shadertoy.com/view/ltScRG

                const int LOD = 2;
                const int sLOD = 4; // tile size = 2^LOD

                vec4 O = vec4(0);
                const int s = NUM_SAMPLES/sLOD;
                for ( int i = 0; i < s*s; i++ ) {
                    int modulo = (i)-((i)/(s))*(s);
                    vec2 d = vec2(float(modulo), float(i/s))*float(sLOD) - float(NUM_SAMPLES)/2.;
                    vec2 uv = U + (scale * aspectRatio) * d;
                    // What is the depth of the opaque object we're trying to sample
                    float opaqueDepth = texture2D(dm, uv).r;
                    if (opaqueDepth < gl_FragCoord.z) {
                        uv = unrefractedU + ((scale * min(lod / 2., 1.)) * aspectRatio) * d;
                        lod = lod > 4.0 ? lod : lod / 2.0;
                    }
		            #ifdef TEXTURE_LOD_EXT
                    O += gaussian(d) * texture2DLodEXT( sp, uv, lod);
                    #else
                    O += gaussian(d) * textureLod( sp, uv, lod);
                    #endif
                }
                return O / O.a;
            }`,[t]),n=new Je(`
            vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		        // Direction of refracted light.
		        vec3 refractionVector = refract( -v,  n, 1.0 / ior );
		        // Compute rotation-independant scaling of the model matrix.
		        vec3 modelScale;
		        modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		        modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		        modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		        // The thickness is specified in local space.
		        return normalize( refractionVector ) * thickness * modelScale;
	        }`),i=new Je(`
float applyIorToRoughness( float roughness, float ior ) {
		// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and
		// an IOR of 1.5 results in the default amount of microfacet refraction.
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	} `),r=new Je(`
vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior, vec2 transmissionSamplerSize, sampler2D transmissionSamplerMap, sampler2D transmissionDepthMap, vec2 unrefractedCoords, vec2 aspectRatio) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
        float lod = applyIorToRoughness(roughness, ior);

        return blur(transmissionSamplerMap, fragCoord, vec2(lod / (transmissionSamplerSize.x / 2.)), min(framebufferLod / 5.5, 8.5), transmissionDepthMap, unrefractedCoords, aspectRatio);
	}`,[i,e]),s=new Je(`
vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec2 transmissionSamplerSize, sampler2D transmissionSamplerMap, sampler2D transmissionDepthMap, vec2 aspectRatio ) {
        vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
        vec3 refractedRayExit = position + transmissionRay;

        // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.
        vec4 ndcPos = projMatrix * viewMatrix *  vec4( refractedRayExit, 1.0 );
        vec2 refractionCoords = ndcPos.xy / ndcPos.w;
        refractionCoords += 1.0;
        refractionCoords /= 2.0;

        vec4 ndcPosUnrefracted = projMatrix * viewMatrix * vec4(position, 1.0 );
        vec2 unrefractedCoords = ndcPosUnrefracted.xy / ndcPosUnrefracted.w;
        unrefractedCoords += 1.0;
        unrefractedCoords /= 2.0;

        // Sample framebuffer to get pixel the refracted ray hits.
        vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior, transmissionSamplerSize, transmissionSamplerMap, transmissionDepthMap, unrefractedCoords, aspectRatio );
        // Get the specular component.
        return vec4( ( 1.0 ) * transmittedLight.rgb, transmittedLight.a );
    }`,[r,n]);return{transmission:new Je(`
            vec3 transmission(float thickness, float ior, float roughness, vec2 transmissionSamplerSize, sampler2D transmissionSamplerMap, sampler2D transmissionDepthMap, vec2 aspectRatio, vec3 normal, float alpha, out float calpha) {
                vec3 v = vec3(0.);
                if (isOrthographic) {
                    v = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
                } else {
                    v = normalize(vWPosition - cameraPosition);
                }
                vec4 transmission = getIBLVolumeRefraction(vWNormal, -v, roughness,  vWPosition, modelMatrix, viewMatrix, projectionMatrix, ior, thickness, transmissionSamplerSize, transmissionSamplerMap, transmissionDepthMap, aspectRatio );
                float lalpha = alpha;

                 calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
                 accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
                 return transmission.rgb;
            }`,[s])}}();var Hv=class extends Ct{constructor(t,e){super("v3"),this.nodeType="CustomNormal",this.cnormal=t,this.alpha=e}generate(t,e){if(t.isShader("fragment")){let n=t.include(Hv.Nodes.customNormal),i=[];return i.push(this.cnormal.build(t,"v3")),i.push("normal"),i.push(this.alpha.build(t,"f")),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("CustomNormalNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.cnormal.copy(t.cnormal),this.alpha.copy(t.alpha),this}},Gv=Hv;Gv.Nodes=function(){return{customNormal:new Je(`vec3 customNormal(vec3 cnormal, vec3 norm, float alpha) {
				vec3 normal = packNormalToRGB( norm ).rgb;
				normal *= step( vec3(0.5), cnormal );

				accumAlpha += ( 1.0 - accumAlpha ) * alpha;

				return normal;
			}`)}}();var Wv=class extends Ct{constructor(t,e,n,i,r,s,a,o){super("v3"),this.nodeType="Gradient",this.gradientType=t,this.smooth=e,this.colors=n,this.steps=i,this.offset=r,this.morph=s,this.angle=a,this.alpha=o,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.isShader("fragment")){t.define("GRAD_MAX",10),t.require("uv"),t.requires.uv=[!0],t.addFragmentVariable(this.calpha,"float");let n=t.include(Wv.Nodes.gradient),i=[];return i.push(this.gradientType.build(t,"i")),i.push(this.smooth.build(t,"b")),i.push(this.colors.build(t,"v4[]")),i.push(this.steps.build(t,"f[]")),i.push(this.offset.build(t,"v2")),i.push(this.morph.build(t,"v2")),i.push(this.angle.build(t,"f")),i.push(this.alpha.build(t,"f")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("GradientNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.gradientType=t.gradientType.clone(),this.smooth=t.smooth.clone(),this.colors=t.colors.clone(),this.steps=t.steps.clone(),this.offset=t.offset.clone(),this.morph=t.morph.clone(),this.angle=t.angle.clone(),this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},jv=Wv;jv.Nodes=function(){return{gradient:new Je(`vec3 gradient(int gradientType, bool smoothed, vec4 colors[GRAD_MAX], float steps[GRAD_MAX], vec2 offset, vec2 morph, float angle, float alpha, out float calpha) {
				vec4 color = colors[0];
				vec2 m = morph / vUv.xy;
				vec2 rot = vec2( 0.5 + m.x, m.y );
				vec2 dt = vec2(
					cos( angle ) * rot.x - sin( angle ) * rot.y,
					sin( angle ) * rot.x + cos( angle ) * rot.y
				);
				vec2 pt = ( vUv - 0.5 + offset ) / 2.0 + dt / 2.0;
				float t = dot( pt, dt ) / dot( dt, dt );
				if ( gradientType == 1 ) {
					t = distance (
						( vUv + morph ) * 3.0,
						( vUv + offset ) + 1.0
					) + angle;
				} else if ( gradientType == 2 ) {
					float polar = atan(
						vUv.x + morph.x - 0.5 + offset.x,
						vUv.y + morph.y - 0.5 + offset.y
					) * -1.0;
					t = fract( ( angle / PI / -2.0 ) + 0.5 * ( polar / PI ) );
				}

				float p;
				if (smoothed) {
					for ( int i = 1; i < GRAD_MAX; i++ ) {
						p = clamp( ( t - steps[i-1] ) / ( steps[i] - steps[i-1] ), 0.0, 1.0 );
						color = mix(color, colors[i], smoothstep(0.0, 1.0, p));
					}

				} else {
					for ( int i = 1; i < GRAD_MAX; i++ ) {
						p = clamp( ( t - steps[i-1] ) / ( steps[i] - steps[i-1] ), 0.0, 1.0 );
						color = mix(color, colors[i], p);
					}
				}

				float lalpha = alpha * color.a;
				calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * lalpha;

				return color.xyz;
			}`)}}();var bu=(t=>(t.NOISE="noise",t.MAP="map",t))(bu||{}),qv=class extends Ct{constructor(t=new dt(0),e,n,i,r,s){super("v3"),this.nodeType="VertexDisplacement",this.displacementTypeIndex=t,this.intensity=e,this.movementOrTexture=n,Object.values(bu)[this.displacementTypeIndex.value]==="map"&&(this.mat=new Iv(this.movementOrTexture.value.matrix)),this.cropOrOffset=i,this.scale=r,this.noiseFunctionIndex=s}generate(t,e){if(t.isShader("vertex")){t.define("USE_LAYER_DISPLACE");let n,i=[];switch(i.push("displaced_position"),i.push("displaced_normal"),Object.values(bu)[this.displacementTypeIndex.value]){case"map":{n=t.include(qv.Nodes.map),i.push(this.movementOrTexture.getTexture(t,"t")),i.push("uv"),i.push(this.cropOrOffset.build(t,"f")),this.mat&&i.push(this.mat.build(t,"mat3"));break}case"noise":{let r=Object.values(Td)[this.noiseFunctionIndex.value],s=new Je(`vec3 orthogonal(vec3 v) {
							return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0) : vec3(0.0, -v.z, v.y));
						}`),a=new Je(`vec3 distorted(vec3 p, vec3 n, float scale, float intensity, vec3 offset, float neighbour_offset, float movement) {
							return p + n * ${r}((p + offset) * scale * 0.001 + neighbour_offset + (movement * 0.1)) * intensity;
						}`,[ni.simplex,ni.simplexFractal,ni.simplexAshima,ni.fbm,ni.perlin]),o=new Je(`vec3 vertexDisplacementNoise(vec3 position, vec3 normal, float scale, vec3 offset, float movement, float intensity, out vec3 displaced_normal) {
							vec3 displaced_position = distorted(position, normal, scale, intensity, offset, neighbor_offset, movement);
							vec3 tangent1 = orthogonal(normal);
							vec3 tangent2 = normalize(cross(normal, tangent1));

                            // TODO(Max): The distance to the neighbors was originally scaled by 0.1.
                            // This caused some small oval/circular visual artifacts in the lighting.
                            // For now, simply using neighbors further away betters the problem,
                            // but we should figure out the underlying cause when we have some time.
                            // Maybe its related to how we calculate the tangent and bitangent?
							vec3 nearby1 = position + tangent1;
							vec3 nearby2 = position + tangent2;
							vec3 distorted1 = distorted(nearby1, normal, scale, intensity, offset, neighbor_offset, movement);
							vec3 distorted2 = distorted(nearby2, normal, scale, intensity, offset, neighbor_offset, movement);
							displaced_normal = normalize(cross(distorted1 - displaced_position, distorted2 - displaced_position));
							return displaced_position;
						}`,[a,s]);n=t.include(o),i.push(this.scale.build(t,"f")),i.push(this.cropOrOffset.build(t,"v3")),i.push(this.movementOrTexture.build(t,"f"));break}}return i.push(this.intensity.build(t,"f")),i.push("displaced_normal"),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("VertexDisplacementNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){var e,n;return super.copy(t),this.noiseFunctionIndex=(e=t.noiseFunctionIndex)==null?void 0:e.clone(),this.scale=(n=t.scale)==null?void 0:n.clone(),this.cropOrOffset=t.cropOrOffset.clone(),this.intensity=t.intensity.clone(),this.movementOrTexture=t.movementOrTexture.clone(),this}},_u=qv;_u.Nodes=function(){let t=new Je(`vec3 orthogonal(vec3 v) {
				return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0) : vec3(0.0, -v.z, v.y));
			}`),e=new Je(`float displacementMapTexture(sampler2D tex, float crop, vec2 uv, mat3 mat, vec2 offset) {
				vec2 uvs = (mat * vec3(uv * 2.0 - 1.0, 1.0) / 2.0 + 0.5).xy + offset;
				vec4 tmp = texture2D(tex, uvs);
				vec3 col = tmp.rgb;
				if (crop > 0.5) {
					if ( uvs.x < 0.0 || uvs.x > 1.0 || uvs.y < 0.0 || uvs.y > 1.0 )  {
						return 0.0;
					}
				}
				return col.r;
			}`);return{map:new Je(`vec3 vertexDisplacementMap(vec3 position, vec3 normal, sampler2D tex, vec2 uv, float crop, mat3 mat, float intensity, out vec3 displaced_normal) {
				vec3 displaced_position = position + normal * displacementMapTexture(tex, crop, uv, mat, vec2(0.0)) * intensity;
				vec3 tangent1 = normalize(orthogonal(normal));
				vec3 tangent2 = normalize(cross(normal, tangent1));
				vec3 nearby1 = position + tangent1 * 0.1;
				vec3 nearby2 = position + tangent2 * 0.1;
				vec3 distorted1 = nearby1 + normal * displacementMapTexture(tex, crop, uv, mat, vec2(neighbor_offset)) * intensity;
				vec3 distorted2 = nearby2 + normal * displacementMapTexture(tex, crop, uv, mat, vec2(neighbor_offset)) * intensity;
				displaced_normal = normalize(cross(distorted1 - displaced_position, distorted2 - displaced_position));
				return displaced_position;
			}`,[t,e])}}();var Xv=class extends Ct{constructor(t=new lt,e=new lt,n=new lt,i=new lt,r=new lt,s=new lt,a=new lt,o=new lt,l=new lt,h=new lt,c=new lt,d=new lt){super("v3"),this.nodeType="Noise",this.scale=t,this.size=e,this.move=n,this.fA=i,this.fB=r,this.distortion=s,this.colorA=a,this.colorB=o,this.colorC=l,this.colorD=h,this.alpha=c,this.noiseType=d,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e,n,i,r){t.require("uv"),t.requires.uv=[!0],t.addFragmentVariable(this.calpha,"float");let s=Object.values(Td)[this.noiseType.value],a=new Je(`vec3 ${s}customNoise(float scale, vec3 size, float move, vec2 fA, vec2 fB, vec2 distortion, vec4 colorA, vec4 colorB, vec4 colorC, vec4 colorD, float alpha, out float calpha) {
                vec3 st = position / size;
				st /= scale;
				vec3 q = vec3(${s}(st),
							  ${s}(st + vec3(1.0)),
							  ${s}(st + vec3(1.0)));
				vec3 r = vec3(${s}(st + vec3(distortion, 1.0) * q + vec3(fA, 1.0) + move),
							  ${s}(st + vec3(distortion, 1.0) * q + vec3(fB, 1.0) + move), 
							  ${s}(st * q));
				float f = ${s}(st + r);
				vec4 color;
				color = mix(colorA, colorB, clamp((f * f) * 4.0, 0.0, 1.0));
				color = mix(color, colorC, clamp(length(q), 0.0, 1.0));
				color = mix(color, colorD, clamp(length(r.x), 0.0, 1.0));

                float lalpha = alpha * color.a;
                calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );

			    accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
				return clamp(color, 0.0, 1.0).rgb;
			}`,[ni.simplex,ni.simplexFractal,ni.simplexAshima,ni.fbm,ni.perlin]),o=t.include(a),l=[];return l.push(this.scale.build(t,"f")),l.push(this.size.build(t,"v3")),l.push(this.move.build(t,"f")),l.push(this.fA.build(t,"v2")),l.push(this.fB.build(t,"v2")),l.push(this.distortion.build(t,"v2")),l.push(this.colorA.build(t,"v4")),l.push(this.colorB.build(t,"v4")),l.push(this.colorC.build(t,"v4")),l.push(this.colorD.build(t,"v4")),l.push(this.alpha.build(t,"f")),l.push(this.calpha),t.format(o+"("+l.join(",")+")",this.getType(t),e)}copy(t){return super.copy(t),this.scale.copy(t.scale),this.size.copy(t.size),this.move.copy(t.move),this.fA.copy(t.fA),this.fB.copy(t.fB),this.distortion.copy(t.distortion),this.colorA.copy(t.colorA),this.colorB.copy(t.colorB),this.colorC.copy(t.colorC),this.colorD.copy(t.colorD),this.alpha.copy(t.alpha),this.calpha=t.calpha,this.noiseType.copy(t.noiseType),this}};Xv.numOctaves=5;var Om=class extends Ct{constructor(t=new lt,e=new lt,n=new lt,i=new lt){super("v3"),this.nodeType="Blend",this.a=t,this.b=e,this.alpha=n,this.mode=i}generate(t,e){if(t.isShader("fragment")){let n=[];return n.push(this.a.build(t,"c")),n.push(this.b.build(t,"c")),n.push(this.alpha.build(t,"f")),n.push(this.mode.build(t,"i")),t.format("spe_blend("+n.join(",")+")",this.getType(t),e)}else return console.warn("BlendNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.a.copy(t.a),this.b.copy(t.b),this.alpha.copy(t.alpha),this.mode.copy(t.mode),this}},Fa=class extends Ct{constructor(t,e,n,i,r,s,a,o,l,h,c,d){super("v3"),this.nodeType="Depth",this.gradientType=t,this.smooth=e,this.near=n,this.far=i,this.isVector=r,this.isWorldSpace=s,this.origin=a,this.direction=o,this.colors=l,this.steps=h,this.num=c,this.alpha=d,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){let n=`g${this.uuid.toString().replace(/-/g,"")}`,i=new Je(`vec3 ${n}_sdepth(float near, float far, vec3 origin, vec3 direction, vec4 colors[${n}_MAX_COLORS], float steps[${n}_MAX_COLORS], float alpha, out float calpha) {
               vec4 color = colors[0];
               #ifdef ${n}_IS_VECTOR
                   #ifdef ${n}_LINEAR
                       #ifdef ${n}_WORLDSPACE
                       float depth = vectorLinearWorldSpaceDepth(direction, origin, near, far);
                       #else
                       float depth = vectorLinearObjectSpaceDepth(direction, origin, near, far);
                       #endif
                   #else
                       #ifdef ${n}_WORLDSPACE
                           float depth = vectorSphericalWorldSpaceDepth(origin, near, far);
                       #else
                           float depth = vectorSphericalObjectSpaceDepth(origin, near, far);
                       #endif
                   #endif
               #else
                   float dist = length(vWPosition - cameraPosition);
			       float depth = ( dist - near ) / ( far - near );
               #endif


              float p;
              #ifdef ${n}_SMOOTH
				for ( int i = 1; i < ${n}_MAX_COLORS; i++ ) {
						p = clamp( ( depth - steps[i-1] ) / ( steps[i] - steps[i-1] ), 0.0, 1.0 );
						color = mix(color, colors[i], smoothstep(0.0, 1.0, p));
					}
              #else
                for ( int i = 1; i < ${n}_MAX_COLORS; i++ ) {
                   p = clamp(( depth - steps[i - 1] ) / ( steps[i] - steps[i - 1] ), 0.0, 1.0);
                   color = mix(color, colors[i], p);
                 }
              #endif

               float lalpha = alpha * color.a;
               calpha =  lalpha / clamp( lalpha + accumAlpha, 0.00001, 1.0 );

			   accumAlpha += ( 1.0 - accumAlpha ) * lalpha;
               return color.rgb;
			}`,[Fa.Nodes.vectorLinearWorldSpaceDepth,Fa.Nodes.vectorLinearObjectSpaceDepth,Fa.Nodes.vectorSphericalObjectSpaceDepth,Fa.Nodes.vectorSphericalWorldSpaceDepth]);if(t.isShader("fragment")){t.define(`${n}_MAX_COLORS`,this.num.value+1),this.smooth.value&&t.define(`${n}_SMOOTH`),this.isVector.value>.5&&t.define(`${n}_IS_VECTOR`),this.gradientType.value===0&&t.define(`${n}_LINEAR`),this.isWorldSpace.value>.5&&t.define(`${n}_WORLDSPACE`),t.require("worldPosition"),t.addFragmentVariable(this.calpha,"float");let r=t.include(i),s=[];return s.push(this.near.build(t,"f")),s.push(this.far.build(t,"f")),s.push(this.origin.build(t,"v3")),s.push(this.direction.build(t,"v3")),s.push(this.colors.build(t,"v4[]")),s.push(this.steps.build(t,"f[]")),s.push(this.alpha.build(t,"f")),s.push(this.calpha),t.format(r+"("+s.join(",")+")",this.getType(t),e)}else return console.warn("DepthNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.gradientType=t.gradientType.clone(),this.smooth=t.smooth.clone(),this.near=t.near.clone(),this.far=t.far.clone(),this.isVector=t.isVector.clone(),this.isWorldSpace=t.isWorldSpace.clone(),this.origin=t.origin.clone(),this.direction=t.direction.clone(),this.colors=t.colors.clone(),this.steps=t.steps.clone(),this.alpha=t.alpha.clone(),this.calpha=t.calpha,this}},Jv=Fa;Jv.Nodes=function(){let t=new Je(`float vectorLinearWorldSpaceDepth(vec3 direction, vec3 origin, float near, float far) {
               vec3 n = normalize(direction);
               float dist = (n.x*(vWPosition.x - origin.x) + n.y*(vWPosition.y - origin.y) + n.z*(vWPosition.z - origin.z));
               return ( dist - near ) / ( far - near );
            }`),e=new Je(`float vectorLinearObjectSpaceDepth(vec3 direction, vec3 origin, float near, float far) {
               vec3 n = normalize(direction);
               float dist = (n.x*(position.x - origin.x) + n.y*(position.y - origin.y) + n.z*(position.z - origin.z));
               return ( dist - near ) / ( far - near );
            }`),n=new Je(`float vectorSphericalWorldSpaceDepth(vec3 origin, float near, float far) {
               float dist = length(vWPosition - origin);
               return ( dist - near ) / ( far - near );
            }`),i=new Je(`float vectorSphericalObjectSpaceDepth(vec3 origin, float near, float far) {
               float dist = length(position - origin);
               return ( dist - near ) / ( far - near );
            }`);return{vectorLinearWorldSpaceDepth:t,vectorLinearObjectSpaceDepth:e,vectorSphericalWorldSpaceDepth:n,vectorSphericalObjectSpaceDepth:i}}();var $v=class extends Ct{constructor(t,e,n){super("v3"),this.nodeType="Matcap",this.texture=t,this.alpha=e,this.mode=n,this.calpha=`g${this.uuid.toString().replace(/-/g,"")}_calpha`}generate(t,e){if(t.isShader("fragment")){t.addFragmentVariable(this.calpha,"float");let n=t.include($v.Nodes.matcap);t.require("normal"),t.requires.normal=!0;let i=[];return i.push(this.texture.getTexture(t,"t")),i.push("normal"),i.push(this.alpha.build(t,"f")),i.push(this.mode.build(t,"i")),i.push(this.calpha),t.format(n+"("+i.join(",")+")",this.getType(t),e)}else return console.warn("MatcapNode is not compatible with "+t.shader+" shader."),t.format("vec3( 0.0 )",this.getType(t),e)}copy(t){return super.copy(t),this.texture=t.texture.clone(),this.alpha=t.alpha.clone(),this.mode=t.mode.clone(),this.calpha=t.calpha,this}},Yv=$v;Yv.Nodes=function(){return{matcap:new Je(`vec3 matcap(sampler2D matcapTex, vec3 normal, float alpha, int mode, out float calpha) {
                vec3 viewDir = normalize( vViewPosition );
                vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
                vec3 y = cross( viewDir, x );
                vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks
                vec4 matcapColor = texture2D( matcapTex, uv );

                calpha =  alpha / clamp( alpha + accumAlpha, 0.00001, 1.0 );
				accumAlpha += ( 1.0 - accumAlpha ) * alpha;
                
                return matcapColor.rgb;
            }
            `)}}();var Kr=class{constructor(t){this.id=2,this.layerCount=2,this.uuid=Mt.generateUUID(),this.needsUpdate=!1,this._material=t,this._layerNodes=[];let e=this._createLayer({id:0,type:"color"});this._material.color=e.color,this._material.alpha===void 0&&(this._material.alpha=new Fe(1));let n=new Fe(1),i=new dt(0);"shadingAlpha"in this._material&&"shadingBlend"in this._material&&(this._material.shadingAlpha=n,this._material.shadingBlend=i),this._layerNodes.push({id:0,type:"color",color:e.color,alpha:e.alpha,mode:e.mode}),this._layerNodes.push({id:1,type:"light",alpha:n,mode:i}),this.head=e.layer,this.head.next=new qt(1,void 0,{type:"light",alpha:n,mode:i}),this.attachLightNodes(this.getLightLayer())}get material(){return this._material}set material(t){var e;this._material=t;let n,i,r=this.head;for(;r!==void 0;){if(r.type==="light"){n=r.uniforms[`f${r.id}_alpha`],i=r.uniforms[`f${r.id}_mode`];break}r=r.next}"shadingAlpha"in this._material&&"shadingBlend"in this._material&&(this._material.shadingAlpha=n,this._material.shadingBlend=i),this.attachLightNodes((e=t.userData.layers)==null?void 0:e.getLightLayer()),this.blendColors(),this.blendAfterColors(),this.blendPositions()}getLayersOfType(t){let e=[],n=this.head;for(;n;)n.type===t&&e.push(n),n=n.next;return e}addLayer(t){var e;if(t.id=(e=t.id)!=null?e:++this.id,this.layerCount++,t.type==="light"){let r=this.createLightLayer(t);return this.uuid=Mt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),r}let n=this._createLayer(t),i=n.layer;if(this.head===void 0)this.head=i;else{let r=this.head;for(;r.next!=null;)r=r.next;r.next=i}return n.color&&this._layerNodes.push({id:i.id,type:"color",color:n.color,alpha:n.alpha,mode:n.mode}),n.position&&this._layerNodes.push({id:i.id,type:"position",position:n.position}),this.uuid=Mt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),i}addLayerBeforeAt(t,e){var n;let i=this.head;t.id=(n=t.id)!=null?n:++this.id,this.layerCount++;let r=this._createLayer(t),s=r.layer;s.next=e;let a=0;if(i===e)this.head=s,r.color&&this._layerNodes.splice(0,0,{id:s.id,type:"color",color:r.color,alpha:r.alpha,mode:r.mode}),r.position&&this._layerNodes.splice(0,0,{id:s.id,type:"position",position:r.position});else{for(a=1;(i==null?void 0:i.next)!==e;)i=i==null?void 0:i.next,a++;i.next=s,r.color&&this._layerNodes.splice(a,0,{id:s.id,type:"color",color:r.color,alpha:r.alpha,mode:r.mode}),r.position&&this._layerNodes.splice(a,0,{id:s.id,type:"position",position:r.position})}return this.uuid=Mt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),s}addLayerAt(t,e){var n;e.id=(n=e.id)!=null?n:++this.id,this.layerCount++;let i=this._createLayer(e),r=i.layer;if(i.color&&this._layerNodes.splice(t,0,{id:r.id,type:"color",color:i.color,alpha:i.alpha,mode:i.mode}),i.position&&this._layerNodes.splice(t,0,{id:r.id,type:"position",position:i.position}),t==0)r.next=this.head,this.head=r;else{let s=this.head,a=this.head.next;for(let o=0;o<t-1;o++)s=a,a=a.next;r.next=a,s.next=r}return this.uuid=Mt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),r}removeLayer(t){let e=this.head,n,i=0;if((e==null?void 0:e.id)==t)this.head=e.next;else for(i=1,n=e,e=e==null?void 0:e.next;e!=null;){if(e.id==t){n.next=e.next;break}i++,n=e,e=e.next}return this.cleanupChangedLayer(e),this.blendColors(),this.blendAfterColors(),this.blendPositions(),this.uuid=Mt.generateUUID(),this.layerCount--,i}changeLayer(t,e){let n,i=this.head,r;if((i==null?void 0:i.id)==t){let s=this._createLayer(ve({id:t,uuid:i.uuid},e));r=s.layer,r.next=i.next,this.head=r,s.color&&(this._layerNodes[0]={id:r.id,type:"color",color:s.color,alpha:s.alpha,mode:s.mode}),s.position&&(this._layerNodes[0]={id:r.id,type:"position",position:s.position}),r.uniforms[`f${t}_mode`].value=i.uniforms[`f${t}_mode`].value,r.uniforms[`f${t}_alpha`].value=i.uniforms[`f${t}_alpha`].value}else{n=i,i=i.next;let s=1;for(;i!=null;){if(i.id==t){let a=this._createLayer(ve({id:t,uuid:i.uuid},e));r=a.layer,n.next=r,r.next=i.next,a.color&&(this._layerNodes[s]={id:t,type:"color",color:a.color,alpha:a.alpha,mode:a.mode}),a.position&&(this._layerNodes[s]={id:t,type:"position",position:a.position}),r.uniforms[`f${t}_mode`].value=i.uniforms[`f${t}_mode`].value,r.uniforms[`f${t}_alpha`].value=i.uniforms[`f${t}_alpha`].value;break}n=i,i=i.next,s++}}return this.uuid=Mt.generateUUID(),this.blendColors(),this.blendAfterColors(),this.blendPositions(),r}getLayer(t){let e=this.head;for(;e!=null&&e.id!=t;)e=e.next;return e}getLayerByUuid(t){let e=this.head;for(;e!==void 0;){if(e.uuid===t)return e;e=e.next}}getLayers(){let t=[],e=this.head;for(;e!=null;)t.push(e),e=e.next;return t}getLayerPosition(t){let e=this.head,n=0;for(;e!==void 0&&e.id!=t;)n++,e=e.next;return n}getDefines(){}getBeforeProgram(){}getLightingProgram(){}getAfterProgram(){}getVarPrograms(){}getUniforms(){}moveLayer(t,e){let n,i=this.head,r;if(t==0)n=this.head,this.head=n.next;else{for(let a=0;a<t;a++)r=i,i=i.next;r.next=i.next,n=i}if(i=this.head,r=void 0,e==0)n.next=this.head,this.head=n;else{for(let a=0;a<e-1;a++)i=i.next;n.next=i==null?void 0:i.next,i.next=n}let s=this._layerNodes.splice(t,1)[0];this._layerNodes.splice(e,0,s),this.uuid=Mt.generateUUID(),this.blendColors(),this.blendAfterColors()}updateLayerUniform(){this.uuid=Mt.generateUUID(),this.blendColors(),this.blendAfterColors()}copy(t){this.needsUpdate=!1,this.layerCount=t.layerCount,this._layerNodes=[],this.layerCount=0,this.head=void 0,this.rebuildLayerNodes(this.head,t.head);let e=t.head,n=this.head;for(;e.next!=null;)this.rebuildLayerNodes(n,e.next),n=n.next,e=e.next;return this.id=t.id,this.uuid=t.uuid,this.blendColors(),this.blendAfterColors(),this.blendPositions(),this}createLightLayer(t){let e=new Fe(t.alpha),n=new dt(t.mode);this._material.shadingAlpha=e,this._material.shadingBlend=n,this._layerNodes.push({id:t.id,type:"light",alpha:e,mode:n});let i=new qt(t.id,void 0,{type:"light",alpha:e,mode:n});if(this.head===void 0)this.head=i;else{let r=this.head;for(;r.next!=null;)r=r.next;r.next=i}return this.attachLightNodes(this.getLightLayer()),i}rebuildLayerNodes(t,e,n=!1){if(e.type==="light"){let i=n?e.uniforms[`f${e.id}_alpha`]:new Fe(e.uniforms[`f${e.id}_alpha`].value),r=n?e.uniforms[`f${e.id}_mode`]:new dt(e.uniforms[`f${e.id}_mode`].value);this._material.shadingAlpha=i,this._material.shadingBlend=r,this._layerNodes.push({id:e.id,type:"light",alpha:i,mode:r}),this.head===void 0?this.head=new qt(e.id,e.uuid,{type:"light",alpha:i,mode:r}):t&&(t.next=new qt(e.id,e.uuid,{type:"light",alpha:i,mode:r})),this.attachLightNodes(e)}else{let i={type:e.type,id:e.id};for(let r in e.uniforms){let s=e.getName(r);if(!s)continue;let a=`f${e.id}_${s}`;if(Array.isArray(e.uniforms[a].value))i[s]=e.uniforms[a].value.map(o=>o.clone&&!n?o.clone():o);else{let o=e.uniforms[a].value;if(s==="transmissionDepthMap"){i[s]=o;continue}o!=null&&(i[s]=o.clone&&!n&&!o.isRenderTargetTexture?o.clone():o)}}this.addLayer(i)}}attachLightNodes(t){var e,n,i,r,s,a,o,l,h,c,d;let u={},p=this.getLightLayer();switch(this._material.userData.category){case"Lambert":u.emissive=new Zt((n=(e=t==null?void 0:t.getValue("emissive"))==null?void 0:e.clone())!=null?n:0);break;case"Phong":u.shininess=new Fe((i=t==null?void 0:t.getValue("shininess"))!=null?i:30),u.specular=new Zt((s=(r=t==null?void 0:t.getValue("specular"))==null?void 0:r.clone())!=null?s:1118481);break;case"Toon":u.shininess=new Fe((a=t==null?void 0:t.getValue("shininess"))!=null?a:30),u.specular=new Zt((l=(o=t==null?void 0:t.getValue("specular"))==null?void 0:o.clone())!=null?l:1118481);break;case"Physical":u.roughness=new Fe((h=t==null?void 0:t.getValue("roughness"))!=null?h:.3),u.metalness=new Fe((c=t==null?void 0:t.getValue("metalness"))!=null?c:0),u.reflectivity=new Fe((d=t==null?void 0:t.getValue("reflectivity"))!=null?d:.5);break}Object.keys(u).forEach(m=>{this._material[m]=u[m],p.uniforms[`f${p.id}_${m}`]=u[m]})}clone(t){return new Kr(t).copy(this)}toJSON(t){return{id:this.id,uuid:this.uuid,head:this.head.toJSON(t)}}fromJSON(t,e,n){let i=new qt(t.head.id,void 0,{type:t.head.type}).fromJSON(t.head,e),r=t.head.next,s=i;for(;r!=null;)s.next=new qt(r.id,void 0,{type:r.type}).fromJSON(r,e),r=r.next,s=s.next;this._layerNodes=[],this.head=void 0,this.rebuildLayerNodes(this.head,i,!0);let a=i;for(s=this.head;a.next!=null;)this.rebuildLayerNodes(s,a.next,!0),s=s.next,a=a.next;return this._material=n,this.id=t.id,this.uuid=t.uuid,this.blendColors(),this.blendAfterColors(),this.blendPositions(),this}getLightLayer(){var t;let e=this.head;for(;e!==void 0&&e.type!=="light";)e=(t=e.next)!=null?t:e;return e}dispose(){let t=this.head;for(this._layerNodes=[],this.layerCount=0;t!==void 0;)t.hasOwnProperty("dispose")===!0&&t.dispose(),t=t.next;this.head=void 0}_createLayer(t){var e,n,i,r,s,a,o,l,h,c,d,u,p,m,f,g,v,y,w,S,b,_,E,x,A,M,C,F,W,O,Z,X,j,H,N,I,V,B,k,$,ne,z,oe,ie,le,K,pe,G,J,ee,se,ce,fe,ge,_e,Oe,Ne,D,L,he,me,Te,Ce,Be,R,ye,Ee,xe,U,we,be,We,Le,ze,Se,Ue,ht,je,rn,dn;let Ht=t.type;switch(Ht){case"color":{let Ye=new Zt((e=t.color)!=null?e:5855577),nt=new Fe((n=t.alpha)!=null?n:1),Qe=new Nt("alpha / clamp(alpha + accumAlpha, 0.00001, 1.0 )","f");Qe.keywords.alpha=nt;let et=new dt((i=t.mode)!=null?i:0);return Ye.alpha=nt,{layer:new qt(t.id,t.uuid,{type:Ht,color:Ye,alpha:nt,calpha:Qe,mode:et}),color:Ye,alpha:Qe,mode:et}}case"texture":{let Ye=(r=t.texture)!=null?r:new Ls,nt=Ye.matrix;t.mat&&nt.copy(t.mat),Ye.needsUpdate=!0;let Qe=new Fe((s=t.crop)!=null?s:0),et=new dt((a=t.projection)!=null?a:0),ct=new dt((o=t.axis)!=null?o:0),vt=new dt((l=t.side)!=null?l:0),St=new Zn(t.size?new q(t.size[0],t.size[1]):new q(100,100)),P=new Fe((h=t.alpha)!=null?h:1),Y=new dt((c=t.mode)!=null?c:0),re=new ki(Ye),te=new Kn((d=t.textureSize)!=null?d:new T(Ye.image?Ye.image.width:0,Ye.image?Ye.image.height:0)),ue=new Nv(re,te,Qe,et,ct,vt,St,P,Y),ke=new Nt(ue.calpha,"f");return{layer:new qt(t.id,t.uuid,{type:Ht,texture:re,textureSize:te,crop:Qe,projection:et,axis:ct,side:vt,size:St,mat:ue.mat,alpha:P,calpha:ke,mode:Y}),color:ue,alpha:ke,mode:Y}}case"matcap":{let Ye=(u=t.texture)!=null?u:new Ls;Ye.needsUpdate=!0;let nt=new Fe((p=t.alpha)!=null?p:1),Qe=new ki(Ye),et=new dt((m=t.mode)!=null?m:0),ct=new Yv(Qe,nt,et),vt=new Nt(ct.calpha,"f");return{layer:new qt(t.id,t.uuid,{type:Ht,texture:Qe,alpha:nt,calpha:vt,mode:et}),color:ct,alpha:vt,mode:et}}case"fresnel":{let Ye=new Zt((f=t.color)!=null?f:16777215),nt=new Fe((g=t.bias)!=null?g:.1),Qe=new Fe((v=t.scale)!=null?v:1),et=new Fe((y=t.intensity)!=null?y:2),ct=new Fe((w=t.factor)!=null?w:1),vt=new Fe((S=t.alpha)!=null?S:1),St=new dt((b=t.mode)!=null?b:0),P=new Bv(Ye,nt,Qe,et,ct,vt,St),Y=new Nt(P.calpha,"f");return{layer:new qt(t.id,t.uuid,{type:Ht,color:Ye,bias:nt,scale:Qe,intensity:et,factor:ct,alpha:vt,calpha:Y,mode:St}),color:P,alpha:Y,mode:St}}case"rainbow":{let Ye=new Fe((_=t.filmThickness)!=null?_:30),nt=new Fe((E=t.movement)!=null?E:0),Qe=new Kn((x=t.wavelengths)!=null?x:new T(0,0,0)),et=new Fe((A=t.noiseStrength)!=null?A:0),ct=new Fe((M=t.noiseScale)!=null?M:1),vt=new Kn((C=t.offset)!=null?C:new T(0,0,0)),St=new Fe((F=t.alpha)!=null?F:1),P=new Uv(Ye,nt,Qe,et,ct,vt,St),Y=new Nt(P.calpha,"f"),re=new dt((W=t.mode)!=null?W:0);return{layer:new qt(t.id,t.uuid,{type:Ht,filmThickness:Ye,movement:nt,wavelengths:Qe,noiseStrength:et,noiseScale:ct,offset:vt,alpha:St,calpha:Y,mode:re}),color:P,alpha:Y,mode:re}}case"transmission":{let Ye=new Fe((O=t.thickness)!=null?O:10),nt=new Fe((Z=t.ior)!=null?Z:1.5),Qe=new Fe((X=t.roughness)!=null?X:.5),et=new Zn((j=t.transmissionSamplerSize)!=null?j:new q(2048,2048)),ct=(H=t.transmissionSamplerMap)!=null?H:new Ls,vt=(N=t.transmissionDepthMap)!=null?N:new Ls,St=new ki(ct),P=new ki(vt),Y=window.innerWidth,re=window.innerHeight,te=Y>=re?new Zn(re/Y,1):new Zn(1,Y/re),ue=new Fe((I=t.alpha)!=null?I:1),ke=new Vv(Ye,nt,Qe,et,St,P,te,ue),$e=new Nt(ke.calpha,"f"),Ze=new dt((V=t.mode)!=null?V:0);return{layer:new qt(t.id,t.uuid,{type:Ht,thickness:Ye,ior:nt,roughness:Qe,transmissionSamplerSize:et,transmissionSamplerMap:St,transmissionDepthMap:P,aspectRatio:te,alpha:ue,calpha:$e,mode:Ze}),color:ke,alpha:$e,mode:Ze}}case"depth":{let Ye=new dt((B=t.gradientType)!=null?B:0),nt=new Rm((k=t.smooth)!=null?k:!1),Qe=new Fe(($=t.near)!=null?$:50),et=new Fe((ne=t.far)!=null?ne:200),ct=new Fe((z=t.isVector)!=null?z:1),vt=new Fe((oe=t.isWorldSpace)!=null?oe:0),St=new Kn((ie=t.origin)!=null?ie:new T),P=new Kn((le=t.direction)!=null?le:new T),Y=new dt((K=t.num)!=null?K:0),re;t.colors?re=new pl(Y.value+1,t.colors):(re=new pl(Y.value+1,new at(0,0,0,1)),re.value[1]=new at(1,1,1,1));let te;t.steps?te=new Vi(Y.value+1,t.steps):(te=new Vi(Y.value+1,1),te.value[0]=0);let ue=new Fe((pe=t.alpha)!=null?pe:1),ke=new dt((G=t.mode)!=null?G:0),$e=new Jv(Ye,nt,Qe,et,ct,vt,St,P,re,te,Y,ue),Ze=new Nt($e.calpha,"f");return{layer:new qt(t.id,t.uuid,{type:Ht,gradientType:Ye,smooth:nt,near:Qe,far:et,isVector:ct,isWorldSpace:vt,origin:St,direction:P,colors:re,steps:te,num:Y,alpha:ue,calpha:Ze,mode:ke}),color:$e,alpha:Ze,mode:ke}}case"noise":{let Ye=new Fe((J=t.scale)!=null?J:1),nt=new Kn((ee=t.size)!=null?ee:new T(100,100,100)),Qe=new Fe((se=t.move)!=null?se:1),et=new Zn((ce=t.fA)!=null?ce:new q(1.7,9.2)),ct=new Zn((fe=t.fB)!=null?fe:new q(8.3,2.8)),vt=new Zn((ge=t.distortion)!=null?ge:new q(1,1)),St=new za(t.colorA),P=new za(t.colorB),Y=new za(t.colorC),re=new za(t.colorD),te=new Fe((_e=t.alpha)!=null?_e:1),ue=new dt((Oe=t.mode)!=null?Oe:0),ke=new dt((Ne=t.noiseType)!=null?Ne:0),$e=new Xv(Ye,nt,Qe,et,ct,vt,St,P,Y,re,te,ke),Ze=new Nt($e.calpha,"f");return{layer:new qt(t.id,t.uuid,{type:Ht,scale:Ye,size:nt,move:Qe,fA:et,fB:ct,distortion:vt,colorA:St,colorB:P,colorC:Y,colorD:re,alpha:te,calpha:Ze,mode:ue,noiseType:ke}),color:$e,alpha:Ze,mode:ue}}case"normal":{let Ye=new Kn((D=t.cnormal)!=null?D:new T(1,1,1)),nt=new Fe((L=t.alpha)!=null?L:1),Qe=new dt((he=t.mode)!=null?he:0),et=new Gv(Ye,nt),ct=new Nt("alpha / clamp(alpha + accumAlpha, 0.00001, 1.0 )","f");return ct.keywords.alpha=nt,{layer:new qt(t.id,t.uuid,{type:Ht,cnormal:Ye,alpha:nt,calpha:ct,mode:Qe}),color:et,alpha:ct,mode:Qe}}case"gradient":{let Ye=new dt((me=t.gradientType)!=null?me:0),nt=new Rm((Te=t.smooth)!=null?Te:!1),Qe;t.colors?Qe=new pl(t.colors.length,t.colors):(Qe=new pl(10,new at(0,0,0,1)),Qe.value[1]=new at(1,1,1,1));let et;t.steps?et=new Vi(t.steps.length,t.steps):(et=new Vi(10,1),et.value[0]=0);let ct=new Zn((Ce=t.offset)!=null?Ce:new q(0,0)),vt=new Zn((Be=t.morph)!=null?Be:new q(0,0)),St=new Fe((R=t.angle)!=null?R:0),P=new Fe((ye=t.alpha)!=null?ye:1),Y=new dt((Ee=t.mode)!=null?Ee:0),re=new jv(Ye,nt,Qe,et,ct,vt,St,P),te=new Nt(re.calpha,"f");return{layer:new qt(t.id,t.uuid,{type:Ht,gradientType:Ye,smooth:nt,colors:Qe,steps:et,offset:ct,morph:vt,angle:St,alpha:P,calpha:te,mode:Y}),color:re,alpha:te,mode:Y}}case"displace":{let Ye=new dt((xe=t.displacementType)!=null?xe:0);if(Ye.value===0){let nt=new Kn((U=t.offset)!=null?U:new T(0,0,0)),Qe=new Fe((we=t.scale)!=null?we:10),et=new Fe((be=t.intensity)!=null?be:8),ct=new Fe((We=t.movement)!=null?We:1),vt=new Fe((Le=t.alpha)!=null?Le:1),St=new dt((ze=t.mode)!=null?ze:0),P=new dt((Se=t.noiseType)!=null?Se:0),Y=new _u(Ye,et,ct,nt,Qe,P);return{layer:new qt(t.id,t.uuid,{displacementType:Ye,type:Ht,offset:nt,scale:Qe,intensity:et,movement:ct,alpha:vt,mode:St,noiseType:P}),position:Y}}else if(Ye.value===1){let nt=(Ue=t.texture)!=null?Ue:new Ls,Qe=nt.matrix;t.mat&&Qe.copy(t.mat),nt.needsUpdate=!0;let et=new Fe((ht=t.intensity)!=null?ht:8),ct=new ki(nt),vt=new Fe((je=t.crop)!=null?je:0),St=new Fe((rn=t.alpha)!=null?rn:1),P=new dt((dn=t.mode)!=null?dn:0),Y=new _u(Ye,et,ct,vt);return{layer:new qt(t.id,t.uuid,{displacementType:Ye,type:Ht,intensity:et,texture:ct,crop:vt,mat:Y.mat,alpha:St,mode:P}),position:Y}}return{}}}return{}}blendColors(){let t=this._layerNodes.findIndex(n=>n.type==="color"),e=this._layerNodes.findIndex(n=>n.type==="light");if(t!==-1&&t<e){let n=this._layerNodes[t].color;for(let i=t+1;i<e;++i){let r=this._layerNodes[i];r.type==="color"&&(n=new Om(n,r.color,r.alpha,r.mode))}this._material.color=n}else this._material.color=void 0}blendAfterColors(){let t=new Nt("outgoingLight","f"),e=this._layerNodes.findIndex(n=>n.type==="light");if(this._layerNodes.length>e+1){for(let n=e+1;n<this._layerNodes.length;++n){let i=this._layerNodes[n];i.type==="color"&&(t=new Om(t,i.color,i.alpha,i.mode))}"afterColor"in this._material&&(this._material.afterColor=t)}else"afterColor"in this._material&&(this._material.afterColor=void 0)}blendPositions(){let t=this._layerNodes.filter(e=>e.type==="position");if(t.length>0){let e=t[0].position;for(let n=1;n<t.length;++n)t[n]&&(e=new Ti(e,t[n].position,Ti.ADD),e=new Ti(e,new Fe(.5).setReadonly(!0),Ti.MUL));this._material.position=e}else this._material.position=void 0}cleanupChangedLayer(t){switch(this._layerNodes=this._layerNodes.filter(e=>e.id!==t.id),t.type){case"displace":{this.blendPositions();break}default:{this.blendColors(),this.blendAfterColors();break}}}},pa=class extends kn{constructor(t,e,n){super(n),this.isNodeMaterial=!0,this.type="NodeMaterial",this.wireframeLinecap="",this.wireframeLinejoin="",this.uniformsBackup={},this.userData={type:"",category:"",nodeType:""},this.fog=!0,this.vertex=t!=null?t:new Dm(new Dn(Dn.PROJECTION)),this.fragment=e!=null?e:new Dm(new Zt(5855577)),this.updaters=[],this.isDetached=!0,this.dithering=!0,this.onBeforeCompile=this._onBeforeCompile}getDefines(){return this.defines}getUniforms(){return this.uniforms}getVertexShader(){return this.vertexShader}getFragmentShader(){return this.fragmentShader}_onBeforeCompile(t,e){this.build({renderer:e}),t.defines=this.defines,t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.extensionDerivatives=this.extensions.derivatives===!0,t.extensionFragDepth=this.extensions.fragDepth===!0,t.extensionDrawBuffers=this.extensions.drawBuffers===!0,t.extensionShaderTextureLOD=this.extensions.shaderTextureLOD===!0}_getLayerStack(t){let e=new Kr(this);return t&&(async()=>{for(;t.image===void 0;)await new Promise(n=>requestAnimationFrame(n));e.addLayerAt(1,{type:"texture",texture:t}),this.dispose()})(),e}clampUniformsForPreview(t,e){let n=(i,r,s)=>Math.min(Math.max(i,r),s);if(this.userData.layers){for(let i of this.userData.layers.getLayers())if(i.type=="displace"){this.uniformsBackup[`f${i.id}_intensity`]=i.uniforms[`f${i.id}_intensity`].value;let r=n(i.uniforms[`f${i.id}_intensity`].value,t,e);i.uniforms[`f${i.id}_intensity`].value=r}}}restoreClampedUniforms(){if(this.userData.layers)for(let t of this.userData.layers.getLayers())t.type=="displace"&&(t.uniforms[`f${t.id}_intensity`].value=this.uniformsBackup[`f${t.id}_intensity`])}customProgramCacheKey(){return this.getHash()}updateFrame(t){for(let e=0;e<this.updaters.length;++e)t.updateNode(this.updaters[e])}build(t){var e;t=t!=null?t:{};let n=(e=t.builder)!=null?e:new KD;return n.setMaterial(this,t.renderer),n.build(this.vertex,this.fragment),this.vertexShader=n.getCode("vertex"),this.fragmentShader=n.getCode("fragment"),this.defines=n.defines,this.uniforms=n.uniforms,this.extensions=n.extensions,this.updaters=n.updaters,this.fog=n.requires.fog,this.lights=n.requires.lights,this.transparent=n.requires.transparent||this.blending>Ir,this}getHash(){let t="{";return t+='"vertex":'+this.vertex.getHash()+",",t+='"fragment":'+this.fragment.getHash(),t+="}",t}copy(t){let e=this.uuid;for(let n in t)this[n]=t[n];return this.uuid=e,t.userData!==void 0&&(this.userData=JSON.parse(JSON.stringify(t.userData))),this}toJSON(t){let e=this.userData.layers;this.userData.layers=void 0;let n=super.toJSON(t);return n.type="ShaderMaterial",n.userData={type:this.userData.type,category:this.userData.category,nodeType:this.type,layers:e.toJSON(t)},n.vertex=this.vertex.toJSON(t).uuid,n.fragment=this.fragment.toJSON(t).uuid,delete n.vertexShader,delete n.fragmentShader,delete n.color,delete n.shininess,delete n.specular,delete n.roughness,delete n.metalness,delete n.uniforms,t&&!t.materials[this.uuid]&&(t.materials[this.uuid]=n),this.userData.layers=e,n}fromJSON(t,e){var n;this.defines=(n=t.defines)!=null?n:{},this.depthFunc=t.depthFunc,this.depthWrite=t.depthWrite,this.side=t.side!==void 0?t.side:kr,this.transparent=t.transparent,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.wireframe=t.wireframe,this.userData.layers.fromJSON(t.userData.layers,e,this)}get penumbraSizeNode(){return this.fragment.penumbraSize}set penumbraSizeNode(t){this.fragment.penumbraSize=t}};Object.defineProperties(pa.prototype,{properties:{get:function(){return this.fragment.properties}},needsUpdate:{set:function(t){t===!0&&this.version++,this.needsCompile=t},get:function(){return this.needsCompile}}});var eR=class extends lt{constructor(){super("basic"),this.nodeType="Basic",this.color=new Zt(5855577)}generate(t){let e;if(t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ea.merge([Me.fog])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#if defined( USE_LAYER_DISPLACE )
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <begin_vertex>
				#endif /* !USE_LAYER_DISPLACE */
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","	vNormal = transformedNormal;","#endif"),i.push("#include <project_vertex>","#include <fog_vertex>","#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","#include <worldpos_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{this.color===void 0&&(this.color=new Zt(5855577)),this.color.analyze(t,{slot:"color"}),this.alpha&&this.alpha.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"});let n=this.color.flow(t,"c",{slot:"color"}),i=this.alpha?this.alpha.flow(t,"f"):void 0,r=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0;t.requires.transparent=i!==void 0,t.addParsCode(["varying vec3 vWPosition;","#include <fog_pars_fragment>","#include <dithering_pars_fragment>","varying vec3 vViewPosition;","#include <normal_pars_fragment>"].join(`
`));let s=["#include <normal_fragment_begin>",n.code];i&&s.push(i.code,"#ifdef ALPHATEST"," if ( "+i.result+" <= ALPHATEST ) discard;","#endif"),r?s.push(r.code,`vec3 outgoingLight = ${n.result};`,`vec3 finalColor = spe_blend(outgoingLight, ${r.result}, 1.0, SPE_BLENDING_NORMAL);`):s.push(`vec3 finalColor = ${n.result};`),i?s.push(`gl_FragColor = vec4( finalColor, accumAlpha * ${i.result} );`):s.push("gl_FragColor = vec4("+n.result+", 1.0 );"),s.push("#include <fog_fragment>","#include <dithering_fragment>"),e=s.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),t.position&&(this.position=t.position.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},tR=class extends pa{constructor(t=new eR,e){super(t,t,e),this.type="BasicNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}},Ji=class extends tR{constructor(t,e,n){super(e,t),this.userData.type="BasicMaterial",this.userData.category="Basic",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof Kr){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new Ji(void 0,i);return r.fromJSON(e,n),r}static fromMaterial(t){let e=new Ji(t.map?{map:t.map}:{}),n=e.fragment;return n.color.value.copy(t.color),n.alpha.value=t.opacity,e}dispose(){super.dispose()}},nR=class extends lt{constructor(){super("phong"),this.nodeType="Phong",this.color=new Zt(5855577),this.specular=new Zt(1118481),this.shininess=new Fe(30),this.penumbraSize=new Vi(5,.5),this.shadingAlpha=new Fe(1),this.shadingBlend=new dt(0)}build(t){let e;if(t.define("PHONG"),t.requires.lights=!0,t.extensions.derivatives=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ea.merge([Me.fog,Me.lights])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <defaultnormal_vertex>
				#endif


				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#ifdef USE_LAYER_DISPLACE
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <begin_vertex>
				#endif
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("	#include <project_vertex>","	#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","	#include <worldpos_vertex>","	#include <shadowmap_vertex>","	#include <fog_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize}),this.color===void 0&&(this.color=new Zt(5855577)),this.color.analyze(t,{slot:"color"}),this.specular.analyze(t),this.shininess.analyze(t),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t);let n=this.color.flow(t,"c",{slot:"color"}),i=this.specular.flow(t,"c"),r=this.shininess.flow(t,"f"),s=this.shadingAlpha.flow(t,"f"),a=this.shadingBlend.flow(t,"i"),o=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,l=this.alpha?this.alpha.flow(t,"f"):void 0;t.requires.transparent=l!==void 0,t.addParsCode(["varying vec3 vWPosition;","uniform vec3 emissive;",`uniform float penumbraSize[${5}];`,"#include <normal_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <lights_phong_pars_fragment>","#include <shadowmap_pars_fragment>","#include <dithering_pars_fragment>"].join(`
`));let h=["#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx,viewdy));
				if (dot(normal, faceNormal) < 0.0) {
					normal *= -1.0;
				}
				`,"	BlinnPhongMaterial material;"];h.push(n.code,"	vec3 diffuseColor = "+n.result+";","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","	vec3 totalEmissiveRadiance = emissive;",i.code,"	vec3 specular = "+i.result+";",r.code,"	float shininess = max( 0.0001, "+r.result+" );","	float specularStrength = 1.0;"),l&&h.push(l.code,"#ifdef ALPHATEST","if ( "+l.result+" <= ALPHATEST ) discard;","#endif"),h.push("material.diffuseColor = diffuseColor;"),h.push("material.specularColor = specular;","material.specularShininess = shininess;","material.specularStrength = specularStrength;","#include <lights_fragment_begin>","#include <lights_fragment_end>"),h.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;"),h.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${s.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${s.result}, ${a.result} );
				}
				`),o&&h.push(o.code,`outgoingLight = spe_blend(outgoingLight, ${o.result}, 1.0, SPE_BLENDING_NORMAL);`),l?h.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${l.result} );`):h.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),h.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=h.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),this.specular=t.specular.clone(),this.shininess=t.shininess.clone(),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},iR=class extends pa{constructor(t=new nR,e){super(t,t,e),this.type="PhongNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get specular(){return this.fragment.specular}set specular(t){this.fragment.specular=t}get shininess(){return this.fragment.shininess}set shininess(t){this.fragment.shininess=t}},jr=class extends iR{constructor(t,e,n){super(e,t),this.userData.type="PhongMaterial",this.userData.category="Phong",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof Kr){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new jr(void 0,i);return r.fromJSON(e,n),r}static fromMaterial(t){let e=new jr(t.map?{map:t.map}:{}),n=e.fragment;return n.color.value.copy(t.color),n.alpha.value=t.opacity,e}dispose(){super.dispose()}},rR=class extends lt{constructor(){super("lambert"),this.nodeType="Lambert",this.color=new Zt(5855577),this.emissive=new Zt(0),this.emissiveIntensity=new Fe(1),this.penumbraSize=new Vi(5,.5),this.shadingAlpha=new Fe(1),this.shadingBlend=new dt(0)}build(t){let e;if(t.define("LAMBERT"),t.requires.lights=!0,t.extensions.derivatives=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ea.merge([Me.fog,Me.lights])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","varying vec3 vLightFront;","varying vec3 vIndirectFront;","#ifndef DOUBLE_SIDED","   #define DOUBLE_SIDED","#endif","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","	varying vec3 vIndirectBack;","#endif","#include <bsdfs>","#include <lights_pars_begin>","#include <color_pars_vertex>","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#ifdef USE_LAYER_DISPLACE
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <begin_vertex>
				#endif
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("	#include <project_vertex>","	#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","	#include <worldpos_vertex>",`
					vec3 diffuse = vec3( 1.0 );
					GeometricContext geometry;
					geometry.position = mvPosition.xyz;
					geometry.normal = normalize( transformedNormal );
					geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
					GeometricContext backGeometry;
					backGeometry.position = geometry.position;
					backGeometry.normal = -geometry.normal;
					backGeometry.viewDir = geometry.viewDir;
					vLightFront = vec3( 0.0 );
					vIndirectFront = vec3( 0.0 );
					#ifdef DOUBLE_SIDED
						vLightBack = vec3( 0.0 );
						vIndirectBack = vec3( 0.0 );
					#endif
					IncidentLight directLight;
					float dotNL;
					vec3 directLightColor_Diffuse;
					vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
					vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
					#ifdef DOUBLE_SIDED
						vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
						vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
					#endif
					#if NUM_POINT_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
							getPointLightInfo( pointLights[ i ], geometry, directLight );
							dotNL = dot( geometry.normal, directLight.direction );
							directLightColor_Diffuse = directLight.color;
							vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
							#ifdef DOUBLE_SIDED
								vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
							#endif
						}
						#pragma unroll_loop_end
					#endif
					#if NUM_SPOT_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
							getSpotLightInfo( spotLights[ i ], geometry, directLight );
							dotNL = dot( geometry.normal, directLight.direction );
							directLightColor_Diffuse = directLight.color;
							vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
							#ifdef DOUBLE_SIDED
								vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
							#endif
						}
						#pragma unroll_loop_end
					#endif
					#if NUM_DIR_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
							getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
							dotNL = dot( geometry.normal, directLight.direction );
							directLightColor_Diffuse = directLight.color;
							vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
							#ifdef DOUBLE_SIDED
								vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
							#endif
						}
						#pragma unroll_loop_end
					#endif
					#if NUM_HEMI_LIGHTS > 0
						#pragma unroll_loop_start
						for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
							vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
							#ifdef DOUBLE_SIDED
								vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
							#endif
						}
						#pragma unroll_loop_end
					#endif
				`,"	#include <shadowmap_vertex>","	#include <fog_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize}),this.color===void 0&&(this.color=new Zt(5855577)),this.color.analyze(t,{slot:"color"}),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t);let n=this.color.flow(t,"c",{slot:"color"}),i=this.emissive.flow(t,"c",{slot:"emissive"}),r=this.emissiveIntensity.flow(t,"f",{slot:"emissive"}),s=this.shadingAlpha.flow(t,"f"),a=this.shadingBlend.flow(t,"i"),o=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,l=this.alpha?this.alpha.flow(t,"f"):void 0;t.requires.transparent=l!==void 0,t.addParsCode([`uniform float penumbraSize[${5}];`,"varying vec3 vViewPosition;","varying vec3 vWPosition;","varying vec3 vLightFront;","varying vec3 vIndirectFront;","#ifndef DOUBLE_SIDED","   #define DOUBLE_SIDED","#endif","#include <normal_pars_fragment>","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","	varying vec3 vIndirectBack;","#endif","#include <bsdfs>","#include <lights_pars_begin>","#include <fog_pars_fragment>","#include <shadowmap_pars_fragment>","#include <shadowmask_pars_fragment>","#include <clipping_planes_pars_fragment>","#include <dithering_pars_fragment>"].join(`
`));let h=["#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx, viewdy));
				bool isFrontFacing = (dot(normal, faceNormal) >= 0.0);
				`,"#include <clipping_planes_fragment>"];h.push(n.code,"vec3 diffuseColor = "+n.result+";","ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );"),l&&h.push(l.code,"#ifdef ALPHATEST","if ( "+l.result+" <= ALPHATEST ) discard;","#endif"),h.push("#ifdef DOUBLE_SIDED","	reflectedLight.indirectDiffuse += ( isFrontFacing ) ? vIndirectFront : vIndirectBack;","#else","	reflectedLight.indirectDiffuse += vIndirectFront;","#endif","#include <lightmap_fragment>","reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );","#ifdef DOUBLE_SIDED","	reflectedLight.directDiffuse = ( isFrontFacing ) ? vLightFront : vLightBack;","#else","	reflectedLight.directDiffuse = vLightFront;","#endif","reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();"),i&&h.push(i.code,"reflectedLight.directDiffuse += "+i.result+" * "+r.result+";"),h.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;"),h.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${s.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${s.result}, ${a.result} );
				}
				`),o&&h.push(o.code,`outgoingLight = spe_blend(outgoingLight, ${o.result}, 1.0, SPE_BLENDING_NORMAL);`),l?h.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${l.result} );`):h.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),h.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=h.join(`
`)}return e}copy(t){return super.copy(t),this.emissiveIntensity=t.emissiveIntensity.clone(),t.color&&(this.color=t.color.clone()),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),t.emissive&&(this.emissive=t.emissive.clone()),this}},sR=class extends pa{constructor(t=new rR,e){super(t,t,e),this.type="LambertNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get emissive(){return this.fragment.emissive}set emissive(t){this.fragment.emissive=t}get emissiveIntensity(){return this.fragment.emissiveIntensity}set emissiveIntensity(t){this.fragment.emissiveIntensity=t}},Zv=class extends sR{constructor(t,e,n){super(e,t),this.userData.type="LambertMaterial",this.userData.category="Lambert",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof Kr){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new Zv(void 0,i);return r.fromJSON(e,n),r}dispose(){super.dispose()}},aR=class extends lt{constructor(){super("toon"),this.nodeType="Toon",this.color=new Zt(5855577),this.specular=new Zt(1118481),this.shininess=new Fe(30),this.penumbraSize=new Vi(5,.5),this.shadingAlpha=new Fe(1),this.shadingBlend=new dt(0)}build(t){let e;if(t.define("TOON"),t.requires.lights=!0,t.extensions.derivatives=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ea.merge([Me.fog,Me.lights])),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#ifdef USE_LAYER_DISPLACE
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#ifndef USE_LAYER_DISPLACE
					#include <begin_vertex>
				#endif
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("	#include <project_vertex>","	#include <fog_vertex>","	#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","	#include <worldpos_vertex>","	#include <shadowmap_vertex>","	#include <fog_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize}),this.color===void 0&&(this.color=new Zt(5855577)),this.color.analyze(t,{slot:"color"}),this.specular.analyze(t),this.shininess.analyze(t),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t);let n=this.color.flow(t,"c",{slot:"color"}),i=this.specular.flow(t,"c"),r=this.shininess.flow(t,"f"),s=this.shadingAlpha.flow(t,"f"),a=this.shadingBlend.flow(t,"i"),o=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,l=this.alpha?this.alpha.flow(t,"f"):void 0;t.requires.transparent=l!==void 0,t.addParsCode([`uniform float penumbraSize[${5}];`,"varying vec3 vWPosition;","#include <normal_pars_fragment>","#include <gradientmap_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <dithering_pars_fragment>",`
					varying vec3 vViewPosition;
					struct ToonMaterial {
						vec3	diffuseColor;
						vec3	specularColor;
						float	specularShininess;
						float	specularStrength;
					};
					void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
						vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
			
						reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
						reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
					}
					void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
						reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
					}
					#define RE_Direct				RE_Direct_Toon
					#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
					#define Material_LightProbeLOD( material )	(0)
					`,"#include <shadowmap_pars_fragment>","#include <bumpmap_pars_fragment>","#include <normalmap_pars_fragment>"].join(`
`));let h=["#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx,viewdy));
				if (dot(normal, faceNormal) < 0.0) {
					normal *= -1.0;
				}
				`,"	ToonMaterial material;"];h.push(n.code,"	vec3 diffuseColor = "+n.result+";","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );",i.code,"	vec3 specular = "+i.result+";",r.code,"	float shininess = max( 0.0001, "+r.result+" );","	float specularStrength = 1.0;"),l&&h.push(l.code,"#ifdef ALPHATEST","if ( "+l.result+" <= ALPHATEST ) discard;","#endif"),h.push("material.diffuseColor = diffuseColor;"),h.push("material.specularColor = specular;","material.specularShininess = shininess;","material.specularStrength = specularStrength;","#include <lights_fragment_begin>","#include <lights_fragment_end>"),h.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular;"),h.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${s.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${s.result}, ${a.result} );
				}
				`),o&&h.push(o.code,`outgoingLight = spe_blend(outgoingLight, ${o.result}, 1.0, SPE_BLENDING_NORMAL);`),l?h.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${l.result} );`):h.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),h.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=h.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),this.specular=t.specular.clone(),this.shininess=t.shininess.clone(),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},oR=class extends pa{constructor(t=new aR,e){super(t,t,e),this.type="ToonNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get specular(){return this.fragment.specular}set specular(t){this.fragment.specular=t}get shininess(){return this.fragment.shininess}set shininess(t){this.fragment.shininess=t}},Kv=class extends oR{constructor(t,e,n){super(e,t),this.userData.type="ToonMaterial",this.userData.category="Toon",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof Kr){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new Kv(void 0,i);return r.fromJSON(e,n),r}dispose(){super.dispose()}},lR=class extends lt{constructor(){super("standard"),this.nodeType="Standard",this.color=new Zt(5855577),this.roughness=new Fe(.3),this.metalness=new Fe(0),this.reflectivity=new Fe(.5),this.penumbraSize=new Vi(5,.5),this.shadingAlpha=new Fe(1),this.shadingBlend=new dt(0)}build(t){let e;if(t.define("STANDARD"),t.requires.lights=!0,t.extensions.derivatives=!0,t.extensions.shaderTextureLOD=!0,t.isShader("vertex")){let n=this.position?this.position.analyzeAndFlow(t,"v3",{cache:"position"}):void 0;t.mergeUniform(ea.merge([Me.fog,Me.lights])),Me.LTC_1&&(t.uniforms.ltc_1={value:void 0},t.uniforms.ltc_2={value:void 0}),t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;","#include <fog_pars_vertex>","#include <normal_pars_vertex>","#include <shadowmap_pars_vertex>","#include <clipping_planes_pars_vertex>"].join(`
`));let i=["#include <beginnormal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <defaultnormal_vertex>
				#endif

				vec3 displaced_position = position;
				vec3 displaced_normal = normal;

				#if defined( USE_LAYER_DISPLACE )
					vec3 transformed;
					vec3 transformedNormal;
				#endif
				`,"#include <normal_vertex>",`
				#if !defined( USE_LAYER_DISPLACE )
					#include <begin_vertex>
				#endif /* !USE_LAYER_DISPLACE */
				`];n&&i.push(n.code,n.result?"displaced_position = "+n.result+";":""),i.push("transformed = displaced_position;","transformedNormal = normalMatrix * displaced_normal;","#ifndef FLAT_SHADED","    vNormal = transformedNormal;","#endif"),i.push("#include <project_vertex>","#include <fog_vertex>","#include <clipping_planes_vertex>","	vViewPosition = - mvPosition.xyz;","#include <worldpos_vertex>","#include <shadowmap_vertex>"),i.push("vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"),e=i.join(`
`)}else{t.mergeUniform({penumbraSize:this.penumbraSize});let n={gamma:!0};this.color===void 0&&(this.color=new Zt(5855577)),this.color.analyze(t,{slot:"color",context:n}),this.roughness.analyze(t),this.metalness.analyze(t),this.shadingAlpha.analyze(t),this.shadingBlend.analyze(t),this.afterColor&&this.afterColor.analyze(t,{slot:"afterColor"}),this.alpha&&this.alpha.analyze(t),this.reflectivity&&this.reflectivity.analyze(t);let i=this.color.flow(t,"c",{slot:"color",context:n}),r=this.roughness.flow(t,"f"),s=this.metalness.flow(t,"f"),a=this.shadingAlpha.flow(t,"f"),o=this.shadingBlend.flow(t,"i"),l=this.afterColor?this.afterColor.flow(t,"c",{slot:"afterColor"}):void 0,h=this.alpha?this.alpha.flow(t,"f"):void 0,c=this.reflectivity?this.reflectivity.flow(t,"f"):void 0;t.requires.transparent=h!==void 0,t.addParsCode(["varying vec3 vViewPosition;","varying vec3 vWPosition;",`uniform float penumbraSize[${5}];`,"#include <normal_pars_fragment>","#include <dithering_pars_fragment>","#include <fog_pars_fragment>","#include <bsdfs>","#include <lights_pars_begin>","#include <lights_physical_pars_fragment>","#include <shadowmap_pars_fragment>"].join(`
`));let d=["#include <clipping_planes_fragment>","	#include <normal_fragment_begin>",`
				// NOTE: gl_FrontFacing alternative using face normal estimation.
				vec3 viewdx = dFdx(vViewPosition);
				vec3 viewdy = dFdy(vViewPosition);
				vec3 faceNormal = normalize(cross(viewdx,viewdy));
				if (dot(normal, faceNormal) < 0.0) {
					normal *= -1.0;
				}
				`,"	PhysicalMaterial material;","	material.diffuseColor = vec3( 1.0 );"];d.push(i.code,"	vec3 diffuseColor = "+i.result+";","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );",r.code,"	float roughnessFactor = "+r.result+";",s.code,"	float metalnessFactor = "+s.result+";"),h&&d.push(h.code,"#ifdef ALPHATEST","	if ( "+h.result+" <= ALPHATEST ) discard;","#endif"),d.push("vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );"),d.push("material.diffuseColor = diffuseColor * ( 1.0 - metalnessFactor );","material.roughness = max( roughnessFactor, 0.0525 );","material.roughness += geometryRoughness;","material.roughness = min( material.roughness, 1.0 );","material.roughness = clamp( roughnessFactor, 0.04, 1.0 );"),c?d.push(c.code,"material.specularColor = mix( vec3( 0.16 * pow2( "+c.result+" ) ), diffuseColor, metalnessFactor );"):d.push("material.specularColor = mix( vec3( 0.04 ), diffuseColor, metalnessFactor );"),d.push("#include <lights_fragment_begin>"),d.push("#include <lights_fragment_end>"),d.push("vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular;"),d.push(`
				if (outgoingLight != diffuseColor) {
					float lightAccu = clamp( length( reflectedLight.directSpecular + reflectedLight.indirectSpecular ), 0.0, 1.0 );
					accumAlpha += ( 1.0 - accumAlpha ) * ${a.result} * lightAccu;
					outgoingLight = spe_blend( diffuseColor, outgoingLight, ${a.result}, ${o.result} );
				}
				`),l&&d.push(l.code,`outgoingLight = spe_blend(outgoingLight, ${l.result}, 1.0, SPE_BLENDING_NORMAL);`),h?d.push(`gl_FragColor = vec4( outgoingLight, accumAlpha * ${h.result} );`):d.push("gl_FragColor = vec4( outgoingLight, 1.0 );"),d.push("#include <encodings_fragment>","#include <fog_fragment>","#include <dithering_fragment>"),e=d.join(`
`)}return e}copy(t){return super.copy(t),t.color&&(this.color=t.color.clone()),this.roughness=t.roughness.clone(),this.metalness=t.metalness.clone(),t.position&&(this.position=t.position.clone()),t.afterColor&&(this.afterColor=t.afterColor.clone()),t.alpha&&(this.alpha=t.alpha.clone()),t.reflectivity&&(this.reflectivity=t.reflectivity.clone()),t.shadingAlpha&&(this.shadingAlpha=t.shadingAlpha.clone()),t.shadingBlend&&(this.shadingBlend=t.shadingBlend.clone()),this}},hR=class extends pa{constructor(t=new lR,e){super(t,t,e),this.type="StandardNodeMaterial",this.fragment=t}get color(){return this.fragment.color}set color(t){this.fragment.color=t}get afterColor(){return this.fragment.afterColor}set afterColor(t){this.fragment.afterColor=t}get alpha(){return this.fragment.alpha}set alpha(t){this.fragment.alpha=t}get shadingAlpha(){return this.fragment.shadingAlpha}set shadingAlpha(t){this.fragment.shadingAlpha=t}get shadingBlend(){return this.fragment.shadingBlend}set shadingBlend(t){this.fragment.shadingBlend=t}get position(){return this.fragment.position}set position(t){this.fragment.position=t}get roughness(){return this.fragment.roughness}set roughness(t){this.fragment.roughness=t}get metalness(){return this.fragment.metalness}set metalness(t){this.fragment.metalness=t}get reflectivity(){return this.fragment.reflectivity}set reflectivity(t){this.fragment.reflectivity=t}},Qv=class extends hR{constructor(t,e,n){super(e,t),this.userData.type="PhysicalMaterial",this.userData.category="Physical",this.userData.layers=n!=null?n:this._getLayerStack(t==null?void 0:t.map)}get layersList(){return this.userData.layers}set layersList(t){this.userData.layers=t}equals(t){return this.userData.type===t.userData.type&&this.userData.layers.uuid==t.userData.layers.uuid}copy(t){if(t.userData.layers!==void 0&&t.userData.layers instanceof Kr){let e=t.userData.layers,n=t.fragment;super.copy(t);let i=n.clone();this.fragment=i,this.vertex=i;let r=e.clone(this);this.userData.layers=r,i.shadingAlpha.value=n.shadingAlpha.value,i.shadingBlend.value=n.shadingBlend.value}else super.copy(t);return this}static fromJSON(t,e,n){let i=n.getNode(e.vertex),r=new Qv(void 0,i);return r.fromJSON(e,n),r}dispose(){super.dispose()}};function gn(t,e){let n;if(typeof t=="string"){let i=e==null?void 0:e.getColor(t);i?n=i:(console.warn("Tried to create color layer params with a color key that does not exist in the assets manager"),n=new fr(0,0,0,0))}else return"a"in t?new fr(t.r,t.g,t.b,t.a):new fr(t.r,t.g,t.b,1);return n}function cR(t,e){switch(t.data.type){case"light":return ui(t);case"fresnel":return dR(t,e);case"gradient":return pR(t);case"depth":return fR(t);case"normal":return mR(t);case"noise":return gR(t,e);case"texture":return vR(t,e);case"rainbow":return yR(t);case"transmission":return xR(t,e);case"matcap":return bR(t,e);case"displace":return _R(t);case"color":default:return uR(t,e)}}function ey(t){return{type:t.data.type}}function ui(t){let{alpha:e,mode:n}=t.data;return Ie(ve({},ey(t)),{alpha:e,mode:n})}function uR(t,e){return Ie(ve({},ui(t)),{color:gn(t.data.color,e)})}function dR(t,e){let{bias:n,scale:i,intensity:r,factor:s,color:a}=t.data;return Ie(ve({},ui(t)),{color:gn(a,e),bias:n,scale:i,intensity:r,factor:s})}function pR(t){let{gradientType:e,smooth:n,colors:i,steps:r,angle:s,offset:a,morph:o}=t.data;return Ie(ve({},ui(t)),{gradientType:e,smooth:n,colors:i.map(l=>new at(l[0],l[1],l[2],l[3])),num:i.length,steps:r,offset:new q(...a),morph:new q(...o),angle:s})}function fR(t){let{gradientType:e,near:n,far:i,isVector:r,isWorldSpace:s,origin:a,direction:o,colors:l,steps:h,smooth:c,num:d}=t.data;return Ie(ve({},ui(t)),{gradientType:e,near:n,far:i,isVector:r,isWorldSpace:s,origin:new T(...a),direction:o?new T(...o):new T(1,0,0),num:d,colors:l.map(u=>new at(u[0],u[1],u[2],u[3])),steps:h,smooth:c})}function mR(t){let{cnormal:e}=t.data;return Ie(ve({},ui(t)),{cnormal:new T(e[0],e[1],e[2])})}function gR(t,e){let{data:n}=t;return Ie(ve({},ui(t)),{scale:n.scale,move:n.move,fA:new q(...n.fA),fB:new q(...n.fB),size:new T(...n.size),distortion:new q(...n.distortion),colorA:gn(n.colorA,e),colorB:gn(n.colorB,e),colorC:gn(n.colorC,e),colorD:gn(n.colorD,e),noiseType:n.noiseType})}function vR(t,e){let{projection:n,axis:i,side:r,crop:s,size:a}=t.data,{image:o,wrapping:l,repeat:h,offset:c}=t.data.texture,d=new Rt,u;if(typeof o=="string")u=e==null?void 0:e.getImage(o);else{let p=new Image;p.src=$l(o.data),p.onload=()=>{e!=null&&e.onImageLoad&&(e==null||e.onImageLoad())},u=p}return d.image=u,d.repeat.set(h[0],h[1]),d.offset.set(c[0],c[1]),d.wrapS=d.wrapT=l,Ie(ve({},ui(t)),{texture:d,mat:new Dt().setUvTransform(c[0],c[1],h[0],h[1],0,0,0),crop:s,projection:n,axis:["x","y","z"].indexOf(i),side:[2,0,1].indexOf(r),size:a})}function yR(t){let{data:e}=t;return Ie(ve({},ui(t)),{filmThickness:e.filmThickness,movement:e.movement,wavelengths:new T(...e.wavelengths),noiseStrength:e.noiseStrength,noiseScale:e.noiseScale,offset:new T(...e.offset)})}function xR(t,e){let{data:n}=t;return Ie(ve({},ui(t)),{thickness:n.thickness,ior:n.ior,roughness:n.roughness,transmissionSamplerMap:e.transmissionSamplerMap,transmissionDepthMap:e.transmissionDepthMap})}function bR(t,e){let n=new Rt,{image:i}=t.data.texture,r;if(typeof i=="string")r=e==null?void 0:e.getImage(i);else{let a=new Image;a.src=$l(i.data),a.onload=()=>{e!=null&&e.onImageLoad&&(e==null||e.onImageLoad())},r=a}n.image=r;let s=16777215;return Ie(ve({},ui(t)),{color:s,texture:n})}function _R(t){let{data:e}=t,n=Ie(ve({},ey(t)),{intensity:e.intensity});if(e.displacementType==="noise")return Ie(ve({},n),{offset:new T(...e.offset),scale:e.scale,movement:e.movement,noiseType:e.noiseType});{let i=new Rt,r=new Dt().setUvTransform(0,0,1,1,0,0,0);return Ie(ve({},n),{texture:i,mat:r,crop:e.crop})}}function wR(t,e,n){if(n.type==="displace"&&(t==="intensity"||t==="visible")){let i=e.uniforms[`f${e.id}_intensity`];return i?(i.value=n.intensity*(n.visible?1:0),i):void 0}if(n.type!=="displace"&&(t==="alpha"||t==="visible")){let i=e.uniforms[`f${e.id}_alpha`];return i?(i.value=n.alpha*(n.visible?1:0),i):void 0}}var qa;(t=>{function e(n){return new Ae(n.x,n.y,n.z).getHex()}t.getHex=e})(qa||(qa={}));var Im;(t=>{function e(n){return new at(n.r,n.g,n.b,n.a)}t.getThreeVector4=e})(Im||(Im={}));var Nm;(t=>{function e(i,r){i.setRGB(r.r,r.g,r.b)}t.setThreeColor=e;function n(i){return new Ae(i.r,i.g,i.b).getHex()}t.getHex=n})(Nm||(Nm={}));function Ed(t,e){return typeof t=="string"?e.getMaterialOrDeletedPlaceholder(t):ty(t,e)}function SR(t,e){return t.map(n=>Ed(n,e))}function ty(t,e){var n,i;let r=(n=t.layers)!=null?n:oo.defaultTwoLayerData("phong").layers,s=MR(r),a;switch(s.category){case"basic":a=new Ji;break;case"lambert":{a=new Zv;break}case"toon":{a=new Kv;break}case"physical":a=new Qv;break;case"phong":default:{a=new jr;break}}a.name=(i=t.name)!=null?i:"Untitled Material";let o=a.userData.layers;TR(o);for(let l=r.length-1;l>=0;l--)ER(o,r[l],e);switch(s.category){case"basic":break;case"lambert":{let c=a,d=gn(s.emissive,e);d instanceof Ae?c.emissive.value=d:c.emissive.value.setHex(qa.getHex(d));break}case"toon":{let c=a,d=s;c.shininess.value=d.shininess;let u=gn(d.specular,e);u instanceof Ae?c.specular.value=u:c.specular.value.setHex(qa.getHex(u));break}case"physical":let l=a,h=s;l.metalness.value=h.metalness,l.roughness.value=h.roughness,l.reflectivity.value=h.reflectivity;break;case"phong":default:{let c=a,d=s;c.shininess.value=d.shininess;let u=gn(d.specular,e);u instanceof Ae?c.specular.value=u:c.specular.value.setHex(qa.getHex(u));break}}return a.penumbraSizeNode=e.penumbraSizeNode,o.blendColors(),o.blendAfterColors(),o.blendPositions(),a}function MR(t){for(let e of t)if(e.data.type==="light")return e.data;return{type:"light",category:"basic",visible:!0,alpha:1,mode:0}}function TR(t){for(let e of t.getLayers())t.removeLayer(e.id)}function ER(t,e,n){let i=cR(e,n);i.type==="transmission"&&(i.transmissionSamplerMap=n==null?void 0:n.transmissionSamplerMap,i.transmissionDepthMap=n==null?void 0:n.transmissionDepthMap);let r=t.addLayer(i);r.uuid=e.id;for(let s in e.data)wR(s,r,e.data)}var Tc=t=>"isEntity"in t,Zs=t=>"isAbstractMesh"in t,qr=t=>t!==null&&t.isBooleanMesh,AR=t=>t.objectType==="CombinedCamera",xo=t=>"objectHelper"in t;function CR(t,e){var n;let i=!1;e.position&&(t.position.fromArray(e.position),i=!0),e.rotation&&(t.rotation.fromArray(e.rotation),i=!0),e.scale&&(i=!0,t.scale.fromArray(e.scale)),e.hiddenMatrix!==void 0&&"hiddenMatrix"in t&&(i=!0,t.hiddenMatrix.fromArray((n=e.hiddenMatrix)!=null?n:Js.identity)),i&&(t.updateMatrix(),qr(t.parent)&&Zs(t)&&t.invalidateDownstreamBooleanData(!0).recomputeBoolean()),e.position&&e.rotation&&e.scale&&e.hiddenMatrix!==void 0&&t.updateWorldMatrix(!1,!0),t.objectType==="CombinedCamera"&&(e.isUpVectorFlipped!==void 0&&(t.isUpVectorFlipped=e.isUpVectorFlipped),t.updateUp())}function LR(t,e){CR(t,e),e.name!==void 0&&(t.name=e.name),e.visible!==void 0&&(t.isEntity?t.visibility=e.visible:t.visible=e.visible)}function PR(t,e,n){LR(t,e),e.color!==void 0&&(t.color=gn(e.color,n)),e.intensity!==void 0&&(t.intensity=e.intensity),e.shadows!==void 0&&!(t instanceof Bl)&&(t.castShadow=e.shadows),t.shadow&&!(t instanceof Bl)&&e.depth!==void 0&&(t.shadow.camera.far=e.depth,t.shadow.needsUpdate=!0),e.helper!==void 0&&xo(t)&&(t.enableHelper=e.helper,t.gizmos.shadowmap.visible=e.helper)}function DR(t,e){t.shadow.camera.right=e/2,t.shadow.camera.left=-e/2,t.shadow.camera.top=e/2,t.shadow.camera.bottom=-e/2,t.shadow.needsUpdate=!0}var Ms=new hn,an=new T,Ge=new T,Xt=new Re;function RR(t,e,n=0,i=e.count){let r=1/0,s=1/0,a=1/0,o=-1/0,l=-1/0,h=-1/0;for(let c=n;c<i;c++){let d=e.getX(c),u=e.getY(c),p=e.getZ(c);d<r&&(r=d),u<s&&(s=u),p<a&&(a=p),d>o&&(o=d),u>l&&(l=u),p>h&&(h=p)}return t.min.set(r,s,a),t.max.set(o,l,h),t}var zm=(t,e,n,i)=>{var r;if(Zs(t)){let s=t.geometry.userData.parameters,a=t.geometry.getAttribute("position");t.geometry.userData.type==="SubdivGeometry"?an.copy(t.originalGeometry.boundingSphere.center):a!==void 0&&(RR(Ms,a,t.geometry.drawRange.start,t.geometry.drawRange.count<1/0?t.geometry.drawRange.count:a.count),Ms.getCenter(an)),t.forceComputeSize?Ms.getSize(Ge).multiplyScalar(.5):Ge.set(s.width,s.height,(r=s.depth)!=null?r:0).multiplyScalar(.5)}else if(xo(t)&&i===!0){let s=t.geometryHelper.getAttribute("position");Ms.setFromArray(s.array),Ms.getCenter(an),Ms.getSize(Ge).multiplyScalar(.5)}else an.setScalar(0),Ge.setScalar(0);Xt.copy(e).multiply(t.matrixWorld),Ge.x===0&&Ge.y===0&&Ge.z===0?n.push(new T(an.x,an.y,an.z).applyMatrix4(Xt)):n.push(new T(-Ge.x,Ge.y,Ge.z).add(an).applyMatrix4(Xt),new T(-Ge.x,-Ge.y,Ge.z).add(an).applyMatrix4(Xt),new T(Ge.x,-Ge.y,Ge.z).add(an).applyMatrix4(Xt),new T(Ge.x,Ge.y,Ge.z).add(an).applyMatrix4(Xt),new T(-Ge.x,Ge.y,-Ge.z).add(an).applyMatrix4(Xt),new T(-Ge.x,-Ge.y,-Ge.z).add(an).applyMatrix4(Xt),new T(Ge.x,-Ge.y,-Ge.z).add(an).applyMatrix4(Xt),new T(Ge.x,Ge.y,-Ge.z).add(an).applyMatrix4(Xt))},Bm=class extends hn{constructor(){super(...arguments),this.matrix=new Re,this.vertices=[],this.faces=[],this.edges=[],this.centerEdges=[]}copy(t){return super.copy(t),this.matrix.copy(t.matrix),this.vertices=t.vertices.map(e=>e.clone()),this.faces=t.faces.map(e=>e.clone()),this.edges=t.edges.map(e=>e.clone()),this.centerEdges=t.centerEdges.map(e=>e.clone()),this}setFromObjectSize(t,e=!1){t.updateWorldMatrix(!1,e),this.makeEmpty(),this.matrix.copy(t.matrixWorld);let n=new Re().copy(t.matrixWorld).invert();return this.expandByObjectSize(t,n,e)}expandByObjectSize(t,e,n=!1){let i=[];return n===!0?t.traverseEntity(r=>{r.visible&&zm(r,e,i,t.enableHelper===!0)}):zm(t,e,i,t.enableHelper===!0),this.setFromPoints(i)}getCenter(t){return t=super.getCenter(t),t.applyMatrix4(this.matrix),t}getPositionToCenter(t){return t=super.getCenter(t),t.applyMatrix4(Xt.copy(this.matrix).setPosition(0,0,0)),t}computeVertices(){this.getSize(Ge).multiplyScalar(.5),this.getCenter(an),Xt.copy(this.matrix).setPosition(an),this.vertices=[new T(-Ge.x,Ge.y,Ge.z).applyMatrix4(Xt),new T(-Ge.x,-Ge.y,Ge.z).applyMatrix4(Xt),new T(Ge.x,-Ge.y,Ge.z).applyMatrix4(Xt),new T(Ge.x,Ge.y,Ge.z).applyMatrix4(Xt),new T(-Ge.x,Ge.y,-Ge.z).applyMatrix4(Xt),new T(-Ge.x,-Ge.y,-Ge.z).applyMatrix4(Xt),new T(Ge.x,-Ge.y,-Ge.z).applyMatrix4(Xt),new T(Ge.x,Ge.y,-Ge.z).applyMatrix4(Xt)]}computeEdges(){this.vertices.length>0&&this.computeVertices(),this.edges=[new An(this.vertices[0],this.vertices[3]),new An(this.vertices[1],this.vertices[2]),new An(this.vertices[5],this.vertices[6]),new An(this.vertices[4],this.vertices[7]),new An(this.vertices[0],this.vertices[1]),new An(this.vertices[3],this.vertices[2]),new An(this.vertices[7],this.vertices[6]),new An(this.vertices[4],this.vertices[5]),new An(this.vertices[0],this.vertices[4]),new An(this.vertices[1],this.vertices[5]),new An(this.vertices[2],this.vertices[6]),new An(this.vertices[3],this.vertices[7])],this.centerEdges=this.edges.map(t=>t.getCenter(new T))}computeFaces(){this.vertices.length>0&&this.computeVertices(),this.faces=[new T().copy(this.vertices[0]).sub(this.vertices[2]).multiplyScalar(.5).add(this.vertices[2]),new T().copy(this.vertices[7]).sub(this.vertices[5]).multiplyScalar(.5).add(this.vertices[5]),new T().copy(this.vertices[4]).sub(this.vertices[1]).multiplyScalar(.5).add(this.vertices[1]),new T().copy(this.vertices[3]).sub(this.vertices[6]).multiplyScalar(.5).add(this.vertices[6]),new T().copy(this.vertices[4]).sub(this.vertices[3]).multiplyScalar(.5).add(this.vertices[3]),new T().copy(this.vertices[1]).sub(this.vertices[6]).multiplyScalar(.5).add(this.vertices[6])]}};function Da(t){let e=[];for(let n in t){let i=t[n];delete i.metadata,e.push(i)}return e}function OR(t){let e=[];for(let n in t)e.push(t[n]);return e}var ny=t=>class extends t{hasEntityChild(){return this.children.some(e=>Tc(e))}isDescendantOf(e){e instanceof ot&&(e=e.uuid);let n=this;for(;n.parent;){if(n.parent.uuid===e)return!0;n=n.parent}return!1}attach(e,n){this.updateWorldMatrix(!0,!1);let i=new Re().copy(this.matrixWorld).invert();return e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),i.multiply(e.parent.matrixWorld)),Tc(e)?e.hiddenMatrix.premultiply(i):e.applyMatrix4(i),e.updateWorldMatrix(!1,!1),this.add(e),n!==void 0&&(this.children.pop(),this.children.splice(n,0,e)),this}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){let r=e.children[i];this.add(r.clone())}return this}toJSON(e){let n=e===void 0,i={object:{uuid:"",objectType:""}};e===void 0&&(e={geometries:{},materials:{},textures:{},images:{},interactionStates:{},nodes:{}},i.metadata={version:1.5,type:"Object",generator:"Object3D.toJSON"});let r={uuid:this.uuid,objectType:this.type};if(this.name!==""&&(r.name=this.name),r.matrix=this.matrix.toArray(),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),r.layers=this.layers.mask,JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),this.children.length>0){r.children=[];for(let s of this.children)(Tc(s)||s instanceof hi)&&r.children.push(s.toJSON(e).object)}if(n){let s=Da(e.geometries),a=Da(e.materials),o=Da(e.textures),l=Da(e.images),h=Da(e.interactionStates),c=OR(e.nodes);s.length>0&&(i.geometries=s),a.length>0&&(i.materials=a),o.length>0&&(i.textures=o),l.length>0&&(i.images=l),h.length>0&&(i.interactionStates=h),c.length>0&&(i.nodes=c)}return i.object=r,i}fromJSON(e){return this.uuid=e.uuid,e.name!==void 0&&(this.name=e.name),e.matrix!==void 0?(this.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(this.matrixAutoUpdate=e.matrixAutoUpdate),this.matrixAutoUpdate&&this.matrix.decompose(this.position,this.quaternion,this.scale)):(e.position!==void 0&&this.position.fromArray(e.position),e.rotation!==void 0&&this.rotation.fromArray(e.rotation),e.quaternion!==void 0&&this.quaternion.fromArray(e.quaternion),e.scale!==void 0&&this.scale.fromArray(e.scale)),this.castShadow=e.castShadow!==void 0,this.receiveShadow=e.receiveShadow!==void 0,e.visible!==void 0&&(this.visible=e.visible),e.frustumCulled!==void 0&&(this.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(this.renderOrder=e.renderOrder),e.layers!==void 0&&(this.layers.mask=e.layers),e.userData!==void 0&&(this.userData=e.userData),this}},wi=t=>"isEntity"in t,IR=t=>"isAbstractMesh"in t,fa=t=>class extends ny(t){constructor(){super(...arguments),this.objectType="",this.isEntity=!0,this.raycastLock=!1,this.scaleLock=!1,this.hiddenMatrix=new Re,this._singleBBox=new Bm,this._recursiveBBox=new Bm,this.singleBBoxNeedsUpdate=!0,this.recursiveBBoxNeedsUpdate=!0,this.forceComputeSize=!1}set visibility(e){this.visible=e;for(let n of this.children)wi(n)&&n.traverseEntity(i=>{xo(i)&&i.visible&&(i.objectHelper.visible=e)})}get visibility(){return this.visible}get singleBBox(){return this.singleBBoxNeedsUpdate&&(this.singleBBoxNeedsUpdate=!1,this._singleBBox.setFromObjectSize(this,!1),this._singleBBox.computeVertices(),this._singleBBox.computeEdges(),this._singleBBox.computeFaces()),this._singleBBox}get recursiveBBox(){return this.recursiveBBoxNeedsUpdate&&(this.recursiveBBoxNeedsUpdate=!1,this._recursiveBBox.setFromObjectSize(this,!0),this._recursiveBBox.computeVertices(),this._recursiveBBox.computeEdges(),this._recursiveBBox.computeFaces()),this._recursiveBBox}resetBBoxNeedsUpdate(){this.singleBBoxNeedsUpdate=!0,this.recursiveBBoxNeedsUpdate=!0,this.traverseAncestors(e=>{wi(e)&&(e.singleBBoxNeedsUpdate=!0,e.recursiveBBoxNeedsUpdate=!0)}),this.traverseEntity(e=>{e.singleBBoxNeedsUpdate=!0,e.recursiveBBoxNeedsUpdate=!0})}traverseEntity(e){e(this);for(let n of this.children)wi(n)&&n.traverseEntity(e)}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.multiplyMatrices(this.hiddenMatrix,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.hiddenMatrix),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);for(let n of this.children)n.updateMatrixWorld(e)}updateWorldMatrix(e,n){let i=this.parent;if(e&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.multiplyMatrices(this.hiddenMatrix,this.matrix):(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.hiddenMatrix),this.matrixWorld.multiplyMatrices(this.matrixWorld,this.matrix)),n)for(let r of this.children)r.updateWorldMatrix(!1,!0)}shallowClone(e){return new this.constructor().shallowCopy(this,e)}shallowCopy(e,n=!0){if(super.copy(e,!1),this.raycastLock=e.raycastLock,this.scaleLock=e.scaleLock,this.hiddenMatrix.copy(e.hiddenMatrix),n===!0)for(let i of e.children)wi(i)&&this.add(i.shallowClone());return this}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(super.copy(e,!1),this.raycastLock=e.raycastLock,this.scaleLock=e.scaleLock,this.hiddenMatrix.copy(e.hiddenMatrix),n===!0)for(let i of e.children)wi(i)&&this.add(i.clone());return this}keepChildrenMatrixWorld(){let e=new Re,n=this.matrixWorld.clone();this.updateWorldMatrix(!1,!1),e.copy(this.matrixWorld).invert(),e.multiply(n);for(let i of this.children)wi(i)&&i.hiddenMatrix.premultiply(e)}toJSON(e){let n=super.toJSON(e),i=n.object;return this.raycastLock===!0&&(i.raycastLock=!0),this.scaleLock===!0&&(i.scaleLock=!0),i.hiddenMatrix=this.hiddenMatrix.toArray(),n}fromJSON(e){return super.fromJSON(e),e.raycastLock!==void 0&&(this.raycastLock=e.raycastLock),e.scaleLock!==void 0&&(this.scaleLock=e.scaleLock),this.hiddenMatrix.fromArray(e.hiddenMatrix),this}fromObject3D(e){let n=e.children;return e.children=[],Object.assign(e,{raycastLock:!1,scaleLock:!1,hiddenMatrix:new Re}),this.copy(e),e.children=n,this}toObjectTransformState(e=[]){this.updateWorldMatrix(!0,!1);let n={position:this.position.toArray(),rotation:[this.rotation.x,this.rotation.y,this.rotation.z],scale:this.scale.toArray(),hiddenMatrix:this.hiddenMatrix.toArray()};return Yc(n,e)}fromObjectTransformState(e){return e.position&&this.position.fromArray(e.position),e.rotation&&this.rotation.fromArray(e.rotation),e.scale&&this.scale.fromArray(e.scale),e.hiddenMatrix&&this.hiddenMatrix.fromArray(e.hiddenMatrix),this.updateMatrix(),this}toState(e=[]){let n=ve({name:this.name,visible:this.visible,raycastLock:this.raycastLock},this.toObjectTransformState(e));return Yc(n,e)}fromState(e,n){return e.name&&(this.name=e.name),e.raycastLock!==void 0&&(this.raycastLock=e.raycastLock),e.type!=="OrthographicCamera"&&e.type!=="PerspectiveCamera"&&(this.matrixAutoUpdate=!1),e.visible!==void 0&&(this.visibility=e.visible),this.fromObjectTransformState(e),this}},wu=class extends ot{constructor(t,e={}){super(),this.object=t;let n=t.recursiveBBox.getSize(new T),i=.1;this.parameters=Kc.defaultData(n.toArray(),i),kl(this.parameters,e),this.update(),this.setHideBase(this.parameters.hideBase)}refreshMaterial(){if("material"in this.object)for(let t of this.children)t.material=this.object.material}setHideBase(t){if("material"in this.object){if(Array.isArray(this.object.material)){if(this.children.length>0){for(let e of this.object.material)e.visible=!0;if(t){let e=this.object.material.map(n=>n.clone());for(let n of this.children)n.material=e}else for(let e of this.children)e.material=this.object.material}for(let e of this.object.material)e.visible=!t}else{if(this.children.length>0)if(this.object.material.visible=!0,t){let e=this.object.material.clone();for(let n of this.children)n.material=e}else for(let e of this.children)e.material=this.object.material;this.object.material.visible=!t}this.parameters.hideBase=t}}update(){switch(this._updateCount(),this.parameters.type){case"radial":this._updateRadial(this.parameters);break;case"linear":this._updateLinear(this.parameters);break;case"grid":this._updateGrid(this.parameters)}this.children.forEach(t=>t.updateMatrix())}_updateCount(){let t=this.parameters.type==="grid"?this.parameters.grid.count[0]*this.parameters.grid.count[1]*this.parameters.grid.count[2]:this.parameters.count;if(this.children.length!==t)if(this.children.length<t)for(let e=0,n=t-this.children.length;e<n;++e){let i=this.object.shallowClone(!1);i.visible=!0,this.add(i),this.parameters.hideBase&&this.setHideBase(!0)}else for(let e=0,n=this.children.length-t;e<n;++e)this.remove(this.children[0])}_updateRadial(t){let e=t.radial,n=e.start*Mt.DEG2RAD,i=e.end*Mt.DEG2RAD,r=n-i,s=new Ei(e.rotation[0]*Mt.DEG2RAD,e.rotation[1]*Mt.DEG2RAD,e.rotation[2]*Mt.DEG2RAD),a;switch(e.axis){case"z":a=new T(0,0,1);break;case"y":a=new T(0,1,0);break;default:case"x":a=new T(1,0,0);break}for(let[o,l]of this.children.entries()){l.hiddenMatrix.identity(),l.scale.x=e.scale[0],l.scale.y=e.scale[1],l.scale.z=e.scale[2],l.position.setScalar(0);let h=r/t.count*o-n;switch(e.axis){case"x":l.rotation.set(0,h,0);break;case"y":l.rotation.set(0,0,h);break;case"z":l.rotation.set(h,0,0);break}l.translateOnAxis(a,e.radius),l.position.x+=e.position[0],l.position.y+=e.position[1],l.position.z+=e.position[2],e.alignment===!0?(l.rotation.x+=s.x,l.rotation.y+=s.y,l.rotation.z+=s.z):l.rotation.copy(s)}}_updateLinear(t){if(t.type!=="linear")throw new Error;let e=t.linear,n=new Ei(e.rotation[0]*Mt.DEG2RAD,e.rotation[1]*Mt.DEG2RAD,e.rotation[2]*Mt.DEG2RAD);for(let[i,r]of this.children.entries())r.hiddenMatrix.identity(),r.scale.x=1+(e.scale[0]-1)*i,r.scale.y=1+(e.scale[1]-1)*i,r.scale.z=1+(e.scale[2]-1)*i,r.rotation.x=n.x*i,r.rotation.y=n.y*i,r.rotation.z=n.z*i,r.position.x=e.position[0]*i,r.position.y=e.position[1]*i,r.position.z=e.position[2]*i}_updateGrid(t){let e=0,n=t.grid;if(n.useCenter===!0){let i={x:n.count[0]%2===0?2:1,y:n.count[1]%2===0?2:1,z:n.count[2]%2===0?2:1},r=new T(n.size[0]*(n.count[0]-i.x)*.5,n.size[1]*(n.count[1]-i.y)*.5,n.size[2]*(n.count[2]-i.z)*.5);for(let s=0;s<n.count[0];s++)for(let a=0;a<n.count[1];a++)for(let o=0;o<n.count[2];o++){let l=this.children[e++];l.hiddenMatrix.identity(),l.scale.setScalar(1),l.rotation.set(0,0,0),l.position.x=n.size[0]*s-r.x,l.position.y=n.size[1]*a-r.y,l.position.z=n.size[2]*o-r.z}}else for(let i=0;i<n.count[0];i++)for(let r=0;r<n.count[1];r++)for(let s=0;s<n.count[2];s++){let a=this.children[e++];a.hiddenMatrix.identity(),a.scale.setScalar(1),a.rotation.set(0,0,0),a.position.x=n.size[0]*i,a.position.y=-n.size[1]*r,a.position.z=-n.size[2]*s}}fromJSON(t){return this}toJSON(){return{}}fromClonerState(t){return t.hideBase!==void 0&&this.setHideBase(t.hideBase),kl(this.parameters,t),this.update(),this}},Li=class extends fa(ln){constructor(t,e){super(t,e),this.isAbstractMesh=!0,this.isBooleanMesh=!1,this.booleanMeshSetAddress=-1,this.booleanWasTransformed=!1,this.booleanMatrixInvOld=new Re,this.booleanExclude=null,Array.isArray(e)&&(this.selectedMaterial=0,t.groups.length===0&&t.addGroup(0,t.getAttribute("position").count,0))}get cloner(){return this._cloner}set cloner(t){this._cloner&&this.remove(this._cloner),t&&this.add(t),this._cloner=t}getSelectedMaterial(t){return Array.isArray(this.material)?(this.selectedMaterial===void 0&&(this.selectedMaterial=t!=null?t:0),this.material[t!=null?t:this.selectedMaterial]):this.material}setSelectedMaterial(t,e){Array.isArray(this.material)?(this.selectedMaterial===void 0&&(this.selectedMaterial=e!=null?e:0),e=e!=null?e:this.selectedMaterial,this.material[e].dispose(),this.material[e]=t):(this.material.dispose(),this.material=t)}updateGeometry(t){let e=this.geometry,n=ly[e.userData.type],i=this.objectType==="NonParametric"?Object.assign({},e.userData,{geometry:e}):e.userData,r=n.build(n.normalizeInputs(t,i)),s=e.uuid;if(this.geometry.dispose(),this.geometry=r,this.geometry.uuid=s,this.geometry.computeBoundingSphere(),this.cloner)for(let a of this.cloner.children)a.geometry=this.geometry}resizeGeometry(t,e,n){Lv.resizeGeometry(this.geometry,{width:t,height:e,depth:n})}shallowClone(t){return new this.constructor(this.geometry,this.material).shallowCopy(this,t)}clone(t){let e=this.objectType==="NonParametric"?Object.assign({},this.geometry.userData,{geometry:this.geometry.clone()}):this.geometry.userData,n=Su(e),i=Array.isArray(this.material)?this.material.map(r=>r.clone()):this.material.clone();return new this.constructor(n,i).copy(this,t)}copy(t,e=!0){return super.copy(t,e),t.cloner&&(this.cloner=new wu(t,t.cloner.parameters),this.add(this.cloner)),this}setFromClonerState(t){t===null?this.cloner=void 0:(this.cloner===void 0&&(this.cloner=new wu(this)),this.cloner.fromClonerState(t))}fromState(t,e){var n,i,r;return super.fromState(t),t.type==="Mesh"&&(this.setFromClonerState(t.cloner),this.castShadow=(n=t.castShadow)!=null?n:!0,this.receiveShadow=(i=t.receiveShadow)!=null?i:!0,this.booleanExclude=(r=t.booleanExclude)!=null?r:null),this}freeBooleanPointer(){this.booleanMeshSetAddress!==-1&&(ar.freeMeshSet(this.booleanMeshSetAddress),this.booleanMeshSetAddress=-1)}invalidateDownstreamBooleanData(t=!1){return t?this.booleanWasTransformed=!0:this.freeBooleanPointer(),qr(this.parent)?this.parent.invalidateDownstreamBooleanData():this}invalidateUpstreamBooleanData(){this.freeBooleanPointer();for(let t of this.children)Zs(t)&&(t.freeBooleanPointer(),qr(t)&&t.invalidateUpstreamBooleanData())}},NR=new T(0,0,1),Fm=new T,Um=new T,km=new Dt,Ad=class extends Li{constructor(t=Xi.create({}),e=new Ji({side:Pn})){var n;super(t,e),this.recursiveSelection=!1,this.objectType="VectorObject",this.eventDispatcher=new ci,this._onShapeUpdate=()=>{this.updateGeometry({}),this.geometry.computeBoundingSphere(),this.geometry.computeBoundingBox()},this.castShadow=!0,this.receiveShadow=!0,this.forceComputeSize=!0,this.shape=t.userData.shape,(n=this.shape.eventDispatcher)==null||n.addEventListener("update",this._onShapeUpdate)}toJSON(t){let e=super.toJSON(t);return e.object.objectType="VectorObject",e}fromState(t){return super.fromState(t),this.shape.update(),this}setHelperVisibility(){}updateGeometry(t){if(super.updateGeometry(t),"userData"in this.geometry){let e=this.geometry.userData.parameters;this.eventDispatcher.dispatchEvent({type:"geometryUpdate",parameters:e})}}setShape(t){var e,n;this.shape&&((e=this.shape.eventDispatcher)==null||e.removeEventListener("update",this._onShapeUpdate)),this.shape=t,(n=this.shape.eventDispatcher)==null||n.addEventListener("update",this._onShapeUpdate)}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),km.getNormalMatrix(this.matrixWorld),Fm.copy(NR).applyMatrix3(km).normalize(),Um.setFromMatrixPosition(this.matrixWorld),this.shape.plane.setFromNormalAndCoplanarPoint(Fm,Um)}clone(t){let e=this.shape.clone(),n=this.material.clone(),i=this.geometry.userData,r=Xi.create(Object.assign({},i,{shape:e})),s=new Ad(r,n).copy(this,t);return s.shape=e,e.update(),s}raycast(t,e){Li.prototype.raycast.call(this,t,e)}};function iy(t,e){return zR(t)}function zR(t){let e={parameters:t,type:t.type};if(t.type==="VectorGeometry"){let i=Bt.createFromState(t.shape,t.width,t.height);e.shape=i}else t.type==="NonParametricGeometry"&&(t.data.groups&&t.data.groups.forEach(i=>{var r;return i.materialIndex=Math.max((r=i.materialIndex)!=null?r:0,0)}),e.geometry=new Yu().parse(t));let n;try{n=Su(e)}catch(i){console.error(i)}if(!n){let i=Bt.createFromState(Wl.defaultData(),100,100);e.shape=i,n=Su(e)}return n}var Xe;Pv.then(t=>{Xe=t});var Vm=new Float32Array([10,10,0,-10,10,0,-10,-10,0,10,-10,0]),Hm=new Uint32Array([0,1,2,3]),Gm=new Uint8Array([4]),ei=class{static build(t,e,n,i,r){var s,a;let o,l,h,c=(a=(s=t==null?void 0:t.phongAngle)!=null?s:e==null?void 0:e.phongAngle)!=null?a:35;if(i===!1&&(c=-1),t.positionWASM!==void 0){n&&n!==0&&(Xe.free_bvh(n),Xe.free_subdivision_surface(n));try{o=ei.allocate(t,r)}catch(d){console.error(d,t),o=ei.allocate({positionWASM:Vm,indexWASM:Hm,verticesPerFaceWASM:Gm},r)}Xe.set_destination_refinement_level(o,0),l=ei.buildLevel(o,!0,c)}else o=n,t.phongAngle!==void 0&&(l=ei.buildLevel(o,!0,c));return t.subdivisions!==void 0&&(Xe.set_destination_refinement_level(o,t.subdivisions),t.subdivisions>0?h=ei.buildLevel(o,!1,c):h=null),{subdivPointer:o,originalGeometry:l,subdividedGeometry:h}}static primitiveToQuads(t,e){t.widthSegments>16&&(t.widthSegments=16),t.heightSegments>16&&(t.heightSegments=16),t.depthSegments>16&&(t.depthSegments=16),t.radialSegments>16&&(t.radialSegments=16),t.type==="DodecahedronGeometry"&&(t.detail=0);let n=t.shape!==void 0?e.geometry:iy(t),i,r,s,a;return{positions:i,triIndices:a}=ry(n.getAttribute("position"),n.getIndex()),{indices:r,verticesPerFace:s}=sy(i,a,n),{positions:i,indices:r,verticesPerFace:s}}static allocate(t,e){var n;let i,r,s,a=[],o=[];t.positionWASM&&t.positionWASM.length>0?(i=t.positionWASM,r=t.indexWASM,s=t.verticesPerFaceWASM):(i=Vm,r=Hm,s=Gm);let l=i.length,h=r.length,c=s.length,d=i.length+a.length+o.length,u=r.length+s.length,p=d*Float32Array.BYTES_PER_ELEMENT+u*Uint32Array.BYTES_PER_ELEMENT,m=d*Float32Array.BYTES_PER_ELEMENT,f=Xe._malloc(p),g=new Float32Array(Xe.HEAPF32.buffer,f,d),v=new Uint32Array(Xe.HEAPU32.buffer,f+m,u);g.set(i,0),g.set(a,i.length),g.set(o,i.length+a.length),v.set(r,0),v.set(s,r.length);let y;(n=t==null?void 0:t.scaleBaked)!=null&&n.some(S=>S!==1)&&(y=new Re().makeScale(...t.scaleBaked)),e&&(y?y.premultiply(e):y=e);let w=y?Xe.alloc_subdivision_surface2(f,l,f+m,h,f+m+r.length*Uint32Array.BYTES_PER_ELEMENT,c,y.elements):Xe.alloc_subdivision_surface(f,l,f+m,h,f+m+r.length*Uint32Array.BYTES_PER_ELEMENT,c);return Xe._free(f),w}static buildLevel(t,e,n,i,r){let s=r?Xe.get_mesh_data2(t,e?Xe.Level.CONTROL:Xe.Level.REFINED,n,r.elements):Xe.get_mesh_data(t,e?Xe.Level.CONTROL:Xe.Level.REFINED,n),a=8,o=Xe.HEAPU32.subarray(s>>2,(s>>2)+a),l=o.subarray(4,4+4),h=0,c=Xe.HEAPU32[o[h]>>2],d=Xe.HEAPF32.subarray(c>>2,(c>>2)+l[h]);h++;let u=Xe.HEAPU32[o[h]>>2],p=Xe.HEAPF32.subarray(u>>2,(u>>2)+l[h]);h++;let m=Xe.HEAPU32[o[h]>>2],f=Xe.HEAPU32.subarray(m>>2,(m>>2)+l[h]);h++;let g=Xe.HEAPU32[o[h]>>2],v=Xe.HEAPU32.subarray(g>>2,(g>>2)+l[h]);if(h++,i===void 0){let y=new Ve;if(y.setIndex(new Va(v,1)),y.setAttribute("position",new Pe(d,3)),y.setAttribute("normal",new Pe(p,3)),e){y.setAttribute("faceMap",new Va(f,1));let w=new Float32Array(p.length/3*4).fill(0);y.setAttribute("color",new tt(w,4))}return Xe.free_mesh_data(s),y.userData.type="SubdivGeometry",y}i.getAttribute("position").copyArray(d),i.getAttribute("normal").copyArray(p),i.attributes.position.needsUpdate=!0,i.attributes.normal.needsUpdate=!0,Xe.free_mesh_data(s)}static buildControlCageWireframe(t,e,n){let i=Xe.get_wireframe_data_for_base_level(t),r=4,s=Xe.HEAPU32.subarray(i>>2,(i>>2)+r),a=s.subarray(2,2+2),o=0,l=Xe.HEAPU32[s[o]>>2],h=Xe.HEAPF32.subarray(l>>2,(l>>2)+a[o]);o++;let c=Xe.HEAPU32[s[o]>>2],d=Xe.HEAPU32.subarray(c>>2,(c>>2)+a[o]);if(e===void 0){let u=new Ve;u.setAttribute("position",new Pe(h,3));let p=new Float32Array(h.length);for(let m=0,f=h.length;m<f;)p[m++]=n.r,p[m++]=n.g,p[m++]=n.b;return u.setAttribute("color",new tt(p,3)),u.setIndex(new Va(d,1)),Xe.free_wireframe_data_for_base_level(i),u}e.getAttribute("position").copyArray(h),e.attributes.position.needsUpdate=!0,Xe.free_wireframe_data_for_base_level(i)}static updateCollabMesh(t,e,n){e||Xe.set_destination_refinement_level(t,1);let i=n?Xe.get_topological_data2(t,e?Xe.Level.CONTROL:Xe.Level.REFINED,n.elements):Xe.get_topological_data(t,e?Xe.Level.CONTROL:Xe.Level.REFINED),r=6,s=Xe.HEAPU32.subarray(i>>2,(i>>2)+r),a=s.subarray(3,3+3),o=0,l=Xe.HEAPU32[s[o]>>2],h=new Float32Array(Xe.HEAPF32.subarray(l>>2,(l>>2)+a[o]));o++;let c=Xe.HEAPU32[s[o]>>2],d=new Uint32Array(Xe.HEAPU32.subarray(c>>2,(c>>2)+a[o]));o++;let u=Xe.HEAPU32[s[o]>>2],p=new Uint8Array(Xe.HEAPU32.subarray(u>>2,(u>>2)+a[o]));return Xe.free_topological_data(i),{positions:h,indices:d,verticesPerFace:p}}},Wm=["getX","getY","getZ"];function ry(t,e){let n={},i=e?e.count:t.count,r=0,s=[],a=[],o=1e4;for(let h=0;h<i;h++){let c=e?e.getX(h):h,d="";for(let u=0;u<3;u++)d+=`${~~(t[Wm[u]](c)*o)},`;if(d in n)s.push(n[d]);else{for(let u=0;u<3;u++)a.push(t[Wm[u]](c));n[d]=r,s.push(r),r++}}let l=[];for(let h=0;h<s.length;h+=3)s[h]===s[h+1]||s[h]===s[h+2]||s[h+1]===s[h+2]||l.push(s[h],s[h+1],s[h+2]);return{positions:a,triIndices:l}}var fl=new T,Ec=new T,Ac=new T,Cc=new T;function sy(t,e,n){var i;let r=[],s=[];if(n.userData.shape!==void 0&&n.userData.parameters.depth===0){let a=n.userData.shape.extractShapePointsToFlatArray([]),o=0;for(let h=0;h<a.length;h+=2)o+=(a[h]-a[(h===0?a.length:h)-2])*(a[h+1]+a[(h===0?a.length:h)-1]);t.length=0;let l=0;if(o<0)for(let h=0;h<a.length;h+=2)t.push(a[h],a[h+1],0),r.push(l++);else for(let h=a.length-2;h>=0;h-=2)t.push(a[h],a[h+1],0),r.push(l++);return s.push(l),{indices:r,verticesPerFace:s}}for(let a=0,o=(i=n.capStartIndex)!=null?i:e.length;a<o;)if(e[a+1]===e[a+3]&&e[a+2]===e[a+5]||e[a+0]===e[a+3]&&e[a+2]===e[a+4]){fl.set(t[e[a]*3],t[e[a]*3+1],t[e[a]*3+2]),Ec.set(t[e[a+1]*3],t[e[a+1]*3+1],t[e[a+1]*3+2]),Ac.set(t[e[a+4]*3],t[e[a+4]*3+1],t[e[a+4]*3+2]),Cc.set(t[e[a+5]*3],t[e[a+5]*3+1],t[e[a+5]*3+2]),Ec.sub(fl).normalize(),Ac.sub(fl).normalize(),Cc.sub(fl).normalize();let l=Ec.cross(Ac).dot(Cc);Math.abs(l)>.005?(r.push(e[a],e[a+1],e[a+2]),s.push(3),a+=3):(r.push(e[a],e[a+1],e[a+4],e[a+5]),s.push(4),a+=6)}else r.push(e[a],e[a+1],e[a+2]),s.push(3),a+=3;if(n.capStartIndex!==void 0){let a=[],o=[],l=0;for(let h=0,c=0;h<t.length;h+=3,c++)t[h+2]===0&&(a.push(c),l++),t[h+2]===n.userData.parameters.depth&&o.push(c);if(n.userData.parameters.extrudeBevelSize===0){let h=o[0];o[0]=o[1],o[1]=h}a.reverse(),r.push(...a,...o),s.push(l,l)}return{indices:r,verticesPerFace:s}}var ar={};o0(ar,{calcBoolean:()=>kR,calcBooleanTopological:()=>UR,freeMeshSet:()=>GR,getMeshSet:()=>VR,transformMeshSet:()=>HR});var BR=new Promise(t=>{}),rt,Hs;BR.then(t=>rt=t);function FR(t,e){let n,{positions:i,triIndices:r}=ry(t.getAttribute("position"),t.getIndex()),s;if(e){let{indices:a,verticesPerFace:o}=sy(i,r,t);s=o.length,n=[];for(let l=0,h=0;l<s;l++){n.push(o[l]);for(let c=0;c<o[l];c++)n.push(a[h++])}}else{let a=r.length;n=Array(a+a/3),s=0;for(let o=0,l=0;l<n.length;)n[l++]=3,s++,n[l++]=r[o++],n[l++]=r[o++],n[l++]=r[o++]}return{positions:i,faceIndices:n,nFaces:s}}function ay(t){let e=t.length,n=e*Uint32Array.BYTES_PER_ELEMENT,i=e*Float32Array.BYTES_PER_ELEMENT,r=Number.isInteger(t[0])?n:i,s=rt._malloc(r);return(Number.isInteger(t[0])?new Uint32Array(rt.HEAPU32.buffer,s,e):new Float32Array(rt.HEAPF32.buffer,s,e)).set(t,0),s}function oy(t){switch(t){case 0:return rt.OP.UNION;case 1:return rt.OP.INTERSECTION;case 2:return rt.OP.A_MINUS_B;case 3:return rt.OP.B_MINUS_A;case 4:return rt.OP.SYMMETRIC_DIFFERENCE;case 5:return rt.OP.ALL;default:throw new Error("Unknown boolean operation "+t)}}function UR(t,e){Hs===void 0&&(Hs=rt.init_csg());let n=ay(t),i=rt.csg_calc_topological(Hs,n,t.length,oy(e));rt._free(n);let r=6,s=rt.HEAPU32.subarray(i>>2,(i>>2)+r),a=s.subarray(3,3+3),o=0,l=rt.HEAPU32[s[o]>>2],h=new Float32Array(rt.HEAPF32.subarray(l>>2,(l>>2)+a[o]));o++;let c=rt.HEAPU32[s[o]>>2],d=new Uint32Array(rt.HEAPU32.subarray(c>>2,(c>>2)+a[o]));o++;let u=rt.HEAPU32[s[o]>>2],p=new Uint8Array(rt.HEAPU32.subarray(u>>2,(u>>2)+a[o]));return rt.free_mesh_data(i),{positions:h,indices:d,verticesPerFace:p}}function kR(t,e,n,i){Hs===void 0&&(Hs=rt.init_csg());let r=ay(t),s=rt.csg_calc(Hs,r,t.length,i,oy(e));rt._free(r);let a=5,o=rt.HEAPU32.subarray(s>>2,(s>>2)+a),l=o.subarray(2,2+3),h=0,c=rt.HEAPU32[o[h]>>2],d=rt.HEAPF32.subarray(c>>2,(c>>2)+l[h]);h++;let u=rt.HEAPU32[o[h]>>2],p=rt.HEAPF32.subarray(u>>2,(u>>2)+l[h]);h++;let m=l[h];n.setAttribute("position",new Pe(d,3)),n.setAttribute("normal",new Pe(p,3));let f=rt.HEAPF32.subarray((s>>2)+5,(s>>2)+5+6);return n.boundingSphere===null&&(n.boundingSphere=new Un),n.boundingSphere.center.set(f[0],f[1],f[2]),n.boundingSphere.radius=(f[3]**2+f[4]**2+f[5]**2)**.5,n.userData.parameters={width:f[3]*2,height:f[4]*2,depth:f[5]*2},rt.free_mesh_data(s),m}function VR(t,e){if(rt===void 0)return-1;let n,i,r;if(e&&t.userData.positions!==void 0){let m=t.userData;r=m.verticesPerFace.length,n=m.positions,i=Array(m.verticesPerFace.reduce((f,g)=>f+g,0)+r);for(let f=0,g=0,v=0;f<m.verticesPerFace.length;f++){i[v++]=m.verticesPerFace[f];for(let y=0;y<m.verticesPerFace[f];y++)i[v++]=m.indices[g++]}}else({positions:n,faceIndices:i,nFaces:r}=FR(t,e));let s=n.length,a=i.length,o=n.length,l=i.length,h=o*Float32Array.BYTES_PER_ELEMENT+l*Uint32Array.BYTES_PER_ELEMENT,c=o*Float32Array.BYTES_PER_ELEMENT,d=rt._malloc(h),u=new Float32Array(rt.HEAPF32.buffer,d,o),p=new Uint32Array(rt.HEAPU32.buffer,d+c,l);return u.set(n,0),p.set(i,0),rt.get_csg_mesh(d,s,d+c,a,r)}function HR(t,e){rt.transform_csg_mesh(t,e.elements)}function GR(t){rt.free_csg_mesh(t)}var ly={ConeGeometry:IP,CubeGeometry:NP,CylinderGeometry:OP,DodecahedronGeometry:BP,EllipseGeometry:uD,HelixGeometry:mD,IcosahedronGeometry:gD,LatheGeometry:vD,NonParametricGeometry:wD,PolygonGeometry:SD,PyramidGeometry:MD,RectangleGeometry:Av,SphereGeometry:AD,PlaneGeometry:CD,BackdropGeometry:LD,StarGeometry:DD,TextFrameGeometry:Cv,TorusGeometry:RD,TorusKnotGeometry:ID,TriangleGeometry:ND,VectorGeometry:Xi},Su=t=>ly[t.type].create(t),jm=new Re,WR=class extends Li{constructor(t=new Ve,e=new jr){super(t,e),this.booleanOp=2,this.phongAngle=35,this.meshSetAddresses=[],this.needsTransformForDownstream=!1,this.isBooleanMesh=!0,this.castShadow=!0,this.receiveShadow=!0,this.geometry.userData.parameters={width:0,height:0,depth:0},this.onAfterRender=this.recomputeBoolean.bind(this)}reInit(){this.isBooleanMesh=!0,this.meshSetAddresses=[],this.needsTransformForDownstream=!1,this.geometry.userData.parameters={width:0,height:0,depth:0},this.onAfterRender=this.recomputeBoolean.bind(this)}recomputeBoolean(t){var e;if(this.booleanMeshSetAddress!==-1)return;for(let i=0;i<this.children.length;i++){let r=this.children[i];qr(r)&&r.recomputeBoolean(t===!0)}this.meshSetAddresses=[];for(let i=0;i<this.children.length;i++){let r=this.children[i];if(IR(r)&&r.booleanExclude===!1&&((e=r.geometry.attributes.position)==null?void 0:e.count)>0&&r.geometry.drawRange.count>0){if(r.booleanMeshSetAddress===-1){if(r.booleanMeshSetAddress=ar.getMeshSet(r.geometry,t===!0),r.booleanMeshSetAddress===-1)return;ar.transformMeshSet(r.booleanMeshSetAddress,r.matrix),r.booleanMatrixInvOld.copy(r.matrix).invert(),r.booleanWasTransformed=!1}else qr(r)&&r.needsTransformForDownstream===!0?(ar.transformMeshSet(r.booleanMeshSetAddress,r.matrix),r.needsTransformForDownstream=!1):r.booleanWasTransformed===!0&&(jm.multiplyMatrices(r.matrix,r.booleanMatrixInvOld),ar.transformMeshSet(r.booleanMeshSetAddress,jm),r.booleanMatrixInvOld.copy(r.matrix).invert(),r.booleanWasTransformed=!1);this.meshSetAddresses.push(r.booleanMeshSetAddress)}}if(this.meshSetAddresses.length===0){this.geometry.setDrawRange(0,0);return}if(t===!0)return ar.calcBooleanTopological(this.meshSetAddresses,this.booleanOp);let n=this.geometry;n.dispose(),this.geometry=new Ve,this.geometry.userData=n.userData,this.geometry.boundingSphere=n.boundingSphere;try{this.booleanMeshSetAddress=ar.calcBoolean(this.meshSetAddresses,this.booleanOp,this.geometry,this.phongAngle)}catch(i){this.booleanMeshSetAddress=0,console.error(i)}this.booleanMatrixInvOld.copy(this.matrix).invert(),this.needsTransformForDownstream=!0}toJSON(t){let e=super.toJSON(t);return e.object.objectType="Mesh3D",e}updateGeometry(t){let e=t.parameters;e.operation!==void 0&&(this.booleanOp=e.operation),e.phongAngle!==void 0&&(this.phongAngle=e.phongAngle),this.invalidateDownstreamBooleanData().recomputeBoolean()}},bo=t=>{var e;return e=class extends t{constructor(){super(...arguments),this.isObjectHelper=!0}},e.geometryHelper=new ji(30,30,30),e},ml=new Jr,Lc=new Un,qm=new Re,_o=(t,e,n,i,r=!1)=>{let s=e,a=t.matrixWorld;if(s.boundingSphere===null&&s.computeBoundingSphere(),Lc.copy(s.boundingSphere),Lc.applyMatrix4(a),n.ray.intersectsSphere(Lc)===!1||(qm.copy(a).invert(),ml.copy(n.ray).applyMatrix4(qm),s.boundingBox!==null&&ml.intersectsBox(s.boundingBox)===!1))return;let o,l,h,c,d=s.index,u=s.attributes.position,p=s.drawRange,m,f;if(r===!1){let v=Math.max(0,p.start),y=Math.min(d.count,p.start+p.count);for(m=v,f=y;m<f;m+=3)if(l=d.getX(m),h=d.getX(m+1),c=d.getX(m+2),o=g(t,n,ml,u,l,h,c),o){o.faceIndex=Math.floor(m/3),i.push(o);return}}else{let v=s.attributes.position,y=new T,w=new T,S=new T,b=new T,_=2,E=1/((t.scale.x+t.scale.y+t.scale.z)/3),x=E*E,A=Math.max(0,p.start),M=Math.min(v.count,p.start+p.count);for(let C=A,F=M-1;C<F;C+=_){if(y.fromBufferAttribute(v,C),w.fromBufferAttribute(v,C+1),ml.distanceSqToSegment(y,w,b,S)>x)continue;b.applyMatrix4(t.matrixWorld);let W=n.ray.origin.distanceTo(b);W<n.near||W>n.far||i.push({distance:W,point:S.clone().applyMatrix4(t.matrixWorld),object:t})}}function g(v,y,w,S,b,_,E){let x=new T,A=new T,M=new T,C=new T,F=new T;if(x.fromBufferAttribute(S,b),A.fromBufferAttribute(S,_),M.fromBufferAttribute(S,E),w.intersectTriangle(x,A,M,!1,C)===null)return null;F.copy(C),F.applyMatrix4(v.matrixWorld);let W=y.ray.origin.distanceTo(F);return W<y.near||W>y.far?null:{faceIndex:1,distance:W,point:F.clone(),object:v}}},gl=new T,Nn=new ta,jR=class extends xr{constructor(t){let e=new Ve,n=new Hn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={},a=new Ae(15711266),o=new Ae(15711266),l=new Ae(2857471);h("n1","n2",a),h("n2","n4",a),h("n4","n3",a),h("n3","n1",a),h("f1","f2",a),h("f2","f4",a),h("f4","f3",a),h("f3","f1",a),h("n1","f1",a),h("n2","f2",a),h("n3","f3",a),h("n4","f4",a),h("p","n1",o),h("p","n2",o),h("p","n3",o),h("p","n4",o),h("u1","u2",l),h("u2","u3",l),h("u3","u1",l);function h(d,u,p){c(d,p),c(u,p)}function c(d,u){i.push(0,0,0),r.push(u.r,u.g,u.b),s[d]===void 0&&(s[d]=[]),s[d].push(i.length/3-1)}e.setAttribute("position",new Pe(i,3)),e.setAttribute("color",new Pe(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){let t=this.geometry,e=this.pointMap;Nn.projectionMatrixInverse.elements=[.5112609807824982,-0,-0,-0,-0,.41421356237309503,-0,-0,-0,-0,-0,-.099999,-0,-0,-1.0000000000000002,.100001];let n=1,i=1,r=.8;$n("n1",e,t,Nn,-n,-i,r),$n("n2",e,t,Nn,n,-i,r),$n("n3",e,t,Nn,-n,i,r),$n("n4",e,t,Nn,n,i,r);let s=r;$n("f1",e,t,Nn,-n,-i,s),$n("f2",e,t,Nn,n,-i,s),$n("f3",e,t,Nn,-n,i,s),$n("f4",e,t,Nn,n,i,s);let a=s,o=.5;$n("u1",e,t,Nn,n*.7*o,i*1.1,a),$n("u2",e,t,Nn,-n*.7*o,i*1.1,a),$n("u3",e,t,Nn,0,i*(1.1+.9*o),a),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}};function $n(t,e,n,i,r,s,a){gl.set(r,s,a).unproject(i);let o=e[t];if(o!==void 0){let l=n.getAttribute("position");for(let h=0,c=o.length;h<c;h++)l.setXYZ(o[h],gl.x,gl.y,gl.z)}}var qR=class extends bo(jR){constructor(t){super(t),this.object=t,this.object=t,this.name=`CombinedCameraHelper: ${t.uuid}`}updateMatrixWorld(t){super.updateMatrixWorld(t),this.updateTarget()}updateTarget(){let t=this.object.getTarget();this.updateWorldMatrix(!0,!1),this.worldToLocal(t)}raycast(t,e){_o(this.object,this.geometry,t,e,!0)}},hy=class extends bo(YM){constructor(t,e=15,n=10066329){super(t,e,n),this.object=t,this.added=!1,this.name=`DirectionalLightHelper: ${t.uuid}`}raycast(t,e){_o(this.object,hy.geometryHelper,t,e)}},cy=class extends bo(ZM){constructor(t,e=15){super(e),this.object=t,this.object.updateMatrixWorld(),this.name=`EmptyObjectHelper: ${t.uuid}`,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}raycast(t,e){_o(this.object,cy.geometryHelper,t,e)}update(){}},uy=class extends bo(JM){constructor(t,e=15,n=6710886){super(t,e,n),this.object=t,this.name=`PointLightHelper: ${t.uuid}`}raycast(t,e){_o(this.object,uy.geometryHelper,t,e)}},Mu=class extends bo(qM){constructor(t,e=6710886){super(t,e),this.object=t,this.name=`SpotLightHelper: ${t.uuid}`}raycast(t,e){_o(this.object,Mu.geometryHelper,t,e)}update(){if(this.object!==void 0){let t=Mu._vector,e=this.object.distance?this.object.distance:1e3,n=e*Math.tan(this.object.angle);this.cone.scale.set(n,n,e),t.setFromMatrixPosition(this.object.target.matrixWorld),this.cone.lookAt(t);let i=this.color!==void 0?this.color:this.light.color;if(this.cone.material instanceof Array)for(let r=0,s=this.cone.material.length;r<s;r++)this.cone.material[r].color.set(i);else this.cone.material.color.set(i)}}},dy=Mu;dy._vector=new T;var wo=(t,e)=>class extends t{constructor(){super(...arguments),this.objectHelper=new e(this),this.enableHelper=!1}set visibility(n){this.visible=n,this.setHelperVisibility(n),this.setHelperChildrenVisibility(n)}get visibility(){return this.visible}get geometryHelper(){return e.geometryHelper}setHelperVisibility(n){this.objectHelper.visible=n}setHelperChildrenVisibility(n){for(let i of this.children)wi(i)&&i.traverseEntity(r=>{xo(r)&&r.visible&&(r.objectHelper.visible=n)})}raycast(n,i){this.objectHelper.raycast(n,i)}copy(n,i=!0){return super.copy(n,i),n.enableHelper!==void 0&&(this.enableHelper=n.enableHelper),n.objectHelper!==void 0&&(this.objectHelper.visible=n.objectHelper.visible),this}toJSON(n){let i=super.toJSON(n),r=i.object;return r.enableHelper=this.enableHelper,i}fromJSON(n){return super.fromJSON(n),n.enableHelper!==void 0&&(this.enableHelper=!0),this}fromLightState(n,i){if(this.objectType==="LightDirectional"||this.objectType==="LightPoint"||this.objectType==="LightSpot"){let r=this;n.color!==void 0&&(r.color=gn(n.color,i)),n.intensity!==void 0&&(r.intensity=n.intensity),n.depth!==void 0&&(r.shadow.camera.far=n.depth,r.shadow.needsUpdate=!0),n.shadows!==void 0&&(this.castShadow=n.shadows),n.helper!==void 0&&(this.enableHelper=n.helper,r.gizmos.shadowmap.visible=n.helper)}return this}},Ts=new T,Pc=new T,Xl=class extends wo(fa(ta),qR){constructor(t=window.innerWidth,e=window.innerHeight,n=45,i,r=1e5){super(),this.objectType="CombinedCamera",this._cameraType="OrthographicCamera",this.targetOffset=ao.DefaultTargetOffset,this.isUpVectorFlipped=!1,this.angleOffsetFromUp=0,this.width=t,this.height=e,this.orthoCamera=new Ql(t*-.5,t*.5,e*.5,e*-.5,i!=null?i:-5e4,r),this.perspCamera=new un(n,t/e,i!=null?i:50,r),this.left=this.orthoCamera.left,this.right=this.orthoCamera.right,this.top=this.orthoCamera.top,this.bottom=this.orthoCamera.bottom,this.far=this.orthoCamera.far,this.view=this.orthoCamera.view,this.aspect=this.perspCamera.aspect,this.fov=this.perspCamera.fov,this.focus=this.perspCamera.focus,this.filmGauge=this.perspCamera.filmGauge,this.filmOffset=this.perspCamera.filmOffset,this.toOrthographic(!0)}static createFromState(t,e){let n=new Xl().fromState(e);return n.enableHelper=!0,n.objectHelper.update(),n.uuid=t,n}get isPerspectiveCamera(){return this.cameraType==="PerspectiveCamera"}get isOrthographicCamera(){return!this.isPerspectiveCamera}get cameraType(){return this._cameraType}setNear(t,e){t==="PerspectiveCamera"?this.perspCamera.near=e:this.orthoCamera.near=e}setZoom(t,e){e>=0&&(t==="PerspectiveCamera"?this.perspCamera.zoom=e:this.orthoCamera.zoom=e)}set cameraType(t){t==="PerspectiveCamera"?this.toPerspective():t==="OrthographicCamera"&&this.toOrthographic()}get near(){return this._cameraType==="PerspectiveCamera"?this.perspCamera.near:this.orthoCamera.near}set near(t){this._cameraType==="PerspectiveCamera"?this.perspCamera.near=t:this.orthoCamera.near=t}get zoom(){return this._cameraType==="PerspectiveCamera"?this.perspCamera.zoom:this.orthoCamera.zoom}set zoom(t){t>=0&&(this._cameraType==="PerspectiveCamera"?this.perspCamera.zoom=t:this.orthoCamera.zoom=t)}lookAt(t){super.lookAt(t),this.getWorldPosition(Ts),this.targetOffset=Ts.distanceTo(t)}getTarget(t=new T){return this.getWorldDirection(Pc),this.getWorldPosition(Ts),Pc.multiplyScalar(this.targetOffset),t.copy(Ts).add(Pc),t}getDistanceToTarget(){let t=this.getTarget();return this.getWorldPosition(Ts),Ts.distanceTo(t)}updateUp(){let t=this.getWorldQuaternion(new nn),e=new T(0,0,1).applyQuaternion(t),n=new T().copy(ot.DefaultUp);this.isUpVectorFlipped&&n.negate(),n.applyQuaternion(t);let i=new T().copy(ot.DefaultUp).projectOnPlane(e),r=new T().crossVectors(i,n).dot(e)>=0?1:-1;this.angleOffsetFromUp=i.angleTo(n)*r}getViewFrontToObject(t){let e=t.getWorldPosition(new T),n=t.getWorldDirection(new T).multiplyScalar(this.targetOffset);return{position:e.clone().add(n),target:e}}getViewToObject(t){let e=t.getWorldPosition(new T),n=this.getWorldDirection(new T).multiplyScalar(this.targetOffset);return{position:e.clone().sub(n),target:e}}setViewplaneSize(t,e){this.left=-t*.5,this.right=t*.5,this.top=e*.5,this.bottom=-e*.5,this.aspect=t/e,this.updateProjectionMatrix()}toOrthographic(t){this.orthoCamera.left=this.left,this.orthoCamera.right=this.right,this.orthoCamera.top=this.top,this.orthoCamera.bottom=this.bottom,this.orthoCamera.view=this.view,this.orthoCamera.far=this.far,this.orthoCamera.updateProjectionMatrix(),this.projectionMatrix=this.orthoCamera.projectionMatrix,this.projectionMatrixInverse=this.orthoCamera.projectionMatrixInverse,this._cameraType="OrthographicCamera",(this.enableHelper===!0||t===!0)&&this.objectHelper.update()}toPerspective(t){this.perspCamera.aspect=this.aspect,this.perspCamera.fov=this.fov,this.perspCamera.view=this.view,this.perspCamera.far=this.far,this.perspCamera.updateProjectionMatrix(),this.projectionMatrix=this.perspCamera.projectionMatrix,this.projectionMatrixInverse=this.perspCamera.projectionMatrixInverse,this._cameraType="PerspectiveCamera",(this.enableHelper===!0||t===!0)&&this.objectHelper.update()}setFocalLength(t){this.perspCamera.setFocalLength(t),this.toPerspective()}getFocalLength(){return this.perspCamera.getFocalLength()}getEffectiveFOV(){return this.perspCamera.getEffectiveFOV()}getFilmWidth(){return this.perspCamera.getFilmWidth()}getFilmHeight(){return this.perspCamera.getFilmHeight()}setViewOffset(t,e,n,i,r,s){this._cameraType==="PerspectiveCamera"?this.perspCamera.setViewOffset(t,e,n,i,r,s):this.orthoCamera.setViewOffset(t,e,n,i,r,s)}clearViewOffset(){this._cameraType==="PerspectiveCamera"?(this.perspCamera.clearViewOffset(),this.toPerspective()):(this.orthoCamera.clearViewOffset(),this.toOrthographic())}updateProjectionMatrix(t){this._cameraType==="PerspectiveCamera"?this.toPerspective(t):this._cameraType==="OrthographicCamera"&&this.toOrthographic(t)}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}copy(t,e){return super.copy(t,e),this.orthoCamera.copy(t.orthoCamera),this.perspCamera.copy(t.perspCamera),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.far=t.far,this.view=t.view===null?null:Object.assign({},t.view),this._cameraType=t._cameraType,this.aspect=t.aspect,this.fov=t.fov,this.focus=t.focus,this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this.targetOffset=t.targetOffset,this.updateProjectionMatrix(),this}fromCameraRender(t){let e={near:this.orthoCamera.near,far:this.orthoCamera.far},n={near:this.perspCamera.near,far:this.perspCamera.far};return this.copy(t),this.name="",this.enableHelper=!0,this.objectHelper.visible=!0,this.orthoCamera.near=e.near,this.orthoCamera.far=e.far,this.perspCamera.near=n.near,this.perspCamera.far=n.far,this.updateProjectionMatrix(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="CombinedCamera",n.cameraType=this.cameraType,n.targetOffset=this.targetOffset,n.isUpVectorFlipped=this.isUpVectorFlipped,n.angleOffsetFromUp=this.angleOffsetFromUp,n.left=this.left,n.right=this.right,n.top=this.top,n.bottom=this.bottom,this.view!==null&&(n.view=Object.assign({},this.view)),n.zoomOrtho=this.orthoCamera.zoom,n.nearOrtho=this.orthoCamera.near,n.far=this.far,n.aspect=this.aspect,n.fov=this.fov,n.focus=this.focus,n.filmGauge=this.filmGauge,n.filmOffset=this.filmOffset,n.zoomPersp=this.perspCamera.zoom,n.nearPersp=this.perspCamera.near,e}fromJSON(t){var e;if(super.fromJSON(t),this.cameraType=t.cameraType,t.targetOffset!==void 0&&(this.targetOffset=t.targetOffset),t.orbitControlsTarget!==void 0){let n=this.getWorldPosition(new T),i=new T().fromArray(t.orbitControlsTarget);this.targetOffset=i.distanceTo(n)}else t.targetOffset!==void 0&&(this.targetOffset=t.targetOffset);return this.isUpVectorFlipped=!1,this.angleOffsetFromUp=(e=t.angleOffsetFromUp)!=null?e:0,t.left!==void 0&&(this.left=t.left),t.right!==void 0&&(this.right=t.right),t.top!==void 0&&(this.top=t.top),t.bottom!==void 0&&(this.bottom=t.bottom),t.view!==void 0&&(this.view=Object.assign({},t.view)),t.zoomOrtho!==void 0&&(this.orthoCamera.zoom=t.zoomOrtho),t.nearOrtho!==void 0&&(this.orthoCamera.near=t.nearOrtho),t.far!==void 0&&(this.far=t.far),t.aspect!==void 0&&(this.aspect=t.aspect),t.fov!==void 0&&(this.fov=t.fov),t.focus!==void 0&&(this.focus=t.focus),t.filmGauge!==void 0&&(this.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(this.filmOffset=t.filmOffset),t.zoomPersp!==void 0&&(this.perspCamera.zoom=t.zoomPersp),t.nearPersp!==void 0&&(this.perspCamera.near=t.nearPersp),this.updateProjectionMatrix(),this}toCameraState(t=[]){let e={type:this.cameraType,far:this.far,orthographic:{near:this.orthoCamera.near,zoom:this.orthoCamera.zoom},perspective:{near:this.perspCamera.near,fov:this.perspCamera.fov,zoom:this.perspCamera.zoom},up:this.up.toArray(),targetOffset:this.targetOffset,isUpVectorFlipped:this.isUpVectorFlipped};return Yc(e,t)}fromCameraState(t){let{orthographic:e,perspective:n}=t;return t.type!==void 0&&(this.cameraType=t.type),t.far!==void 0&&(this.far=t.far),e!==void 0&&(e.near!==void 0&&(this.orthoCamera.near=e.near),e.zoom!==void 0&&(this.orthoCamera.zoom=e.zoom)),n!==void 0&&(n.near!==void 0&&(this.perspCamera.near=n.near),n.fov!==void 0&&(this.perspCamera.fov=n.fov),n.zoom!==void 0&&(this.perspCamera.zoom=n.zoom)),t.up!==void 0&&this.up.fromArray(t.up),t.targetOffset!==void 0&&(this.targetOffset=t.targetOffset),t.isUpVectorFlipped!==void 0&&(this.isUpVectorFlipped=t.isUpVectorFlipped),this.updateProjectionMatrix(),this}toState(t){return Ie(ve(ve({},super.toState(t)),this.toCameraState(t)),{type:this.cameraType})}fromState(t){return super.fromState(t),this.fromCameraState(t),this}},Jl=class extends wo(fa(Is),cy){constructor(){super(...arguments),this.objectType="EmptyObject"}static createFromState(t,e){let n=new Jl().fromState(e);return n.uuid=t,n.enableHelper=!0,n.objectHelper.update(),n}toJSON(t){let e=super.toJSON(t);return e.object.objectType="EmptyObject",e}},py=class extends wo(fa(e0),hy){constructor(...t){super(...t),this.objectType="LightDirectional",this._gizmos={},this.castShadow=!0,this.shadow.mapSize.width=2048,this.shadow.mapSize.height=2048,this.shadow.normalBias=1;let e=this.shadow.camera;e.top=1250,e.bottom=-1250,e.right=1250,e.left=-1250,e.near=-1e4,e.far=2500;let n=new or(this.shadow.camera);n.visible=!1,this._gizmos.shadowmap=n,this.update()}static createFromState(t,e,n){let i=new py().fromState(e,n);return i.uuid=t,i}get gizmos(){return this._gizmos}showGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof or&&(e.visible=!0)}}hideGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof or&&(e.visible=!1)}}update(){this.shadow.camera.updateProjectionMatrix();for(let t in this._gizmos){let e=this._gizmos[t];e instanceof or&&e.update()}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.enableHelper===!0&&this.objectHelper.visible===!0&&this.objectHelper.update()}copy(t,e=!0){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="LightDirectional",n.color=this.color.getHex(),n.intensity=this.intensity,n.shadow=this.shadow.toJSON(),e}fromJSON(t){var e;super.fromJSON(t),this.color.set(t.color),this.intensity=t.intensity,this.shadow.normalBias=(e=t.shadow.normalBias)!=null?e:0,this.shadow.radius=t.shadow.radius,this.shadow.mapSize.fromArray(t.shadow.mapSize);let n=this.shadow.camera,i=t.shadow.camera;return n.near=i.near,n.far=i.far,n.zoom=i.zoom,n.left=i.left,n.right=i.right,n.top=i.top,n.bottom=i.bottom,i.view!==void 0&&(n.view=Object.assign({},i.view)),this}fromDirectionalLightState(t,e){let n=t.depth!==void 0&&t.depth!==this.shadow.camera.far||t.size!==void 0&&t.size/2!==this.shadow.camera.right;return super.fromLightState(t,e),t.size!==void 0&&DR(this,t.size),t.shadowRadius!==void 0&&(this.shadow.radius=t.shadowRadius),t.shadowResolution!==void 0&&(this.shadow.mapSize.set(t.shadowResolution,t.shadowResolution),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null)),n&&this.update(),this}fromState(t,e){return super.fromState(t),this.fromDirectionalLightState(t,e),this}},fy=class extends wo(fa(Kg),uy){constructor(...t){super(...t),this.objectType="LightPoint",this._gizmos={},this.castShadow=!0,this.shadow.mapSize.width=1024,this.shadow.mapSize.height=1024,this.shadow.normalBias=1;let e=this.shadow.camera;e.fov=90,e.aspect=1,e.near=100,e.far=2500;let n=new T(-e.far+this.position.x,-e.far+this.position.y,-e.far+this.position.z),i=new T(e.far+this.position.x,e.far+this.position.y,e.far+this.position.z),r=new hn(n,i),s=new al(r,new Ae(16755200));s.visible=!1,this._gizmos.shadowmap=s,this.update()}static createFromState(t,e,n){let i=new fy().fromState(e,n);return i.uuid=t,i}get gizmos(){return this._gizmos}showGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof al&&(e.visible=!0)}}hideGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof al&&(e.visible=!1)}}update(){if(this.shadow&&(this.shadow.camera.updateProjectionMatrix(),this._gizmos))for(let t in this._gizmos){let e=this._gizmos[t];if(e instanceof al){let n=this.shadow.camera,i=new T(-n.far+this.position.x,-n.far+this.position.y,-n.far+this.position.z),r=new T(n.far+this.position.x,n.far+this.position.y,n.far+this.position.z);e.box.set(i,r),e.updateMatrixWorld(!0)}}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.enableHelper===!0&&this.objectHelper.visible===!0&&this.objectHelper.update()}copy(t,e=!0){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="LightPoint",n.color=this.color.getHex(),n.intensity=this.intensity,n.distance=this.distance,n.decay=this.decay,n.shadow=this.shadow.toJSON(),e}fromJSON(t){var e,n;super.fromJSON(t),this.color.set(t.color),this.intensity=t.intensity,this.distance=t.distance,this.decay=t.decay,this.shadow.normalBias=(e=t.shadow.normalBias)!=null?e:0,this.shadow.radius=t.shadow.radius,this.shadow.mapSize.fromArray((n=t.shadow.mapSize)!=null?n:[512,512]),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null);let i=this.shadow.camera,r=t.shadow.camera;return i.near=r.near,i.far=r.far,i.zoom=r.zoom,i.fov=r.fov,i.focus=r.focus,i.aspect=r.aspect,i.filmGauge=r.filmGauge,i.filmOffset=r.filmOffset,r.view!==void 0&&(i.view=Object.assign({},r.view)),this}fromPointLightState(t,e){return super.fromLightState(t,e),t.distance!==void 0&&(this.distance=t.distance),t.decay!==void 0&&(this.decay=t.decay),t.shadowRadius!==void 0&&(this.shadow.radius=t.shadowRadius),t.shadowResolution!==void 0&&(this.shadow.mapSize.set(t.shadowResolution,t.shadowResolution),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null)),this}fromState(t,e){return super.fromState(t),this.fromPointLightState(t,e),this}},Xm=new T,Jm=new T,$m=new nn,my=class extends wo(fa(Yg),dy){constructor(...t){super(...t),this.objectType="LightSpot",this._gizmos={},this.castShadow=!0,this.shadow.mapSize.width=1024,this.shadow.mapSize.height=1024,this.shadow.normalBias=1;let e=this.shadow.camera;e.fov=Mt.RAD2DEG*2*this.angle,e.aspect=1,e.near=100,e.far=2500;let n=new or(this.shadow.camera);n.visible=!1,this._gizmos.shadowmap=n,this.update()}static createFromState(t,e,n){let i=new my().fromState(e,n);return i.uuid=t,i}get gizmos(){return this._gizmos}showGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof or&&(e.visible=!0)}}hideGizmos(){for(let t in this._gizmos){let e=this._gizmos[t];e instanceof or&&(e.visible=!1)}}update(){this.shadow.camera.updateProjectionMatrix();for(let t in this._gizmos){let e=this._gizmos[t];e instanceof or&&e.update()}}updateMatrixWorld(t){super.updateMatrixWorld(t),Jm.setFromMatrixPosition(this.matrixWorld),$m.setFromRotationMatrix(this.matrixWorld),Xm.copy(this.up).applyQuaternion($m).negate().multiplyScalar(this.distance),this.target.position.copy(Jm).add(Xm),this.target.updateMatrixWorld(),this.enableHelper===!0&&this.objectHelper.visible===!0&&this.objectHelper.update()}copy(t,e=!0){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}toJSON(t){let e=super.toJSON(t),n=e.object;return n.objectType="LightSpot",n.color=this.color.getHex(),n.intensity=this.intensity,n.distance=this.distance,n.angle=this.angle,n.decay=this.decay,n.penumbra=this.penumbra,n.shadow=this.shadow.toJSON(),e}fromJSON(t){var e;super.fromJSON(t),this.color.set(t.color),this.intensity=t.intensity,this.distance=t.distance,this.angle=t.angle,this.decay=t.decay,this.penumbra=t.penumbra,this.shadow.normalBias=(e=t.shadow.normalBias)!=null?e:0,this.shadow.radius=t.shadow.radius,this.shadow.mapSize.fromArray(t.shadow.mapSize);let n=this.shadow.camera,i=t.shadow.camera;return n.near=i.near,n.far=i.far,n.zoom=i.zoom,n.fov=i.fov,n.focus=i.focus,n.aspect=i.aspect,n.filmGauge=i.filmGauge,n.filmOffset=i.filmOffset,i.view!==void 0&&(n.view=Object.assign({},i.view)),this}fromSpotLightState(t,e){return super.fromLightState(t,e),t.distance!==void 0&&(this.distance=t.distance),t.decay!==void 0&&(this.decay=t.decay),t.angle!==void 0&&(this.angle=t.angle),t.penumbra!==void 0&&(this.penumbra=t.penumbra),t.shadowRadius!==void 0&&(this.shadow.radius=t.shadowRadius),t.shadowResolution!==void 0&&(this.shadow.mapSize.set(t.shadowResolution,t.shadowResolution),this.shadow.map&&(this.shadow.map.dispose(),this.shadow.map=null)),this}fromState(t,e){return super.fromState(t),this.fromSpotLightState(t,e),this}},Ym=t=>t.tagName==="VIDEO",Tu=class{static resize(t,e,n){let i=t/e,r;if(!n.image)return;let s=n.image;Ym(s)?r=s.videoWidth/s.videoHeight:r=s.width/s.height,i>r&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1*r/i):n.repeat.set(1,1*r/i)),i<r&&(n.imageType=="WEBCAM"?n.repeat.set(1*i/r*-1,1):n.repeat.set(1*i/r,1)),i==r&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1):n.repeat.set(1,1))}static resizeTextureLayer(t,e,n){let i=t/e,r=n.image!==void 0?n.image.width/n.image.height:1,s;i>r?s={x:1,y:r/i}:i<r?s={x:i/r,y:1}:s={x:1,y:1},n.repeat.set(s.x,s.y),n.updateMatrix()}static resizeTextureLayers(t,e,n){let i=n.userData.layers,r=i.getLayers();for(let s=0;s<r.length;s++){let a=r[s];QD(a)&&(Tu.resizeTextureLayer(t,e,a.uniforms[`f${a.id}_texture`].value),i.updateLayerUniform())}}static resizeComplex(t,e,n,i){let r=t/e,s,a=n.image;Ym(a)?s=a.videoWidth/a.videoHeight:s=a.width/a.height,i.geometry.type.includes("Shape")?(r>s&&(n.imageType=="WEBCAM"?n.repeat.set(1/t*-1,1/e*s/r):n.repeat.set(1/t,1/e*s/r)),r<s&&(n.imageType=="WEBCAM"?n.repeat.set(1/t*r/s*-1,1/e):n.repeat.set(1/t*r/s,1/e)),r==s&&(n.imageType=="WEBCAM"?n.repeat.set(1/t*-1,1/e):n.repeat.set(1/t,1/e))):(r>s&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1*s/r):n.repeat.set(1,1*s/r)),r<s&&(n.imageType=="WEBCAM"?n.repeat.set(1*r/s*-1,1):n.repeat.set(1*r/s,1)),r==s&&(n.imageType=="WEBCAM"?n.repeat.set(-1,1):n.repeat.set(1,1)))}},gy=class extends Li{constructor(t,e=new Ji){super(t,e),this.objectType="Mesh2D",this.castShadow=!0,this.receiveShadow=!0}updateGeometry(t){super.updateGeometry(t),this.material.userData.layers&&Tu.resizeTextureLayers(this.geometry.userData.parameters.width,this.geometry.userData.parameters.height,this.material)}resizeGeometry(t,e){super.resizeGeometry(t,e,0),this.material.userData.layers&&Tu.resizeTextureLayers(this.geometry.userData.parameters.width,this.geometry.userData.parameters.height,this.material)}toJSON(t){let e=super.toJSON(t);return e.object.objectType="Mesh2D",e}clone(){let t=super.clone();return t.updateGeometry({}),t}static fromTexture(t){let e,n;if(t instanceof Ag){let s=t.image;e=s.videoWidth*.5,n=s.videoHeight*.5}else{let s=t.image;e=s.width*.5,n=s.height*.5}let i=Av.create({parameters:{width:e,height:n}}),r=new Ji;return r.layersList.changeLayer(0,{type:"texture",texture:t}),r.layersList.moveLayer(0,1),r.dispose(),new gy(i,r)}},vy=class extends Li{constructor(t,e=new jr){super(t,e),this.objectType="Mesh3D",this.castShadow=!0,this.receiveShadow=!0}toJSON(t){let e=super.toJSON(t);return e.object.objectType="Mesh3D",e}},yy=class extends vy{constructor(t,e=new jr){super(t,e),this.objectType="NonParametric"}toJSON(t){let e=super.toJSON(t);return e.object.objectType="NonParametric",e}},jt=class extends ln{constructor({char:t,originalChar:e,fontFamily:n,letterSpacing:i,fontSize:r,LOD:s=16},a=new mr({color:0,opacity:1,visible:!0,transparent:!0,side:Pn})){let o=jt.loadChar(t,n,s);super(o.geometry,a),this.char=t,this.originalChar=e!=null?e:t,this.fontFamily=n,this.letterSpacing=i,this.fontSize=r,this.LOD=s,this.resolution=o.resolution,this.glyphsHa=o.glyphsHa,this.localPosition=new q,this.charSize=0,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}static get FONTS_PATH(){return jt._fontPath}static set FONTS_PATH(t){jt._fontPath=t}updatePosition(t,e){this.localPosition.copy(t);let n=new T(this.localPosition.x,-this.localPosition.y,0);this.position.copy(n).add(e)}updateFontSize(t){let e=t/this.resolution;this.fontSize=t,this.scale.set(this.fontSize,this.fontSize,1),this.charSize=this.glyphsHa*e*this.letterSpacing}updateFontFamily(t){if(this.fontFamily===t)return;this.fontFamily=t;let e=jt.loadChar(this.char,t,this.LOD);this.geometry=e.geometry,this.resolution=e.resolution,this.glyphsHa=e.glyphsHa,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}updateChar(t){if(this.char===t)return;this.char=t;let e=jt.loadChar(t,this.fontFamily,this.LOD);this.geometry=e.geometry,this.resolution=e.resolution,this.glyphsHa=e.glyphsHa,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}updateLetterSpacing(t){this.letterSpacing!==t&&(this.letterSpacing=t,this.updateFontSize(this.fontSize))}updateLOD(t){if(this.LOD===t)return;this.LOD=t;let e=jt.loadChar(this.char,this.fontFamily,this.LOD);this.geometry=e.geometry,this.resolution=e.resolution,this.glyphsHa=e.glyphsHa,this.geometry.userData={type:"CharacterGeometry",parameters:{char:this.char,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,lod:this.LOD,resolution:this.resolution,charSize:this.charSize,localPosition:this.localPosition}},this.updateFontSize(this.fontSize)}clone(){let t={char:this.char,originalChar:this.originalChar,fontFamily:this.fontFamily,letterSpacing:this.letterSpacing,fontSize:this.fontSize,LOD:this.LOD};return new jt(t).copy(this)}static loadFont(t){return new Promise(function(e,n){jt.fontCache[t]?e(jt.fontCache[t]):new nT().load(jt.FONTS_PATH+t+".json",i=>{jt.fontCache[t]=i,e(i)},void 0,n)})}static loadChar(t,e,n){if(jt.charCache[t]){if(jt.charCache[t][n]&&jt.charCache[t][n].fontFamily===e)return jt.charCache[t][n]}else jt.charCache[t]={};let i=jt.fontCache[e],r=i.generateShapes(t,1);return jt.charCache[t][n]={geometry:new oh(r,n),fontFamily:e,resolution:i.data.resolution,glyphsHa:i.data.glyphs[t].ha},jt.charCache[t][n]}},zn=jt;zn.charCache={},zn.fontCache={},zn._fontPath="/_assets/_fonts/";var vl=new q,Tl=class{constructor(t,e,n){this.message=[],this.endLine=!0,this.yLinePos=t,this.lineHeight=e,this.maxCharSize=n,this.nextChar3DPos=new q(0,this.yLinePos+this.maxCharSize*this.lineHeight),this.align=1}addChar3D(t,e,n=this.message.length){this.message.splice(n,0,t),t.fontSize>this.maxCharSize?(this.maxCharSize=t.fontSize,this.nextChar3DPos.y=this.yLinePos+this.maxCharSize*this.lineHeight,this.fullUpdate(e)):(t.updatePosition(this.nextChar3DPos,e),this.nextChar3DPos.x+=t.charSize)}deleteChar3D(t=this.message.length-1){let e=this.message[t];if(e)return this.message.splice(t,1),this.nextChar3DPos.x-=e.charSize,e}isEndLine(t){this.endLine=t}fullUpdate(t,e=0){this.nextChar3DPos.x=0;for(let n=e,i=this.message.length;n<i;n+=1)this.message[n].updatePosition(this.nextChar3DPos,t),this.nextChar3DPos.x+=this.message[n].charSize}checkOverFlow(t){let e,n=this.message.length-1;if(n<=0)return!1;for(;n>=0;){if(this.message[n].char!==" "){e=this.message[n];break}n-=1}return!!(n>=0&&e&&e.localPosition.x+e.charSize>t)}containSpaceOverFlow(t=this.message.length-1){for(let e=t;e>=0;e-=1)if(this.message[e].char===" ")return!0;return!1}containSpace(t=this.message.length-1){if(this.endLine)return!0;for(let e=t;e>=0;e-=1)if(this.message[e].char===" ")return!0;return!1}popWord(t=this.message.length-1){let e=[],n=!0,i;for(i=t;i>=0;i-=1)if(this.message[i].char===" "){n=!1,e.length===0&&(i-=1,e.splice(0,0,this.message[i]));break}else e.splice(0,0,this.message[i]);return n?e=[]:this.message.splice(i+1,e.length),e}getWord(t=0,e=1){let n=[],i=t;for(i=t;;i+=e){if(!this.message[i]||this.message[i].char===" "){n.length===0&&this.message[i]&&(n.push(this.message[i]),this.message.splice(i,1));break}e>0?(n.push(this.message[i]),this.message.splice(i,1),i-=e):(n.splice(0,0,this.message[i]),this.message.splice(i,1))}return n}getWordAtIndex(t){let e=[];for(let n=t;n<this.message.length&&this.message[n].char!==" ";n++)e.push(this.message[n]);for(let n=t-1;n>=0&&this.message[n].char!==" ";n--)e.splice(0,0,this.message[n]);return e}wordSize(t=0,e=-1){let n=0,i=t;for(;i>=0&&i<this.message.length;){if(this.message[i].char===" "){n===0&&(n=this.message[i].charSize);break}n+=this.message[i].charSize,i+=e}return(i<0||i>=this.message.length)&&!this.endLine?this.message[t]?this.message[t].charSize:999999999:n===0?999999999:n}spaceLeft(t){return t-this.nextChar3DPos.x}popChar(t=this.message.length-1){return this.nextChar3DPos.x-=this.message[t].charSize,this.message.splice(t,1)}isEmpty(){return!this.message.length}updateNextCharPosY(){this.nextChar3DPos.y=this.yLinePos+this.maxCharSize*this.lineHeight}updateYLinePos(t){this.yLinePos=t,this.updateNextCharPosY()}updatelineHeight(t){this.lineHeight=t,this.updateNextCharPosY()}updateFontSize(t,e=0,n=this.message.length-1){for(let i=e;i<=n;i+=1)this.message[i].updateFontSize(t);this.maxCharSize=t,this.nextChar3DPos.y=this.yLinePos+this.maxCharSize*this.lineHeight}countSpaces(){let t=0;for(let e=0;e<this.message.length;e++)this.message[e].char===" "&&(t+=1);return t}alignText(t,e,n,i,r){switch(n){case 1:this.leftAlign(t,r);break;case 3:this.centerAlign(this.spaceLeft(e),t,r);break;case 2:this.rightAlign(this.spaceLeft(e),t,r);break;case 4:this.justifyAlign(this.spaceLeft(e),t,r);break}}offsetCharacters(t,e,n){vl.set(e,n);let i=this.message.length;for(let r=0;r<i;r++)this.message[r].updatePosition(this.message[r].localPosition.add(vl),t)}leftAlign(t,e){this.align=1,this.offsetCharacters(t,0,e)}centerAlign(t,e,n){this.align=3,this.offsetCharacters(e,t/2,n)}rightAlign(t,e,n){this.align=2,this.offsetCharacters(e,t,n)}justifyAlign(t,e,n){if(this.align=4,this.endLine){this.offsetCharacters(e,0,n);return}let i=this.countSpaces();if(i===0){this.offsetCharacters(e,0,n);return}let r=t/i,s=0;for(let a=0;a<this.message.length;a++)this.message[a].char===" "&&(s+=r),vl.set(s,n),this.message[a].updatePosition(this.message[a].localPosition.add(vl),e)}clone(){let t=new Tl(this.yLinePos,this.lineHeight,this.maxCharSize);t.nextChar3DPos=this.nextChar3DPos.clone(),t.align=this.align,t.endLine=this.endLine;for(let e=0;e<this.message.length;e++)t.message.push(this.message[e].clone());return t}},xy=class extends Li{constructor(t,e=new Ji({transparent:!0,opacity:1,visible:!1,side:Pn})){super(t,e),this.objectType="TextFrame",this.charContainer=new ot,this.add(this.charContainer),this.material.visible=!1,this._geometryUserData=t.userData,this.userData.textFrame={hexColor:null,opacity:1,visible:!0,text:"",fontSize:16,lineHeight:1.5,letterSpacing:1,fontFamily:"roboto_regular",textTransform:1,horizontalAlignment:1,verticalAlignment:1,LOD:16,maxLineSize:this._geometryUserData.parameters.width,textOrigin:new T(this._geometryUserData.parameters.width*-.5,this._geometryUserData.parameters.height*.5,0),textLines:[]},this.createTextLine()}static createFromState(t,e,n){let i=Cv.create({parameters:{width:e.width,height:e.height}}),r=new xy(i).fromState(e,n);return r.uuid=t,r}async updateText(t){this.clearText();let e=this.userData.textFrame,n=e.fontFamily;await zn.loadFont(n),e.text=t;let i=e.textOrigin,r=new mr({visible:e.visible,transparent:!0,side:Pn}),s=t.split(`
`),a=0;this.userData.textFrame.textLines=s.map((o,l)=>{let h=new Tl(a,e.lineHeight,e.fontSize);return h.message=o.split("").map(c=>{let d={char:c,fontFamily:n,letterSpacing:e.letterSpacing,fontSize:e.fontSize,LOD:16},u=r.clone();u.color=e.hexColor,u.opacity=e.opacity;let p=new zn(d,u);return h.addChar3D(p,i),this.charContainer.add(p),p}),a+=h.maxCharSize*h.lineHeight,h}),this.textFullUpdate(),this.checkOverFlow()}clearText(){let t=this.userData.textFrame.textLines;for(;this.charContainer.children.length;){let e=this.charContainer.children[0];this.charContainer.remove(e)}for(;t.length;)t.pop()}raycast(t,e){let n=[];if(super.raycast(t,n),n.length>0){e.push(n[0]);return}let i=[];for(let r=0,s=this.charContainer.children.length;r<s;++r)if(this.charContainer.children[r]instanceof zn&&(t.intersectObject(this.charContainer.children[r],!1,i),i.length>0)){i[0].object=this,e.push(i[0]);return}}updateGeometry(t){var e,n,i,r;let s=this.userData,a=this.geometry.userData,o=a.parameters.width,l=a.parameters.height,h=(n=(e=t.parameters)==null?void 0:e.width)!=null?n:o,c=(r=(i=t.parameters)==null?void 0:i.height)!=null?r:l,d=s.textFrame;super.updateGeometry(t),d.maxLineSize=h,d.textOrigin.set(-.5*h,.5*c,0),c!==l?(this.checkOverFlow(),this.checkCapacity()):h!==o&&(o<h?this.checkCapacity():o>h&&this.checkOverFlow())}checkOverFlow(t=0){let e=this.userData,n=e.textFrame.textOrigin,i=e.textFrame.textLines;for(let r=t;r<i.length;r++){i[r].updateYLinePos(this.getNewLinePosition(r)),i[r].fullUpdate(n);let s=[];for(;i[r].checkOverFlow(e.textFrame.maxLineSize);)i[r].containSpaceOverFlow()?s.unshift(i[r].getWord(i[r].message.length-1,-1)):s.unshift(i[r].popChar());if(s.length>0){i[r+1]===void 0?(i[r].isEndLine(!1),this.createTextLine()):i[r].endLine&&(this.createTextLine(r+1),i[r].isEndLine(!1),i[r+1].isEndLine(!0));let a=0;for(let o=0;o<s.length;o+=1)for(let l=0;l<s[o].length;l+=1)i[r+1].addChar3D(s[o][l],n,a),a+=1;i[r+1].fullUpdate(n)}i[r].fullUpdate(n)}this.textFullUpdate(t)}checkCapacity(t=0){let e=this.userData,n=e.textFrame.textOrigin,i=e.textFrame.maxLineSize,r=e.textFrame.textLines;for(let s=t;s<r.length;s+=1)if(r[s].updateYLinePos(this.getNewLinePosition(s)),r[s].fullUpdate(n),!!r[s-1])for(;!r[s-1].endLine;){let a,o=r[s-1].spaceLeft(i);if(r[s].wordSize(0,1)<=o){r[s].containSpace()?a=r[s].getWord(0,1):a=r[s].popChar(0);for(let l=0;l<a.length;l+=1)a[l]&&r[s-1].addChar3D(a[l],n)}else{r[s].isEmpty()?(r[s].endLine&&r[s-1].isEndLine(!0),r.splice(s,1),s-=1):(r[s].updateYLinePos(this.getNewLinePosition(s)),r[s].fullUpdate(n));break}}this.textFullUpdate(t)}createTextLine(t=this.userData.textFrame.textLines.length){let e=this.userData.textFrame;e.textLines.splice(t,0,new Tl(this.getNewLinePosition(t),e.lineHeight,e.fontSize))}textFullUpdate(t=0){let e=this.userData.textFrame,n=e.textLines,i=this.getVerticalAlignmentOffSet();for(let r=t;r<n.length;r++)n[r].updateYLinePos(this.getNewLinePosition(r)),n[r].fullUpdate(e.textOrigin),n[r].alignText(e.textOrigin,e.maxLineSize,e.horizontalAlignment,e.verticalAlignment,i)}getVerticalAlignmentOffSet(){switch(this.userData.textFrame.verticalAlignment){case 1:return 0;case 2:return this.getRemainingVerticalSpace()/2;case 3:return this.getRemainingVerticalSpace();default:return 0}}getRemainingVerticalSpace(){let t=this.userData.textFrame.textLines;return this.geometry.userData.parameters.height-this.getNewLinePosition(t.length)}getNewLinePosition(t){let e=this.userData.textFrame.textLines,n=0;for(let i=0;i<t;i+=1)n+=e[i].maxCharSize*e[i].lineHeight;return n}updateColor(t){var e;let n=this.userData;n.textFrame.hexColor=t;let i=n.textFrame.textLines;for(let r=0;r<i.length;r++){let s=i[r].message;for(let a=0;a<s.length;a++){let o=s[a].material;(e=o.color)!=null&&e.isColor&&(o.color=t)}}}updateOpacity(t){let e=this.userData;e.textFrame.opacity=t;let n=e.textFrame.textLines;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++){let a=r[s].material;a.opacity=t}}}updateVisible(t){let e=this.userData;e.textFrame.visible=t;let n=e.textFrame.textLines;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++){let a=r[s].material;a.visible=t}}}async updateFontFamily(t){await zn.loadFont(t);let e=this.userData.textFrame,n=e.textLines;e.fontFamily=t;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)r[s].updateFontFamily(t)}this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateFontSize(t){let e=this.userData.textFrame,n=e.textLines,i=e.fontSize;e.fontSize=t;for(let r=0;r<n.length;r++)n[r].updateFontSize(t);this.textFullUpdate(),t>i?this.checkOverFlow():t<i&&this.checkCapacity()}async updateTextTransform(t){let e=this.userData.textFrame;await zn.loadFont(e.fontFamily);let n=e.textLines;switch(e.textTransform=t,t){case 2:for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)n[i].message[s].updateChar(r[s].char.toUpperCase())}break;case 3:for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)n[i].message[s].updateChar(r[s].char.toLowerCase())}break;default:for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)n[i].message[s].updateChar(r[s].originalChar)}}this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateLetterSpacing(t){let e=this.userData,n=e.textFrame.textLines;e.textFrame.letterSpacing=t;for(let i=0;i<n.length;i++){let r=n[i].message;for(let s=0;s<r.length;s++)r[s].updateLetterSpacing(t)}this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateLOD(t){let e=this.userData;e.textFrame.LOD=t;let n=e.textFrame.textLines;for(let i=0;i<n.length;i++);this.textFullUpdate(),this.checkOverFlow(),this.checkCapacity()}updateLineHeight(t){let e=this.userData,n=e.textFrame.textLines;e.textFrame.lineHeight=t;for(let i=0;i<n.length;i++)n[i].updatelineHeight(t);this.textFullUpdate()}updateVerticalAlignment(t){let e=this.userData;e.textFrame.verticalAlignment=t,this.textFullUpdate()}updateHorizontalAlignment(t){let e=this.userData;e.textFrame.horizontalAlignment=t,this.textFullUpdate()}toJSON(t){let e=super.toJSON(t),n=e.object;n.objectType="TextFrame";let i=this.userData.textFrame.textLines.map(r=>{let s=r.message.map(a=>({char:a.char,originalChar:a.originalChar,fontFamily:a.fontFamily,letterSpacing:a.letterSpacing,fontSize:a.fontSize,LOD:a.LOD}));return{align:r.align,endLine:r.endLine,lineHeight:r.lineHeight,maxCharSize:r.maxCharSize,yLinePos:r.yLinePos,message:s}});return n.userData.textFrame.textLinesData=i,e}async fromJSONasync(t){if(super.fromJSON(t),t.userData!==void 0){let e=t.userData.textFrame;await zn.loadFont(e.fontFamily),e.textOrigin=new T(e.textOrigin.x,e.textOrigin.y,e.textOrigin.z);let n=new mr({color:e.hexColor,opacity:e.opacity,visible:e.visible,transparent:!0,side:Pn});e.textLinesData&&(e.textLines=e.textLinesData.map((i,r)=>{let s=new Tl(Number(i.yLinePos),Number(i.lineHeight),Number(i.maxCharSize)),a=i.message.map((o,l)=>{if(o.char===void 0){let d=e.textLines[r].message[l];if("geometries"in d){let u=d.geometries[0].userData.parameters;Object.assign(o,{LOD:u.lod,char:u.char,fontFamily:u.fontFamily,fontSize:u.fontSize,letterSpacing:u.letterSpacing,originalChar:u.char})}}let h={char:o.char,fontFamily:o.fontFamily,letterSpacing:Number(o.letterSpacing),fontSize:Number(o.fontSize),LOD:o.LOD},c=new zn(h,n.clone());return s.addChar3D(c,e.textOrigin),this.charContainer.add(c),c});return s.message=a,s}),this.userData.textFrame=e),this.textFullUpdate()}return this}fromTextFrameData(t,e){if(t.color!==void 0){let n=gn(t.color,e);this.updateColor(n),this.updateOpacity(n.a)}t.alpha!==void 0&&this.updateOpacity(t.alpha),t.font!==void 0&&this.updateFontFamily(t.font),t.horizontalAlign!==void 0&&this.updateHorizontalAlignment(t.horizontalAlign),t.verticalAlign!==void 0&&this.updateVerticalAlignment(t.verticalAlign),t.textTransform!==void 0&&this.updateTextTransform(t.textTransform),t.fontSize!==void 0&&this.updateFontSize(t.fontSize),t.lineHeight!==void 0&&this.updateLineHeight(t.lineHeight),t.letterSpacing!==void 0&&this.updateLetterSpacing(t.letterSpacing),t.text!==void 0&&t.text!==""&&this.updateText(t.text),(t.width!==void 0||t.height!==void 0)&&this.updateGeometry({parameters:{width:t.width,height:t.height}})}fromState(t,e){return super.fromState(t),this.fromTextFrameData(t,e),this}convertToVector(){let{fontFamily:t,hexColor:e}=this.userData.textFrame,n=new Jl;n.name="Text Shape";let i=zn.fontCache[t];for(let r of this.charContainer.children)r instanceof zn&&i.generateShapes(r.char,1).forEach(s=>{let a=new Bt().fromShape(s);a.applyScale(r.scale.x,r.scale.y);let o=Xi.create({shape:a}),l=new Ji({side:Pn});l.color=e;let h=new Ad(o,l);h.name=r.char,h.position.copy(r.position),h.rotation.copy(r.rotation),n.attach(h)});return n}},El=xy;El.VerticalAlign=uv,El.HorizontalAlign=cv,El.TextTransform=dv;var XR=vT(yT()),Eu;Pv.then(t=>{Eu=t});var by=new Re,JR=new Re,$R=new Re,Yn=new hn,sr=new T,YR=new Re,ZR=new Re,_y=class extends Li{constructor(t,e,n,i=new jr){super(n!=null?n:e,i),this.subdivPointer=t,this.originalGeometry=e,this.subdividedGeometry=n,this.objectType="SubdivObject",this.hiddenMatrixOld=new Re,this.smoothShading=!0,this.phongAngle=35,this.matrixWorldRigid=new Re,this.castShadow=!0,this.receiveShadow=!0,this.forceComputeSize=!1}static createFromState(t,e,n){let{subdivPointer:i,originalGeometry:r,subdividedGeometry:s}=ei.build(e.geometry,void 0,void 0,!e.flatShading),a=Ed(e.material,n),o=new _y(i,r,s||void 0,a);return e.geometry.phongAngle!==void 0&&(o.phongAngle=e.geometry.phongAngle),o.calcBoundingBox(),o.freeSubdivPointer(),o.uuid=t,o.fromState(e),o}shallowClone(t){return new yy(this.geometry,this.material).shallowCopy(this,t)}toJSON(t){let e=super.toJSON(t);return e.object.objectType="SubdivObject",e}buildFromStore(t,e){var n,i,r;let{originalGeometry:s,subdividedGeometry:a,subdivPointer:o}=ei.build(t,e,this.subdivPointer,this.smoothShading,this.shearScale);if(t.phongAngle!==void 0&&(this.phongAngle=t.phongAngle),this.subdivPointer=o,s!==void 0&&((n=this.originalGeometry)==null||n.dispose(),this.originalGeometry=s),a!==void 0&&((i=this.subdividedGeometry)==null||i.dispose(),this.subdividedGeometry=a!=null?a:void 0),this.geometry=(r=this.subdividedGeometry)!=null?r:this.originalGeometry,this.cloner)for(let l of this.cloner.children)l.geometry=this.geometry;t.width&&(this.geometry.userData.parameters={width:t.width,height:t.height,depth:t.depth})}updateMesh(t=!1){ei.buildLevel(this.subdivPointer,!0,this.smoothShading?this.phongAngle:-1,this.originalGeometry,t?this.shearScaleInv:void 0),this.subdividedGeometry&&ei.buildLevel(this.subdivPointer,!1,this.smoothShading?this.phongAngle:-1,this.subdividedGeometry,t?this.shearScaleInv:void 0)}updateTopology(){var t;this.originalGeometry.dispose(),this.originalGeometry=ei.buildLevel(this.subdivPointer,!0,this.smoothShading?this.phongAngle:-1),this.subdividedGeometry&&(this.subdividedGeometry.dispose(),this.subdividedGeometry=ei.buildLevel(this.subdivPointer,!1,this.smoothShading?this.phongAngle:-1)),this.geometry=(t=this.subdividedGeometry)!=null?t:this.originalGeometry}raycast(t,e){var n;this.geometry=this.originalGeometry,Li.prototype.raycast.call(this,t,e),this.geometry=(n=this.subdividedGeometry)!=null?n:this.originalGeometry}updateMatrixWorldSVD(){let t=this.matrixWorld.elements,e=[[t[0],t[4],t[8]],[t[1],t[5],t[9]],[t[2],t[6],t[10]]],{u:n,v:i,q:r}=(0,XR.SVD)(e),s=by.set(n[0][0],n[0][1],n[0][2],0,n[1][0],n[1][1],n[1][2],0,n[2][0],n[2][1],n[2][2],0,0,0,0,1),a=JR.set(i[0][0],i[0][1],i[0][2],0,i[1][0],i[1][1],i[1][2],0,i[2][0],i[2][1],i[2][2],0,0,0,0,1),o=$R.copy(a).transpose();this.shearScale=YR.makeScale(r[0],r[1],r[2]).multiply(o).premultiply(a),this.shearScaleInv=ZR.copy(this.shearScale).invert(),this.matrixWorldRigid.multiplyMatrices(s,o),r.every(l=>Math.abs(r[0]-l)<.01)&&(this.shearScale=void 0,this.shearScaleInv=void 0)}activateSVDCompensation(){this.shearScale!==void 0&&(this.matrixAutoUpdate=!1,this.matrix.copy(this.matrixWorldRigid).copyPosition(this.matrixWorld),this.hiddenMatrixOld.copy(this.hiddenMatrix),this.hiddenMatrix.copy(this.parent.matrixWorld).invert())}deactivateSVDCompensation(){this.shearScale!==void 0&&(this.shearScale=void 0,this.shearScaleInv=void 0,this.matrixAutoUpdate=!0,this.hiddenMatrix.copy(this.hiddenMatrixOld))}calcBoundingBox(){let t=this.originalGeometry;t.boundingSphere===null&&(t.boundingSphere=new Un);let e=t.attributes.position,n=t.boundingSphere.center;Yn.setFromBufferAttribute(e),Yn.getCenter(n),t.boundingSphere.radius=n.distanceTo(Yn.max),isNaN(t.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this),Yn.getSize(sr);let i={width:sr.x,height:sr.y,depth:sr.z};return this.geometry.userData.parameters=i,i}updateBoundingBox(t){let e=this.originalGeometry;Yn.min.set(t[0],t[2],t[4]),Yn.max.set(t[1],t[3],t[5]),this.shearScaleInv&&(Yn.min.applyMatrix4(this.shearScaleInv),Yn.max.applyMatrix4(this.shearScaleInv)),e.boundingSphere===null&&(e.boundingSphere=new Un);let n=e.boundingSphere.center;Yn.getCenter(n),e.boundingSphere.radius=n.distanceTo(Yn.max),isNaN(e.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this),Yn.getSize(sr);let i={width:sr.x,height:sr.y,depth:sr.z};return this.geometry.userData.parameters=i,i}freeSubdivPointer(){this.subdivPointer&&(Eu.free_bvh(this.subdivPointer),Eu.free_subdivision_surface(this.subdivPointer),this.subdivPointer=0)}updateGeometry(t){this.geometry.userData.scale||(this.geometry.userData.scale=Array(3)),this.geometry.userData.scale[0]=this.geometry.userData.parameters.width===0?1:t.parameters.width/this.geometry.userData.parameters.width,this.geometry.userData.scale[1]=this.geometry.userData.parameters.height===0?1:t.parameters.height/this.geometry.userData.parameters.height,this.geometry.userData.scale[2]=this.geometry.userData.parameters.depth===0?1:t.parameters.depth/this.geometry.userData.parameters.depth,Zm(this.originalGeometry.attributes,...this.geometry.userData.scale),this.originalGeometry.attributes.position.needsUpdate=!0,this.originalGeometry.attributes.normal.needsUpdate=!0,this.subdividedGeometry&&(Zm(this.subdividedGeometry.attributes,...this.subdividedGeometry.userData.scale),this.subdividedGeometry.attributes.position.needsUpdate=!0,this.subdividedGeometry.attributes.normal.needsUpdate=!0),this.geometry.userData.parameters=ve({},t.parameters)}};function Zm(t,e,n,i){let r=t.position.array,s=t.normal.array,a=by.makeScale(e,n,i).invert().elements,o,l,h;for(var c=0,d=r.length;c<d;c+=3)r[c]*=e,r[c+1]*=n,r[c+2]*=i,o=s[c],l=s[c+1],h=s[c+2],s[c]=a[0]*o+a[4]*l+a[8]*h,s[c+1]=a[1]*o+a[5]*l+a[9]*h,s[c+2]=a[2]*o+a[6]*l+a[10]*h}function Km(t,e){e.flatShading!==void 0&&(t.flatShading=e.flatShading,t.needsUpdate=!0),e.wireframe!==void 0&&(t.wireframe=e.wireframe),e.side!==void 0&&(e.side===0?t.side=kr:e.side===1?t.side=Fn:t.side=Pn)}function KR(t,e){if(Array.isArray(t.material))for(let n of t.material)Km(n,e);else{let n=t.material;Km(n,e)}t.objectType==="SubdivObject"&&e.flatShading!==void 0&&(t.material.flatShading=!1,t.smoothShading=!e.flatShading,t.updateMesh())}function QR(t,e,n){let i;if(e.geometry.type==="SubdivGeometry")i=_y.createFromState(t,e,n);else{let r=e.geometry.type==="BooleanGeometry"?new Ve:iy(e.geometry),s="materials"in e?SR(e.materials,n):Ed(e.material,n);pu.is2DParametricMesh(r.userData.type)?i=new gy(r,s):(r==null?void 0:r.userData.type)==="VectorGeometry"?i=new Ad(r,s):e.geometry.type==="NonParametricGeometry"?i=new yy(r,s):e.geometry.type==="BooleanGeometry"?(i=new WR(void 0,s),i.booleanOp=e.geometry.operation,e.geometry.phongAngle!==void 0&&(i.phongAngle=e.geometry.phongAngle)):i=new vy(r,s),i.uuid=t,i.fromState(e)}return KR(i,e),i}function eO(t,e,n){return e.type==="Mesh"?QR(t,e,n):e.type==="TextFrame"?El.createFromState(t,e,n):e.type==="Empty"?Jl.createFromState(t,e):e.type==="PointLight"?fy.createFromState(t,e,n):e.type==="SpotLight"?my.createFromState(t,e,n):e.type==="DirectionalLight"?py.createFromState(t,e,n):Vl.is(e.type)?Xl.createFromState(t,e):(console.error(e),new Jl)}function tO(t,e){e.uniforms[`f${e.id}_transmissionSamplerMap`].value=t.texture,e.uniforms[`f${e.id}_transmissionDepthMap`].value=t.depthTexture}function Qm(t,e,n){if(!n.userData.layers)return!1;let i=!1,r=n.userData.layers.getLayersOfType("transmission");return r.length>0?(e.layers.set(3),i=!0,t!==void 0&&r.forEach(s=>tO(t,s))):e.layers.set(0),i}function nO(t,e){let n=!1;return e.traverseEntity(i=>{if(i instanceof Li)if(Array.isArray(i.material))for(let r=0;r<i.material.length;r++)Qm(t,i,i.material[r])&&(n=!0);else Qm(t,i,i.material)&&(n=!0)}),n}function iO(t,e){"material"in t&&rO(t.material,e),"geometry"in t&&t.geometry.dispose()}function rO(t,e){xT(t).forEach(n=>{e.isSharedMaterial(n)||n.dispose()})}var eg=new T,wy=class extends ny(nh){constructor(t,e){super(),this.objectType="Scene",this.alpha=1,this.backupFog=new th(16777215,.1,2e3),this.fogUseBGColor=!1,this.wireframeState=!1,this.needsTransmissionDirty=!0,this._needsTransmission=!1,this._color=new Ae(1,0,0),this.bgColor=new Ae(1,1,1),this.entityByUuid={},this.ambientLight=new Bl(13882323,8553090,.75),this.ambientLight.name="Default Ambient Light",this.personalCamera=this.createPersonalCamera(),this.activeCamera=this.personalCamera,this.sharedAssetManager=e,this.init(t,e)}needsTransmission(t){return this.needsTransmissionDirty&&(this._needsTransmission=nO(t,this),t!==void 0&&(this.needsTransmissionDirty=!1)),this._needsTransmission}find(t){if(t===""||t===void 0)return;let e=this.entityByUuid[t];return e===void 0?this.getObjectByProperty("uuid",t):e}get color(){return this._color}set color(t){this.fogUseBGColor===!0&&this.backupFog.color.copy(t),this._color.copy(t)}get enableFog(){return this.fog!==null}set enableFog(t){this.fog=t===!0?this.backupFog:null}init(t,e){if(this.createChildrenObjects(t.objects,this,e),this.personalCamera.removeFromParent(),this.add(this.personalCamera),this.ambientLight.removeFromParent(),this.add(this.ambientLight),this.setBackgroundColor(gn(t.backgroundColor,e)),this.updateFog(t.fog,e),this.updateAmbientLight(t.environment.ambientLight,e),this.activeCamera=this.personalCamera,t.publish.playCamera!==null){let n=this.find(t.publish.playCamera);n instanceof Xl&&this.switchActiveCamera(n)}this.traverse(n=>{qr(n)&&n.recomputeBoolean()})}clearScene(t){this.traverseEntity(e=>{iO(e,t)});for(let e of this.children)wi(e)&&e.removeFromParent()}resetAfterClear(t,e){this.init(t,e)}createPersonalCamera(){let t=Xl.createFromState(wy.PERSONAL_CAMERA_ID,Ie(ve({},fu.defaultData),{name:"Personal Camera"}));return t.enableHelper=!1,t.objectHelper.visible=!1,delete t.isEntity,this.registerObjectCreatedInLegacy(t),t}raycast(t){let e=[],n=i=>{for(let r of i.children)wi(r)&&!r.raycastLock&&r.visible&&((Zs(r)||xo(r)&&r.enableHelper&&r.objectHelper.parent)&&t.intersectObject(r,!1,e),n(r))};return n(this),e}traverseEntity(t){for(let e of this.children)wi(e)&&e.traverseEntity(t)}updateFog(t,e){this.enableFog=t.enabled,this.fogUseBGColor=t.useBackgroundColor,t.useBackgroundColor?this.backupFog.color.set(this.bgColor):this.backupFog.color=gn(t.color,e),this.backupFog.near=t.near,this.backupFog.far=t.far}toJSON(t){return{}}fromJSON(t){return this}dispose(){this.clearScene(this.sharedAssetManager),this.sharedAssetManager.dispose()}updateAmbientLight(t,e){PR(this.ambientLight,t,e),t.groundColor!==void 0&&(this.ambientLight.groundColor=gn(t.groundColor,e)),t.enabled!==void 0&&(this.ambientLight.visible=t.enabled)}switchActiveCamera(t){this.activeCamera!==this.personalCamera&&(this.activeCamera.enableHelper=!0),this.activeCamera=t,t.enableHelper=!1}setBackgroundColor(t){this.bgColor=t,this.alpha=t.a}createChildrenObjects(t,e,n){for(let i of t)this.createChildObject(i.id,i.data,i.children,e,n)}registerObjectCreatedInLegacy(t){this.entityByUuid[t.uuid]=t}unregisterObject(t){delete this.entityByUuid[t.uuid];for(let e of t.children)this.unregisterObject(e)}createChildObject(t,e,n,i,r){let s=eO(t,e,r);return s&&(this.entityByUuid[t]=s,i.add(s),qr(i)&&Zs(s)&&(s.prevBooleanObjectParent=i),this.createChildrenObjects(n,s,r)),s}getCenter(t){let e=[];for(let i=0,r=t.length;i<r;++i){let{id:s,recursive:a}=t[i],o=this.find(s),l=a?o.recursiveBBox:o.singleBBox;e.push(...l.vertices)}let n=new hn;return n.setFromPoints(e),n.getCenter(eg),eg}copyMatrixWorld(t,e){if(t===null){e.identity();return}let n=this.find(t);n?e.copy(n.matrixWorld):e.identity()}copyParentMatrixWorld(t,e){var n;if(t===null){e.identity();return}let i=(n=this.find(t))==null?void 0:n.parent;i?e.copy(i.matrixWorld):e.identity()}traverseMaterial(t){this.traverseEntity(e=>{if(e instanceof Li)if(Array.isArray(e.material))for(let n=0;n<e.material.length;n++)t(e.material[n]);else t(e.material)})}updateCanvasSize(t,e){this.activeCamera.setViewplaneSize(t,e);let n,i;t>=e?(n=e/t,i=1):(n=1,i=t/e),this.traverseMaterial(r=>{r.layersList.getLayersOfType("transmission").forEach(s=>{s.uniforms[`f${s.id}_aspectRatio`].value.x=n,s.uniforms[`f${s.id}_aspectRatio`].value.y=i})})}},Sy=wy;Sy.PERSONAL_CAMERA_ID="f23858d0-4a3b-4bd8-8173-66ed0af7f6fb-personalCamera";var cr;function sO(){return cr||(cr=new sT,cr.setDecoderPath("https://www.gstatic.com/draco/versioned/decoders/1.5.2/").preload()),cr.decoderPending}async function aO(t){if(cr){let e={attributeIDs:cr.defaultAttributeIDs,attributeTypes:cr.defaultAttributeTypes,useUniqueIDs:!1},n;try{n=await cr.decodeGeometry(new Int8Array(t).buffer,e)}catch(i){console.error(i)}if(n)return{index:n.index?{array:n.index.array}:void 0,attributes:Object.entries(n.attributes).map(([i,r])=>({name:i,itemSize:r.itemSize,array:r.array}))}}return null}async function oO(t){let[e,n]=$0(au.deserialize(new Uint8Array(t))),i=[];e.scene.objects.traverse((r,s)=>{s.type==="Mesh"&&s.geometry.type==="NonParametricGeometry"&&s.geometry.data.draco!==void 0&&i.push(s)}),i.length&&await sO();for(let r of i){let s=await aO(Y0(r.geometry.data.draco));if(s){s.index&&(r.geometry.data.index={array:s.index.array,itemSize:1,normalized:!1,type:"Uint32Array"});let a={};s.attributes.forEach(({name:o,array:l,itemSize:h})=>{a[o]={array:l,itemSize:h,type:"Float32Array",normalized:!1}}),r.geometry.data.attributes=a,r.geometry.data.draco=void 0}}return n.result().data}var Dc=new Map,Xa={url:"head",time:0,data:null,next:null,prev:null},Bs={url:"tail",time:1/0,data:null,next:null,prev:null};Xa.next=Bs;Bs.prev=Xa;var tg=0;function $l(t){if(typeof t=="string")return t;let e=Date.now(),n=Dc.get(t);return n===void 0?(n={url:URL.createObjectURL(new Blob([t])),data:t,time:e,next:null,prev:null},Dc.set(t,n)):(n.time=e,n.prev.next=n.next,n.next.prev=n.prev),n.prev=Bs.prev,n.next=Bs,Bs.prev.next=n,Bs.prev=n,e-tg>1e3*10&&(tg=e+1e3,setTimeout(()=>{let i=Date.now(),r=Xa.next;for(;r.time<i-1e3*10;)URL.revokeObjectURL(r.url),Dc.delete(r.data),r=r.next,r.prev=Xa,Xa.next=r},900)),n.url}var ng=new Ji,ig=class extends fr{},lO=class{constructor(t){this.materials={},this.images={},this.colors={},this.transmissionRenderTarget=new Sn(2048,2048,{generateMipmaps:!0,minFilter:co,magFilter:mn,wrapS:Ln,wrapT:Ln}),this.transmissionRenderTarget.depthTexture=new Fu(2048,2048),this.penumbraSizeNode=new Vi(5,t.penumbraSize),this.reset(t)}reset(t){for(let[e,n]of Object.entries(t.images))this.addImage(e,n.data);for(let[e,n]of Object.entries(t.colors))this.addColor(e,n);for(let[e,n]of Object.entries(t.materials))this.addMaterial(e,ty(n,this))}get transmissionSamplerMap(){return this.transmissionRenderTarget.texture}get transmissionDepthMap(){return this.transmissionRenderTarget.depthTexture}addMaterial(t,e){e.uuid=t,this.materials[t]=e}deleteMaterial(t){this.materials[t]&&(this.materials[t].dispose(),delete this.materials[t])}isSharedMaterial(t){return t.uuid in this.materials||t===ng}getMaterial(t){return this.materials[t]}getMaterialOrDeletedPlaceholder(t){var e;return(e=this.materials[t])!=null?e:ng}getMaterials(){return this.materials}addImage(t,e){if(this.images[t])return this.images[t].onload=()=>{this.onImageLoad&&this.onImageLoad()},this.images[t].src=$l(e),!0;{let n=new Image;return n.src=$l(e),n.onload=()=>{this.onImageLoad&&this.onImageLoad()},this.images[t]=n,!1}}deleteImage(t){this.images[t]&&delete this.images[t]}getDefaultImage(){return this.images.image_0}getImage(t){return this.images[t]}getImages(){return this.images}addColor(t,e){return this.colors[t]?("a"in e?this.colors[t].setRGBA(e.r,e.g,e.b,e.a):this.colors[t].setRGBA(e.r,e.g,e.b,1),!0):("a"in e?this.colors[t]=new ig(e.r,e.g,e.b,e.a):this.colors[t]=new ig(e.r,e.g,e.b,1),!1)}updateColor(t,e){var n,i,r,s;if(this.colors[t]){let a=this.colors[t];return this.colors[t].r=(n=e.r)!=null?n:a.r,this.colors[t].g=(i=e.g)!=null?i:a.g,this.colors[t].b=(r=e.b)!=null?r:a.b,this.colors[t].a=(s=e.a)!=null?s:a.a,!0}return!1}deleteColor(t){this.colors[t]&&delete this.colors[t]}getColor(t){return this.colors[t]}dispose(){Object.keys(this.materials).forEach(t=>this.deleteMaterial(t)),this.transmissionRenderTarget.depthTexture.dispose(),this.transmissionRenderTarget.dispose(),this.onImageLoad=void 0}};function hO(t){let e;if(t.index)for(let n=0;n<t.index.array.length;n+=3)e=t.index.array[n],t.index.array[n]=t.index.array[n+2],t.index.array[n+2]=e}function cO(t){let e=new Set;return t.traverse(n=>{if(Zs(n))if(Ci(n.material))n.material.forEach(i=>{let r=i;e.has(r)||e.add(r)});else{let i=n.material;e.has(i)||e.add(i)}}),e.forEach(n=>{if(n instanceof Array)return;let i=n.onBeforeCompile.bind(n);uO(n)?(Object.assign(n,{isMeshStandardMaterial:!0,isMeshPhysicalMaterial:!0,transmission:1,attenuationColor:new Ae,specularColor:new Ae}),n.onBeforeCompile=(r,s)=>{i&&i(r,s),r.uniforms=Object.assign(Qn.physical.uniforms,r.uniforms),n.userData.layers.getLayersOfType("transmission").forEach(a=>{r.uniforms.transmissionSamplerMap.value&&(a.uniforms["f"+a.id+"_transmissionSamplerMap"].value=r.uniforms.transmissionSamplerMap.value,a.uniforms["f"+a.id+"_transmissionSamplerSize"].value=r.uniforms.transmissionSamplerSize.value)})}):dO(n)||(n.onBeforeCompile=(r,s)=>{i&&i(r,s),n.transparent=!1})}),t}function uO(t){return t.userData.layers.getLayersOfType("transmission").length>0}function dO(t){let e=t.userData.layers.head,n=0;for(;e!==void 0;){if(e.type!=="light"&&e.type!=="fresnel"){let i=e.uniforms["f"+e.id+"_alpha"];i&&(n+=(1-n)*i.value)}e=e.next}return n<1}function pO(t){return t.traverse(e=>{if(e.type==="Camera"){let n=e;n.type=n.cameraType}}),t}function fO(t){let e=[],n=(i,r=0)=>{let s=r>0?i+r:i;return e.includes(s)?n(i,r+1):s};return t.traverse(i=>{if(e.includes(i.name)){let r=i.name,s=n(i.name);if(i.name=s,i.isMesh){let a=i;a.material instanceof Array?a.material.forEach(o=>{o.name=o.name.replace(r,s)}):a.material.isAsset||(a.material.name=a.material.name.replace(r,s))}}e.push(i.name)}),t}function mO(t){let e=[];return t.traverse(n=>{n instanceof wu&&e.push(n)}),e.forEach(n=>{let i=n.object,r=n.children,s=r.map(o=>{o.updateMatrix();let l=o.geometry.clone().applyMatrix4(o.matrix);return o.matrix.determinant()<0&&hO(l),l}),a=oT(n.parameters.hideBase?s:[i.geometry,...s]);i.geometry=a,i.material=r[0].material,i.remove(n)}),t}function gO(t){return t.traverse(e=>{e.matrixAutoUpdate=!0}),t}var rg="The SplineLoader only accepts .splinecode files that are generated from Spline export panel.",vO=class extends Gn{load(t,e,n,i=console.error){let r=new qs(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),t.endsWith(".spline")?console.warn(rg+" The .spline files are only meant to be used by the Editor."):t.endsWith(".splinecode")||console.warn(rg),r.load(t,async s=>{try{if(typeof s=="string")throw new Error("The .spline file is not binary!");let a=await this.parse(s);e(a)}catch(a){i(a)}},n,i)}async parse(t){let e=await oO(t),n=new lO(e.shared);Object.values(n.getMaterials()).forEach(s=>Object.assign(s,{isAsset:!0}));let i=new Sy(e.scene,n);i.remove(i.personalCamera),e.scene.environment.ambientLight.enabled||i.remove(i.ambientLight);let r=e.scene.publish.playCamera;if(r){let s=i.find(r);s&&AR(s)&&Object.assign(s,{makeDefault:!0})}return i=mO(i),i=cO(i),i=pO(i),i=fO(i),i=gO(i),i}},Al=document.getElementsByTagName("script");Al=Al[Al.length-2];var So=Al.parentNode;const Ks=new un(33,window.innerWidth/window.innerHeight,5,1e5);Ks.position.set(0,0,1360.37);Ks.quaternion.setFromEuler(new Ei(0,0,0));const Dr=new nh;Dr.background=null;const yO=new vO;yO.load("https://prod.spline.design/RUoE0eEXE7ZlMGFn/scene.splinecode",t=>{Dr.add(t)});var sg=So.getBoundingClientRect();const wr=new wt({antialias:!0,alpha:!0});wr.setSize(sg.width,sg.height);wr.setAnimationLoop(bO);So.appendChild(wr.domElement);wr.shadowMap.enabled=!0;wr.shadowMap.type=Lu;wr.setClearColor(0,0);const ma=new eT(Ks,So.parentNode);ma.enableDamping=!0;ma.enablePan=!1;ma.enableZoom=!1;ma.rotateSpeed=.12;ma.dampingFactor=.04;function My(){var t=So.getBoundingClientRect();Ks.aspect=t.width/t.height,Ks.updateProjectionMatrix(),wr.setSize(t.width,t.height)}var yl;yl=window.addEventListener("resize",()=>{yl!=null&&clearTimeout(yl),yl=setTimeout(()=>{My()},400)});var Au={x:0,y:0};function xO(t){var e=So.getBoundingClientRect(),n=e.x+e.width/2,i=e.y+e.height/2,r=t.clientX-n,s=t.clientY-i,a=Math.min(.16,Math.max(s*7e-4,-.2)),o=Math.max(-.15,r*4e-4);return{x:a,y:o}}window.addEventListener("mousemove",t=>{Au=xO(t)});var xl;function bO(t){xl==null&&(xl=t);var e=t-xl,n=Au.x-Dr.rotation.x,i=Au.y-Dr.rotation.y,r=n*e*3e-4,s=i*e*3e-4;Dr.rotation.x+=r,Dr.rotation.y+=s,ma.update(),wr.render(Dr,Ks),xl=t}setTimeout(()=>{My()},400)});export default _O();
